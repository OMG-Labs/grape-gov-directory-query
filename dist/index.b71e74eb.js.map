{"mappings":"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oBACdH,WAAwB;IAExB,OAAO,IAAII,CAAAA,GAAAA,8BAA4B,AAA5BA,EAA6B;QACtC7V,MAAMyV,YAAYzV,IAAI,CAAC5N,GAAG,CAAEsjB,CAAAA,cAAiB,CAAA;gBAC3C,GAAGA,WAAW;gBACdC,QAAQZ,CAAAA,GAAAA,+BAAiB,AAAjBA,EAAkBW,YAAYC,MAAM;YAC9C,CAAA;QACAX,WAAWD,CAAAA,GAAAA,+BAAiB,AAAjBA,EAAkBU,YAAYT,SAAS;QAClDhT,MAAM8T,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACilB,YAAYzT,IAAI;IACpC;AACF;;;;;A,6C;A,+D;A,mE;A,+D;A,gD;A,gE;A,sE;A,2D;A,+C;A,wE;A,8D;A,0D;A,gD;A,oD;A,0C;A,mD;A,yD;A,6C;A,sD;A,sE;A,4C;A,4C;A,qD;A,6C;A,wD;A,+C;A,0D;A,kD;A,sD;A,uD;A,+C;A,+D;A,mD;A,qD;A,+D;A,gE;A,yD;A,kE;A,gE;A,sE;A,wD;A,2D;A,+D;A,gE;A,iE;A,sD;A,0D;A,wD;A,4D;A,8D;A,sD;A,kD;A,4C;A,uD;A,mD;A,iD;A,gF;A,yE;A,oE;A,4D;A,wD;A,uD;A,wD;A,yD;A,qD;A,mD;A,sD;A,0D;A,iD;A,6D;A,8C;A,qD;A,iD;A,mD;A,kE;A,+D;A;A;A;;A;;A;A;A;A;A;A;;A;;A;;A;A;AE3BA;;;;CAIA,GAGA;;CAEA,GAMO,MAAM+T,qBAAqBT,CAAAA,GAAAA,gBAAO,AAAPA,EAAQU,KAAK,CAACC,gBAAgB;AACzD,MAAMzM,kBAAkBA;IAC7B,MAAM0M,gBAAgBZ,CAAAA,GAAAA,gBAAO,AAAPA,EAAQU,KAAK,CAACC,gBAAgB;IACpD,MAAMroB,YAAYoc,aAAakM;IAC/B,MAAMxB,YAAY,IAAIzkB,WAAW;IACjCykB,UAAUnhB,GAAG,CAAC2iB;IACdxB,UAAUnhB,GAAG,CAAC3F,WAAW;IACzB,OAAO;QACLA;QACA8mB;IACD;AACH;AACO,MAAM1K,eAAesL,CAAAA,GAAAA,gBAAO,AAAPA,EAAQtL,YAAY;AACzC,SAASL,UAAU/b,SAAqB;IAC7C,IAAI;QACF0nB,CAAAA,GAAAA,gBAAO,AAAPA,EAAQa,aAAa,CAACC,OAAO,CAACxoB;QAC9B,OAAO;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF;AACO,MAAM6Y,OAAOA,CAClB1U,SACA2iB,YACGY,CAAAA,GAAAA,gBAAO,AAAPA,EAAQ7O,IAAI,CAAC1U,SAAS2iB,UAAUhkB,KAAK,CAAC,GAAG;AACvC,MAAMmZ,SAASyL,CAAAA,GAAAA,gBAAO,AAAPA,EAAQzL,MAAM;ACxC7B,MAAMwM,WAAYjjB,CAAAA;IACvB,IAAI0iB,CAAAA,GAAAA,cAAM,AAANA,EAAOQ,QAAQ,CAACljB,MAClB,OAAOA;SACF,IAAIA,eAAenD,YACxB,OAAO6lB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC4C,IAAIjC,MAAM,EAAEiC,IAAIkF,UAAU,EAAElF,IAAImF,UAAU;SAE7D,OAAOud,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC4C;AAEvB;ACPA,gCAAA;AACO,MAAMmjB;IACX1kB,YAAY2kB,UAAe,CAAE;QAC3BzW,OAAO0W,MAAM,CAAC,IAAI,EAAED;IACtB;IAEAlhB,SAAiB;QACf,OAAOwgB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACxB,CAAAA,GAAAA,gBAAS,AAATA,EAAU0nB,eAAe,IAAI;IAClD;IAEA,OAAOlhB,OAAOwM,IAAY,EAAO;QAC/B,OAAO7T,CAAAA,GAAAA,kBAAW,AAAXA,EAAYuoB,eAAe,IAAI,EAAE1U;IAC1C;IAEA,OAAO2U,gBAAgB3U,IAAY,EAAO;QACxC,OAAO4U,CAAAA,GAAAA,2BAAoB,AAApBA,EAAqBF,eAAe,IAAI,EAAE1U;IACnD;AACF;AAEA,6EAAA;AACA,qBAAA;AACO,MAAM6U,aAAaN;IAExB1kB,YAAY2kB,UAAe,CAAE;QAC3B,KAAK,CAACA;QAAY,IAFpBlL,CAAAA,IAAI,GAAW;QAGb,IAAIvL,OAAOC,IAAI,CAACwW,YAAY/nB,MAAM,KAAK,GACrC,MAAM,IAAIkD,MAAM;QAElBoO,OAAOC,IAAI,CAACwW,YAAYpkB,GAAG,CAACtE,CAAAA;YAC1B,IAAI,CAACwd,IAAI,GAAGxd;QACd;IACF;AACF;AAEa4oB,MAAAA,gBAAoC,IAAI1X;A,I;AC5BrD;;CAEA,GACO,MAAM8X,kBAAkB;AAE/B;;CAEA,GACO,MAAMnpB,oBAAoB;AAEjC;;CAEA,GAQA;;CAEA,GAMA,SAASopB,gBAAgBlqB,KAAwB;IAC/C,OAAQA,MAAwBmqB,GAAG,KAAKrV;AAC1C;AAEA,2CAAA;AACA,IAAIsV,yBAAyB;AAE7B;;CAEA,GACO,MAAMC,kBAAkBX;IAI7B;;;GAGF,GACE1kB,YAAYhF,KAAwB,CAAE;QACpC,KAAK,CAAC,CAAA;QARR,cAAA,GAAA,IAAA,CACAmqB,GAAG,GAAA,KAAA;QAQD,IAAID,gBAAgBlqB,QAClB,IAAI,CAACmqB,GAAG,GAAGnqB,MAAMmqB,GAAG;aACf;YACL,IAAI,OAAOnqB,UAAU,UAAU;gBAC7B,qCAAA;gBACA,MAAMsqB,UAAUC,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAAC3I;gBAC5B,IAAIsqB,QAAQ1oB,MAAM,IAAId,mBACpB,MAAM,IAAIgE,MAAM,CAAA,wBAAA,CAA0B;gBAE5C,IAAI,CAACqlB,GAAG,GAAG,IAAIK,CAAAA,GAAAA,oBAAE,AAAFA,EAAGF;YACpB,OACE,IAAI,CAACH,GAAG,GAAG,IAAIK,CAAAA,GAAAA,oBAAE,AAAFA,EAAGxqB;YAGpB,IAAI,IAAI,CAACmqB,GAAG,CAACze,UAAU,KAAK5K,mBAC1B,MAAM,IAAIgE,MAAM,CAAA,wBAAA,CAA0B;QAE9C;IACF;IAEA;;GAEF,GACE,OAAO2lB,SAAoB;QACzB,MAAMxpB,MAAM,IAAIopB,UAAUD;QAC1BA,0BAA0B;QAC1B,OAAO,IAAIC,UAAUppB,IAAIuoB,QAAQ;IACnC;IAEA;;;GAGF,GAGE;;GAEF,GACEkB,OAAO3pB,SAAoB,EAAW;QACpC,OAAO,IAAI,CAACopB,GAAG,CAACQ,EAAE,CAAC5pB,UAAUopB,GAAG;IAClC;IAEA;;GAEF,GACEjpB,WAAmB;QACjB,OAAOqpB,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAAC,IAAI,CAACmiB,OAAO;IACjC;IAEAC,SAAiB;QACf,OAAO,IAAI,CAAC3pB,QAAQ;IACtB;IAEA;;GAEF,GACE0pB,UAAsB;QACpB,MAAME,MAAM,IAAI,CAACtB,QAAQ;QACzB,OAAO,IAAIpmB,WAAW0nB,IAAIxmB,MAAM,EAAEwmB,IAAIrf,UAAU,EAAEqf,IAAIpf,UAAU;IAClE;IAEA;;GAEF,GACE8d,WAAmB;QACjB,MAAM3J,IAAI,IAAI,CAACsK,GAAG,CAACY,WAAW,CAAC9B,CAAAA,GAAAA,cAAM,AAANA;QAC/B,IAAIpJ,EAAEje,MAAM,KAAKd,mBACf,OAAO+e;QAGT,MAAMmL,UAAU/B,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC;QAC7BpL,EAAEqL,IAAI,CAACF,SAAS,KAAKnL,EAAEje,MAAM;QAC7B,OAAOopB;IACT;IAEA,IAAA,CAAKG,OAAOC,WAAW,CAAY,GAAA;QACjC,OAAO,CAAA,UAAA,EAAa,IAAI,CAAC1lB,QAAQ,GAAK,CAAA,CAAA;IACxC;IAEA;;GAEF,GACEA,WAAmB;QACjB,OAAO,IAAI,CAACxE,QAAQ;IACtB;IAEA;;;;GAIF,GACE,gCAAA,GACA,aAAamqB,eACXC,aAAwB,EACxBvD,IAAY,EACZI,SAAoB,EACA;QACpB,MAAM7jB,SAAS2kB,CAAAA,GAAAA,cAAM,AAANA,EAAO5kB,MAAM,CAAC;YAC3BinB,cAAc9B,QAAQ;YACtBP,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACokB;YACZI,UAAUqB,QAAQ;SACnB;QACD,MAAM1nB,iBAAiBypB,CAAAA,GAAAA,cAAM,AAANA,EAAOjnB;QAC9B,OAAO,IAAI+lB,UAAUvoB;IACvB;IAEA;;GAEF,GACE,gCAAA,GACA,OAAO0pB,yBACLpD,KAAiC,EACjCD,SAAoB,EACT;QACX,IAAI7jB,SAAS2kB,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC;QAC1B7C,MAAM3hB,OAAO,CAAC,SAAUshB,IAAI;YAC1B,IAAIA,KAAKnmB,MAAM,GAAGqoB,iBAChB,MAAM,IAAIwB,UAAU,CAAA,wBAAA,CAA0B;YAEhDnnB,SAAS2kB,CAAAA,GAAAA,cAAM,AAANA,EAAO5kB,MAAM,CAAC;gBAACC;gBAAQklB,SAASzB;aAAM;QACjD;QACAzjB,SAAS2kB,CAAAA,GAAAA,cAAM,AAANA,EAAO5kB,MAAM,CAAC;YACrBC;YACA6jB,UAAUqB,QAAQ;YAClBP,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC;SACb;QACD,MAAM7B,iBAAiBypB,CAAAA,GAAAA,cAAM,AAANA,EAAOjnB;QAC9B,IAAIwY,UAAUhb,iBACZ,MAAM,IAAIgD,MAAM,CAAA,8CAAA,CAAgD;QAElE,OAAO,IAAIulB,UAAUvoB;IACvB;IAEA;;;;;GAKF,GACE,gCAAA,GACA,aAAa4pB,qBACXtD,KAAiC,EACjCD,SAAoB,EACA;QACpB,OAAO,IAAI,CAACqD,wBAAwB,CAACpD,OAAOD;IAC9C;IAEA;;;;;;GAMF,GACE,OAAOG,uBACLF,KAAiC,EACjCD,SAAoB,EACC;QACrB,IAAIwD,QAAQ;QACZ,IAAIC;QACJ,MAAOD,SAAS,EAAG;YACjB,IAAI;gBACF,MAAME,iBAAiBzD,MAAM/jB,MAAM,CAAC4kB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC;oBAACgoB;iBAAM;gBACvDC,UAAU,IAAI,CAACJ,wBAAwB,CAACK,gBAAgB1D;YACzD,EAAC,OAAO2D,KAAK;gBACZ,IAAIA,eAAeL,WACjB,MAAMK;gBAERH;gBACA;YACF;YACA,OAAO;gBAACC;gBAASD;aAAM;QACzB;QACA,MAAM,IAAI7mB,MAAM,CAAA,6CAAA,CAA+C;IACjE;IAEA;;;;;GAKF,GACE,aAAainB,mBACX3D,KAAiC,EACjCD,SAAoB,EACU;QAC9B,OAAO,IAAI,CAACG,sBAAsB,CAACF,OAAOD;IAC5C;IAEA;;GAEF,GACE,OAAOrL,UAAUkP,UAA6B,EAAW;QACvD,MAAMlD,SAAS,IAAIuB,UAAU2B;QAC7B,OAAOlP,UAAUgM,OAAO8B,OAAO;IACjC;AACF;AAACqB,aA9MY5B;AAAAA,UA2CJ6B,OAAO,GAAc,IAAI7B,WAAU;AAqK5CR,cAAcnjB,GAAG,CAAC2jB,WAAW;IAC3B8B,MAAM;IACN9X,QAAQ;QAAC;YAAC;YAAO;SAAO;KAAA;AAC1B;AC5PA;;;;CAIA,GACO,MAAM+X;IAMX;;;;;;;GAOF,GACEpnB,YAAY6iB,SAAsC,CAAE;QAbpD,cAAA,GAAA,IAAA,CACQwE,UAAU,GAAA,KAAA;QAClB,cAAA,GAAA,IAAA,CACQC,UAAU,GAAA,KAAA;QAWhB,IAAIzE,WAAW;YACb,MAAM0E,kBAAkB/C,SAAS3B;YACjC,IAAIA,UAAUjmB,MAAM,KAAK,IACvB,MAAM,IAAIkD,MAAM;YAElB,IAAI,CAACunB,UAAU,GAAGE,gBAAgB1oB,KAAK,CAAC,IAAI;YAC5C,IAAI,CAACyoB,UAAU,GAAGC,gBAAgB1oB,KAAK,CAAC,GAAG;QAC7C,OAAO;YACL,IAAI,CAACyoB,UAAU,GAAG9C,SAASN;YAC3B,IAAI,CAACmD,UAAU,GAAG7C,SAASrM,aAAa,IAAI,CAACmP,UAAU;QACzD;IACF;IAEA;;GAEF,GACE,IAAIvrB,YAAuB;QACzB,OAAO,IAAIspB,UAAU,IAAI,CAACgC,UAAU;IACtC;IAEA;;;;GAIF,GACE,IAAIxE,YAAoB;QACtB,OAAOoB,CAAAA,GAAAA,cAAM,AAANA,EAAO5kB,MAAM,CAAC;YAAC,IAAI,CAACioB,UAAU;YAAE,IAAI,CAACD,UAAU;SAAC,EAAE;IAC3D;AACF;ACpDaG,MAAAA,mCAAmC,IAAInC,UAClD;ACHF;;;;;;CAMA,GACaoC,MAAAA,mBAAmB;AAEzB,MAAMC,sBAAsB;AAE5B,MAAMC,4BAA4B;ACXlC,MAAMC,mDAAmD9nB;IAG9DE,YAAY0jB,SAAiB,CAAE;QAC7B,KAAK,CAAC,CAAA,UAAA,EAAaA,UAAS,oCAAA,CAAsC;QAAE,IAAA,CAHtEA,SAAS,GAAA,KAAA;QAIP,IAAI,CAACA,SAAS,GAAGA;IACnB;AACF;AAEAxV,OAAO2Z,cAAc,CACnBD,2CAA2CtL,SAAS,EACpD,QACA;IACEthB,OAAO;AACT;AAGK,MAAM8sB,uCAAuChoB;IAGlDE,YAAY0jB,SAAiB,EAAEqE,cAAsB,CAAE;QACrD,KAAK,CACH,CAAA,iCAAA,EAAoCA,eAAeC,OAAO,CACxD,GACD,gBAAA,CAAkB,GACjB,wDACA,CAAGtE,EAAAA,UAAS,wCAAA,CAChB;QAAE,IAAA,CATJA,SAAS,GAAA,KAAA;QAUP,IAAI,CAACA,SAAS,GAAGA;IACnB;AACF;AAEAxV,OAAO2Z,cAAc,CAACC,+BAA+BxL,SAAS,EAAE,QAAQ;IACtEthB,OAAO;AACT;AAEO,MAAMitB,4CAA4CnoB;IAGvDE,YAAY0jB,SAAiB,CAAE;QAC7B,KAAK,CAAC,CAAA,UAAA,EAAaA,UAAS,2CAAA,CAA6C;QAAE,IAAA,CAH7EA,SAAS,GAAA,KAAA;QAIP,IAAI,CAACA,SAAS,GAAGA;IACnB;AACF;AAEAxV,OAAO2Z,cAAc,CAACI,oCAAoC3L,SAAS,EAAE,QAAQ;IAC3EthB,OAAO;AACT;ACxCO,MAAMktB;IAIXloB,YACEmoB,iBAAmC,EACnCC,sBAA+C,CAC/C;QAAA,IAAA,CANFD,iBAAiB,GAAA,KAAA;QAAA,IAAA,CACjBC,sBAAsB,GAAA,KAAA;QAMpB,IAAI,CAACD,iBAAiB,GAAGA;QACzB,IAAI,CAACC,sBAAsB,GAAGA;IAChC;IAEAC,cAAuC;QACrC,MAAMA,cAAc;YAAC,IAAI,CAACF,iBAAiB;SAAC;QAC5C,IAAI,IAAI,CAACC,sBAAsB,EAAE;YAC/BC,YAAYllB,IAAI,CAAC,IAAI,CAACilB,sBAAsB,CAACE,QAAQ;YACrDD,YAAYllB,IAAI,CAAC,IAAI,CAACilB,sBAAsB,CAACG,QAAQ;QACvD;QACA,OAAOF;IACT;IAEA1iB,IAAI+J,KAAa,EAAyB;QACxC,KAAK,MAAM8Y,cAAc,IAAI,CAACH,WAAW,GAAI;YAC3C,IAAI3Y,QAAQ8Y,WAAW5rB,MAAM,EAC3B,OAAO4rB,UAAU,CAAC9Y,MAAM;iBAExBA,SAAS8Y,WAAW5rB,MAAM;QAE9B;QACA;IACF;IAEA,IAAIA,SAAiB;QACnB,OAAO,IAAI,CAACyrB,WAAW,GAAGI,IAAI,GAAG7rB,MAAM;IACzC;IAEA8rB,oBACEC,YAA2C,EACR;QACnC,wDAAA;QACA,MAAMC,SAAS;QACf,IAAI,IAAI,CAAChsB,MAAM,GAAGgsB,SAAS,GACzB,MAAM,IAAI9oB,MAAM;QAGlB,MAAM+oB,cAAc,IAAI1b;QACxB,IAAI,CAACkb,WAAW,GACbI,IAAI,GACJhnB,OAAO,CAAC,CAACxF,KAAKyT;YACbmZ,YAAYnnB,GAAG,CAACzF,IAAIC,QAAQ,IAAIwT;QAClC;QAEF,MAAMoZ,eAAgB7sB,CAAAA;YACpB,MAAM8sB,WAAWF,YAAYljB,GAAG,CAAC1J,IAAIC,QAAQ;YAC7C,IAAI6sB,aAAajZ,WACf,MAAM,IAAIhQ,MACR;YAEJ,OAAOipB;QACR;QAED,OAAOJ,aAAapoB,GAAG,CAAEqjB,CAAAA;YACvB,OAAO;gBACLoF,gBAAgBF,aAAalF,YAAYT,SAAS;gBAClD8F,mBAAmBrF,YAAYzV,IAAI,CAAC5N,GAAG,CAAC2oB,CAAAA,OACtCJ,aAAaI,KAAKpF,MAAM;gBAE1B3T,MAAMyT,YAAYzT,IAAAA;YACnB;QACH;IACF;AACF;ACzEA;;CAEA,GACO,MAAMpU,YAAYA,CAACotB,WAAmB,WAAW;IACtD,OAAOC,cAAaC,IAAI,CAAC,IAAIF;AAC/B;AAEA;;CAEA,GACO,MAAMzF,YAAYA,CAACyF,WAAmB,WAAW;IACtD,OAAOC,cAAaC,IAAI,CAAC,IAAIF;AAC/B;AA0BA;;CAEA,GACO,MAAMG,aAAaA,CACxBH,WAAmB,QAAQ;IAE3B,MAAMI,MAAMH,cAAaha,MAAM,CAO7B;QACEga,cAAa9gB,GAAG,CAAC;QACjB8gB,cAAa9gB,GAAG,CAAC;QACjB8gB,cAAaC,IAAI,CAACD,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KAAK;KAChE,EACD6gB;IAEF,MAAMK,UAAUD,IAAI5lB,MAAM,CAACyU,IAAI,CAACmR;IAChC,MAAME,UAAUF,IAAI9lB,MAAM,CAAC2U,IAAI,CAACmR;IAEhC,MAAMG,UAAUH;IAEhBG,QAAQ/lB,MAAM,GAAG,CAACkX,GAAetb;QAC/B,MAAM4Q,OAAOqZ,QAAQ3O,GAAGtb;QACxB,OAAO4Q,IAAI,CAAC,QAAQ,CAACzP,QAAQ;IAC9B;IAEDgpB,QAAQjmB,MAAM,GAAG,CAAChD,KAAaoa,GAAetb;QAC5C,MAAM4Q,OAAO;YACX9R,OAAO4lB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC8B,KAAK;QACzB;QACD,OAAOgpB,QAAQtZ,MAAM0K,GAAGtb;IACzB;IAEDmqB,QAAQzD,KAAK,GAAIxlB,CAAAA;QACf,OACE2oB,cAAa9gB,GAAG,GAAGqhB,IAAI,GACvBP,cAAa9gB,GAAG,GAAGqhB,IAAI,GACvB1F,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC8B,KAAK,QAAQ7D,MAAM;IAElC;IAED,OAAO8sB;AACT;AAEA;;CAEA,GACO,MAAME,aAAaA,CAACT,WAAmB,YAAY;IACxD,OAAOC,cAAaha,MAAM,CAKxB;QAACrT,UAAU;QAAWA,UAAU;KAAc,EAAEotB;AACpD;AAEA;;CAEA,GACO,MAAMU,SAASA,CAACV,WAAmB,QAAQ;IAChD,OAAOC,cAAaha,MAAM,CAOxB;QACEga,cAAaU,IAAI,CAAC;QAClBV,cAAaU,IAAI,CAAC;QAClB/tB,UAAU;KACX,EACDotB;AAEJ;AAEA;;CAEA,GACO,MAAMY,WAAWA,CAACZ,WAAmB,UAAU;IACpD,OAAOC,cAAaha,MAAM,CAQxB;QACErT,UAAU;QACVA,UAAU;QACVA,UAAU;QACVqtB,cAAaphB,EAAE,CAAC;KACjB,EACDmhB;AAEJ;AAEA;;CAEA,GACO,MAAMa,4BAA4BA,CACvCb,WAAmB,2BAA2B;IAE9C,OAAOC,cAAaha,MAAM,CACxB;QACEga,cAAa9gB,GAAG,CAAC;QACjBvM,UAAU;QACVutB,WAAW;QACXvtB,UAAU;KACX,EACDotB;AAEJ;AAEO,SAASc,SAASxK,IAAS,EAAEpQ,MAAW;IAC7C,MAAM6a,eAAgBhhB,CAAAA;QACpB,IAAIA,KAAKygB,IAAI,IAAI,GACf,OAAOzgB,KAAKygB,IAAI;aACX,IAAI,OAAOzgB,KAAK+c,KAAK,KAAK,YAC/B,OAAO/c,KAAK+c,KAAK,CAAC5W,MAAM,CAACnG,KAAKigB,QAAQ,CAAC;aAClC,IAAI,WAAWjgB,QAAQ,mBAAmBA,MAAM;YACrD,MAAMuD,QAAQ4C,MAAM,CAACnG,KAAKigB,QAAQ,CAAC;YACnC,IAAIhtB,MAAMC,OAAO,CAACqQ,QAChB,OAAOA,MAAM7P,MAAM,GAAGstB,aAAahhB,KAAKihB,aAAa;QAEzD,OAAO,IAAI,YAAYjhB,MACrB,qEAAA;QACA,OAAO+gB,SAAS;YAACG,QAAQlhB;QAAI,GAAGmG,MAAM,CAACnG,KAAKigB,QAAQ,CAAC;QAEvD,8CAAA;QACA,OAAO;IACR;IAED,IAAIlD,QAAQ;IACZxG,KAAK2K,MAAM,CAAC/a,MAAM,CAAC5N,OAAO,CAAEyH,CAAAA;QAC1B+c,SAASiE,aAAahhB;IACxB;IAEA,OAAO+c;AACT;AC3LO,SAASoE,aAAantB,KAAoB;IAC/C,IAAIotB,MAAM;IACV,IAAI/kB,OAAO;IACX,OAAS;QACP,IAAIglB,OAAOrtB,MAAMstB,KAAK;QACtBF,OAAO,AAACC,CAAAA,OAAO,IAAA,KAAUhlB,OAAO;QAChCA,QAAQ;QACR,IAAI,AAACglB,CAAAA,OAAO,IAAA,MAAU,GACpB;IAEJ;IACA,OAAOD;AACT;AAEO,SAASG,aAAavtB,KAAoB,EAAEotB,GAAW;IAC5D,IAAII,UAAUJ;IACd,OAAS;QACP,IAAIC,OAAOG,UAAU;QACrBA,YAAY;QACZ,IAAIA,WAAW,GAAG;YAChBxtB,MAAMiG,IAAI,CAAConB;YACX;QACF,OAAO;YACLA,QAAQ;YACRrtB,MAAMiG,IAAI,CAAConB;QACb;IACF;AACF;AC3Be,SAAA,OACbI,SAAkB,EAClBzqB,OAAgB;IAEhB,IAAI,CAACyqB,WACH,MAAM,IAAI7qB,MAAMI,WAAW;AAE/B;ACQO,MAAM0qB;IAIX5qB,YAAY0W,KAAgB,EAAEmU,UAAsB,CAAE;QAAA,IAAA,CAHtDnU,KAAK,GAAA,KAAA;QAAA,IAAA,CACLmU,UAAU,GAAA,KAAA;QAGR,IAAI,CAACnU,KAAK,GAAGA;QACb,IAAI,CAACmU,UAAU,GAAGA;IACpB;IAEA,OAAOC,QACLnC,YAA2C,EAC3CjS,KAAgB,EACF;QACd,MAAMmU,aAAyB,IAAI1d;QACnC,MAAM4d,qBAAsBjH,CAAAA;YAC1B,MAAM8C,UAAU9C,OAAO5nB,QAAQ;YAC/B,IAAI8uB,UAAUH,WAAWllB,GAAG,CAACihB;YAC7B,IAAIoE,YAAYlb,WAAW;gBACzBkb,UAAU;oBACRvQ,UAAU;oBACVwQ,YAAY;oBACZC,WAAW;gBACZ;gBACDL,WAAWnpB,GAAG,CAACklB,SAASoE;YAC1B;YACA,OAAOA;QACR;QAED,MAAMG,eAAeJ,mBAAmBrU;QACxCyU,aAAa1Q,QAAQ,GAAG;QACxB0Q,aAAaF,UAAU,GAAG;QAE1B,KAAK,MAAMG,MAAMzC,aAAc;YAC7BoC,mBAAmBK,GAAGjI,SAAS,EAAE+H,SAAS,GAAG;YAC7C,KAAK,MAAMrH,eAAeuH,GAAGjd,IAAI,CAAE;gBACjC,MAAM6c,UAAUD,mBAAmBlH,YAAYC,MAAM;gBACrDkH,QAAQvQ,QAAQ,KAAKoJ,YAAYpJ,QAAQ;gBACzCuQ,QAAQC,UAAU,KAAKpH,YAAYoH,UAAU;YAC/C;QACF;QAEA,OAAO,IAAIL,aAAalU,OAAOmU;IACjC;IAEAQ,uBAA0D;QACxD,MAAMC,aAAa;eAAI,IAAI,CAACT,UAAU,CAACnK,OAAO;SAAG;QACjD6K,OAAOD,WAAW1uB,MAAM,IAAI,KAAK;QAEjC,MAAM4uB,kBAAkBF,WAAW/c,MAAM,CACvC,CAAC,GAAG2a,KAAK,GAAKA,KAAKzO,QAAQ,IAAIyO,KAAK+B,UACtC;QACA,MAAMQ,kBAAkBH,WAAW/c,MAAM,CACvC,CAAC,GAAG2a,KAAK,GAAKA,KAAKzO,QAAQ,IAAI,CAACyO,KAAK+B,UACvC;QACA,MAAMS,qBAAqBJ,WAAW/c,MAAM,CAC1C,CAAC,GAAG2a,KAAK,GAAK,CAACA,KAAKzO,QAAQ,IAAIyO,KAAK+B,UACvC;QACA,MAAMU,qBAAqBL,WAAW/c,MAAM,CAC1C,CAAC,GAAG2a,KAAK,GAAK,CAACA,KAAKzO,QAAQ,IAAI,CAACyO,KAAK+B,UACxC;QAEA,MAAM3a,SAAwB;YAC5Bsb,uBAAuBJ,gBAAgB5uB,MAAM,GAAG6uB,gBAAgB7uB,MAAM;YACtEivB,2BAA2BJ,gBAAgB7uB,MAAM;YACjDkvB,6BAA6BH,mBAAmB/uB,MAAAA;QACjD;QAED,gBAAA;QACA;YACE2uB,OACEC,gBAAgB5uB,MAAM,GAAG,GACzB;YAEF,MAAM,CAACmvB,aAAa,GAAGP,eAAe,CAAC,EAAE;YACzCD,OACEQ,iBAAiB,IAAI,CAACrV,KAAK,CAACxa,QAAQ,IACpC;QAEJ;QAEA,MAAMisB,oBAAoB;eACrBqD,gBAAgBjrB,GAAG,CAAC,CAAC,CAACqmB,QAAQ,GAAK,IAAIvB,UAAUuB;eACjD6E,gBAAgBlrB,GAAG,CAAC,CAAC,CAACqmB,QAAQ,GAAK,IAAIvB,UAAUuB;eACjD8E,mBAAmBnrB,GAAG,CAAC,CAAC,CAACqmB,QAAQ,GAAK,IAAIvB,UAAUuB;eACpD+E,mBAAmBprB,GAAG,CAAC,CAAC,CAACqmB,QAAQ,GAAK,IAAIvB,UAAUuB;SACxD;QAED,OAAO;YAACtW;YAAQ6X;SAAkB;IACpC;IAEA6D,mBACEC,WAAsC,EAC2B;QACjE,MAAM,CAACC,iBAAiBC,oBAAoB,GAC1C,IAAI,CAACC,2BAA2B,CAC9BH,YAAYI,KAAK,CAACC,SAAS,EAC3BtB,CAAAA,UACE,CAACA,QAAQvQ,QAAQ,IAAI,CAACuQ,QAAQE,SAAS,IAAIF,QAAQC,UACvD;QACF,MAAM,CAACsB,iBAAiBC,oBAAoB,GAC1C,IAAI,CAACJ,2BAA2B,CAC9BH,YAAYI,KAAK,CAACC,SAAS,EAC3BtB,CAAAA,UACE,CAACA,QAAQvQ,QAAQ,IAAI,CAACuQ,QAAQE,SAAS,IAAI,CAACF,QAAQC,UACxD;QAEF,6CAAA;QACA,IAAIiB,gBAAgBtvB,MAAM,KAAK,KAAK2vB,gBAAgB3vB,MAAM,KAAK,GAC7D;QAGF,OAAO;YACL;gBACE6vB,YAAYR,YAAYhwB,GAAG;gBAC3BiwB;gBACAK;YACF;YACA;gBACEjE,UAAU6D;gBACV5D,UAAUiE;YACZ;SACD;IACH;IAEA,cAAA,GACQJ,4BACNM,kBAAoC,EACpCC,aAAoD,EACjB;QACnC,MAAMC,qBAAqB,IAAIzwB;QAC/B,MAAM0wB,cAAc,IAAI1wB;QAExB,KAAK,MAAM,CAACyqB,SAASoE,QAAQ,IAAI,IAAI,CAACH,UAAU,CAACnK,OAAO,GACtD,IAAIiM,cAAc3B,UAAU;YAC1B,MAAM/uB,MAAM,IAAIopB,UAAUuB;YAC1B,MAAMkG,mBAAmBJ,mBAAmBnuB,SAAS,CAACwuB,CAAAA,QACpDA,MAAMrH,MAAM,CAACzpB;YAEf,IAAI6wB,oBAAoB,GAAG;gBACzBvB,OAAOuB,mBAAmB,KAAK;gBAC/BF,mBAAmBzpB,IAAI,CAAC2pB;gBACxBD,YAAY1pB,IAAI,CAAClH;gBACjB,IAAI,CAAC4uB,UAAU,CAAC5J,MAAM,CAAC2F;YACzB;QACF;QAGF,OAAO;YAACgG;YAAoBC;SAAY;IAC1C;AACF;ACpKA,MAAMG,8BAA8B;AAEpC;;CAEA,GACO,SAASC,aAAgBC,SAAc;IAC5C,IAAIA,UAAUtwB,MAAM,KAAK,GACvB,MAAM,IAAIkD,MAAMktB;IAElB,OAAOE,UAAU1C,KAAK;AACxB;AAEA;;;CAGA,GACO,SAAS2C,cACdD,SAAc,EACd,GAAGE,IAEoD;IAEvD,MAAM,CAACC,MAAM,GAAGD;IAChB,IACEA,KAAKxwB,MAAM,KAAK,EADlB,0CAAA;OAEMywB,QAASD,CAAAA,IAAI,CAAC,EAAE,IAAI,CAAA,IAAKF,UAAUtwB,MAAM,GACzCywB,SAASH,UAAUtwB,MAAM,EAE7B,MAAM,IAAIkD,MAAMktB;IAElB,OAAOE,UAAUI,MAAM,IACjBF;AAER;ACbA;;;;;;CAMA,GAUA;;CAEA,GAkBA;;CAEA,GACO,MAAMG;IAWXvtB,YAAYotB,IAAiB,CAAE;QAAA,IAAA,CAV/B9c,MAAM,GAAA,KAAA;QAAA,IAAA,CACNkd,WAAW,GAAA,KAAA;QAAA,IAAA,CACXC,eAAe,GAAA,KAAA;QAAA,IAAA,CACf9E,YAAY,GAAA,KAAA;QAAA,IAAA,CAEJ+E,iBAAiB,GAA2B,IAAIvgB;QAMtD,IAAI,CAACmD,MAAM,GAAG8c,KAAK9c,MAAM;QACzB,IAAI,CAACkd,WAAW,GAAGJ,KAAKI,WAAW,CAACjtB,GAAG,CAACkQ,CAAAA,UAAW,IAAI4U,UAAU5U;QACjE,IAAI,CAACgd,eAAe,GAAGL,KAAKK,eAAe;QAC3C,IAAI,CAAC9E,YAAY,GAAGyE,KAAKzE,YAAY;QACrC,IAAI,CAACA,YAAY,CAAClnB,OAAO,CAAC2pB,CAAAA,KACxB,IAAI,CAACsC,iBAAiB,CAAChsB,GAAG,CACxB0pB,GAAGpC,cAAc,EACjB,IAAI,CAACwE,WAAW,CAACpC,GAAGpC,cAAc,CACpC;IAEJ;IAEA,IAAI2E,UAAoB;QACtB,OAAO;IACT;IAEA,IAAIxF,oBAAsC;QACxC,OAAO,IAAI,CAACqF,WAAW;IACzB;IAEA,IAAII,uBAA0D;QAC5D,OAAO,IAAI,CAACjF,YAAY,CAACpoB,GAAG,CACzB6qB,CAAAA,KAAoC,CAAA;gBACnCpC,gBAAgBoC,GAAGpC,cAAc;gBACjCC,mBAAmBmC,GAAGyC,QAAQ;gBAC9B1d,MAAMoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAACynB,GAAGjb,IAAI;YAC3B,CAAA;IAEJ;IAEA,IAAI2d,sBAAwD;QAC1D,OAAO,EAAE;IACX;IAEAC,iBAAqC;QACnC,OAAO,IAAI7F,mBAAmB,IAAI,CAACC,iBAAiB;IACtD;IAEA,OAAO2C,QAAQsC,IAAuB,EAAW;QAC/C,MAAMY,eAAepD,aAAaE,OAAO,CAACsC,KAAKzE,YAAY,EAAEyE,KAAKa,QAAQ;QAC1E,MAAM,CAAC3d,QAAQ6X,kBAAkB,GAAG6F,aAAa3C,oBAAoB;QACrE,MAAMmC,cAAc,IAAItF,mBAAmBC;QAC3C,MAAMQ,eAAe6E,YAAY9E,mBAAmB,CAAC0E,KAAKzE,YAAY,EAAEpoB,GAAG,CACxE6qB,CAAAA,KAAyD,CAAA;gBACxDpC,gBAAgBoC,GAAGpC,cAAc;gBACjC6E,UAAUzC,GAAGnC,iBAAiB;gBAC9B9Y,MAAMoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAAC2nB,GAAGjb,IAAI;YAC3B,CAAA;QAEF,OAAO,IAAIod,QAAQ;YACjBjd;YACAkd,aAAarF;YACbsF,iBAAiBL,KAAKK,eAAe;YACrC9E;QACF;IACF;IAEAuF,gBAAgBxe,KAAa,EAAW;QACtC,OAAOA,QAAQ,IAAI,CAACY,MAAM,CAACsb,qBAAqB;IAClD;IAEAuC,kBAAkBze,KAAa,EAAW;QACxC,MAAM0e,oBAAoB,IAAI,CAAC9d,MAAM,CAACsb,qBAAqB;QAC3D,IAAIlc,SAAS,IAAI,CAACY,MAAM,CAACsb,qBAAqB,EAAE;YAC9C,MAAMyC,uBAAuB3e,QAAQ0e;YACrC,MAAME,sBAAsB,IAAI,CAACd,WAAW,CAAC5wB,MAAM,GAAGwxB;YACtD,MAAMG,8BACJD,sBAAsB,IAAI,CAAChe,MAAM,CAACwb,2BAA2B;YAC/D,OAAOuC,uBAAuBE;QAChC,OAAO;YACL,MAAMC,4BACJJ,oBAAoB,IAAI,CAAC9d,MAAM,CAACub,yBAAyB;YAC3D,OAAOnc,QAAQ8e;QACjB;IACF;IAEAC,YAAY/e,KAAa,EAAW;QAClC,OAAO,IAAI,CAACge,iBAAiB,CAACxV,GAAG,CAACxI;IACpC;IAEAgf,aAA0B;QACxB,OAAO;eAAI,IAAI,CAAChB,iBAAiB,CAAClkB,MAAM;SAAG;IAC7C;IAEAmlB,gBAA6B;QAC3B,OAAO,IAAI,CAACnB,WAAW,CAACjf,MAAM,CAAC,CAACqgB,GAAGlf,QAAU,CAAC,IAAI,CAAC+e,WAAW,CAAC/e;IACjE;IAEAvS,YAAoB;QAClB,MAAM0xB,UAAU,IAAI,CAACrB,WAAW,CAAC5wB,MAAM;QAEvC,IAAIkyB,WAAqB,EAAE;QAC3BC,aAAsBD,UAAUD;QAEhC,MAAMlG,eAAe,IAAI,CAACA,YAAY,CAACpoB,GAAG,CAACqjB,CAAAA;YACzC,MAAM,EAACiK,QAAQ,EAAE7E,cAAAA,EAAe,GAAGpF;YACnC,MAAMzT,OAAOhU,MAAMwC,IAAI,CAAC4mB,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAACigB,YAAYzT,IAAI;YAEpD,IAAI6e,kBAA4B,EAAE;YAClCD,aAAsBC,iBAAiBnB,SAASjxB,MAAM;YAEtD,IAAIqyB,YAAsB,EAAE;YAC5BF,aAAsBE,WAAW9e,KAAKvT,MAAM;YAE5C,OAAO;gBACLosB;gBACAgG,iBAAiB/K,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACqwB;gBAC7BE,YAAYrB;gBACZsB,YAAYlL,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACswB;gBACxB9e;YACD;QACH;QAEA,IAAIif,mBAA6B,EAAE;QACnCL,aAAsBK,kBAAkBzG,aAAa/rB,MAAM;QAC3D,IAAIyyB,oBAAoBpL,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAACwB;QACrCxD,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACywB,kBAAkBlJ,IAAI,CAACmJ;QACnC,IAAIC,0BAA0BF,iBAAiBxyB,MAAM;QAErD+rB,aAAalnB,OAAO,CAACmiB,CAAAA;YACnB,MAAM2L,oBAAoBnG,cAAaha,MAAM,CAQ3C;gBACAga,cAAaphB,EAAE,CAAC;gBAEhBohB,cAAaC,IAAI,CACfzF,YAAYoL,eAAe,CAACpyB,MAAM,EAClC;gBAEFwsB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,CAAC,aAChB4b,YAAYsL,UAAU,CAACtyB,MAAM,EAC7B;gBAEFwsB,cAAaC,IAAI,CAACzF,YAAYuL,UAAU,CAACvyB,MAAM,EAAE;gBACjDwsB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,CAAC,cAChB4b,YAAYzT,IAAI,CAACvT,MAAM,EACvB;aAEH;YACD,MAAMA,SAAS2yB,kBAAkB9rB,MAAM,CACrCmgB,aACAyL,mBACAC;YAEFA,2BAA2B1yB;QAC7B;QACAyyB,oBAAoBA,kBAAkBxwB,KAAK,CAAC,GAAGywB;QAE/C,MAAMG,iBAAiBrG,cAAaha,MAAM,CASxC;YACAga,cAAaC,IAAI,CAAC,GAAG;YACrBD,cAAaC,IAAI,CAAC,GAAG;YACrBD,cAAaC,IAAI,CAAC,GAAG;YACrBD,cAAaC,IAAI,CAACyF,SAASlyB,MAAM,EAAE;YACnCwsB,cAAaoG,GAAG,CAACE,UAAiB,QAAQb,SAAS;YACnDa,UAAiB;SAClB;QAED,MAAM/V,cAAc;YAClBiS,uBAAuB3H,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC;gBAAC,IAAI,CAAC2R,MAAM,CAACsb,qBAAqB;aAAC;YACtEC,2BAA2B5H,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC;gBACrC,IAAI,CAAC2R,MAAM,CAACub,yBAAyB;aACtC;YACDC,6BAA6B7H,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC;gBACvC,IAAI,CAAC2R,MAAM,CAACwb,2BAA2B;aACxC;YACDgD,UAAU7K,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACmwB;YACtB3gB,MAAM,IAAI,CAACqf,WAAW,CAACjtB,GAAG,CAACtE,CAAAA,MAAOuoB,SAASvoB,IAAI2pB,OAAO;YACtD6H,iBAAiBlI,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAAC,IAAI,CAAC8pB,eAAe;QAClD;QAED,IAAIkC,WAAW1L,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC;QAC5B,MAAMrpB,SAAS6yB,eAAehsB,MAAM,CAACkW,aAAagW;QAClDN,kBAAkBnJ,IAAI,CAACyJ,UAAU/yB;QACjC,OAAO+yB,SAAS9wB,KAAK,CAAC,GAAGjC,SAASyyB,kBAAkBzyB,MAAM;IAC5D;IAEA;;GAEF,GACE,OAAO+B,KAAKW,MAA2C,EAAW;QAChE,qBAAA;QACA,IAAI4tB,YAAY;eAAI5tB;SAAO;QAE3B,MAAMssB,wBAAwBqB,aAAaC;QAC3C,IACEtB,0BACCA,CAAAA,wBAAwBlE,mBAAAA,GAEzB,MAAM,IAAI5nB,MACR;QAIJ,MAAM+rB,4BAA4BoB,aAAaC;QAC/C,MAAMpB,8BAA8BmB,aAAaC;QAEjD,MAAM0C,eAAeb,aAAsB7B;QAC3C,IAAIM,cAAc,EAAE;QACpB,IAAK,IAAIxuB,IAAI,GAAGA,IAAI4wB,cAAc5wB,IAAK;YACrC,MAAMyR,UAAU0c,cAAcD,WAAW,GAAGpxB;YAC5C0xB,YAAYrqB,IAAI,CAAC,IAAIkiB,UAAUpB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC8R;QAC7C;QAEA,MAAMgd,kBAAkBN,cAAcD,WAAW,GAAGpxB;QAEpD,MAAMszB,mBAAmBL,aAAsB7B;QAC/C,IAAIvE,eAAsC,EAAE;QAC5C,IAAK,IAAI3pB,IAAI,GAAGA,IAAIowB,kBAAkBpwB,IAAK;YACzC,MAAMgqB,iBAAiBiE,aAAaC;YACpC,MAAM0C,eAAeb,aAAsB7B;YAC3C,MAAMW,WAAWV,cAAcD,WAAW,GAAG0C;YAC7C,MAAMT,aAAaJ,aAAsB7B;YACzC,MAAM2C,YAAY1C,cAAcD,WAAW,GAAGiC;YAC9C,MAAMhf,OAAOoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAACwgB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACkxB;YACrClH,aAAaxlB,IAAI,CAAC;gBAChB6lB;gBACA6E;gBACA1d;YACF;QACF;QAEA,MAAM2f,cAAc;YAClBxf,QAAQ;gBACNsb;gBACAC;gBACAC;YACD;YACD2B,iBAAiBlI,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAACwgB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC8uB;YACzCD;YACA7E;QACD;QAED,OAAO,IAAI4E,QAAQuC;IACrB;AACF;AC9SA;;CAEA,GA6BO,MAAMC;IAOX/vB,YAAYotB,IAAmB,CAAE;QAAA,IAAA,CANjC9c,MAAM,GAAA,KAAA;QAAA,IAAA,CACN6X,iBAAiB,GAAA,KAAA;QAAA,IAAA,CACjBsF,eAAe,GAAA,KAAA;QAAA,IAAA,CACfG,oBAAoB,GAAA,KAAA;QAAA,IAAA,CACpBE,mBAAmB,GAAA,KAAA;QAGjB,IAAI,CAACxd,MAAM,GAAG8c,KAAK9c,MAAM;QACzB,IAAI,CAAC6X,iBAAiB,GAAGiF,KAAKjF,iBAAiB;QAC/C,IAAI,CAACsF,eAAe,GAAGL,KAAKK,eAAe;QAC3C,IAAI,CAACG,oBAAoB,GAAGR,KAAKQ,oBAAoB;QACrD,IAAI,CAACE,mBAAmB,GAAGV,KAAKU,mBAAmB;IACrD;IAEA,IAAIH,UAAa;QACf,OAAO;IACT;IAEA,IAAIqC,4BAAoC;QACtC,IAAIC,QAAQ;QACZ,KAAK,MAAMC,UAAU,IAAI,CAACpC,mBAAmB,CAC3CmC,SAASC,OAAO3D,eAAe,CAAC3vB,MAAM,GAAGszB,OAAOhE,eAAe,CAACtvB,MAAM;QAExE,OAAOqzB;IACT;IAEAlC,eAAeX,IAAyB,EAAsB;QAC5D,IAAIhF;QACJ,IACEgF,QACA,4BAA4BA,QAC5BA,KAAKhF,sBAAsB,EAC3B;YACA,IACE,IAAI,CAAC4H,yBAAyB,IAC9B5C,KAAKhF,sBAAsB,CAACE,QAAQ,CAAC1rB,MAAM,GACzCwwB,KAAKhF,sBAAsB,CAACG,QAAQ,CAAC3rB,MAAM,EAE7C,MAAM,IAAIkD,MACR;YAGJsoB,yBAAyBgF,KAAKhF,sBAAsB;QACrD,OAAM,IACLgF,QACA,gCAAgCA,QAChCA,KAAK+C,0BAA0B,EAE/B/H,yBAAyB,IAAI,CAACgI,0BAA0B,CACtDhD,KAAK+C,0BACP;aACK,IAAI,IAAI,CAACrC,mBAAmB,CAAClxB,MAAM,GAAG,GAC3C,MAAM,IAAIkD,MACR;QAGJ,OAAO,IAAIooB,mBACT,IAAI,CAACC,iBAAiB,EACtBC;IAEJ;IAEA8F,gBAAgBxe,KAAa,EAAW;QACtC,OAAOA,QAAQ,IAAI,CAACY,MAAM,CAACsb,qBAAqB;IAClD;IAEAuC,kBAAkBze,KAAa,EAAW;QACxC,MAAM0e,oBAAoB,IAAI,CAAC9d,MAAM,CAACsb,qBAAqB;QAC3D,MAAMyE,uBAAuB,IAAI,CAAClI,iBAAiB,CAACvrB,MAAM;QAC1D,IAAI8S,SAAS2gB,sBAAsB;YACjC,MAAMC,yBAAyB5gB,QAAQ2gB;YACvC,MAAME,+BAA+B,IAAI,CAACzC,mBAAmB,CAACpuB,MAAM,CAClE,CAACuwB,OAAOC,SAAWD,QAAQC,OAAOhE,eAAe,CAACtvB,MAAM,EACxD;YAEF,OAAO0zB,yBAAyBC;QACjC,OAAM,IAAI7gB,SAAS,IAAI,CAACY,MAAM,CAACsb,qBAAqB,EAAE;YACrD,MAAMyC,uBAAuB3e,QAAQ0e;YACrC,MAAME,sBAAsB+B,uBAAuBjC;YACnD,MAAMG,8BACJD,sBAAsB,IAAI,CAAChe,MAAM,CAACwb,2BAA2B;YAC/D,OAAOuC,uBAAuBE;QAChC,OAAO;YACL,MAAMC,4BACJJ,oBAAoB,IAAI,CAAC9d,MAAM,CAACub,yBAAyB;YAC3D,OAAOnc,QAAQ8e;QACjB;IACF;IAEA4B,2BACED,0BAAuD,EAC/B;QACxB,MAAM/H,yBAAiD;YACrDE,UAAU,EAAE;YACZC,UAAU,EAAA;QACX;QAED,KAAK,MAAMiI,eAAe,IAAI,CAAC1C,mBAAmB,CAAE;YAClD,MAAM2C,eAAeN,2BAA2B9V,IAAI,CAAC5J,CAAAA,UACnDA,QAAQxU,GAAG,CAACypB,MAAM,CAAC8K,YAAY/D,UAAU;YAE3C,IAAI,CAACgE,cACH,MAAM,IAAI3wB,MACR,CAAA,0DAAA,EAA6D0wB,YAAY/D,UAAU,CAACvwB,QAAQ,GAAE,CAChG;YAGF,KAAK,MAAMwT,SAAS8gB,YAAYtE,eAAe,CAAE;gBAC/C,IAAIxc,QAAQ+gB,aAAapE,KAAK,CAACC,SAAS,CAAC1vB,MAAM,EAC7CwrB,uBAAuBE,QAAQ,CAACnlB,IAAI,CAClCstB,aAAapE,KAAK,CAACC,SAAS,CAAC5c,MAC/B;qBAEA,MAAM,IAAI5P,MACR,CAAA,iCAAA,EAAoC4P,MAAiC8gB,yBAAAA,EAAAA,YAAY/D,UAAU,CAACvwB,QAAQ,GAAE,CACxG;YAEJ;YAEA,KAAK,MAAMwT,SAAS8gB,YAAYjE,eAAe,CAAE;gBAC/C,IAAI7c,QAAQ+gB,aAAapE,KAAK,CAACC,SAAS,CAAC1vB,MAAM,EAC7CwrB,uBAAuBG,QAAQ,CAACplB,IAAI,CAClCstB,aAAapE,KAAK,CAACC,SAAS,CAAC5c,MAC/B;qBAEA,MAAM,IAAI5P,MACR,CAAA,iCAAA,EAAoC4P,MAAiC8gB,yBAAAA,EAAAA,YAAY/D,UAAU,CAACvwB,QAAQ,GAAE,CACxG;YAEJ;QACF;QAEA,OAAOksB;IACT;IAEA,OAAO0C,QAAQsC,IAAmB,EAAa;QAC7C,MAAMY,eAAepD,aAAaE,OAAO,CAACsC,KAAKzE,YAAY,EAAEyE,KAAKa,QAAQ;QAE1E,MAAMH,sBAAsB,IAAI3xB;QAChC,MAAMisB,yBAAiD;YACrDE,UAAU,IAAInsB;YACdosB,UAAU,IAAIpsB;QACf;QACD,MAAMu0B,sBAAsBtD,KAAK+C,0BAA0B,IAAI,EAAE;QACjE,KAAK,MAAMlE,eAAeyE,oBAAqB;YAC7C,MAAMC,gBAAgB3C,aAAahC,kBAAkB,CAACC;YACtD,IAAI0E,kBAAkB7gB,WAAW;gBAC/B,MAAM,CAAC8gB,oBAAoB,EAACtI,QAAQ,EAAEC,QAAAA,EAAS,CAAC,GAAGoI;gBACnD7C,oBAAoB3qB,IAAI,CAACytB;gBACzBxI,uBAAuBE,QAAQ,CAACnlB,IAAI,IAAImlB;gBACxCF,uBAAuBG,QAAQ,CAACplB,IAAI,IAAIolB;YAC1C;QACF;QAEA,MAAM,CAACjY,QAAQ6X,kBAAkB,GAAG6F,aAAa3C,oBAAoB;QACrE,MAAMmC,cAAc,IAAItF,mBACtBC,mBACAC;QAEF,MAAMwF,uBAAuBJ,YAAY9E,mBAAmB,CAC1D0E,KAAKzE,YACP;QACA,OAAO,IAAIoH,UAAU;YACnBzf;YACA6X;YACAsF,iBAAiBL,KAAKK,eAAe;YACrCG;YACAE;QACF;IACF;IAEA3wB,YAAwB;QACtB,MAAM0zB,iCAAiC10B;QACvC4yB,aACE8B,gCACA,IAAI,CAAC1I,iBAAiB,CAACvrB,MACzB;QAEA,MAAMk0B,yBAAyB,IAAI,CAACC,qBAAqB;QACzD,MAAMC,4BAA4B70B;QAClC4yB,aACEiC,2BACA,IAAI,CAACpD,oBAAoB,CAAChxB,MAC5B;QAEA,MAAMq0B,gCAAgC,IAAI,CAACC,4BAA4B;QACvE,MAAMC,mCAAmCh1B;QACzC4yB,aACEoC,kCACA,IAAI,CAACrD,mBAAmB,CAAClxB,MAC3B;QAEA,MAAMw0B,gBAAgBhI,cAAaha,MAAM,CAUtC;YACDga,cAAaphB,EAAE,CAAC;YAChBohB,cAAaha,MAAM,CACjB;gBACEga,cAAaphB,EAAE,CAAC;gBAChBohB,cAAaphB,EAAE,CAAC;gBAChBohB,cAAaphB,EAAE,CAAC;aACjB,EACD;YAEFohB,cAAaC,IAAI,CACfwH,+BAA+Bj0B,MAAM,EACrC;YAEFwsB,cAAaoG,GAAG,CACdE,aACA,IAAI,CAACvH,iBAAiB,CAACvrB,MAAM,EAC7B;YAEF8yB,UAAiB;YACjBtG,cAAaC,IAAI,CAAC2H,0BAA0Bp0B,MAAM,EAAE;YACpDwsB,cAAaC,IAAI,CACfyH,uBAAuBl0B,MAAM,EAC7B;YAEFwsB,cAAaC,IAAI,CACf8H,iCAAiCv0B,MAAM,EACvC;YAEFwsB,cAAaC,IAAI,CACf4H,8BAA8Br0B,MAAM,EACpC;SAEH;QAED,MAAMy0B,oBAAoB,IAAIjzB,WAAWqpB;QACzC,MAAM6J,2BAA2B;QACjC,MAAMC,0BAA0BH,cAAc3tB,MAAM,CAClD;YACEuI,QAAQslB;YACRhhB,QAAQ,IAAI,CAACA,MAAM;YACnBkhB,yBAAyB,IAAIpzB,WAAWyyB;YACxC1I,mBAAmB,IAAI,CAACA,iBAAiB,CAAC5nB,GAAG,CAACtE,CAAAA,MAAOA,IAAI2pB,OAAO;YAChE6H,iBAAiBlI,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAAC,IAAI,CAAC8pB,eAAe;YACjDgE,oBAAoB,IAAIrzB,WAAW4yB;YACnCF;YACAY,2BAA2B,IAAItzB,WAC7B+yB;YAEFF;QACD,GACDI;QAEF,OAAOA,kBAAkBxyB,KAAK,CAAC,GAAG0yB;IACpC;IAEQR,wBAAoC;QAC1C,IAAIY,mBAAmB;QACvB,MAAMb,yBAAyB,IAAI1yB,WAAWqpB;QAC9C,KAAK,MAAM7D,eAAe,IAAI,CAACgK,oBAAoB,CAAE;YACnD,MAAMgE,iCAAiCz1B;YACvC4yB,aACE6C,gCACAhO,YAAYqF,iBAAiB,CAACrsB,MAChC;YAEA,MAAMi1B,oBAAoB11B;YAC1B4yB,aAAsB8C,mBAAmBjO,YAAYzT,IAAI,CAACvT,MAAM;YAEhE,MAAM2yB,oBAAoBnG,cAAaha,MAAM,CAM1C;gBACDga,cAAaphB,EAAE,CAAC;gBAChBohB,cAAaC,IAAI,CACfuI,+BAA+Bh1B,MAAM,EACrC;gBAEFwsB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,IACf4b,YAAYqF,iBAAiB,CAACrsB,MAAM,EACpC;gBAEFwsB,cAAaC,IAAI,CAACwI,kBAAkBj1B,MAAM,EAAE;gBAC5CwsB,cAAaC,IAAI,CAACzF,YAAYzT,IAAI,CAACvT,MAAM,EAAE;aAC5C;YAED+0B,oBAAoBpC,kBAAkB9rB,MAAM,CAC1C;gBACEulB,gBAAgBpF,YAAYoF,cAAc;gBAC1C4I,gCAAgC,IAAIxzB,WAClCwzB;gBAEF3I,mBAAmBrF,YAAYqF,iBAAiB;gBAChD4I,mBAAmB,IAAIzzB,WAAWyzB;gBAClC1hB,MAAMyT,YAAYzT,IAAAA;YACpB,GACA2gB,wBACAa;QAEJ;QAEA,OAAOb,uBAAuBjyB,KAAK,CAAC,GAAG8yB;IACzC;IAEQT,+BAA2C;QACjD,IAAIS,mBAAmB;QACvB,MAAMV,gCAAgC,IAAI7yB,WAAWqpB;QACrD,KAAK,MAAMyI,UAAU,IAAI,CAACpC,mBAAmB,CAAE;YAC7C,MAAMgE,+BAA+B31B;YACrC4yB,aACE+C,8BACA5B,OAAOhE,eAAe,CAACtvB,MACzB;YAEA,MAAMm1B,+BAA+B51B;YACrC4yB,aACEgD,8BACA7B,OAAO3D,eAAe,CAAC3vB,MACzB;YAEA,MAAMo1B,2BAA2B5I,cAAaha,MAAM,CAMjD;gBACDsgB,UAAiB;gBACjBtG,cAAaC,IAAI,CACfyI,6BAA6Bl1B,MAAM,EACnC;gBAEFwsB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,IACfkoB,OAAOhE,eAAe,CAACtvB,MAAM,EAC7B;gBAEFwsB,cAAaC,IAAI,CACf0I,6BAA6Bn1B,MAAM,EACnC;gBAEFwsB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,IACfkoB,OAAO3D,eAAe,CAAC3vB,MAAM,EAC7B;aAEH;YAED+0B,oBAAoBK,yBAAyBvuB,MAAM,CACjD;gBACEgpB,YAAYyD,OAAOzD,UAAU,CAAC7G,OAAO;gBACrCkM,8BAA8B,IAAI1zB,WAChC0zB;gBAEF5F,iBAAiBgE,OAAOhE,eAAe;gBACvC6F,8BAA8B,IAAI3zB,WAChC2zB;gBAEFxF,iBAAiB2D,OAAO3D,eAAAA;YAC1B,GACA0E,+BACAU;QAEJ;QAEA,OAAOV,8BAA8BpyB,KAAK,CAAC,GAAG8yB;IAChD;IAEA,OAAOr1B,YAAY+0B,iBAA6B,EAAa;QAC3D,IAAInE,YAAY;eAAImE;SAAkB;QAEtC,MAAMrlB,SAASihB,aAAaC;QAC5B,MAAM+E,eAAejmB,SAAS0b;QAC9B6D,OACEvf,WAAWimB,cACX,CAAA,sDAAA,CACF;QAEA,MAAMtE,UAAUsE;QAChB1G,OACEoC,YAAY,GACZ,CAA+DA,4DAAAA,EAAAA,QAAO,CACxE;QAEA,MAAMrd,SAAwB;YAC5Bsb,uBAAuBqB,aAAaC;YACpCrB,2BAA2BoB,aAAaC;YACxCpB,6BAA6BmB,aAAaC;QAC3C;QAED,MAAM/E,oBAAoB,EAAE;QAC5B,MAAMqJ,0BAA0BzC,aAAsB7B;QACtD,IAAK,IAAIluB,IAAI,GAAGA,IAAIwyB,yBAAyBxyB,IAC3CmpB,kBAAkBhlB,IAAI,CACpB,IAAIkiB,UAAU8H,cAAcD,WAAW,GAAGpxB;QAI9C,MAAM2xB,kBAAkBlI,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CACjC0pB,cAAcD,WAAW,GAAGpxB;QAG9B,MAAMszB,mBAAmBL,aAAsB7B;QAC/C,MAAMU,uBAAqD,EAAE;QAC7D,IAAK,IAAI5uB,IAAI,GAAGA,IAAIowB,kBAAkBpwB,IAAK;YACzC,MAAMgqB,iBAAiBiE,aAAaC;YACpC,MAAMgF,0BAA0BnD,aAAsB7B;YACtD,MAAMjE,oBAAoBkE,cACxBD,WACA,GACAgF;YAEF,MAAM/C,aAAaJ,aAAsB7B;YACzC,MAAM/c,OAAO,IAAI/R,WAAW+uB,cAAcD,WAAW,GAAGiC;YACxDvB,qBAAqBzqB,IAAI,CAAC;gBACxB6lB;gBACAC;gBACA9Y;YACF;QACF;QAEA,MAAMgiB,2BAA2BpD,aAAsB7B;QACvD,MAAMY,sBAAmD,EAAE;QAC3D,IAAK,IAAI9uB,IAAI,GAAGA,IAAImzB,0BAA0BnzB,IAAK;YACjD,MAAMytB,aAAa,IAAIpH,UACrB8H,cAAcD,WAAW,GAAGpxB;YAE9B,MAAMs2B,wBAAwBrD,aAAsB7B;YACpD,MAAMhB,kBAAkBiB,cACtBD,WACA,GACAkF;YAEF,MAAMC,wBAAwBtD,aAAsB7B;YACpD,MAAMX,kBAAkBY,cACtBD,WACA,GACAmF;YAEFvE,oBAAoB3qB,IAAI,CAAC;gBACvBspB;gBACAP;gBACAK;YACF;QACF;QAEA,OAAO,IAAIwD,UAAU;YACnBzf;YACA6X;YACAsF;YACAG;YACAE;QACF;IACF;AACF;AC3fA,wCAAA;AACO,MAAMwE,mBAAmB;IAC9BC,2BAA0BlB,iBAA6B;QACrD,MAAMrlB,SAASqlB,iBAAiB,CAAC,EAAE;QACnC,MAAMY,eAAejmB,SAAS0b;QAE9B,4EAAA;QACA,IAAIuK,iBAAiBjmB,QACnB,OAAO;QAGT,8DAAA;QACA,OAAOimB;IACR;IAED31B,aAAc+0B,CAAAA;QACZ,MAAM1D,UACJ2E,iBAAiBC,yBAAyB,CAAClB;QAC7C,IAAI1D,YAAY,UACd,OAAOJ,QAAQ5uB,IAAI,CAAC0yB;QAGtB,IAAI1D,YAAY,GACd,OAAOoC,UAAUzzB,WAAW,CAAC+0B;aAE7B,MAAM,IAAIvxB,MACR,CAA+B6tB,4BAAAA,EAAAA,QAAO,iCAAA,CACxC;IAEJ;AACF;ACnBA,cAAA,GAMA;;CAEA,GAGkB6E,IAAAA,oBAAiB,WAAA,GAAA,SAAjBA,iBAAiB;IAAjBA,iBAAiB,CAAjBA,iBAAiB,CAAA,uBAAA,GAAA,EAAA,GAAA;IAAjBA,iBAAiB,CAAjBA,iBAAiB,CAAA,YAAA,GAAA,EAAA,GAAA;IAAjBA,iBAAiB,CAAjBA,iBAAiB,CAAA,YAAA,GAAA,EAAA,GAAA;IAAjBA,iBAAiB,CAAjBA,iBAAiB,CAAA,gBAAA,GAAA,EAAA,GAAA;IAAA,OAAjBA;AAAiB,EAAA,CAAA;AAOnC;;CAEA,GACA,MAAMC,oBAAoBxO,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC0B,2BAA2BjpB,IAAI,CAAC;AAEvE;;CAEA,GAUA;;CAEA,GAOA;;CAEA,GAQA;;CAEA,GAWA;;CAEA,GACO,MAAMg0B;IAiBX1yB,YAAY2yB,IAAsC,CAAE;QAhBpD;;;KAGF,GAHE,IAAA,CAIAxkB,IAAI,GAAA,KAAA;QAEJ;;KAEF,GAFE,IAAA,CAGAgV,SAAS,GAAA,KAAA;QAET;;KAEF,GAFE,IAAA,CAGAhT,IAAI,GAAW8T,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC;QAG1B,IAAI,CAAC9C,SAAS,GAAGwP,KAAKxP,SAAS;QAC/B,IAAI,CAAChV,IAAI,GAAGwkB,KAAKxkB,IAAI;QACrB,IAAIwkB,KAAKxiB,IAAI,EACX,IAAI,CAACA,IAAI,GAAGwiB,KAAKxiB,IAAI;IAEzB;IAEA;;GAEF,GACE0V,SAAqC;QACnC,OAAO;YACL1X,MAAM,IAAI,CAACA,IAAI,CAAC5N,GAAG,CAAC,CAAC,EAACujB,MAAM,EAAErJ,QAAQ,EAAEwQ,UAAAA,EAAW,GAAM,CAAA;oBACvDnH,QAAQA,OAAO+B,MAAM;oBACrBpL;oBACAwQ;gBACF,CAAA;YACA9H,WAAW,IAAI,CAACA,SAAS,CAAC0C,MAAM;YAChC1V,MAAM;mBAAI,IAAI,CAACA,IAAI;aAAA;QACpB;IACH;AACF;AAEA;;CAEA,GAMA;;CAEA,GAYA,kEAAA;AACA,8DAAA;AACA,uDAAA;AAGA;;;;CAIA,GAYA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAYA;;CAEA,GACO,MAAMyiB;IAOX;;;;GAIF,GACE,IAAIlP,YAA2B;QAC7B,IAAI,IAAI,CAACmP,UAAU,CAACj2B,MAAM,GAAG,GAC3B,OAAO,IAAI,CAACi2B,UAAU,CAAC,EAAE,CAACnP,SAAS;QAErC,OAAO;IACT;IAEA;;GAEF,GA2CE,oEAAA;IAGA,gDAAA;IAGA;;;GAGF,GAGE;;GAEF,GACE1jB,YACE2yB,IAGoC,CACpC;QAnFF;;;KAGF,GAHE,IAIAE,CAAAA,UAAU,GAA+B,EAAE;QAAA,IAAA,CAiB3CC,QAAQ,GAAA,KAAA;QAER;;KAEF,GAFE,IAGAnK,CAAAA,YAAY,GAAkC,EAAE;QAEhD;;KAEF,GAFE,IAAA,CAGA8E,eAAe,GAAA,KAAA;QAEf;;OAEF,GAFE,IAAA,CAGAsF,oBAAoB,GAAA,KAAA;QAEpB;;;KAGF,GAHE,IAAA,CAIAC,SAAS,GAAA,KAAA;QAET;;;;;;KAMF,GANE,IAAA,CAOAC,mBAAmB,GAAA,KAAA;QAEnB;;KAEF,GAFE,IAAA,CAGAC,QAAQ,GAAA,KAAA;QAER;;KAEF,GAFE,IAAA,CAGAC,KAAK,GAAA,KAAA;QAuBH,IAAI,CAACR,MACH;QAEF,IAAIA,KAAKG,QAAQ,EACf,IAAI,CAACA,QAAQ,GAAGH,KAAKG,QAAQ;QAE/B,IAAIH,KAAKE,UAAU,EACjB,IAAI,CAACA,UAAU,GAAGF,KAAKE,UAAU;QAEnC,IAAI3kB,OAAOoO,SAAS,CAAC8W,cAAc,CAAC9Z,IAAI,CAACqZ,MAAM,cAAc;YAC3D,MAAM,EAACU,cAAc,EAAEL,SAAAA,EAAU,GAAGL;YACpC,IAAI,CAACM,mBAAmB,GAAGI;YAC3B,IAAI,CAACL,SAAS,GAAGA;QACnB,OAAO,IACL9kB,OAAOoO,SAAS,CAAC8W,cAAc,CAAC9Z,IAAI,CAACqZ,MAAM,yBAC3C;YACA,MAAM,EAACW,SAAS,EAAEP,oBAAAA,EAAqB,GACrCJ;YACF,IAAI,CAAClF,eAAe,GAAG6F;YACvB,IAAI,CAACP,oBAAoB,GAAGA;QAC9B,OAAO;YACL,MAAM,EAACtF,eAAe,EAAEuF,SAAAA,EAAU,GAChCL;YACF,IAAIK,WACF,IAAI,CAACA,SAAS,GAAGA;YAEnB,IAAI,CAACvF,eAAe,GAAGA;QACzB;IACF;IAEA;;GAEF,GACE5H,SAA0B;QACxB,OAAO;YACL4H,iBAAiB,IAAI,CAACA,eAAe,IAAI;YACzCqF,UAAU,IAAI,CAACA,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACjN,MAAM,KAAK;YACnDmN,WAAW,IAAI,CAACA,SAAS,GACrB;gBACErM,OAAO,IAAI,CAACqM,SAAS,CAACrM,KAAK;gBAC3B4M,kBAAkB,IAAI,CAACP,SAAS,CAACO,gBAAgB,CAAC1N,MAAM;YAC1D,IACA;YACJ8C,cAAc,IAAI,CAACA,YAAY,CAACpoB,GAAG,CAACqjB,CAAAA,cAAeA,YAAYiC,MAAM;YACrEjM,SAAS,IAAI,CAACiZ,UAAU,CAACtyB,GAAG,CAAC,CAAC,EAACxE,SAAAA,EAAU;gBACvC,OAAOA,UAAU8pB,MAAM;YACxB;QACF;IACH;IAEA;;;;GAIF,GACE5W,IACE,GAAGO,KAEF,EACY;QACb,IAAIA,MAAM5S,MAAM,KAAK,GACnB,MAAM,IAAIkD,MAAM;QAGlB0P,MAAM/N,OAAO,CAAEyH,CAAAA;YACb,IAAI,kBAAkBA,MACpB,IAAI,CAACyf,YAAY,GAAG,IAAI,CAACA,YAAY,CAACtpB,MAAM,CAAC6J,KAAKyf,YAAY;iBACzD,IAAI,UAAUzf,QAAQ,eAAeA,QAAQ,UAAUA,MAC5D,IAAI,CAACyf,YAAY,CAACxlB,IAAI,CAAC+F;iBAEvB,IAAI,CAACyf,YAAY,CAACxlB,IAAI,CAAC,IAAIuvB,uBAAuBxpB;QAEtD;QACA,OAAO,IAAI;IACb;IAEA;;GAEF,GACEsqB,iBAA0B;QACxB,IACE,IAAI,CAACN,QAAQ,IACblpB,KAAKC,SAAS,CAAC,IAAI,CAAC4b,MAAM,QAAQ7b,KAAKC,SAAS,CAAC,IAAI,CAACkpB,KAAK,GAE3D,OAAO,IAAI,CAACD,QAAQ;QAGtB,IAAIzF;QACJ,IAAI9E;QACJ,IAAI,IAAI,CAACqK,SAAS,EAAE;YAClBvF,kBAAkB,IAAI,CAACuF,SAAS,CAACrM,KAAK;YACtC,IAAI,IAAI,CAACgC,YAAY,CAAC,EAAE,IAAI,IAAI,CAACqK,SAAS,CAACO,gBAAgB,EACzD5K,eAAe;gBAAC,IAAI,CAACqK,SAAS,CAACO,gBAAgB;mBAAK,IAAI,CAAC5K,YAAY;aAAC;iBAEtEA,eAAe,IAAI,CAACA,YAAY;QAEpC,OAAO;YACL8E,kBAAkB,IAAI,CAACA,eAAe;YACtC9E,eAAe,IAAI,CAACA,YAAY;QAClC;QACA,IAAI,CAAC8E,iBACH,MAAM,IAAI3tB,MAAM;QAGlB,IAAI6oB,aAAa/rB,MAAM,GAAG,GACxB62B,QAAQC,IAAI,CAAC;QAGf,IAAIZ;QACJ,IAAI,IAAI,CAACA,QAAQ,EACfA,WAAW,IAAI,CAACA,QAAQ;aACnB,IAAI,IAAI,CAACD,UAAU,CAACj2B,MAAM,GAAG,KAAK,IAAI,CAACi2B,UAAU,CAAC,EAAE,CAAC92B,SAAS,EACnE,yBAAA;QACA+2B,WAAW,IAAI,CAACD,UAAU,CAAC,EAAE,CAAC92B,SAAS;aAEvC,MAAM,IAAI+D,MAAM;QAGlB,IAAK,IAAId,IAAI,GAAGA,IAAI2pB,aAAa/rB,MAAM,EAAEoC,IAAK;YAC5C,IAAI2pB,YAAY,CAAC3pB,EAAE,CAACmkB,SAAS,KAAKrT,WAChC,MAAM,IAAIhQ,MACR,CAAiCd,8BAAAA,EAAAA,EAAC,yBAAA,CACpC;QAEJ;QAEA,MAAM0vB,aAAuB,EAAE;QAC/B,MAAMiF,eAA8B,EAAE;QACtChL,aAAalnB,OAAO,CAACmiB,CAAAA;YACnBA,YAAYzV,IAAI,CAAC1M,OAAO,CAACoiB,CAAAA;gBACvB8P,aAAaxwB,IAAI,CAAC;oBAAC,GAAG0gB,WAAAA;gBAAW;YACnC;YAEA,MAAMV,YAAYS,YAAYT,SAAS,CAACziB,QAAQ;YAChD,IAAI,CAACguB,WAAW5f,QAAQ,CAACqU,YACvBuL,WAAWvrB,IAAI,CAACggB;QAEpB;QAEA,iCAAA;QACAuL,WAAWjtB,OAAO,CAAC0hB,CAAAA;YACjBwQ,aAAaxwB,IAAI,CAAC;gBAChB2gB,QAAQ,IAAIuB,UAAUlC;gBACtB1I,UAAU;gBACVwQ,YAAY;YACd;QACF;QAEA,+BAAA;QACA,MAAM2I,cAA6B,EAAE;QACrCD,aAAalyB,OAAO,CAACoiB,CAAAA;YACnB,MAAMgQ,eAAehQ,YAAYC,MAAM,CAACpjB,QAAQ;YAChD,MAAMozB,cAAcF,YAAYr1B,SAAS,CAACsV,CAAAA;gBACxC,OAAOA,EAAEiQ,MAAM,CAACpjB,QAAQ,OAAOmzB;YACjC;YACA,IAAIC,cAAc,IAAI;gBACpBF,WAAW,CAACE,YAAY,CAAC7I,UAAU,GACjC2I,WAAW,CAACE,YAAY,CAAC7I,UAAU,IAAIpH,YAAYoH,UAAU;gBAC/D2I,WAAW,CAACE,YAAY,CAACrZ,QAAQ,GAC/BmZ,WAAW,CAACE,YAAY,CAACrZ,QAAQ,IAAIoJ,YAAYpJ,QAAQ;YAC7D,OACEmZ,YAAYzwB,IAAI,CAAC0gB;QAErB;QAEA,uDAAA;QACA+P,YAAYG,IAAI,CAAC,SAAUlgB,CAAC,EAAEmgB,CAAC;YAC7B,IAAIngB,EAAE4G,QAAQ,KAAKuZ,EAAEvZ,QAAQ,EAC3B,yCAAA;YACA,OAAO5G,EAAE4G,QAAQ,GAAG,KAAK;YAE3B,IAAI5G,EAAEoX,UAAU,KAAK+I,EAAE/I,UAAU,EAC/B,0DAAA;YACA,OAAOpX,EAAEoX,UAAU,GAAG,KAAK;YAE7B,yCAAA;YACA,MAAM5lB,UAAU;gBACd4uB,eAAe;gBACfC,OAAO;gBACPC,aAAa;gBACbC,mBAAmB;gBACnBC,SAAS;gBACTC,WAAW;YACY;YACzB,OAAOzgB,EAAEiQ,MAAM,CACZ5nB,QAAQ,GACRq4B,aAAa,CAACP,EAAElQ,MAAM,CAAC5nB,QAAQ,IAAI,MAAMmJ;QAC9C;QAEA,8BAAA;QACA,MAAMmvB,gBAAgBZ,YAAYr1B,SAAS,CAACsV,CAAAA;YAC1C,OAAOA,EAAEiQ,MAAM,CAAC4B,MAAM,CAACoN;QACzB;QACA,IAAI0B,gBAAgB,IAAI;YACtB,MAAM,CAACC,UAAU,GAAGb,YAAYtG,MAAM,CAACkH,eAAe;YACtDC,UAAUha,QAAQ,GAAG;YACrBga,UAAUxJ,UAAU,GAAG;YACvB2I,YAAYz0B,OAAO,CAACs1B;QACtB,OACEb,YAAYz0B,OAAO,CAAC;YAClB2kB,QAAQgP;YACRrY,UAAU;YACVwQ,YAAY;QACd;QAGF,2BAAA;QACA,KAAK,MAAMvH,aAAa,IAAI,CAACmP,UAAU,CAAE;YACvC,MAAMiB,cAAcF,YAAYr1B,SAAS,CAACsV,CAAAA;gBACxC,OAAOA,EAAEiQ,MAAM,CAAC4B,MAAM,CAAChC,UAAU3nB,SAAS;YAC5C;YACA,IAAI+3B,cAAc,IAChB;gBAAA,IAAI,CAACF,WAAW,CAACE,YAAY,CAACrZ,QAAQ,EAAE;oBACtCmZ,WAAW,CAACE,YAAY,CAACrZ,QAAQ,GAAG;oBACpCgZ,QAAQC,IAAI,CACV;gBAIJ;YAAA,OAEA,MAAM,IAAI5zB,MAAM,CAAA,gBAAA,EAAmB4jB,UAAU3nB,SAAS,CAAC2E,QAAQ,GAAE,CAAE;QAEvE;QAEA,IAAIkrB,wBAAwB;QAC5B,IAAIC,4BAA4B;QAChC,IAAIC,8BAA8B;QAElC,kEAAA;QACA,MAAM4I,aAAuB,EAAE;QAC/B,MAAMC,eAAyB,EAAE;QACjCf,YAAYnyB,OAAO,CAAC,CAAC,EAACqiB,MAAM,EAAErJ,QAAQ,EAAEwQ,UAAAA,EAAW;YACjD,IAAIxQ,UAAU;gBACZia,WAAWvxB,IAAI,CAAC2gB,OAAOpjB,QAAQ;gBAC/BkrB,yBAAyB;gBACzB,IAAI,CAACX,YACHY,6BAA6B;YAEjC,OAAO;gBACL8I,aAAaxxB,IAAI,CAAC2gB,OAAOpjB,QAAQ;gBACjC,IAAI,CAACuqB,YACHa,+BAA+B;YAEnC;QACF;QAEA,MAAM0B,cAAckH,WAAWr1B,MAAM,CAACs1B;QACtC,MAAM/G,uBAA8CjF,aAAapoB,GAAG,CAClEqjB,CAAAA;YACE,MAAM,EAACzT,IAAI,EAAEgT,SAAAA,EAAU,GAAGS;YAC1B,OAAO;gBACLoF,gBAAgBwE,YAAYvuB,OAAO,CAACkkB,UAAUziB,QAAQ;gBACtDmtB,UAAUjK,YAAYzV,IAAI,CAAC5N,GAAG,CAAC2oB,CAAAA,OAC7BsE,YAAYvuB,OAAO,CAACiqB,KAAKpF,MAAM,CAACpjB,QAAQ;gBAE1CyP,MAAMoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAAC0M;YACnB;QACH;QAGFyd,qBAAqBnsB,OAAO,CAACmiB,CAAAA;YAC3BgR,OAAUhR,YAAYoF,cAAc,IAAI;YACxCpF,YAAYiK,QAAQ,CAACpsB,OAAO,CAACsnB,CAAAA,WAAY6L,OAAU7L,YAAY;QACjE;QAEA,OAAO,IAAIwE,QAAQ;YACjBjd,QAAQ;gBACNsb;gBACAC;gBACAC;YACD;YACD0B;YACAC;YACA9E,cAAciF;QAChB;IACF;IAEA;;GAEF,GACEiH,WAAoB;QAClB,MAAM30B,UAAU,IAAI,CAACszB,cAAc;QACnC,MAAMkB,aAAax0B,QAAQstB,WAAW,CAAC3uB,KAAK,CAC1C,GACAqB,QAAQoQ,MAAM,CAACsb,qBACjB;QAEA,IAAI,IAAI,CAACiH,UAAU,CAACj2B,MAAM,KAAK83B,WAAW93B,MAAM,EAAE;YAChD,MAAMk4B,QAAQ,IAAI,CAACjC,UAAU,CAACzmB,KAAK,CAAC,CAAC2oB,MAAMrlB;gBACzC,OAAOglB,UAAU,CAAChlB,MAAM,CAACgW,MAAM,CAACqP,KAAKh5B,SAAS;YAChD;YAEA,IAAI+4B,OAAO,OAAO50B;QACpB;QAEA,IAAI,CAAC2yB,UAAU,GAAG6B,WAAWn0B,GAAG,CAACxE,CAAAA,YAAc,CAAA;gBAC7C2nB,WAAW;gBACX3nB;YACF,CAAA;QAEA,OAAOmE;IACT;IAEA;;GAEF,GACEwb,mBAA2B;QACzB,OAAO,IAAI,CAACmZ,QAAQ,GAAG13B,SAAS;IAClC;IAEA;;;;;;GAMF,GACE,MAAM63B,gBAAgBC,UAAsB,EAA0B;QACpE,OAAO,AAAC,CAAA,MAAMA,WAAWC,gBAAgB,CAAC,IAAI,CAAC1B,cAAc,GAAE,EAAGx4B,KAAK;IACzE;IAEA;;;;;;;;;GASF,GACEm6B,WAAW,GAAGvb,OAAyB,EAAE;QACvC,IAAIA,QAAQhd,MAAM,KAAK,GACrB,MAAM,IAAIkD,MAAM;QAGlB,MAAMs1B,OAAO,IAAIn4B;QACjB,IAAI,CAAC41B,UAAU,GAAGjZ,QACfrL,MAAM,CAACxS,CAAAA;YACN,MAAME,MAAMF,UAAU2E,QAAQ;YAC9B,IAAI00B,KAAKld,GAAG,CAACjc,MACX,OAAO;iBACF;gBACLm5B,KAAKnmB,GAAG,CAAChT;gBACT,OAAO;YACT;QACF,GACCsE,GAAG,CAACxE,CAAAA,YAAc,CAAA;gBAAC2nB,WAAW;gBAAM3nB;YAAS,CAAA;IAClD;IAEA;;;;;;;;;;;;;;;GAeF,GACE6Y,KAAK,GAAGgF,OAAsB,EAAE;QAC9B,IAAIA,QAAQhd,MAAM,KAAK,GACrB,MAAM,IAAIkD,MAAM;QAGlB,iBAAA;QACA,MAAMs1B,OAAO,IAAIn4B;QACjB,MAAMyd,gBAAgB,EAAE;QACxB,KAAK,MAAMZ,UAAUF,QAAS;YAC5B,MAAM3d,MAAM6d,OAAO/d,SAAS,CAAC2E,QAAQ;YACrC,IAAI00B,KAAKld,GAAG,CAACjc,MACX;iBACK;gBACLm5B,KAAKnmB,GAAG,CAAChT;gBACTye,cAAcvX,IAAI,CAAC2W;YACrB;QACF;QAEA,IAAI,CAAC+Y,UAAU,GAAGnY,cAAcna,GAAG,CAACuZ,CAAAA,SAAW,CAAA;gBAC7C4J,WAAW;gBACX3nB,WAAW+d,OAAO/d,SAAAA;YACpB,CAAA;QAEA,MAAMmE,UAAU,IAAI,CAAC20B,QAAQ;QAC7B,IAAI,CAACQ,YAAY,CAACn1B,YAAYwa;IAChC;IAEA;;;;;;;;GAQF,GACE4a,YAAY,GAAG1b,OAAsB,EAAE;QACrC,IAAIA,QAAQhd,MAAM,KAAK,GACrB,MAAM,IAAIkD,MAAM;QAGlB,iBAAA;QACA,MAAMs1B,OAAO,IAAIn4B;QACjB,MAAMyd,gBAAgB,EAAE;QACxB,KAAK,MAAMZ,UAAUF,QAAS;YAC5B,MAAM3d,MAAM6d,OAAO/d,SAAS,CAAC2E,QAAQ;YACrC,IAAI00B,KAAKld,GAAG,CAACjc,MACX;iBACK;gBACLm5B,KAAKnmB,GAAG,CAAChT;gBACTye,cAAcvX,IAAI,CAAC2W;YACrB;QACF;QAEA,MAAM5Z,UAAU,IAAI,CAAC20B,QAAQ;QAC7B,IAAI,CAACQ,YAAY,CAACn1B,YAAYwa;IAChC;IAEA;;GAEF,GACE2a,aAAan1B,OAAgB,EAAE,GAAG0Z,OAAsB,EAAE;QACxD,MAAM+V,WAAWzvB,QAAQ/C,SAAS;QAClCyc,QAAQnY,OAAO,CAACqY,CAAAA;YACd,MAAM4J,YAAY9O,KAAK+a,UAAU7V,OAAO+I,SAAS;YACjD,IAAI,CAAC0S,aAAa,CAACzb,OAAO/d,SAAS,EAAEyoB,SAASd;QAChD;IACF;IAEA;;;;;;;GAOF,GACE8R,aAAa1R,MAAiB,EAAEJ,SAAiB,EAAE;QACjD,IAAI,CAACmR,QAAQ,IAAb,uCAAA;QACA,IAAI,CAACU,aAAa,CAACzR,QAAQJ;IAC7B;IAEA;;GAEF,GACE6R,cAAczR,MAAiB,EAAEJ,SAAiB,EAAE;QAClDkR,OAAUlR,UAAU9mB,MAAM,KAAK;QAE/B,MAAM8S,QAAQ,IAAI,CAACmjB,UAAU,CAACt0B,SAAS,CAACk3B,CAAAA,UACtC3R,OAAO4B,MAAM,CAAC+P,QAAQ15B,SAAS;QAEjC,IAAI2T,QAAQ,GACV,MAAM,IAAI5P,MAAM,CAAmBgkB,gBAAAA,EAAAA,OAAOpjB,QAAQ,GAAE,CAAE;QAGxD,IAAI,CAACmyB,UAAU,CAACnjB,MAAM,CAACgU,SAAS,GAAGO,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC+kB;IACjD;IAEA;;;;;;GAMF,GACEgS,iBAAiBC,uBAAgC,IAAI,EAAW;QAC9D,MAAMC,kBAAkB,IAAI,CAACC,2BAA2B,CACtD,IAAI,CAACna,gBAAgB,IACrBia;QAEF,OAAO,CAACC;IACV;IAEA;;GAEF,GACEC,4BACE31B,OAAmB,EACnBy1B,oBAA6B,EACQ;QACrC,MAAMG,SAAkC,CAAA;QACxC,KAAK,MAAM,EAACpS,SAAS,EAAE3nB,SAAAA,EAAU,IAAI,IAAI,CAAC82B,UAAU,CAAE;YACpD,IAAInP,cAAc,MAChB;gBAAA,IAAIiS,sBACF,AAACG,CAAAA,OAAOC,OAAO,KAAK,EAAE,AAAF,EAAI5yB,IAAI,CAACpH;YAC/B,OAEA,IAAI,CAACic,OAAO0L,WAAWxjB,SAASnE,UAAU6pB,OAAO,KAC/C,AAACkQ,CAAAA,OAAOE,OAAO,KAAK,EAAE,AAAF,EAAI7yB,IAAI,CAACpH;QAGnC;QACA,OAAO+5B,OAAOE,OAAO,IAAIF,OAAOC,OAAO,GAAGD,SAAShmB;IACrD;IAEA;;;;;;GAMF,GACE3S,UAAU84B,MAAwB,EAAU;QAC1C,MAAM,EAACN,oBAAoB,EAAED,gBAAAA,EAAiB,GAAGxnB,OAAO0W,MAAM,CAC5D;YAAC+Q,sBAAsB;YAAMD,kBAAkB;QAAK,GACpDO;QAGF,MAAMtG,WAAW,IAAI,CAACjU,gBAAgB;QACtC,IAAIga,kBAAkB;YACpB,MAAMQ,YAAY,IAAI,CAACL,2BAA2B,CAChDlG,UACAgG;YAEF,IAAIO,WAAW;gBACb,IAAIC,eAAe;gBACnB,IAAID,UAAUF,OAAO,EACnBG,gBAAgB,CAAA,kCAAA,EACdD,UAAUF,OAAO,CAACp5B,MAAM,KAAK,IAAI,KAAK,MAAK,IAAA,EACtCs5B,UAAUF,OAAO,CAACz1B,GAAG,CAAC61B,CAAAA,IAAKA,EAAEl6B,QAAQ,IAAI2D,IAAI,CAAC,QAAa,IAAA,CAAA;gBAEpE,IAAIq2B,UAAUH,OAAO,EACnBI,gBAAgB,CAAA,kCAAA,EACdD,UAAUH,OAAO,CAACn5B,MAAM,KAAK,IAAI,KAAK,MAAK,IAAA,EACtCs5B,UAAUH,OAAO,CAACx1B,GAAG,CAAC61B,CAAAA,IAAKA,EAAEl6B,QAAQ,IAAI2D,IAAI,CAAC,QAAa,IAAA,CAAA;gBAEpE,MAAM,IAAIC,MAAMq2B;YAClB;QACF;QAEA,OAAO,IAAI,CAACE,UAAU,CAAC1G;IACzB;IAEA;;GAEF,GACE0G,WAAW1G,QAAgB,EAAU;QACnC,MAAM,EAACkD,UAAAA,EAAW,GAAG,IAAI;QACzB,MAAMyD,iBAA2B,EAAE;QACnCvH,aAAsBuH,gBAAgBzD,WAAWj2B,MAAM;QACvD,MAAM25B,oBACJD,eAAe15B,MAAM,GAAGi2B,WAAWj2B,MAAM,GAAG,KAAK+yB,SAAS/yB,MAAM;QAClE,MAAM45B,kBAAkBvS,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAACsQ;QACrC3B,OAAU/B,WAAWj2B,MAAM,GAAG;QAC9BqnB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC23B,gBAAgBpQ,IAAI,CAACsQ,iBAAiB;QAClD3D,WAAWpxB,OAAO,CAAC,CAAC,EAACiiB,SAAAA,EAAU,EAAEhU;YAC/B,IAAIgU,cAAc,MAAM;gBACtBkR,OAAUlR,UAAU9mB,MAAM,KAAK,IAAI,CAAA,4BAAA,CAA8B;gBACjEqnB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC+kB,WAAWwC,IAAI,CACzBsQ,iBACAF,eAAe15B,MAAM,GAAG8S,QAAQ;YAEpC;QACF;QACAigB,SAASzJ,IAAI,CACXsQ,iBACAF,eAAe15B,MAAM,GAAGi2B,WAAWj2B,MAAM,GAAG;QAE9Cg4B,OACE4B,gBAAgB55B,MAAM,IAAI6qB,kBAC1B,CAA0B+O,uBAAAA,EAAAA,gBAAgB55B,MAAM,CAAM6qB,GAAAA,EAAAA,iBAAgB,CACxE;QACA,OAAO+O;IACT;IAEA;;;GAGF,GACE,IAAIroB,OAAyB;QAC3BymB,OAAU,IAAI,CAACjM,YAAY,CAAC/rB,MAAM,KAAK;QACvC,OAAO,IAAI,CAAC+rB,YAAY,CAAC,EAAE,CAACxa,IAAI,CAAC5N,GAAG,CAACk2B,CAAAA,SAAUA,OAAO3S,MAAM;IAC9D;IAEA;;;GAGF,GACE,IAAIX,YAAuB;QACzByR,OAAU,IAAI,CAACjM,YAAY,CAAC/rB,MAAM,KAAK;QACvC,OAAO,IAAI,CAAC+rB,YAAY,CAAC,EAAE,CAACxF,SAAS;IACvC;IAEA;;;GAGF,GACE,IAAIhT,OAAe;QACjBykB,OAAU,IAAI,CAACjM,YAAY,CAAC/rB,MAAM,KAAK;QACvC,OAAO,IAAI,CAAC+rB,YAAY,CAAC,EAAE,CAACxY,IAAI;IAClC;IAEA;;;;;;GAMF,GACE,OAAOxR,KAAKW,MAA2C,EAAe;QACpE,qBAAA;QACA,IAAI4tB,YAAY;eAAI5tB;SAAO;QAE3B,MAAMg3B,iBAAiBvH,aAAsB7B;QAC7C,IAAI2F,aAAa,EAAE;QACnB,IAAK,IAAI7zB,IAAI,GAAGA,IAAIs3B,gBAAgBt3B,IAAK;YACvC,MAAM0kB,YAAYyJ,cAAcD,WAAW,GAAGvF;YAC9CkL,WAAW1vB,IAAI,CAACoiB,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAACwgB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC+kB;QAC1C;QAEA,OAAOkP,YAAY8D,QAAQ,CAACnJ,QAAQ5uB,IAAI,CAACuuB,YAAY2F;IACvD;IAEA;;;;;;;GAOF,GACE,OAAO6D,SACLx2B,OAAgB,EAChB2yB,aAA4B,EAAE,EACjB;QACb,MAAMlZ,cAAc,IAAIiZ;QACxBjZ,YAAY8T,eAAe,GAAGvtB,QAAQutB,eAAe;QACrD,IAAIvtB,QAAQoQ,MAAM,CAACsb,qBAAqB,GAAG,GACzCjS,YAAYmZ,QAAQ,GAAG5yB,QAAQstB,WAAW,CAAC,EAAE;QAE/CqF,WAAWpxB,OAAO,CAAC,CAACiiB,WAAWhU;YAC7B,MAAMinB,gBAAgB;gBACpBjT,WACEA,aAAa6B,CAAAA,GAAAA,oBAAI,AAAJA,EAAK9hB,MAAM,CAACgvB,qBACrB,OACAlN,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAAC+f;gBAClB3nB,WAAWmE,QAAQstB,WAAW,CAAC9d,MAAK;YACrC;YACDiK,YAAYkZ,UAAU,CAAC1vB,IAAI,CAACwzB;QAC9B;QAEAz2B,QAAQyoB,YAAY,CAAClnB,OAAO,CAACmiB,CAAAA;YAC3B,MAAMzV,OAAOyV,YAAYiK,QAAQ,CAACttB,GAAG,CAACkQ,CAAAA;gBACpC,MAAMqT,SAAS5jB,QAAQstB,WAAW,CAAC/c,QAAQ;gBAC3C,OAAO;oBACLqT;oBACArJ,UACEd,YAAYkZ,UAAU,CAAC93B,IAAI,CACzB07B,CAAAA,SAAUA,OAAO16B,SAAS,CAAC2E,QAAQ,OAAOojB,OAAOpjB,QAAQ,OACtDR,QAAQguB,eAAe,CAACzd;oBAC/Bwa,YAAY/qB,QAAQiuB,iBAAiB,CAAC1d;gBACvC;YACH;YAEAkJ,YAAYgP,YAAY,CAACxlB,IAAI,CAC3B,IAAIuvB,uBAAuB;gBACzBvkB;gBACAgV,WAAWjjB,QAAQstB,WAAW,CAAC5J,YAAYoF,cAAc,CAAC;gBAC1D7Y,MAAMoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAACigB,YAAYzT,IAAI;YACpC;QAEJ;QAEAwJ,YAAYuZ,QAAQ,GAAGhzB;QACvByZ,YAAYwZ,KAAK,GAAGxZ,YAAYkM,MAAM;QAEtC,OAAOlM;IACT;AACF;ACl7BO,MAAMid;IAKX52B,YAAYotB,IAA4B,CAAE;QAAA,IAAA,CAJ1Ca,QAAQ,GAAA,KAAA;QAAA,IAAA,CACRtF,YAAY,GAAA,KAAA;QAAA,IAAA,CACZ8E,eAAe,GAAA,KAAA;QAGb,IAAI,CAACQ,QAAQ,GAAGb,KAAKa,QAAQ;QAC7B,IAAI,CAACtF,YAAY,GAAGyE,KAAKzE,YAAY;QACrC,IAAI,CAAC8E,eAAe,GAAGL,KAAKK,eAAe;IAC7C;IAEA,OAAOoJ,UACL32B,OAAyB,EACzBktB,IAAoB,EACA;QACpB,MAAM,EAAC9c,MAAM,EAAEsd,oBAAoB,EAAEH,eAAAA,EAAgB,GAAGvtB;QAExD,MAAM,EACJ0rB,qBAAqB,EACrBC,yBAAyB,EACzBC,2BAAAA,EACD,GAAGxb;QAEJ,MAAMke,4BACJ5C,wBAAwBC;QAC1BN,OAAOiD,4BAA4B,GAAG;QAEtC,MAAMD,8BACJruB,QAAQioB,iBAAiB,CAACvrB,MAAM,GAChCgvB,wBACAE;QACFP,OAAOgD,+BAA+B,GAAG;QAEzC,MAAMf,cAActtB,QAAQ6tB,cAAc,CAACX;QAC3C,MAAMa,WAAWT,YAAY7nB,GAAG,CAAC;QACjC,IAAIsoB,aAAane,WACf,MAAM,IAAIhQ,MACR;QAIJ,MAAM6oB,eAAyC,EAAE;QACjD,KAAK,MAAMmO,cAAclJ,qBAAsB;YAC7C,MAAMzf,OAAsB,EAAE;YAE9B,KAAK,MAAM4a,YAAY+N,WAAW7N,iBAAiB,CAAE;gBACnD,MAAMnF,SAAS0J,YAAY7nB,GAAG,CAACojB;gBAC/B,IAAIjF,WAAWhU,WACb,MAAM,IAAIhQ,MACR,CAA4CipB,yCAAAA,EAAAA,SAAQ,CACtD;gBAGF,MAAMtO,WAAWsO,WAAW6C;gBAE5B,IAAIX;gBACJ,IAAIxQ,UACFwQ,aAAalC,WAAWyF;qBACnB,IAAIzF,WAAWyE,YAAYrF,iBAAiB,CAACvrB,MAAM,EACxDquB,aACElC,WAAW6C,wBAAwB2C;qBAErCtD,aACElC,WAAWyE,YAAYrF,iBAAiB,CAACvrB,MAAM,GAC/C,oGAAA;gBACA4wB,YAAYpF,sBAAsB,CAAEE,QAAQ,CAAC1rB,MAAM;gBAGvDuR,KAAKhL,IAAI,CAAC;oBACR2gB;oBACArJ,UAAUsO,WAAWzY,OAAOsb,qBAAqB;oBACjDX;gBACF;YACF;YAEA,MAAM9H,YAAYqK,YAAY7nB,GAAG,CAACmxB,WAAW9N,cAAc;YAC3D,IAAI7F,cAAcrT,WAChB,MAAM,IAAIhQ,MACR,CAAA,+CAAA,EAAkDg3B,WAAW9N,cAAc,CAAA,CAC7E;YAGFL,aAAaxlB,IAAI,CACf,IAAIuvB,uBAAuB;gBACzBvP;gBACAhT,MAAMqU,SAASsS,WAAW3mB,IAAI;gBAC9BhC;YACF;QAEJ;QAEA,OAAO,IAAIyoB,mBAAmB;YAC5B3I;YACAtF;YACA8E;QACF;IACF;IAEAsJ,yBAAkC;QAChC,OAAOxJ,QAAQzC,OAAO,CAAC;YACrBmD,UAAU,IAAI,CAACA,QAAQ;YACvBR,iBAAiB,IAAI,CAACA,eAAe;YACrC9E,cAAc,IAAI,CAACA,YAAAA;QACrB;IACF;IAEAqO,mBACE7G,0BAAwD,EAC7C;QACX,OAAOJ,UAAUjF,OAAO,CAAC;YACvBmD,UAAU,IAAI,CAACA,QAAQ;YACvBR,iBAAiB,IAAI,CAACA,eAAe;YACrC9E,cAAc,IAAI,CAACA,YAAY;YAC/BwH;QACF;IACF;AACF;AC7HA;;CAEA,GACO,MAAM8G;IAIX,IAAItJ,UAA8B;QAChC,OAAO,IAAI,CAACztB,OAAO,CAACytB,OAAO;IAC7B;IAEA3tB,YAAYE,OAAyB,EAAE2yB,UAA8B,CAAE;QAAA,IAAA,CAPvEA,UAAU,GAAA,KAAA;QAAA,IAAA,CACV3yB,OAAO,GAAA,KAAA;QAOL,IAAI2yB,eAAe/iB,WAAW;YAC5Byb,OACEsH,WAAWj2B,MAAM,KAAKsD,QAAQoQ,MAAM,CAACsb,qBAAqB,EAC1D;YAEF,IAAI,CAACiH,UAAU,GAAGA;QACpB,OAAO;YACL,MAAMqE,oBAAoB,EAAE;YAC5B,IAAK,IAAIl4B,IAAI,GAAGA,IAAIkB,QAAQoQ,MAAM,CAACsb,qBAAqB,EAAE5sB,IACxDk4B,kBAAkB/zB,IAAI,CAAC,IAAI/E,WAAWupB;YAExC,IAAI,CAACkL,UAAU,GAAGqE;QACpB;QACA,IAAI,CAACh3B,OAAO,GAAGA;IACjB;IAEA/C,YAAwB;QACtB,MAAMk0B,oBAAoB,IAAI,CAACnxB,OAAO,CAAC/C,SAAS;QAEhD,MAAMg6B,0BAA0Bh7B;QAChC4yB,aAAsBoI,yBAAyB,IAAI,CAACtE,UAAU,CAACj2B,MAAM;QAErE,MAAMw6B,oBAAoBhO,cAAaha,MAAM,CAI1C;YACDga,cAAaC,IAAI,CACf8N,wBAAwBv6B,MAAM,EAC9B;YAEFwsB,cAAaoG,GAAG,CACdE,aACA,IAAI,CAACmD,UAAU,CAACj2B,MAAM,EACtB;YAEFwsB,cAAaC,IAAI,CAACgI,kBAAkBz0B,MAAM,EAAE;SAC7C;QAED,MAAMy6B,wBAAwB,IAAIj5B,WAAW;QAC7C,MAAMk5B,8BAA8BF,kBAAkB3zB,MAAM,CAC1D;YACE0zB,yBAAyB,IAAI/4B,WAAW+4B;YACxCtE,YAAY,IAAI,CAACA,UAAU;YAC3BxB;QACD,GACDgG;QAGF,OAAOA,sBAAsBx4B,KAAK,CAAC,GAAGy4B;IACxC;IAEA,OAAOh7B,YAAY+6B,qBAAiC,EAAwB;QAC1E,IAAInK,YAAY;eAAImK;SAAsB;QAE1C,MAAMxE,aAAa,EAAE;QACrB,MAAM0E,mBAAmBxI,aAAsB7B;QAC/C,IAAK,IAAIluB,IAAI,GAAGA,IAAIu4B,kBAAkBv4B,IACpC6zB,WAAW1vB,IAAI,CACb,IAAI/E,WAAW+uB,cAAcD,WAAW,GAAGvF;QAI/C,MAAMznB,UAAUoyB,iBAAiBh2B,WAAW,CAAC,IAAI8B,WAAW8uB;QAC5D,OAAO,IAAI+J,qBAAqB/2B,SAAS2yB;IAC3C;IAEAje,KAAKgF,OAAsB,EAAE;QAC3B,MAAM4d,cAAc,IAAI,CAACt3B,OAAO,CAAC/C,SAAS;QAC1C,MAAMs6B,gBAAgB,IAAI,CAACv3B,OAAO,CAACioB,iBAAiB,CAACtpB,KAAK,CACxD,GACA,IAAI,CAACqB,OAAO,CAACoQ,MAAM,CAACsb,qBACtB;QACA,KAAK,MAAM9R,UAAUF,QAAS;YAC5B,MAAM8d,cAAcD,cAAcl5B,SAAS,CAACulB,CAAAA,SAC1CA,OAAO4B,MAAM,CAAC5L,OAAO/d,SAAS;YAEhCwvB,OACEmM,eAAe,GACf,CAAmC5d,gCAAAA,EAAAA,OAAO/d,SAAS,CAACG,QAAQ,GAAE,CAChE;YACA,IAAI,CAAC22B,UAAU,CAAC6E,YAAY,GAAG9iB,KAAK4iB,aAAa1d,OAAO+I,SAAS;QACnE;IACF;IAEA2S,aAAaz5B,SAAoB,EAAE2nB,SAAqB,EAAE;QACxD6H,OAAO7H,UAAUhd,UAAU,KAAK,IAAI;QACpC,MAAM+wB,gBAAgB,IAAI,CAACv3B,OAAO,CAACioB,iBAAiB,CAACtpB,KAAK,CACxD,GACA,IAAI,CAACqB,OAAO,CAACoQ,MAAM,CAACsb,qBACtB;QACA,MAAM8L,cAAcD,cAAcl5B,SAAS,CAACulB,CAAAA,SAC1CA,OAAO4B,MAAM,CAAC3pB;QAEhBwvB,OACEmM,eAAe,GACf,CAAA,yBAAA,EAA4B37B,UAAUG,QAAQ,GAAE,2CAAA,CAClD;QACA,IAAI,CAAC22B,UAAU,CAAC6E,YAAY,GAAGhU;IACjC;AACF;AC9HA,4EAAA;AACA,kBAAA;AAEA;;CAEA,GACO,MAAMiU,uBAAuB;AAEpC;;CAEA,GACO,MAAMC,yBAAyB;AAEtC;;CAEA,GACO,MAAMC,uBACXF,uBAAuBC;AAEzB;;CAEA,GACO,MAAME,cAAc,OAAOD;ACpBrBE,MAAAA,sBAAsB,IAAI1S,UACrC;AAGW2S,MAAAA,+BAA+B,IAAI3S,UAC9C;AAGW4S,MAAAA,6BAA6B,IAAI5S,UAC5C;AAGW6S,MAAAA,mCAAmC,IAAI7S,UAClD;AAGW8S,MAAAA,qBAAqB,IAAI9S,UACpC;AAGW+S,MAAAA,wBAAwB,IAAI/S,UACvC;AAGWgT,MAAAA,4BAA4B,IAAIhT,UAC3C;AAGWiT,MAAAA,6BAA6B,IAAIjT,UAC5C;AAGWkT,MAAAA,8BAA8B,IAAIlT,UAC7C;AChCK,MAAMmT,6BAA6B14B;IAKxCE,YAAY,EACVy4B,MAAM,EACN/U,SAAS,EACTgV,kBAAkB,EAClBpX,IAAAA,EAMD,CAAE;QACD,MAAMqX,kBAAkBrX,OACpB,CAAA,QAAA,EAAWtX,KAAKC,SAAS,CAACqX,KAAKziB,KAAK,CAAC,MAAM,MAAM,GAAM,EAAA,CAAA,GACvD;QACJ,MAAM+5B,YACJ;QACF,IAAI14B;QACJ,OAAQu4B;YACN,KAAK;gBACHv4B,UACE,CAAewjB,YAAAA,EAAAA,UAAoC,yBAAA,CAAA,GACnD,CAAGgV,EAAAA,mBAAsB,EAAA,CAAA,GACzBC,kBACAC;gBACF;YACF,KAAK;gBACH14B,UACE,CAAiCw4B,8BAAAA,EAAAA,mBAAkB,IAAA,CAAM,GACzDC,kBACAC;gBACF;YACF;gBACE14B,UAAU,CAAA,gBAAA,EAAmB,AAAE0a,CAAAA,CAAAA,IAAaA,CAAAA,EAAG6d,QAAU,CAAA,CAAA;QAE7D;QACA,KAAK,CAACv4B;QAAS,IAAA,CAvCTwjB,SAAS,GAAA,KAAA;QAAA,IAAA,CACTgV,kBAAkB,GAAA,KAAA;QAAA,IAAA,CAClBG,eAAe,GAAA,KAAA;QAuCrB,IAAI,CAACnV,SAAS,GAAGA;QACjB,IAAI,CAACgV,kBAAkB,GAAGA;QAC1B,IAAI,CAACG,eAAe,GAAGvX,OAAOA,OAAOxR;IACvC;IAEA,IAAIgpB,mBAAuD;QACzD,OAAO;YACL54B,SAAS,IAAI,CAACw4B,kBAAkB;YAChCpX,MAAMnlB,MAAMC,OAAO,CAAC,IAAI,CAACy8B,eAAe,IACpC,IAAI,CAACA,eAAe,GACpB/oB;QACL;IACH;IAEA,6CAAA,GACA,IAAIwR,OAA6B;QAC/B,MAAMyX,aAAa,IAAI,CAACF,eAAe;QACvC,IACEE,cAAc,QACd,OAAOA,eAAe,YACtB,UAAUA,YAEV,OAAOjpB;QAET,OAAOipB;IACT;IAEA,MAAMC,QAAQ/D,UAAsB,EAAqB;QACvD,IAAI,CAAC94B,MAAMC,OAAO,CAAC,IAAI,CAACy8B,eAAe,GACrC,IAAI,CAACA,eAAe,GAAG,IAAI7e,QAAQ,CAACC,SAASgf;YAC3ChE,WACG/b,cAAc,CAAC,IAAI,CAACwK,SAAS,EAC7BwV,IAAI,CAACC,CAAAA;gBACJ,IAAIA,MAAMA,GAAGjQ,IAAI,IAAIiQ,GAAGjQ,IAAI,CAACkQ,WAAW,EAAE;oBACxC,MAAM9X,OAAO6X,GAAGjQ,IAAI,CAACkQ,WAAW;oBAChC,IAAI,CAACP,eAAe,GAAGvX;oBACvBrH,QAAQqH;gBACV,OACE2X,OAAO,IAAIn5B,MAAM;YAErB,GACCu5B,KAAK,CAACJ;QACX;QAEF,OAAO,MAAM,IAAI,CAACJ,eAAe;IACnC;AACF;AAEA,oDAAA;AACA,+EAAA;AACO,MAAMS,yBAAyB;IACpCC,wCAAwC;IACxCC,0DAA0D;IAC1DC,kEAAkE;IAClEC,2CAA2C;IAC3CC,sCAAsC;IACtCC,mEAAmE;IACnEC,oCAAoC;IACpCC,mCAAmC;IACnCC,sDAAsD;IACtDC,yDAAyD;IACzDC,yDAAyD;IACzDC,qBAAqB;IACrBC,0DAA0D;IAC1DC,sDAAsD;IACtDC,uDAAuD;IACvDC,oDAAoD;AACtD;AAIO,MAAMC,2BAA2Bz6B;IAGtCE,YACE,EACEw6B,IAAI,EACJt6B,OAAO,EACPiQ,IAAAA,EACuD,EACzDsqB,aAAsB,CACtB;QACA,KAAK,CAACA,iBAAiB,OAAO,CAAA,EAAGA,cAAa,EAAA,EAAKv6B,QAAO,CAAE,GAAGA;QAAS,IAAA,CAV1Es6B,IAAI,GAAA,KAAA;QAAA,IAAA,CACJrqB,IAAI,GAAA,KAAA;QAUF,IAAI,CAACqqB,IAAI,GAAGA;QACZ,IAAI,CAACrqB,IAAI,GAAGA;QACZ,IAAI,CAACpQ,IAAI,GAAG;IACd;AACF;AC7HA;;;;;;;;;;CAUA,GACO,eAAe26B,0BACpBzF,UAAsB,EACtBtb,WAAwB,EACxBC,OAAsB,EACtBvU,OAII;IAEJ,MAAMs1B,cAAct1B,WAAW;QAC7Bu1B,eAAev1B,QAAQu1B,aAAa;QACpCC,qBAAqBx1B,QAAQw1B,mBAAmB,IAAIx1B,QAAQy1B,UAAU;QACtEC,YAAY11B,QAAQ01B,UAAU;QAC9B1H,gBAAgBhuB,QAAQguB,cAAAA;IACzB;IAED,MAAM3P,YAAY,MAAMuR,WAAW1b,eAAe,CAChDI,aACAC,SACA+gB;IAGF,IAAIK;IACJ,IACErhB,YAAY8T,eAAe,IAAI,QAC/B9T,YAAYoZ,oBAAoB,IAAI,MAEpCiI,SAAS,AACP,CAAA,MAAM/F,WAAWzb,kBAAkB,CACjC;QACEyhB,aAAa51B,SAAS41B;QACtBvX,WAAWA;QACX4P,WAAW3Z,YAAY8T,eAAe;QACtCsF,sBAAsBpZ,YAAYoZ,oBAAAA;IACnC,GACD1tB,WAAWA,QAAQy1B,UACrB,CAAA,EACA9/B,KAAK;SACF,IACL2e,YAAYsZ,mBAAmB,IAAI,QACnCtZ,YAAYqZ,SAAS,IAAI,MACzB;QACA,MAAM,EAACO,gBAAAA,EAAiB,GAAG5Z,YAAYqZ,SAAS;QAChD,MAAMkI,qBAAqB3H,iBAAiBplB,IAAI,CAAC,EAAE,CAAC2V,MAAM;QAC1DkX,SAAS,AACP,CAAA,MAAM/F,WAAWzb,kBAAkB,CACjC;YACEyhB,aAAa51B,SAAS41B;YACtB5H,gBAAgB1Z,YAAYsZ,mBAAmB;YAC/CiI;YACAC,YAAYxhB,YAAYqZ,SAAS,CAACrM,KAAK;YACvCjD;QACD,GACDre,WAAWA,QAAQy1B,UACrB,CAAA,EACA9/B,KAAK;IACT,OAAO;QACL,IAAIqK,SAAS41B,eAAe,MAC1BxH,QAAQC,IAAI,CACV;QAKJsH,SAAS,AACP,CAAA,MAAM/F,WAAWzb,kBAAkB,CACjCkK,WACAre,WAAWA,QAAQy1B,UACrB,CAAA,EACA9/B,KAAK;IACT;IAEA,IAAIggC,OAAOlU,GAAG,EAAE;QACd,IAAIpD,aAAa,MACf,MAAM,IAAI8U,qBAAqB;YAC7BC,QAAQ;YACR/U,WAAWA;YACXgV,oBAAoB,CAAY1uB,SAAAA,EAAAA,KAAKC,SAAS,CAAC+wB,QAAO,CAAA,CAAA;QACxD;QAEF,MAAM,IAAIl7B,MACR,CAAA,YAAA,EAAe4jB,UAAS,SAAA,EAAY1Z,KAAKC,SAAS,CAAC+wB,QAAO,CAAA,CAC5D;IACF;IAEA,OAAOtX;AACT;ACzGA,MAAA;AACO,SAAS0X,MAAMC,EAAU;IAC9B,OAAO,IAAIrhB,QAAQC,CAAAA,UAAWqhB,WAAWrhB,SAASohB;AACpD;ACMA;;CAEA,GAQA;;;CAGA,GACO,SAASE,WACd9b,IAAiC,EACjCpQ,MAAY;IAEZ,MAAMmsB,cACJ/b,KAAK2K,MAAM,CAACT,IAAI,IAAI,IAAIlK,KAAK2K,MAAM,CAACT,IAAI,GAAG+F,SAAgBjQ,MAAMpQ;IACnE,MAAMc,OAAO8T,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAACuV;IAC1B,MAAMC,eAAevtB,OAAO0W,MAAM,CAAC;QAAChB,aAAanE,KAAK/P,KAAAA;IAAM,GAAEL;IAC9DoQ,KAAK2K,MAAM,CAAC3mB,MAAM,CAACg4B,cAActrB;IACjC,OAAOA;AACT;AAEA;;;CAGA,GACO,SAASurB,aACdjc,IAAiC,EACjCngB,MAAc;IAEd,IAAI6Q;IACJ,IAAI;QACFA,OAAOsP,KAAK2K,MAAM,CAACzmB,MAAM,CAACrE;IAC3B,EAAC,OAAOwnB,KAAK;QACZ,MAAM,IAAIhnB,MAAM,0BAA0BgnB;IAC5C;IAEA,IAAI3W,KAAKyT,WAAW,KAAKnE,KAAK/P,KAAK,EACjC,MAAM,IAAI5P,MACR,CAAA,gDAAA,EAAmDqQ,KAAKyT,WAAW,CAAA,IAAA,EAAOnE,KAAK/P,KAAK,CAAA,CACtF;IAGF,OAAOS;AACT;ACvDA;;;;CAIA,GACO,MAAMwrB,sBAAsBvS,cAAawS,IAAI,CAAC;AAErD;;;;CAIA,GCJA;;;;CAIA,GACA,MAAMC,qBAAqBzS,cAAaha,MAAM,CAU5C;IACAga,cAAa9gB,GAAG,CAAC;IACjB8gB,cAAa9gB,GAAG,CAAC;IACjBonB,UAAiB;IACjBA,UAAiB;IACjBtG,cAAaha,MAAM,CACjB;QAACusB;KAAoB,EACrB;CAEH;AAEYG,MAAAA,uBAAuBD,mBAAmBlS,IAAAA;AAEvD;;CAEA,GASA;;CAEA,GACO,MAAMoS;IAKX;;GAEF,GACE/7B,YAAYotB,IAAsB,CAAE;QAAA,IAAA,CAPpC4O,gBAAgB,GAAA,KAAA;QAAA,IAAA,CAChBrV,KAAK,GAAA,KAAA;QAAA,IAAA,CACLsV,aAAa,GAAA,KAAA;QAMX,IAAI,CAACD,gBAAgB,GAAG5O,KAAK4O,gBAAgB;QAC7C,IAAI,CAACrV,KAAK,GAAGyG,KAAKzG,KAAK;QACvB,IAAI,CAACsV,aAAa,GAAG7O,KAAK6O,aAAa;IACzC;IAEA;;;;;GAKF,GACE,OAAOC,gBACL58B,MAA2C,EAC7B;QACd,MAAM68B,eAAeN,mBAAmBl4B,MAAM,CAAC6gB,SAASllB,SAAS;QACjE,OAAO,IAAIy8B,aAAa;YACtBC,kBAAkB,IAAI3W,UAAU8W,aAAaH,gBAAgB;YAC7DrV,OAAO,IAAItB,UAAU8W,aAAaxV,KAAK,EAAEjmB,QAAQ;YACjDu7B,eAAeE,aAAaF,aAAAA;QAC9B;IACF;AACF;ACxEA,MAAMG,eAAmBhS,CAAAA;IACvB,MAAMzmB,SAASymB,OAAOzmB,MAAM,CAACyU,IAAI,CAACgS;IAClC,MAAM3mB,SAAS2mB,OAAO3mB,MAAM,CAAC2U,IAAI,CAACgS;IAClC,OAAO;QAACzmB;QAAQF;IAAO;AACzB;AAEA,MAAM44B,SACHz/B,CAAAA,SACAusB,CAAAA;QACC,MAAMiB,SAASf,CAAAA,GAAAA,kBAAI,AAAJA,EAAKzsB,QAAQusB;QAC5B,MAAM,EAAC1lB,MAAM,EAAEE,MAAAA,EAAO,GAAGy4B,aAAahS;QAEtC,MAAMkS,eAAelS;QAErBkS,aAAa34B,MAAM,GAAG,CAACrE,QAAgBC;YACrC,MAAMg9B,MAAM54B,OAAOrE,QAAQC;YAC3B,OAAOi9B,CAAAA,GAAAA,wBAAU,AAAVA,EAAWvY,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC49B;QAC/B;QAEDD,aAAa74B,MAAM,GAAG,CAAC44B,QAAgB/8B,QAAgBC;YACrD,MAAMg9B,MAAME,CAAAA,GAAAA,wBAAU,AAAVA,EAAWJ,QAAQz/B;YAC/B,OAAO6G,OAAO84B,KAAKj9B,QAAQC;QAC5B;QAED,OAAO+8B;IACT;AAEK,MAAM7zB,MAAM4zB,OAAO;ACpB1B;;CAEA,GAcA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAkBA;;CAEA,GAYA;;CAEA,GAgBA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAYA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAcA;;CAEA,GAYA;;CAEA,GAgBA,oDAAA,GAUA,4DAAA,GAgBA;;CAEA,GACO,MAAMK;IACX;;GAEF,GACE18B,aAAc,CAAA;IAEd;;GAEF,GACE,OAAO28B,sBACL/Y,WAAmC,EACZ;QACvB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QAEzC,MAAM0Z,wBAAwBzT,cAAa9gB,GAAG,CAAC;QAC/C,MAAMw0B,YAAYD,sBAAsBl5B,MAAM,CAACigB,YAAYzT,IAAI;QAE/D,IAAIsP;QACJ,KAAK,MAAM,CAACsd,QAAQ3S,OAAO,IAAIlc,OAAOwS,OAAO,CAACsc,4BAC5C,IAAI5S,OAAO1a,KAAK,IAAIotB,WAAW;YAC7Brd,OAAOsd;YACP;QACF;QAGF,IAAI,CAACtd,MACH,MAAM,IAAI3f,MAAM;QAGlB,OAAO2f;IACT;IAEA;;GAEF,GACE,OAAOwd,oBACLrZ,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACiE,QAAQ,EAAE+qB,KAAK,EAAEha,SAAAA,EAAU,GAAGuY,aACnCsB,2BAA2BI,MAAM,EACjCxZ,YAAYzT,IACd;QAEA,OAAO;YACLktB,YAAYzZ,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCwZ,kBAAkB1Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5C1R;YACA+qB;YACAha,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAOoa,eACL3Z,WAAmC,EACP;QAC5B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACiE,QAAAA,EAAS,GAAGspB,aACjBsB,2BAA2BQ,QAAQ,EACnC5Z,YAAYzT,IACd;QAEA,OAAO;YACLktB,YAAYzZ,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtC2Z,UAAU7Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACpC1R;QACD;IACH;IAEA;;GAEF,GACE,OAAOsrB,uBACL9Z,WAAmC,EACC;QACpC,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACiE,QAAQ,EAAE2Q,IAAI,EAAEI,SAAAA,EAAU,GAAGuY,aAClCsB,2BAA2BW,gBAAgB,EAC3C/Z,YAAYzT,IACd;QAEA,OAAO;YACLktB,YAAYzZ,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtC8Z,YAAYha,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtC2Z,UAAU7Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACpC1R;YACA2Q;YACAI,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAO0a,eAAeja,WAAmC,EAAkB;QACzE,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACgvB,KAAAA,EAAM,GAAGzB,aACdsB,2BAA2Bc,QAAQ,EACnCla,YAAYzT,IACd;QAEA,OAAO;YACL4tB,eAAena,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACzCqZ;QACD;IACH;IAEA;;GAEF,GACE,OAAOa,uBACLpa,WAAmC,EACX;QACxB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACxQ,IAAI,EAAEolB,IAAI,EAAEoa,KAAK,EAAEha,SAAAA,EAAU,GAAGuY,aACrCsB,2BAA2BiB,gBAAgB,EAC3Cra,YAAYzT,IACd;QAEA,OAAO;YACL4tB,eAAena,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACzC8Z,YAAY,IAAIvY,UAAU1nB;YAC1BolB;YACAoa;YACAha,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAO+a,aAAata,WAAmC,EAAgB;QACrE,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACgV,SAAAA,EAAU,GAAGuY,aAClBsB,2BAA2BmB,MAAM,EACjCva,YAAYzT,IACd;QAEA,OAAO;YACL4tB,eAAena,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACzCX,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAOib,qBACLxa,WAAmC,EACb;QACtB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACxQ,IAAI,EAAEolB,IAAI,EAAEI,SAAAA,EAAU,GAAGuY,aAC9BsB,2BAA2BqB,cAAc,EACzCza,YAAYzT,IACd;QAEA,OAAO;YACL4tB,eAAena,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACzC8Z,YAAY,IAAIvY,UAAU1nB;YAC1BolB;YACAI,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAOmb,qBACL1a,WAAmC,EACN;QAC7B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACxQ,IAAI,EAAEolB,IAAI,EAAE3Q,QAAQ,EAAE+qB,KAAK,EAAEha,SAAAA,EAAU,GAAGuY,aAC/CsB,2BAA2BuB,cAAc,EACzC3a,YAAYzT,IACd;QAEA,OAAO;YACLktB,YAAYzZ,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCwZ,kBAAkB1Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5C8Z,YAAY,IAAIvY,UAAU1nB;YAC1BolB;YACA3Q;YACA+qB;YACAha,WAAW,IAAIkC,UAAUlC;QAC1B;IACH;IAEA;;GAEF,GACE,OAAOqb,sBACL5a,WAAmC,EACZ;QACvB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACyb,UAAAA,EAAW,GAAG8R,aACnBsB,2BAA2ByB,sBAAsB,EACjD7a,YAAYzT,IACd;QAEA,OAAO;YACLuuB,aAAa9a,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCkY,kBAAkB,IAAI3W,UAAUuE;QACjC;IACH;IAEA;;GAEF,GACE,OAAO+U,mBACL/a,WAAmC,EACf;QACpB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtCutB,aACEsB,2BAA2B4B,mBAAmB,EAC9Chb,YAAYzT,IACd;QAEA,OAAO;YACLuuB,aAAa9a,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QACvC;IACH;IAEA;;GAEF,GACE,OAAO+a,oBACLjb,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACiE,QAAAA,EAAS,GAAGspB,aACjBsB,2BAA2B8B,oBAAoB,EAC/Clb,YAAYzT,IACd;QAEA,OAAO;YACLuuB,aAAa9a,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC2Z,UAAU7Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACpCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5C1R;QACD;IACH;IAEA;;GAEF,GACE,OAAO2sB,qBACLnb,WAAmC,EACb;QACtB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACyb,UAAAA,EAAW,GAAG8R,aACnBsB,2BAA2BgC,qBAAqB,EAChDpb,YAAYzT,IACd;QAEA,OAAO;YACLuuB,aAAa9a,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5Cmb,qBAAqB,IAAI5Z,UAAUuE;QACpC;IACH;IAEA;;GAEF,GACE,OAAOgT,eAAezZ,SAAoB,EAAE;QAC1C,IAAI,CAACA,UAAUuC,MAAM,CAACwZ,cAAc/b,SAAS,GAC3C,MAAM,IAAIrjB,MAAM;IAEpB;IAEA;;GAEF,GACE,OAAOo9B,eAAe/uB,IAAgB,EAAEgxB,cAAsB,EAAE;QAC9D,IAAIhxB,KAAKvR,MAAM,GAAGuiC,gBAChB,MAAM,IAAIr/B,MACR,CAA8BqO,2BAAAA,EAAAA,KAAKvR,MAAM,CAAA,yBAAA,EAA4BuiC,eAAc,CACrF;IAEJ;AACF;AAEA;;CAEA,GAuEA;;;CAGA,GACanC,MAAAA,6BAA6B9uB,OAAOkxB,MAAM,CAIpD;IACDhC,QAAQ;QACN1tB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAuC;YAChEga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaU,IAAI,CAAC;YAClBV,cAAaU,IAAI,CAAC;YAClB4F,UAAiB;SAClB;IACF;IACDyO,QAAQ;QACNzuB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAuC;YAChEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;SAClB;IACF;IACD8N,UAAU;QACR9tB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAyC;YAClEga,cAAa9gB,GAAG,CAAC;YACjBG,IAAI;SACL;IACF;IACD81B,gBAAgB;QACd7uB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAA+C;YACxEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBA,WAAkB;YAClBtG,cAAaU,IAAI,CAAC;YAClBV,cAAaU,IAAI,CAAC;YAClB4F,UAAiB;SAClB;IACF;IACDkP,qBAAqB;QACnBlvB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACpC;IACDw2B,sBAAsB;QACpBpvB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;YAAgB8gB,cAAaU,IAAI,CAAC;SAAY;IACnE;IACD2U,wBAAwB;QACtB/uB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;YAAgBonB,UAAiB;SAAc;IACpE;IACDsP,uBAAuB;QACrBtvB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;YAAgBonB,UAAiB;SAAc;IACpE;IACDoO,UAAU;QACRpuB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAyC;YAClEga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaU,IAAI,CAAC;SACnB;IACF;IACDmU,kBAAkB;QAChBvuB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CACzB;YACEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBA,WAAkB;YAClBtG,cAAaU,IAAI,CAAC;YAClB4F,UAAiB;SAErB;IACD;IACD2O,gBAAgB;QACd3uB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAA+C;YACxEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBA,WAAkB;YAClBA,UAAiB;SAClB;IACF;IACDiO,kBAAkB;QAChBjuB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CACzB;YACEga,cAAa9gB,GAAG,CAAC;YACjBG,IAAI;YACJinB,WAAkB;YAClBA,UAAiB;SAErB;IACD;IACD2P,qBAAqB;QACnB3vB,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACrC;AACF;AAEA;;CAEA,GACO,MAAM42B;IACX;;GAEF,GACEl/B,aAAc,CAAA;IAEd;;GAEF,GAKE;;GAEF,GACE,OAAOs/B,cAAcjf,MAA2B,EAA0B;QACxE,MAAMZ,OAAOud,2BAA2BI,MAAM;QAC9C,MAAMjtB,OAAOorB,WAAW9b,MAAM;YAC5BrN,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAO9c,OAAO8c,KAAK;YACnBha,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;QAC/C;QAEA,OAAO,IAAIkO,uBAAuB;YAChCvkB,MAAM;gBACJ;oBAAC2V,QAAQzD,OAAOgd,UAAU;oBAAE5iB,UAAU;oBAAMwQ,YAAY;gBAAI;gBAC5D;oBAACnH,QAAQzD,OAAOid,gBAAgB;oBAAE7iB,UAAU;oBAAMwQ,YAAY;gBAAI;aACnE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOovB,SACLlf,MAA+C,EACvB;QACxB,IAAIlQ;QACJ,IAAIhC;QACJ,IAAI,gBAAgBkS,QAAQ;YAC1B,MAAMZ,OAAOud,2BAA2BW,gBAAgB;YACxDxtB,OAAOorB,WAAW9b,MAAM;gBACtBrN,UAAUvU,OAAOwiB,OAAOjO,QAAQ;gBAChC2Q,MAAM1C,OAAO0C,IAAI;gBACjBI,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;YAC/C;YACArW,OAAO;gBACL;oBAAC2V,QAAQzD,OAAOgd,UAAU;oBAAE5iB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC7D;oBAACnH,QAAQzD,OAAOud,UAAU;oBAAEnjB,UAAU;oBAAMwQ,YAAY;gBAAK;gBAC7D;oBAACnH,QAAQzD,OAAOod,QAAQ;oBAAEhjB,UAAU;oBAAOwQ,YAAY;gBAAI;aAC5D;QACH,OAAO;YACL,MAAMxL,OAAOud,2BAA2BQ,QAAQ;YAChDrtB,OAAOorB,WAAW9b,MAAM;gBAACrN,UAAUvU,OAAOwiB,OAAOjO,QAAQ;YAAC;YAC1DjE,OAAO;gBACL;oBAAC2V,QAAQzD,OAAOgd,UAAU;oBAAE5iB,UAAU;oBAAMwQ,YAAY;gBAAI;gBAC5D;oBAACnH,QAAQzD,OAAOod,QAAQ;oBAAEhjB,UAAU;oBAAOwQ,YAAY;gBAAI;aAC5D;QACH;QAEA,OAAO,IAAIyH,uBAAuB;YAChCvkB;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOyU,OACLvE,MAA2C,EACnB;QACxB,IAAIlQ;QACJ,IAAIhC;QACJ,IAAI,gBAAgBkS,QAAQ;YAC1B,MAAMZ,OAAOud,2BAA2BqB,cAAc;YACtDluB,OAAOorB,WAAW9b,MAAM;gBACtB9hB,MAAM6mB,SAASnE,OAAOud,UAAU,CAACpZ,QAAQ;gBACzCzB,MAAM1C,OAAO0C,IAAI;gBACjBI,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;YAC/C;YACArW,OAAO;gBACL;oBAAC2V,QAAQzD,OAAO0d,aAAa;oBAAEtjB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAChE;oBAACnH,QAAQzD,OAAOud,UAAU;oBAAEnjB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC9D;QACH,OAAO;YACL,MAAMxL,OAAOud,2BAA2BmB,MAAM;YAC9ChuB,OAAOorB,WAAW9b,MAAM;gBACtB0D,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;YAC/C;YACArW,OAAO;gBAAC;oBAAC2V,QAAQzD,OAAO0d,aAAa;oBAAEtjB,UAAU;oBAAMwQ,YAAY;gBAAI;aAAE;QAC3E;QAEA,OAAO,IAAIyH,uBAAuB;YAChCvkB;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;GAGF,GACE,OAAOqvB,sBACLnf,MAAmC,EACX;QACxB,MAAMZ,OAAOud,2BAA2BuB,cAAc;QACtD,MAAMpuB,OAAOorB,WAAW9b,MAAM;YAC5B9hB,MAAM6mB,SAASnE,OAAOud,UAAU,CAACpZ,QAAQ;YACzCzB,MAAM1C,OAAO0C,IAAI;YACjB3Q,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAO9c,OAAO8c,KAAK;YACnBha,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;QAC/C;QACA,IAAIrW,OAAO;YACT;gBAAC2V,QAAQzD,OAAOgd,UAAU;gBAAE5iB,UAAU;gBAAMwQ,YAAY;YAAI;YAC5D;gBAACnH,QAAQzD,OAAOid,gBAAgB;gBAAE7iB,UAAU;gBAAOwQ,YAAY;YAAI;SACpE;QACD,IAAI5K,OAAOud,UAAU,IAAIvd,OAAOgd,UAAU,EACxClvB,KAAKhL,IAAI,CAAC;YACR2gB,QAAQzD,OAAOud,UAAU;YACzBnjB,UAAU;YACVwQ,YAAY;QACd;QAGF,OAAO,IAAIyH,uBAAuB;YAChCvkB;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOsvB,mBACLpf,MAAmE,EACtD;QACb,MAAM1G,cAAc,IAAIiZ;QACxB,IAAI,gBAAgBvS,UAAU,UAAUA,QACtC1G,YAAY1K,GAAG,CACbiwB,cAAcM,qBAAqB,CAAC;YAClCnC,YAAYhd,OAAOgd,UAAU;YAC7BC,kBAAkBjd,OAAOqe,WAAW;YACpCd,YAAYvd,OAAOud,UAAU;YAC7B7a,MAAM1C,OAAO0C,IAAI;YACjB3Q,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAOrB;YACP3Y,WAAW,IAAI,CAACA,SAAAA;QAClB;aAGFxJ,YAAY1K,GAAG,CACbiwB,cAAcI,aAAa,CAAC;YAC1BjC,YAAYhd,OAAOgd,UAAU;YAC7BC,kBAAkBjd,OAAOqe,WAAW;YACpCtsB,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAOrB;YACP3Y,WAAW,IAAI,CAACA,SAAAA;QAClB;QAIJ,MAAMuc,aAAa;YACjBhB,aAAare,OAAOqe,WAAW;YAC/B1C,kBAAkB3b,OAAO2b,gBAAAA;QAC1B;QAEDriB,YAAY1K,GAAG,CAAC,IAAI,CAAC0wB,eAAe,CAACD;QACrC,OAAO/lB;IACT;IAEA;;GAEF,GACE,OAAOgmB,gBACLtf,MAA6B,EACL;QACxB,MAAMZ,OAAOud,2BAA2ByB,sBAAsB;QAC9D,MAAMtuB,OAAOorB,WAAW9b,MAAM;YAC5BmK,YAAYpF,SAASnE,OAAO2b,gBAAgB,CAACxX,QAAQ;QACvD;QACA,MAAMob,kBAAkB;YACtBzxB,MAAM;gBACJ;oBAAC2V,QAAQzD,OAAOqe,WAAW;oBAAEjkB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC9D;oBACEnH,QAAQoU;oBACRzd,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBAACnH,QAAQqU;oBAAoB1d,UAAU;oBAAOwQ,YAAY;gBAAK;aAChE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACD;QACD,OAAO,IAAIuiB,uBAAuBkN;IACpC;IAEA;;GAEF,GACE,OAAOC,aAAaxf,MAA0B,EAA0B;QACtE,MAAMZ,OAAOud,2BAA2B4B,mBAAmB;QAC3D,MAAMzuB,OAAOorB,WAAW9b;QACxB,MAAMmgB,kBAAkB;YACtBzxB,MAAM;gBACJ;oBAAC2V,QAAQzD,OAAOqe,WAAW;oBAAEjkB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC9D;oBACEnH,QAAQoU;oBACRzd,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBAACnH,QAAQzD,OAAO2b,gBAAgB;oBAAEvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aACpE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACD;QACD,OAAO,IAAIuiB,uBAAuBkN;IACpC;IAEA;;GAEF,GACE,OAAOE,cAAczf,MAA2B,EAA0B;QACxE,MAAMZ,OAAOud,2BAA2B8B,oBAAoB;QAC5D,MAAM3uB,OAAOorB,WAAW9b,MAAM;YAACrN,UAAUiO,OAAOjO,QAAAA;QAAQ;QAExD,OAAO,IAAIsgB,uBAAuB;YAChCvkB,MAAM;gBACJ;oBAAC2V,QAAQzD,OAAOqe,WAAW;oBAAEjkB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC9D;oBAACnH,QAAQzD,OAAOod,QAAQ;oBAAEhjB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC3D;oBACEnH,QAAQoU;oBACRzd,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBACEnH,QAAQqU;oBACR1d,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBAACnH,QAAQzD,OAAO2b,gBAAgB;oBAAEvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aACpE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;GAGF,GACE,OAAO4vB,eAAe1f,MAA4B,EAA0B;QAC1E,MAAMZ,OAAOud,2BAA2BgC,qBAAqB;QAC7D,MAAM7uB,OAAOorB,WAAW9b,MAAM;YAC5BmK,YAAYpF,SAASnE,OAAO4e,mBAAmB,CAACza,QAAQ;QAC1D;QAEA,OAAO,IAAIkO,uBAAuB;YAChCvkB,MAAM;gBACJ;oBAAC2V,QAAQzD,OAAOqe,WAAW;oBAAEjkB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC9D;oBAACnH,QAAQzD,OAAO2b,gBAAgB;oBAAEvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aACpE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAO6vB,SACL3f,MAA+C,EACvB;QACxB,IAAIlQ;QACJ,IAAIhC;QACJ,IAAI,gBAAgBkS,QAAQ;YAC1B,MAAMZ,OAAOud,2BAA2BiB,gBAAgB;YACxD9tB,OAAOorB,WAAW9b,MAAM;gBACtB9hB,MAAM6mB,SAASnE,OAAOud,UAAU,CAACpZ,QAAQ;gBACzCzB,MAAM1C,OAAO0C,IAAI;gBACjBoa,OAAO9c,OAAO8c,KAAK;gBACnBha,WAAWqB,SAASnE,OAAO8C,SAAS,CAACqB,QAAQ;YAC/C;YACArW,OAAO;gBACL;oBAAC2V,QAAQzD,OAAO0d,aAAa;oBAAEtjB,UAAU;oBAAOwQ,YAAY;gBAAI;gBAChE;oBAACnH,QAAQzD,OAAOud,UAAU;oBAAEnjB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC9D;QACH,OAAO;YACL,MAAMxL,OAAOud,2BAA2Bc,QAAQ;YAChD3tB,OAAOorB,WAAW9b,MAAM;gBACtB0d,OAAO9c,OAAO8c,KAAAA;YAChB;YACAhvB,OAAO;gBAAC;oBAAC2V,QAAQzD,OAAO0d,aAAa;oBAAEtjB,UAAU;oBAAMwQ,YAAY;gBAAI;aAAE;QAC3E;QAEA,OAAO,IAAIyH,uBAAuB;YAChCvkB;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;AACF;AApTa+uB,cASJ/b,SAAS,GAAc,IAAIkC,UAChC;AC/tBJ,0EAAA;AACA,iCAAA;AACA,EAAA;AACA,qEAAA;AACA,qBAAA;AACA,MAAM4a,aAAaxY,mBAAmB;AAEtC;;CAEA,GACO,MAAMyY;IACX;;GAEF,GACElgC,aAAc,CAAA;IAEd;;GAEF,GAGE;;;;;GAKF,GACE,OAAOmgC,oBAAoBhR,UAAkB,EAAU;QACrD,OACE,IAAI,8DAAA;QACHluB,CAAAA,KAAKC,IAAI,CAACiuB,aAAa+Q,OAAOjlB,SAAS,IACtC,IAAI,iCAAA;QACJ,EAAA,mCAAA;QAAA;IAEN;IAEA;;;;;;;;;GASF,GACE,aAAamlB,KACXnL,UAAsB,EACtBve,KAAa,EACb2K,OAAe,EACf8B,SAAoB,EACpBhT,IAAyC,EACvB;QAClB;YACE,MAAMkwB,gBAAgB,MAAMpL,WAAWqL,iCAAiC,CACtEnwB,KAAKvT,MACP;YAEA,qEAAA;YACA,MAAM2jC,cAAc,MAAMtL,WAAWuL,cAAc,CACjDnf,QAAQtlB,SAAS,EACjB;YAGF,IAAI4d,cAAkC;YACtC,IAAI4mB,gBAAgB,MAAM;gBACxB,IAAIA,YAAYE,UAAU,EAAE;oBAC1BhN,QAAQ/2B,KAAK,CAAC;oBACd,OAAO;gBACT;gBAEA,IAAI6jC,YAAYpwB,IAAI,CAACvT,MAAM,KAAKuT,KAAKvT,MAAM,EAAE;oBAC3C+c,cAAcA,eAAe,IAAIiZ;oBACjCjZ,YAAY1K,GAAG,CACbiwB,cAAcc,QAAQ,CAAC;wBACrBjC,eAAe1c,QAAQtlB,SAAS;wBAChCohC,OAAOhtB,KAAKvT,MAAAA;oBACd;gBAEJ;gBAEA,IAAI,CAAC2jC,YAAYG,KAAK,CAAChb,MAAM,CAACvC,YAAY;oBACxCxJ,cAAcA,eAAe,IAAIiZ;oBACjCjZ,YAAY1K,GAAG,CACbiwB,cAActa,MAAM,CAAC;wBACnBmZ,eAAe1c,QAAQtlB,SAAS;wBAChConB;oBACF;gBAEJ;gBAEA,IAAIod,YAAYnuB,QAAQ,GAAGiuB,eAAe;oBACxC1mB,cAAcA,eAAe,IAAIiZ;oBACjCjZ,YAAY1K,GAAG,CACbiwB,cAAcK,QAAQ,CAAC;wBACrBlC,YAAY3mB,MAAM3a,SAAS;wBAC3B0hC,UAAUpc,QAAQtlB,SAAS;wBAC3BqW,UAAUiuB,gBAAgBE,YAAYnuB,QAAAA;oBACxC;gBAEJ;YACF,OACEuH,cAAc,IAAIiZ,cAAc3jB,GAAG,CACjCiwB,cAAcI,aAAa,CAAC;gBAC1BjC,YAAY3mB,MAAM3a,SAAS;gBAC3BuhC,kBAAkBjc,QAAQtlB,SAAS;gBACnCqW,UAAUiuB,gBAAgB,IAAIA,gBAAgB;gBAC9ClD,OAAOhtB,KAAKvT,MAAM;gBAClBumB;YACF;YAIJ,8DAAA;YACA,+CAAA;YACA,IAAIxJ,gBAAgB,MAClB,MAAM+gB,0BACJzF,YACAtb,aACA;gBAACjD;gBAAO2K;aAAQ,EAChB;gBACEyZ,YAAY;YACd;QAGN;QAEA,MAAM6F,aAAavX,cAAaha,MAAM,CAQpC;YACAga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaoG,GAAG,CACdpG,cAAaphB,EAAE,CAAC,SAChBohB,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KACxC;SAEH;QAED,MAAM2S,YAAYilB,OAAOjlB,SAAS;QAClC,IAAI1b,SAAS;QACb,IAAIiH,QAAQ2J;QACZ,IAAI6G,eAAe,EAAE;QACrB,MAAOxQ,MAAM5J,MAAM,GAAG,EAAG;YACvB,MAAMM,QAAQsJ,MAAM3H,KAAK,CAAC,GAAGoc;YAC7B,MAAM9K,OAAO8T,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAChL,YAAY;YACtC0lB,WAAWl9B,MAAM,CACf;gBACEmgB,aAAa;gBAAG,mBAAA;gBAChBrkB;gBACArC,OAAOA;gBACP0jC,aAAa;gBACbC,oBAAoB;YACrB,GACD1wB;YAGF,MAAMwJ,cAAc,IAAIiZ,cAAc3jB,GAAG,CAAC;gBACxCd,MAAM;oBAAC;wBAAC2V,QAAQzC,QAAQtlB,SAAS;wBAAE0e,UAAU;wBAAMwQ,YAAY;oBAAI;iBAAE;gBACrE9H;gBACAhT;YACF;YACA6G,aAAa7T,IAAI,CACfu3B,0BAA0BzF,YAAYtb,aAAa;gBAACjD;gBAAO2K;aAAQ,EAAE;gBACnEyZ,YAAY;YACd;YAGF,gEAAA;YACA,IAAI7F,WAAW6L,YAAY,CAAChyB,QAAQ,CAAC,eAAe;gBAClD,MAAMiyB,sBAAsB;gBAC5B,MAAM3F,MAAM,OAAO2F;YACrB;YAEAxhC,UAAU0b;YACVzU,QAAQA,MAAM3H,KAAK,CAACoc;QACtB;QACA,MAAMjB,QAAQnP,GAAG,CAACmM;QAElB,8DAAA;QACA;YACE,MAAM2pB,aAAavX,cAAaha,MAAM,CAAwB;gBAC5Dga,cAAa9gB,GAAG,CAAC;aAClB;YAED,MAAM6H,OAAO8T,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAAC0a,WAAWhX,IAAI;YACzCgX,WAAWl9B,MAAM,CACf;gBACEmgB,aAAa,EAAbA,uBAAAA;YACD,GACDzT;YAGF,MAAMwJ,cAAc,IAAIiZ,cAAc3jB,GAAG,CAAC;gBACxCd,MAAM;oBACJ;wBAAC2V,QAAQzC,QAAQtlB,SAAS;wBAAE0e,UAAU;wBAAMwQ,YAAY;oBAAI;oBAC5D;wBAACnH,QAAQqU;wBAAoB1d,UAAU;wBAAOwQ,YAAY;oBAAK;iBAChE;gBACD9H;gBACAhT;YACF;YACA,MAAM6wB,mBAAmB;YACzB,MAAMC,oBAAoB,MAAMhM,WAAW1b,eAAe,CACxDI,aACA;gBAACjD;gBAAO2K;aAAQ,EAChB;gBAACwZ,qBAAqBmG;YAAgB;YAExC,MAAM,EAAC7e,OAAO,EAAEnnB,KAAAA,EAAM,GAAG,MAAMi6B,WAAWzb,kBAAkB,CAC1D;gBACEkK,WAAWud;gBACXlO,sBAAsBpZ,YAAYoZ,oBAAqB;gBACvDO,WAAW3Z,YAAY8T,eAAAA;YACxB,GACDuT;YAEF,IAAIhmC,MAAM8rB,GAAG,EACX,MAAM,IAAIhnB,MACR,CAAA,YAAA,EAAemhC,kBAAiB,SAAA,EAAYj3B,KAAKC,SAAS,CAACjP,OAAM,CAAA,CACnE;YAEF,+EAAA;YACA,uDAAA;YACA,MACE,KADF,4CAAA;aAEE;gBACA,IAAI;oBACF,MAAMkmC,cAAc,MAAMjM,WAAWjc,OAAO,CAAC;wBAC3C8hB,YAAYkG;oBACd;oBACA,IAAIE,cAAc/e,QAAQgf,IAAI,EAC5B;gBAEJ,EAAE,OAAM;gBACN,SAAA,GAAA;gBAEF,MAAM,IAAInnB,QAAQC,CAAAA,UAChBqhB,WAAWrhB,SAAShZ,KAAKmgC,KAAK,CAACtJ,cAAc;YAEjD;QACF;QAEA,UAAA;QACA,OAAO;IACT;AACF;AAlPaoI,OASJjlB,SAAS,GAAWglB;AC1B7B;;CAEA,GACaoB,MAAAA,wBAAwB,IAAIhc,UACvC;AAGF;;;;CAIA,GACO,MAAMic;IACX;;;;;GAKF,GACE,OAAOnB,oBAAoBhR,UAAkB,EAAU;QACrD,OAAO+Q,OAAOC,mBAAmB,CAAChR;IACpC;IAEA;;;;;;;;;GASF,GACE,OAAOiR,KACLnL,UAAsB,EACtBve,KAAa,EACb2K,OAAe,EACfkgB,GAAwC,EACxCC,eAA0B,EACR;QAClB,OAAOtB,OAAOE,IAAI,CAACnL,YAAYve,OAAO2K,SAASmgB,iBAAiBD;IAClE;AACF;A,S,wB,C;I,O,K,E,U,I,O,S,C,c,C,I,C,G,a,C,C,U,G;A;ACjDA,IAAI,cAAc,OAAO,SAAS,CAAC,QAAQ;AAC3C,IAAI,UAAU,OAAO,IAAI,IAAI,SAAS,GAAG;IACvC,IAAI,OAAO,EAAE;IACb,IAAK,IAAI,QAAQ,IAChB,KAAK,IAAI,CAAC;IAEX,OAAO;AACT;AAEA,SAAS,UAAU,GAAG,EAAE,WAAW;IAClC,IAAI,GAAG,KAAK,KAAK,MAAM,KAAK,SAAS;IACrC,IAAI,QAAQ,MACX,OAAO;IAER,IAAI,QAAQ,OACX,OAAO;IAER,OAAQ,OAAO;QACd,KAAK;YACJ,IAAI,QAAQ,MACX,OAAO;iBACD,IAAI,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,KAAK,YAC9C,OAAO,UAAU,IAAI,MAAM,IAAI;iBACzB;gBACN,QAAQ,YAAY,IAAI,CAAC;gBACzB,IAAI,UAAU,kBAAkB;oBAC/B,MAAM;oBACN,MAAM,IAAI,MAAM,GAAG;oBACnB,IAAI,IAAI,GAAG,IAAI,KAAK,IACnB,OAAO,UAAU,GAAG,CAAC,EAAE,EAAE,QAAQ;oBAElC,IAAI,MAAM,IACT,OAAO,UAAU,GAAG,CAAC,EAAE,EAAE;oBAE1B,OAAO,MAAM;gBAClB,OAAW,IAAI,UAAU,mBAAmB;oBAC5C,sBAAA;oBACK,OAAO,QAAQ,KAAK,IAAI;oBACxB,MAAM,KAAK,MAAM;oBACjB,MAAM;oBACN,IAAI;oBACJ,MAAO,IAAI,IAAK;wBACf,MAAM,IAAI,CAAC,EAAE;wBACb,UAAU,UAAU,GAAG,CAAC,IAAI,EAAE;wBAC9B,IAAI,YAAY,WAAW;4BAC1B,IAAI,KACH,OAAO;4BAER,OAAO,KAAK,SAAS,CAAC,OAAO,MAAM;wBAC1C;wBACM;oBACN;oBACK,OAAO,MAAM,MAAM;gBACxB,OACK,OAAO,KAAK,SAAS,CAAC;YAE3B;QACE,KAAK;QACL,KAAK;YACJ,OAAO,cAAc,OAAO;QAC7B,KAAK;YACJ,OAAO,KAAK,SAAS,CAAC;QACvB;YACC,OAAO,SAAS,OAAO,MAAM;IAChC;AACA;AAEA,IAAA,sBAAiB,SAAS,GAAG;IAC5B,IAAI,YAAY,UAAU,KAAK;IAC/B,IAAI,cAAc,WACjB,OAAO,KAAI;AAEb;A,I,wB,W,G,wB;ACxEA,MAAME,yBAAyB;AAE/B,6EAAA;AACA,SAASC,cAAcliC,CAAS;IAC9B,IAAIkiC,gBAAgB;IACpB,MAAOliC,IAAI,EAAG;QACZA,KAAK;QACLkiC;IACF;IACA,OAAOA;AACT;AAEA,+DAAA;AACA,SAASC,eAAeniC,CAAS;IAC/B,IAAIA,MAAM,GAAG,OAAO;IACpBA;IACAA,KAAKA,KAAK;IACVA,KAAKA,KAAK;IACVA,KAAKA,KAAK;IACVA,KAAKA,KAAK;IACVA,KAAKA,KAAK;IACVA,KAAKA,KAAK;IACV,OAAOA,IAAI;AACb;AAEA;;;;CAIA,GACO,MAAMoiC;IAYX5hC,YACE6hC,aAAqB,EACrBC,wBAAgC,EAChCC,MAAe,EACfC,gBAAwB,EACxBC,eAAuB,CACvB;QAjBF,8CAAA,GAAA,IAAA,CACOJ,aAAa,GAAA,KAAA;QACpB,mGAAA,GAAA,IAAA,CACOC,wBAAwB,GAAA,KAAA;QAC/B,kDAAA,GAAA,IAAA,CACOC,MAAM,GAAA,KAAA;QACb,+CAAA,GAAA,IAAA,CACOC,gBAAgB,GAAA,KAAA;QACvB,yCAAA,GAAA,IAAA,CACOC,eAAe,GAAA,KAAA;QASpB,IAAI,CAACJ,aAAa,GAAGA;QACrB,IAAI,CAACC,wBAAwB,GAAGA;QAChC,IAAI,CAACC,MAAM,GAAGA;QACd,IAAI,CAACC,gBAAgB,GAAGA;QACxB,IAAI,CAACC,eAAe,GAAGA;IACzB;IAEAC,SAASf,IAAY,EAAU;QAC7B,OAAO,IAAI,CAACgB,oBAAoB,CAAChB,KAAK,CAAC,EAAE;IAC3C;IAEAgB,qBAAqBhB,IAAY,EAAoB;QACnD,IAAIA,OAAO,IAAI,CAACc,eAAe,EAAE;YAC/B,MAAMG,QACJV,cAAcC,eAAeR,OAAOM,yBAAyB,MAC7DC,cAAcD,0BACd;YAEF,MAAMY,WAAW,IAAI,CAACC,eAAe,CAACF;YACtC,MAAMG,YAAYpB,OAAQkB,CAAAA,WAAWZ,sBAAAA;YACrC,OAAO;gBAACW;gBAAOG;aAAU;QAC3B,OAAO;YACL,MAAMC,kBAAkBrB,OAAO,IAAI,CAACc,eAAe;YACnD,MAAMQ,mBAAmBxhC,KAAKma,KAAK,CAAConB,kBAAkB,IAAI,CAACX,aAAa;YACxE,MAAMO,QAAQ,IAAI,CAACJ,gBAAgB,GAAGS;YACtC,MAAMF,YAAYC,kBAAkB,IAAI,CAACX,aAAa;YACtD,OAAO;gBAACO;gBAAOG;aAAU;QAC3B;IACF;IAEAG,oBAAoBN,KAAa,EAAU;QACzC,IAAIA,SAAS,IAAI,CAACJ,gBAAgB,EAChC,OAAO,AAAC/gC,CAAAA,KAAK0hC,GAAG,CAAC,GAAGP,SAAS,CAAA,IAAKX;aAElC,OACE,AAACW,CAAAA,QAAQ,IAAI,CAACJ,gBAAgB,AAAhBA,IAAoB,IAAI,CAACH,aAAa,GACpD,IAAI,CAACI,eAAe;IAG1B;IAEAW,mBAAmBR,KAAa,EAAU;QACxC,OAAO,IAAI,CAACM,mBAAmB,CAACN,SAAS,IAAI,CAACE,eAAe,CAACF,SAAS;IACzE;IAEAE,gBAAgBF,KAAa,EAAE;QAC7B,IAAIA,QAAQ,IAAI,CAACJ,gBAAgB,EAC/B,OAAO/gC,KAAK0hC,GAAG,CAAC,GAAGP,QAAQV,cAAcD;aAEzC,OAAO,IAAI,CAACI,aAAa;IAE7B;AACF;AClGA,IAAA,YAAegB,WAAWC,KAAK;ACYhB,MAAMC,2BAA2BC,CAAAA,GAAAA,yBAAwB,AAAxBA;IAE9ChjC,YACE4mB,OAAgB,EAChBvhB,OAA+D,EAC/D49B,mBAGW,CACX;QACA,MAAMC,mBAAoBlkB,CAAAA;YACxB,MAAMnI,MAAMssB,CAAAA,GAAAA,mCAAS,AAATA,EAAUnkB,KAAK;gBACzBokB,aAAa;gBACbC,gBAAgB;gBAChBC,WAAW;gBACXC,oBAAoB;gBACpB,GAAGl+B,OAAAA;YACL;YACA,IAAI,YAAYwR,KACd,IAAI,CAAC2sB,gBAAgB,GAAG3sB,IAAI4sB,MAE3B;iBAED,IAAI,CAACD,gBAAgB,GAAG3sB;YAE1B,OAAOA;QACR;QACD,KAAK,CAACqsB,kBAAkBtc,SAASvhB,SAAS49B;QAAqB,IAAA,CA1BzDO,gBAAgB,GAAA,KAAA;IA2BxB;IACAlqB,KACE,GAAG8T,IAAkD,EACP;QAC9C,MAAMsW,aAAa,IAAI,CAACF,gBAAgB,EAAEE;QAC1C,IAAIA,eAAe,EAAC,kBAAA,KAClB,OAAO,KAAK,CAACpqB,QAAQ8T;QAEvB,OAAOpT,QAAQif,MAAM,CACnB,IAAIn5B,MACF,sCACEstB,IAAI,CAAC,EAAE,GACP,uEACAsW,aACA;IAGR;IACAC,OACE,GAAGvW,IAAoD,EACP;QAChD,MAAMsW,aAAa,IAAI,CAACF,gBAAgB,EAAEE;QAC1C,IAAIA,eAAe,EAAC,kBAAA,KAClB,OAAO,KAAK,CAACC,UAAUvW;QAEzB,OAAOpT,QAAQif,MAAM,CACnB,IAAIn5B,MACF,4CACEstB,IAAI,CAAC,EAAE,GACP,uEACAsW,aACA;IAGR;AACF;ACxEA;;CAEA,GAQA;;;CAGA,GACO,SAAShI,WACdjc,IAAoC,EACpCtP,IAAgB;IAEhB,IAAImV;IACJ,IAAI;QACFA,UAAU7F,KAAK2K,MAAM,CAACzmB,MAAM,CAACwM;IAC9B,EAAC,OAAO2W,KAAK;QACZ,MAAM,IAAIhnB,MAAM,0BAA0BgnB;IAC5C;IAEA,IAAIxB,QAAQwX,SAAS,KAAKrd,KAAK/P,KAAK,EAClC,MAAM,IAAI5P,MACR,CAAA,4CAAA,EAA+CwlB,QAAQwX,SAAS,CAAA,IAAA,EAAOrd,KAAK/P,KAAK,CAAA,CACnF;IAGF,OAAO4V;AACT;ACjBA,gDAAA;AACA,MAAMse,yBAAyB;AAExB,MAAMC;IAIX7jC,YAAYotB,IAAmC,CAAE;QAAA,IAAA,CAHjDnxB,GAAG,GAAA,KAAA;QAAA,IAAA,CACHowB,KAAK,GAAA,KAAA;QAGH,IAAI,CAACpwB,GAAG,GAAGmxB,KAAKnxB,GAAG;QACnB,IAAI,CAACowB,KAAK,GAAGe,KAAKf,KAAK;IACzB;IAEAyX,WAAoB;QAClB,MAAMC,UAAUlmC,OAAO;QACvB,OAAO,IAAI,CAACwuB,KAAK,CAAC2X,gBAAgB,KAAKD;IACzC;IAEA,OAAOznC,YAAY2nC,WAAuB,EAA2B;QACnE,MAAM/a,OAAOwS,WAAWwI,uBAAuBD;QAE/C,MAAME,yBAAyBF,YAAYrnC,MAAM,GAAGgnC;QACpDrY,OAAO4Y,0BAA0B,GAAG;QACpC5Y,OAAO4Y,yBAAyB,OAAO,GAAG;QAE1C,MAAMC,yBAAyBD,yBAAyB;QACxD,MAAM,EAAC7X,SAAAA,EAAU,GAAGlD,cAAaha,MAAM,CAAiC;YACtEga,cAAaoG,GAAG,CAACE,aAAoB0U,wBAAwB;SAC9D,EAAEzgC,MAAM,CAACsgC,YAAYplC,KAAK,CAAC+kC;QAE5B,OAAO;YACLI,kBAAkB9a,KAAK8a,gBAAgB;YACvCK,kBAAkBnb,KAAKmb,gBAAgB;YACvCC,4BAA4Bpb,KAAKqb,sBAAsB;YACvDC,WACEtb,KAAKsb,SAAS,CAAC5nC,MAAM,KAAK,IACtB,IAAIyoB,UAAU6D,KAAKsb,SAAS,CAAC,EAAE,IAC/B10B;YACNwc,WAAWA,UAAU/rB,GAAG,CAACqmB,CAAAA,UAAW,IAAIvB,UAAUuB;QACnD;IACH;AACF;AAEA,MAAMsd,wBAAwB;IAC5Bx0B,OAAO;IACP0a,QAAQhB,cAAaha,MAAM,CAMxB;QACDga,cAAa9gB,GAAG,CAAC;QACjBG,IAAI;QACJ2gB,cAAawS,IAAI,CAAC;QAClBxS,cAAaphB,EAAE,CAAC;QAChBohB,cAAaphB,EAAE;QAAI,SAAA;QACnBohB,cAAaoG,GAAG,CACdE,aACAtG,cAAa7pB,MAAM,CAAC6pB,cAAaphB,EAAE,IAAI,KACvC;KAEH;AACH;ACnFA,MAAMy8B,SAAS;AAER,SAASC,iBAAiB7uB,QAAgB;IAC/C,MAAMvV,UAAUuV,SAAS5X,KAAK,CAACwmC;IAC/B,IAAInkC,WAAW,MACb,MAAMmmB,UAAU,CAAqC5Q,kCAAAA,EAAAA,SAAQ,EAAA,CAAI;IAEnE,MAAM,CACJ+Y,GAAG,wDAAA;IACH+V,SACAC,eACAx0B,KACD,GAAG9P;IACJ,MAAMukC,WAAWhvB,SAAShB,UAAU,CAAC,YAAY,SAAS;IAC1D,MAAMiwB,YACJF,iBAAiB,OAAO,OAAOpkC,SAASokC,cAAc/lC,KAAK,CAAC,IAAI;IAClE,MAAMkmC,gBACJ,6EAAA;IACA,wEAAA;IACA,2EAAA;IACA,qEAAA;IACA,gFAAA;IACA,sEAAA;IACAD,aAAa,OAAO,KAAK,CAAIA,CAAAA,EAAAA,YAAY,EAAG,CAAA;IAC9C,OAAO,CAAA,EAAGD,SAAaF,EAAAA,EAAAA,QAAO,EAAGI,cAAa,EAAG30B,KAAM,CAAA;AACzD;ACoCA,MAAM40B,sBAAsBC,CAAAA,GAAAA,mBAAM,AAANA,EAC1BC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS7f,YACTnW,CAAAA,GAAAA,mBAAM,AAANA,KACAlU,CAAAA,QAAS,IAAIqqB,UAAUrqB;AAGzB,MAAMmqC,uBAAuB51B,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAACL,CAAAA,GAAAA,mBAAM,AAANA;IAAUk2B,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;CAAU;AAEhE,MAAMC,2BAA2BJ,CAAAA,GAAAA,mBAAM,AAANA,EAC/BC,CAAAA,GAAAA,qBAAQ,AAARA,EAASjhB,CAAAA,GAAAA,cAAM,AAANA,IACTkhB,sBACAnqC,CAAAA,QAASipB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC3D,KAAK,CAAC,EAAE,EAAE;AAGjC;;;CAGA,GACasqC,MAAAA,6BAA6B;AAE1C;;;;;CAKA,GAOA,cAAA,GACA,cAAA,GACA,cAAA,GACA,cAAA,GAGA,cAAA,GACA;;;;CAIA,GAKA;;;;;CAKA,GAgCA;;;CAGA,GAsCA;;;CAGA,GAIA;;;;;;;;;;CAUA,GASA;;CAEA,GAcA;;CAEA,GAKA;;CAEA,GAYA;;CAEA,GAcA;;CAEA,GAaA;;CAEA,GAeA;;CAEA,GAaA;;;CAGA,GAIA;;CAEA,GAoBA;;CAEA,GAOA;;CAEA,GAKA,aAAA,GACA,SAASC,kBAAkBC,WAAmB;IAC5C,IAAI,WAAWtwB,IAAI,CAACswB,iBAAiB,OACnC,MAAM,IAAI/e,UAAU;IAEtB,OAAO+e;AACT;AAEA,cAAA,GACA,SAASC,4BACPC,kBAAuE;IAEvE,IAAI5K;IACJ,IAAI7E;IACJ,IAAI,OAAOyP,uBAAuB,UAChC5K,aAAa4K;SACR,IAAIA,oBAAoB;QAC7B,MAAM,EAAC5K,YAAY6K,mBAAmB,EAAE,GAAGC,iBAAgB,GACzDF;QACF5K,aAAa6K;QACb1P,SAAS2P;IACX;IACA,OAAO;QAAC9K;QAAY7E;IAAO;AAC7B;AAEA;;CAEA,GACA,SAAS4P,gBAAsBrkC,MAAoB;IACjD,OAAOskC,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QACXC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACHC,SAASZ,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;YACjBa,IAAI/2B,CAAAA,GAAAA,mBAAM,AAANA;YACJ1N;QACD;QACDukC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACHC,SAASZ,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;YACjBa,IAAI/2B,CAAAA,GAAAA,mBAAM,AAANA;YACJxS,OAAOqpC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;gBACVvL,MAAM0L,CAAAA,GAAAA,oBAAO,AAAPA;gBACNhmC,SAASgP,CAAAA,GAAAA,mBAAM,AAANA;gBACTiB,MAAMg2B,CAAAA,GAAAA,qBAAQ,AAARA,EAASC,CAAAA,GAAAA,gBAAG,AAAHA;YAChB;QACF;KACF;AACH;AAEA,MAAMC,mBAAmBR,gBAAgBK,CAAAA,GAAAA,oBAAO,AAAPA;AAEzC;;CAEA,GACA,SAASI,cAAoBC,MAAoB;IAC/C,OAAOtB,CAAAA,GAAAA,mBAAM,AAANA,EAAOY,gBAAgBU,SAASF,kBAAkBrrC,CAAAA;QACvD,IAAI,WAAWA,OACb,OAAOA;aAEP,OAAO;YACL,GAAGA,KAAK;YACRwG,QAAQia,CAAAA,GAAAA,mBAAM,AAANA,EAAOzgB,MAAMwG,MAAM,EAAE+kC;QAC9B;IAEL;AACF;AAEA;;CAEA,GACA,SAASC,wBAA8BxrC,KAAmB;IACxD,OAAOsrC,cACLP,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACH5jB,SAAS4jB,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACZ5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACR;QACAzrC;IACF;AAEJ;AAEA;;CAEA,GACA,SAAS0rC,6BAAmC1rC,KAAmB;IAC7D,OAAO+qC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACV5jB,SAAS4jB,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACZ5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACR;QACAzrC;IACF;AACF;AAEA;;CAEA,GACA,SAAS2rC,6BACPhZ,OAAuC,EACvCrL,QAAyB;IAEzB,IAAIqL,YAAY,GACd,OAAO,IAAIoC,UAAU;QACnBzf,QAAQgS,SAAShS,MAAM;QACvB6X,mBAAmB7F,SAASkL,WAAW,CAACjtB,GAAG,CACzCksB,CAAAA,aAAc,IAAIpH,UAAUoH;QAE9BgB,iBAAiBnL,SAASmL,eAAe;QACzCG,sBAAsBtL,SAASqG,YAAY,CAACpoB,GAAG,CAAC6qB,CAAAA,KAAO,CAAA;gBACrDpC,gBAAgBoC,GAAGpC,cAAc;gBACjCC,mBAAmBmC,GAAGyC,QAAQ;gBAC9B1d,MAAMoV,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAACynB,GAAGjb,IAAI;YAC3B,CAAA;QACA2d,qBAAqBxL,SAASwL,mBAAAA;IAChC;SAEA,OAAO,IAAIP,QAAQjL;AAEvB;AAEA;;;;;;;CAOA,GASW,0BAAA;AAEX;;;;;;CAMA,GAGA;;;;;;CAMA,GAGA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAkBA;;CAEA,GAoBA;;CAEA,GAMA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAMA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAMA;;CAEA,GAcA;;CAEA,GAkBA;;CAEA,GAQA;;;CAGA,GASA,MAAMskB,6BAA6Bb,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACtCc,YAAYJ,CAAAA,GAAAA,mBAAM,AAANA;IACZK,gBAAgBL,CAAAA,GAAAA,mBAAM,AAANA;IAChBM,SAASN,CAAAA,GAAAA,mBAAM,AAANA;IACTO,OAAOP,CAAAA,GAAAA,mBAAM,AAANA;IACPQ,UAAUR,CAAAA,GAAAA,mBAAM,AAANA;AACZ;AAEA;;CAEA,GAcA;;CAEA,GACA,MAAMS,2BAA2BZ,cAC/B9/B,CAAAA,GAAAA,kBAAK,AAALA,EACE7K,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH3D,OAAOqE,CAAAA,GAAAA,mBAAM,AAANA;IACPU,eAAeV,CAAAA,GAAAA,mBAAM,AAANA;IACfj0B,QAAQi0B,CAAAA,GAAAA,mBAAM,AAANA;IACRW,aAAaX,CAAAA,GAAAA,mBAAM,AAANA;IACbY,YAAYlB,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AAChC;AAYN;;CAEA,GASA;;CAEA,GACA,MAAMa,oCAAoC9gC,CAAAA,GAAAA,kBAAK,AAALA,EACxCu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACNc,mBAAmBd,CAAAA,GAAAA,mBAAM,AAANA;AACrB;AAcF;;CAEA,GACA,MAAMe,yBAAyBzB,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClCzkC,OAAOmlC,CAAAA,GAAAA,mBAAM,AAANA;IACPgB,WAAWhB,CAAAA,GAAAA,mBAAM,AAANA;IACXI,YAAYJ,CAAAA,GAAAA,mBAAM,AAANA;IACZrE,OAAOqE,CAAAA,GAAAA,mBAAM,AAANA;AACT;AAEA;;CAEA,GAUA,MAAMiB,qBAAqB3B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC9B3D,OAAOqE,CAAAA,GAAAA,mBAAM,AAANA;IACPlE,WAAWkE,CAAAA,GAAAA,mBAAM,AAANA;IACXkB,cAAclB,CAAAA,GAAAA,mBAAM,AAANA;IACdmB,cAAcnB,CAAAA,GAAAA,mBAAM,AAANA;IACdoB,aAAa1B,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;IACtBqB,kBAAkB3B,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;AAC7B;AAEA,MAAMsB,yBAAyBhC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClClE,eAAe4E,CAAAA,GAAAA,mBAAM,AAANA;IACf3E,0BAA0B2E,CAAAA,GAAAA,mBAAM,AAANA;IAC1B1E,QAAQiG,CAAAA,GAAAA,oBAAO,AAAPA;IACRhG,kBAAkByE,CAAAA,GAAAA,mBAAM,AAANA;IAClBxE,iBAAiBwE,CAAAA,GAAAA,mBAAM,AAANA;AACnB;AAEA;;;CAGA,GAKA,MAAMwB,0BAA0BC,CAAAA,GAAAA,mBAAM,AAANA,EAAOh5B,CAAAA,GAAAA,mBAAM,AAANA,KAAU1I,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;AAEvD;;CAEA,GACA,MAAM0B,yBAAyBxsC,CAAAA,GAAAA,qBAAQ,AAARA,EAASmqC,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAACC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK,CAAA;IAAK72B,CAAAA,GAAAA,mBAAM,AAANA;CAAS;AAElE;;CAEA,GACA,MAAMk5B,wBAAwBrC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACjCjf,KAAKqhB;AACP;AAEA;;CAEA,GACA,MAAME,0BAA0BjD,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;AAExC;;CAEA,GAOA,MAAMkD,gBAAgBvC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACzB,eAAe72B,CAAAA,GAAAA,mBAAM,AAANA;IACf,eAAei3B,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;AAC1B;AA8CA,MAAM8B,qCAAqC/B,wBACzCT,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHjf,KAAKnrB,CAAAA,GAAAA,qBAAQ,AAARA,EAASmqC,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QAACC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK,CAAA;QAAK72B,CAAAA,GAAAA,mBAAM,AAANA;KAAS;IACxCoS,MAAM3lB,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IACrB2e,UAAUsY,CAAAA,GAAAA,qBAAQ,AAARA,EACRxqC,CAAAA,GAAAA,qBAAQ,AAARA,EACE6K,CAAAA,GAAAA,kBAAK,AAALA,EACE7K,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHtF,YAAYuH,CAAAA,GAAAA,oBAAO,AAAPA;QACZtH,OAAOxxB,CAAAA,GAAAA,mBAAM,AAANA;QACPkD,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;QACVt2B,MAAM3J,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;QACZs5B,WAAWrC,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;IACtB;IAKRgC,eAAetC,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;IACxBiC,YAAYvC,CAAAA,GAAAA,qBAAQ,AAARA,EACVxqC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACH5iB,WAAWjU,CAAAA,GAAAA,mBAAM,AAANA;QACXiB,MAAMZ,CAAAA,GAAAA,kBAAK,AAALA,EAAM;YAACL,CAAAA,GAAAA,mBAAM,AAANA;YAAUk2B,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;SAAU;IAC3C;AAGN;AAeF;;;;CAIA,GAGA;;CAEA,GAMA;;CAEA,GA6BA;;CAEA,GAwBA;;CAEA,GAiBA;;CAEA,GAmBA;;CAEA,GASA;;;;CAIA,GAYA;;CAEA,GAUA;;CAEA,GAYA;;CAEA,GAUA;;CAEA,GAUA;;CAEA,GAYA;;CAEA,GAQA;;;;CAIA,GAGA;;CAEA,GAcA;;CAEA,GAuCA;;CAEA,GAGA;;CAEA,GAGA;;CAEA,GAoCA;;CAEA,GAiBA;;CAEA,GAMA;;CAEA,GAuCA;;CAEA,GAiBA;;CAEA,GAMA;;;;CAIA,GAyBA;;CAEA,GAcA;;CAEA,GA2BA;;CAEA,GACA,MAAMuD,gCAAgCnC,wBACpCT,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH6C,YAAYV,CAAAA,GAAAA,mBAAM,AAANA,EAAOh5B,CAAAA,GAAAA,mBAAM,AAANA,KAAU1I,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACnCxgC,OAAO8/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACV8C,WAAWpC,CAAAA,GAAAA,mBAAM,AAANA;QACXqC,UAAUrC,CAAAA,GAAAA,mBAAM,AAANA;IACX;AACH;AAGF;;CAEA,GAYA,SAASsC,gBACP/pB,GAAW,EACXgqB,WAAyB,EACzBC,WAAqB,EACrBC,eAAiC,EACjCC,uBAAiC,EACjCC,SAAkD;IAElD,MAAMtG,QAAQmG,cAAcA,cAAcI;IAC1C,IAAIC;IAEF,IAAIF,aAAa,MACf3V,QAAQC,IAAI,CACV;IA2CN,IAAI6V;IAEJ,IAAIL,iBACFK,sBAAsB,OAAOC,MAAMC;QACjC,MAAMC,oBAAoB,MAAM,IAAI1vB,QAClC,CAACC,SAASgf;YACR,IAAI;gBACFiQ,gBAAgBM,MAAMC,MAAM,CAACE,cAAcC,eACzC3vB,QAAQ;wBAAC0vB;wBAAcC;qBAAa;YAEvC,EAAC,OAAOltC,OAAO;gBACdu8B,OAAOv8B;YACT;QACF;QAEF,OAAO,MAAMomC,SAAS4G;IACvB;IAGH,MAAMG,gBAAgB,IAAIC,CAAAA,GAAAA,uBAAS,AAATA,EAAU,OAAOlrB,SAASmrB;QAClD,MAAM1kC,UAAU;YACdyZ,QAAQ;YACRyD,MAAM3D;YACN0qB;YACAvqB,SAAS7Q,OAAO0W,MAAM,CACpB;gBACE,gBAAgB;YAClB,GACAokB,eAAe,CAAA,GACfgB;QAEH;QAED,IAAI;YACF,IAAIC,4BAA4B;YAChC,IAAIC;YACJ,IAAIC,WAAW;YACf,OAAS;gBACP,IAAIZ,qBACFW,MAAM,MAAMX,oBAAoBvqB,KAAK3Z;qBAErC6kC,MAAM,MAAMpH,MAAM9jB,KAAK3Z;gBAGzB,IAAI6kC,IAAIlP,MAAM,KAAK,IAAG,qBAAA,KACpB;gBAEF,IAAImO,4BAA4B,MAC9B;gBAEFc,6BAA6B;gBAC7B,IAAIA,8BAA8B,GAChC;gBAEFxW,QAAQ/2B,KAAK,CACX,CAAA,sBAAA,EAAyBwtC,IAAIlP,MAAM,CAAIkP,CAAAA,EAAAA,IAAIE,UAAU,CAAqBD,kBAAAA,EAAAA,SAAQ,WAAA,CACpF;gBACA,MAAM/O,MAAM+O;gBACZA,YAAY;YACd;YAEA,MAAMx1B,OAAO,MAAMu1B,IAAIv1B,IAAI;YAC3B,IAAIu1B,IAAIG,EAAE,EACRN,SAAS,MAAMp1B;iBAEfo1B,SAAS,IAAIjqC,MAAM,CAAA,EAAGoqC,IAAIlP,MAAM,CAAIkP,CAAAA,EAAAA,IAAIE,UAAU,CAAA,EAAA,EAAKz1B,KAAI,CAAE;QAEhE,EAAC,OAAOmS,KAAK;YACZ,IAAIA,eAAehnB,OAAOiqC,SAASjjB;QACrC;IACD,GAAE,CAAA;IAEH,OAAO+iB;AACT;AAEA,SAASS,iBAAiBC,MAAiB;IACzC,OAAO,CAACzrB,QAAQsO;QACd,OAAO,IAAIpT,QAAQ,CAACC,SAASgf;YAC3BsR,OAAO3rB,OAAO,CAACE,QAAQsO,MAAM,CAACtG,KAAUxE;gBACtC,IAAIwE,KAAK;oBACPmS,OAAOnS;oBACP;gBACF;gBACA7M,QAAQqI;YACV;QACF;IACD;AACH;AAEA,SAASkoB,sBAAsBD,MAAiB;IAC9C,OAAQE,CAAAA;QACN,OAAO,IAAIzwB,QAAQ,CAACC,SAASgf;YAC3B,kCAAA;YACA,IAAIwR,SAAS7tC,MAAM,KAAK,GAAGqd,QAAQ,EAAE;YAErC,MAAMywB,QAAQD,SAASlqC,GAAG,CAAE8f,CAAAA;gBAC1B,OAAOkqB,OAAO3rB,OAAO,CAACyB,OAAOsqB,UAAU,EAAEtqB,OAAO+M,IAAI;YACtD;YAEAmd,OAAO3rB,OAAO,CAAC8rB,OAAO,CAAC5jB,KAAUxE;gBAC/B,IAAIwE,KAAK;oBACPmS,OAAOnS;oBACP;gBACF;gBACA7M,QAAQqI;YACV;QACF;IACD;AACH;AAEA;;CAEA,GACA,MAAMsoB,gCAAgCtE,cAAcM;AAEpD;;CAEA,GACA,MAAMiE,4BAA4BvE,cAAckB;AAEhD;;CAEA,GACA,MAAMsD,uCAAuCxE,cAC3CgB;AAGF;;CAEA,GACA,MAAMyD,wBAAwBzE,cAAcoB;AAE5C;;CAEA,GACA,MAAMsD,4BAA4B1E,cAAcyB;AAEhD;;CAEA,GACA,MAAMkD,6BAA6B3E,cAAc2B;AAEjD;;CAEA,GACA,MAAMiD,gBAAgB5E,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;AAEpC;;CAEA,GAYA;;CAEA,GACA,MAAM0E,qBAAqB3E,wBACzBT,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzkC,OAAOmlC,CAAAA,GAAAA,mBAAM,AAANA;IACP2E,aAAa3E,CAAAA,GAAAA,mBAAM,AAANA;IACb4E,gBAAgB5E,CAAAA,GAAAA,mBAAM,AAANA;IAChB6E,wBAAwB9kC,CAAAA,GAAAA,kBAAK,AAALA,EAAMw+B;AAChC;AAGF;;;CAGA,GAYA;;CAEA,GACA,MAAMuG,oBAAoBxF,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC7BvzB,QAAQtD,CAAAA,GAAAA,mBAAM,AAANA;IACRs8B,UAAU7vC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACnB/0B,UAAU+0B,CAAAA,GAAAA,mBAAM,AAANA;IACVgF,gBAAgBtF,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;AAC3B;AAEA;;CAEA,GAcA;;CAEA,GACA,MAAMw8B,gCAAgClF,wBACpChgC,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHnf,SAASoe;IACTxyB,QAAQtD,CAAAA,GAAAA,mBAAM,AAANA;IACRs8B,UAAU7vC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACnB/0B,UAAU+0B,CAAAA,GAAAA,mBAAM,AAANA;IACVgF,gBAAgBtF,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;AAC3B;AAIJ;;CAEA,GACA,MAAMy8B,0BAA0BnF,wBAC9BhgC,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHjiB,QAAQkhB;IACRv0B,SAASs1B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACZtF,YAAYuH,CAAAA,GAAAA,oBAAO,AAAPA;QACZtH,OAAOsE;QACP5yB,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;QACVt2B,MAAMk1B;QACNmD,WAAW/B,CAAAA,GAAAA,mBAAM,AAANA;IACZ;AACH;AAIJ,MAAMmF,0BAA0B7F,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACnC1kB,SAASnS,CAAAA,GAAAA,mBAAM,AAANA;IACT28B,QAAQ3F,CAAAA,GAAAA,oBAAO,AAAPA;IACR/I,OAAOsJ,CAAAA,GAAAA,mBAAM,AAANA;AACT;AAEA;;CAEA,GACA,MAAMqF,gCAAgCtF,wBACpChgC,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHjiB,QAAQkhB;IACRv0B,SAASs1B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACZtF,YAAYuH,CAAAA,GAAAA,oBAAO,AAAPA;QACZtH,OAAOsE;QACP5yB,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;QACVt2B,MAAMy7B;QACNpD,WAAW/B,CAAAA,GAAAA,mBAAM,AAANA;IACZ;AACH;AAIJ;;CAEA,GAMA;;CAEA,GACA,MAAMsF,8BAA8BvF,wBAClChgC,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH3zB,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;IACV7f,SAASoe;AACX;AAIJ;;CAEA,GACA,MAAMgH,oBAAoBjG,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC7BtF,YAAYuH,CAAAA,GAAAA,oBAAO,AAAPA;IACZtH,OAAOsE;IACP5yB,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;IACVt2B,MAAMk1B;IACNmD,WAAW/B,CAAAA,GAAAA,mBAAM,AAANA;AACb;AAEA;;CAEA,GACA,MAAMwF,yBAAyBlG,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClCjiB,QAAQkhB;IACRv0B,SAASu7B;AACX;AAEA,MAAME,yBAAyBjH,CAAAA,GAAAA,mBAAM,AAANA,EAC7Ba,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAACZ,CAAAA,GAAAA,qBAAQ,AAARA,EAASjhB,CAAAA,GAAAA,cAAM,AAANA;IAAS2nB;CAAwB,GACjD9F,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAACX;IAAsByG;CAAwB,GACrD5wC,CAAAA;IACE,IAAImB,MAAMC,OAAO,CAACpB,QAChB,OAAOygB,CAAAA,GAAAA,mBAAM,AAANA,EAAOzgB,OAAOqqC;SAErB,OAAOrqC;AAEX;AAGF;;CAEA,GACA,MAAMmxC,0BAA0BpG,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACnCtF,YAAYuH,CAAAA,GAAAA,oBAAO,AAAPA;IACZtH,OAAOsE;IACP5yB,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;IACVt2B,MAAM+7B;IACN1D,WAAW/B,CAAAA,GAAAA,mBAAM,AAANA;AACb;AAEA,MAAM2F,+BAA+BrG,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACxCjiB,QAAQkhB;IACRv0B,SAAS07B;AACX;AAEA;;CAEA,GACA,MAAME,wBAAwBtG,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACjC1Z,OAAOyZ,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QACXV,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;KACT;IACDkH,QAAQ7F,CAAAA,GAAAA,mBAAM,AAANA;IACR8F,UAAU9F,CAAAA,GAAAA,mBAAM,AAANA;AACZ;AAEA;;CAEA,GAEA,MAAM+F,6CAA6ClG,cACjD9/B,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHriB,WAAWxU,CAAAA,GAAAA,mBAAM,AAANA;IACXiyB,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACN3f,KAAKqhB;IACLsE,MAAM9wC,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACfw9B,WAAWvG,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AAC/B;AAIJ;;CAEA,GACA,MAAMkG,mCAAmCrG,cACvC9/B,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHriB,WAAWxU,CAAAA,GAAAA,mBAAM,AAANA;IACXiyB,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACN3f,KAAKqhB;IACLsE,MAAM9wC,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACfw9B,WAAWvG,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AAC/B;AAIJ;;CAEA,GACA,MAAMmG,4BAA4B7G,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACrC8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQklC,6BAA6BsF;AACvC;AAEA;;CAEA,GACA,MAAMc,2BAA2B/G,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACpCjiB,QAAQkhB;IACRv0B,SAASu7B;AACX;AAEA;;CAEA,GACA,MAAMe,mCAAmChH,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC5C8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQklC,6BAA6BoG;AACvC;AAEA;;CAEA,GACA,MAAME,iBAAiBjH,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC1BkH,QAAQxG,CAAAA,GAAAA,mBAAM,AAANA;IACRtF,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACNyG,MAAMzG,CAAAA,GAAAA,mBAAM,AAANA;AACR;AAEA;;CAEA,GACA,MAAM0G,yBAAyBpH,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClC8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQwrC;AACV;AAEA;;;;;;;;;;;;;CAaA,GA8CA;;CAEA,GACA,MAAMI,mBAAmBtH,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAC7BC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHtmB,MAAMqmB,CAAAA,GAAAA,kBAAK,AAALA,EAAM;YACVV,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;YACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;YACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;YACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;SACT;QACDjE,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACNtqB,WAAWsqB,CAAAA,GAAAA,mBAAM,AAANA;IACb;IACAV,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHtmB,MAAM2lB,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACd6H,QAAQxG,CAAAA,GAAAA,mBAAM,AAANA;QACRtF,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACNtqB,WAAWsqB,CAAAA,GAAAA,mBAAM,AAANA;IACb;IACAV,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHtmB,MAAM2lB,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACdjE,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACNtqB,WAAWsqB,CAAAA,GAAAA,mBAAM,AAANA;QACX4G,OAAOtH,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACVuH,uBAAuB7G,CAAAA,GAAAA,mBAAM,AAANA;YACvB8G,2BAA2B9G,CAAAA,GAAAA,mBAAM,AAANA;YAC3B+G,uBAAuB/G,CAAAA,GAAAA,mBAAM,AAANA;YACvBgH,yBAAyBhH,CAAAA,GAAAA,mBAAM,AAANA;QAC1B;IACH;IACAV,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHtmB,MAAM2lB,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QACdjE,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;QACNtqB,WAAWsqB,CAAAA,GAAAA,mBAAM,AAANA;QACX3f,KAAK5X,CAAAA,GAAAA,mBAAM,AAANA;IACP;CACD;AAED;;CAEA,GACA,MAAMw+B,+BAA+B3H,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACxC8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQ4rC;AACV;AAEA;;CAEA,GACA,MAAMO,8BAA8B5H,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACvC8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQklC,6BACNZ,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QAACsC;QAAuBC;KAAwB;AAE1D;AAEA;;CAEA,GACA,MAAMuF,yBAAyB7H,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClC8G,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;IACdjlC,QAAQilC,CAAAA,GAAAA,mBAAM,AAANA;AACV;AAEA,MAAMoH,oBAAoB9H,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC7BjiB,QAAQ5U,CAAAA,GAAAA,mBAAM,AAANA;IACR4+B,QAAQnyC,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACjB6+B,KAAKpyC,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACd2H,KAAKlb,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACdye,SAAShyB,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;AACpB;AAEA,MAAM8+B,wBAAwBjI,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACjCkI,YAAY/+B,CAAAA,GAAAA,mBAAM,AAANA;IACZg/B,YAAYh/B,CAAAA,GAAAA,mBAAM,AAANA;IACZi/B,gBAAgB1H,CAAAA,GAAAA,mBAAM,AAANA;IAChB2H,kBAAkBpG,CAAAA,GAAAA,oBAAO,AAAPA;IAClBqG,cAAc7nC,CAAAA,GAAAA,kBAAK,AAALA,EAAM+I,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QAACk3B,CAAAA,GAAAA,mBAAM,AAANA;QAAUA,CAAAA,GAAAA,mBAAM,AAANA;QAAUA,CAAAA,GAAAA,mBAAM,AAANA;KAAS;IACxDY,YAAYZ,CAAAA,GAAAA,mBAAM,AAANA;IACZ6H,UAAU7H,CAAAA,GAAAA,mBAAM,AAANA;IACV8H,UAAU5yC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACrB;AAEA;;CAEA,GACA,MAAM+H,kBAAkBlI,cACtBP,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH0I,SAASjoC,CAAAA,GAAAA,kBAAK,AAALA,EAAMwnC;IACfU,YAAYloC,CAAAA,GAAAA,kBAAK,AAALA,EAAMwnC;AACpB;AAGF,MAAMW,qBAAqB7I,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAC/BV,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;IACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;IACRA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;CACT;AAED,MAAMwJ,0BAA0B7I,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACnC5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACNoI,eAAelzC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACxB3f,KAAKqhB;IACL2G,oBAAoB3I,CAAAA,GAAAA,qBAAQ,AAARA,EAASwI;AAC/B;AAEA;;CAEA,GACA,MAAMI,gCAAgCvI,wBACpChgC,CAAAA,GAAAA,kBAAK,AAALA,EAAM7K,CAAAA,GAAAA,qBAAQ,AAARA,EAASizC;AAGjB;;CAEA,GACA,MAAMI,6CAA6C1I,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;AAEjE,MAAMwI,2BAA2BlJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACpCtZ,YAAYuY;IACZ9Y,iBAAiB1lB,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACvBla,iBAAiB/lB,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;AACzB;AAEA,MAAMyI,6BAA6BnJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACtClT,YAAYrsB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IAClBhP,SAAS6lC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACZvY,aAAahnB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;QACnBoB,QAAQy1B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACXna,uBAAuB6a,CAAAA,GAAAA,mBAAM,AAANA;YACvB5a,2BAA2B4a,CAAAA,GAAAA,mBAAM,AAANA;YAC3B3a,6BAA6B2a,CAAAA,GAAAA,mBAAM,AAANA;QAC/B;QACA9d,cAAcniB,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACHlY,UAAUrnB,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;YAChBt2B,MAAMjB,CAAAA,GAAAA,mBAAM,AAANA;YACN8Z,gBAAgByd,CAAAA,GAAAA,mBAAM,AAANA;QAClB;QAEFhZ,iBAAiBve,CAAAA,GAAAA,mBAAM,AAANA;QACjB4e,qBAAqBqY,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMyoC;IACrC;AACH;AAEA,MAAME,sBAAsBpJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC/BjiB,QAAQkhB;IACRlrB,QAAQkuB,CAAAA,GAAAA,oBAAO,AAAPA;IACR1f,UAAU0f,CAAAA,GAAAA,oBAAO,AAAPA;IACVh3B,QAAQm1B,CAAAA,GAAAA,qBAAQ,AAARA,EAASL,CAAAA,GAAAA,kBAAK,AAALA,EAAM;QAACV,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;QAAgBA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;KAAe;AACzE;AAEA,MAAMgK,yCAAyCrJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClDvY,aAAahnB,CAAAA,GAAAA,kBAAK,AAALA,EAAM2oC;IACnBtc,YAAYrsB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;AACpB;AAEA,MAAMmgC,0BAA0BtJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACnC8F,QAAQ3F,CAAAA,GAAAA,oBAAO,AAAPA;IACR7kB,SAASnS,CAAAA,GAAAA,mBAAM,AAANA;IACTiU,WAAW6hB;AACb;AAEA,MAAMsK,uBAAuBvJ,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAChClY,UAAUrnB,CAAAA,GAAAA,kBAAK,AAALA,EAAMw+B;IAChB70B,MAAMjB,CAAAA,GAAAA,mBAAM,AAANA;IACNiU,WAAW6hB;AACb;AAEA,MAAMuK,oBAAoBzJ,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAC9BwJ;IACAD;CACD;AAED,MAAMG,2BAA2B1J,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IACrCC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACH8F,QAAQ3F,CAAAA,GAAAA,oBAAO,AAAPA;QACR7kB,SAASnS,CAAAA,GAAAA,mBAAM,AAANA;QACTiU,WAAWjU,CAAAA,GAAAA,mBAAM,AAANA;IACb;IACA62B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHlY,UAAUrnB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;QAChBiB,MAAMjB,CAAAA,GAAAA,mBAAM,AAANA;QACNiU,WAAWjU,CAAAA,GAAAA,mBAAM,AAANA;IACb;CACD;AAED,MAAMugC,yBAAyBxK,CAAAA,GAAAA,mBAAM,AAANA,EAC7BsK,mBACAC,0BACAx0C,CAAAA;IACE,IAAI,cAAcA,OAChB,OAAOygB,CAAAA,GAAAA,mBAAM,AAANA,EAAOzgB,OAAOs0C;SAErB,OAAO7zB,CAAAA,GAAAA,mBAAM,AAANA,EAAOzgB,OAAOq0C;AAEzB;AAGF;;CAEA,GACA,MAAMK,mCAAmC3J,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC5ClT,YAAYrsB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IAClBhP,SAAS6lC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACZvY,aAAahnB,CAAAA,GAAAA,kBAAK,AAALA,EAAM2oC;QACnBxmB,cAAcniB,CAAAA,GAAAA,kBAAK,AAALA,EAAMipC;QACpBhiB,iBAAiBve,CAAAA,GAAAA,mBAAM,AAANA;QACjB4e,qBAAqBqY,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAMyoC;IAC9C;AACH;AAEA,MAAMU,qBAAqB5J,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC9B6J,cAAcnJ,CAAAA,GAAAA,mBAAM,AAANA;IACdoJ,MAAM3gC,CAAAA,GAAAA,mBAAM,AAANA;IACNwxB,OAAOyF,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;IAChB4gC,eAAevE;AACjB;AAEA,MAAMwE,wBAAwBhK,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACjCzd,UAAU9hB,CAAAA,GAAAA,kBAAK,AAALA,EAAMw+B;IAChBzc,UAAU/hB,CAAAA,GAAAA,kBAAK,AAALA,EAAMw+B;AAClB;AAEA;;CAEA,GACA,MAAMgL,iCAAiCjK,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC1Cjf,KAAKqhB;IACL8H,KAAKxJ,CAAAA,GAAAA,mBAAM,AAANA;IACLyJ,mBAAmB/J,CAAAA,GAAAA,qBAAQ,AAARA,EACjBxqC,CAAAA,GAAAA,qBAAQ,AAARA,EACE6K,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHr2B,OAAO+2B,CAAAA,GAAAA,mBAAM,AAANA;QACP9d,cAAcniB,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;YACHlY,UAAUrnB,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;YAChBt2B,MAAMjB,CAAAA,GAAAA,mBAAM,AAANA;YACN8Z,gBAAgByd,CAAAA,GAAAA,mBAAM,AAANA;QAClB;IAEH;IAIP0J,aAAa3pC,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACnB2J,cAAc5pC,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACpBrN,aAAa+M,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IACrCmhC,kBAAkBlK,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAMmpC;IAC1CW,mBAAmBnK,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAMmpC;IAC3CY,iBAAiBpK,CAAAA,GAAAA,qBAAQ,AAARA,EAAS4J;IAC1BS,sBAAsBrK,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;AACjC;AAEA;;CAEA,GACA,MAAMgK,uCAAuC1K,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAChDjf,KAAKqhB;IACL8H,KAAKxJ,CAAAA,GAAAA,mBAAM,AAANA;IACLyJ,mBAAmB/J,CAAAA,GAAAA,qBAAQ,AAARA,EACjBxqC,CAAAA,GAAAA,qBAAQ,AAARA,EACE6K,CAAAA,GAAAA,kBAAK,AAALA,EACEu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHr2B,OAAO+2B,CAAAA,GAAAA,mBAAM,AAANA;QACP9d,cAAcniB,CAAAA,GAAAA,kBAAK,AAALA,EAAMipC;IACrB;IAIPU,aAAa3pC,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACnB2J,cAAc5pC,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;IACpBrN,aAAa+M,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IACrCmhC,kBAAkBlK,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAMmpC;IAC1CW,mBAAmBnK,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS6K,CAAAA,GAAAA,kBAAK,AAALA,EAAMmpC;IAC3CY,iBAAiBpK,CAAAA,GAAAA,qBAAQ,AAARA,EAAS4J;IAC1BS,sBAAsBrK,CAAAA,GAAAA,qBAAQ,AAARA,EAASM,CAAAA,GAAAA,mBAAM,AAANA;AACjC;AAEA,MAAMiK,2BAA2B5K,CAAAA,GAAAA,kBAAK,AAALA,EAAM;IAACV,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;IAAIA,CAAAA,GAAAA,oBAAO,AAAPA,EAAQ;CAAU;AAEtE,cAAA,GACA,MAAMuL,gBAAgB5K,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACzBjiB,QAAQ5U,CAAAA,GAAAA,mBAAM,AAANA;IACRkD,UAAUq0B,CAAAA,GAAAA,mBAAM,AAANA;IACVW,aAAazrC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACtBmK,YAAYj1C,CAAAA,GAAAA,qBAAQ,AAARA,EAASuT,CAAAA,GAAAA,mBAAM,AAANA;IACrBm4B,YAAYlB,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AAChC;AAEA;;CAEA,GACA,MAAMoK,oBAAoBvK,cACxB3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZzvB,cAAcxQ,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHpsB,aAAau1B;QACbhmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAASq0C;QACfriB,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;IACpB;IAEFM,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;CAEA,GACA,MAAMwK,4BAA4B3K,cAChC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZuK,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;CAEA,GACA,MAAMyK,gCAAgC5K,cACpC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZzvB,cAAcxQ,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHpsB,aAAay1B;QACblmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAASq0C;QACfriB,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;IACpB;IAEFM,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;CAEA,GACA,MAAM0K,0BAA0B7K,cAC9B3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZzvB,cAAcxQ,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHpsB,aAAa+1B;QACbxmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAAS80C;QACf9iB,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;IACpB;IAEFM,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;CAEA,GACA,MAAM2K,sCAAsC9K,cAC1C3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZzvB,cAAcxQ,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHpsB,aAAay1B;QACblmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAAS80C;QACf9iB,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;IACpB;IAEFM,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;CAEA,GACA,MAAM4K,kCAAkC/K,cACtC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZuK,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IACpBoB,aAAalsC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAIJ;;;;CAIA,GACA,MAAM6K,6BAA6BhL,cACjC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZzvB,cAAcxQ,CAAAA,GAAAA,kBAAK,AAALA,EACZu/B,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QACHpsB,aAAau1B;QACbhmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAASq0C;IACjB;IAEFgB,SAAS7K,CAAAA,GAAAA,qBAAQ,AAARA,EAAS3/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMmqC;IACxBjE,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACtB;AAIJ;;CAEA,GACA,MAAM8K,8BAA8BjL,cAClC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX4hC,mBAAmB5hC,CAAAA,GAAAA,mBAAM,AAANA;IACnB6hC,YAAYtK,CAAAA,GAAAA,mBAAM,AAANA;IACZ5T,YAAYrsB,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IAClBw9B,WAAW/wC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;AACtB;AAIJ;;CAEA,GACA,MAAM+K,0BAA0BlL,cAC9B3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACNvd,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAASq0C;IACftD,WAAWvG,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IAC7B9sB,aAAau1B;IACbvhB,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;AACpB;AAIJ;;CAEA,GACA,MAAMe,gCAAgCnL,cACpC3qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACN9sB,aAAa+1B;IACbxmB,MAAMvtB,CAAAA,GAAAA,qBAAQ,AAARA,EAAS80C;IACf/D,WAAWvG,CAAAA,GAAAA,qBAAQ,AAARA,EAASxqC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;IAC7B9Y,SAASwY,CAAAA,GAAAA,qBAAQ,AAARA,EAASuK;AACpB;AAIJ;;;;CAIA,GACA,MAAMgB,wCAAwClL,wBAC5CT,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX+sB,eAAe8J,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QAClB4L,sBAAsBlL,CAAAA,GAAAA,mBAAM,AAANA;IACvB;AACH;AAGF;;CAEA,GACA,MAAMmL,8BAA8BpL,wBAClCT,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACHzS,WAAWpkB,CAAAA,GAAAA,mBAAM,AAANA;IACX6jB,sBAAsB0T,CAAAA,GAAAA,mBAAM,AAANA;AACxB;AAGF;;CAEA,GACA,MAAMoL,4BAA4BrL,wBAAwBwB,CAAAA,GAAAA,oBAAO,AAAPA;AAE1D,MAAM8J,mBAAmB/L,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAC5B5E,MAAMsF,CAAAA,GAAAA,mBAAM,AAANA;IACNsL,iBAAiBtL,CAAAA,GAAAA,mBAAM,AAANA;IACjBuL,UAAUvL,CAAAA,GAAAA,mBAAM,AAANA;IACVwL,kBAAkBxL,CAAAA,GAAAA,mBAAM,AAANA;AACpB;AAEA;;CAEA,GACA,MAAMyL,uCAAuC5L,cAC3C9/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMsrC;AAGR;;CAEA,GACA,MAAMK,4BAA4B3L,wBAChC7qC,CAAAA,GAAAA,qBAAQ,AAARA,EACEoqC,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACH9J,eAAe8J,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;QAClB4L,sBAAsBlL,CAAAA,GAAAA,mBAAM,AAANA;IACvB;AACH;AAIJ;;CAEA,GACA,MAAM2L,0BAA0B9L,cAAcp3B,CAAAA,GAAAA,mBAAM,AAANA;AAE9C;;CAEA,GACA,MAAMmjC,2BAA2B/L,cAAcp3B,CAAAA,GAAAA,mBAAM,AAANA;AAE/C;;CAEA,GAUA;;CAEA,GAUA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAUA;;CAEA,GAMA;;CAEA,GAGA;;CAEA,GAwBA;;CAEA,GAUA;;CAEA,GAUA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAQA;;CAEA,GAcA;;CAEA,GAMA;;CAEA,GAMA;;CAEA,GAMA;;CAEA,GAGA;;CAEA,GAGA;;CAEA,GAMA;;CAEA,GAMA;;CAEA,GAKA;;CAEA,GAMA;;CAEA,GAMA;;CAEA,GAGA;;CAEA,GACA,MAAMojC,aAAavM,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACtBjf,KAAKqhB;IACL7mB,MAAM9a,CAAAA,GAAAA,kBAAK,AAALA,EAAM0I,CAAAA,GAAAA,mBAAM,AAANA;IACZwU,WAAWxU,CAAAA,GAAAA,mBAAM,AAANA;AACb;AAEA;;CAEA,GAOA;;CAEA,GACA,MAAMqjC,yBAAyBxM,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IAClCvkC,QAAQklC,6BAA6B4L;IACrCzF,cAAcpG,CAAAA,GAAAA,mBAAM,AAANA;AAChB;AAEA;;CAEA,GAGA;;CAEA,GAGA;;CAEA,GAKA;;CAEA,GAGA;;;;;;;CAOA,GAMA;;CAEA,GAYA;;CAEA,GAgBA;;CAEA,GAQA;;CAEA,GAGA;;CAEA,GAOA;;CAEA,GAwBA,cAAA,GACA,MAAMuD,sBAAsB;IAC1B,iBAAiB,CAAA,GAAA,EAAMwI,oBAA4C,CAAA;AACrE;AAEA;;CAEA,GACO,MAAMC;IA8EX;;;;;GAKF,GACEzyC,YACE6V,QAAgB,EAChB6vB,mBAAkD,CAClD;QAtFF,cAAA,GAAA,IAAA,CAAiBgN,WAAW,GAAA,KAAA;QAC5B,cAAA,GAAA,IAAA,CAAiBC,iCAAiC,GAAA,KAAA;QAClD,cAAA,GAAA,IAAA,CAAiB7R,YAAY,GAAA,KAAA;QAC7B,cAAA,GAAA,IAAA,CAAiB8R,cAAc,GAAA,KAAA;QAC/B,cAAA,GAAA,IAAA,CAAiBC,UAAU,GAAA,KAAA;QAC3B,cAAA,GAAA,IAAA,CAAiBC,WAAW,GAAA,KAAA;QAC5B,cAAA,GAAA,IAAA,CAAiBC,gBAAgB,GAAA,KAAA;QACjC,cAAA,GAAA,IAAA,CAAiBC,aAAa,GAAA,KAAA;QAC9B,cAAA,GAAA,IAAiBC,CAAAA,sBAAsB,GAAY;QACnD,cAAA,GAAA,IAAiBC,CAAAA,sBAAsB,GAE5B;QACX,cAAA,GAAA,IAAiBC,CAAAA,wBAAwB,GAE9B;QACX;;;;;;KAMF,GANE,IAMYC,CAAAA,uBAAuB,GAAW;QAE9C,cAAA,GAAA,IAAiBC,CAAAA,wBAAwB,GAAY;QACrD,cAAA,GAAA,IAAiBC,CAAAA,iBAAiB,GAAY;QAC9C,cAAA,GAAA,IAAA,CAAiBC,cAAc,GAK3B;YACFC,iBAAiB;YACjBC,WAAW;YACXC,uBAAuB,EAAE;YACzBC,qBAAqB,EAAA;QACtB;QAED,cAAA,GAAA,IAAyBC,CAAAA,yBAAyB,GAAyB;QAC3E,cAAA,GAAA,IAAyBC,CAAAA,mDAAmD,GAIxE,CAAA;QACJ,cAAA,GAAA,IAAyBC,CAAAA,uCAAuC,GAI5D,CAAA;QACJ,cAAA,GAAA,IAAyBC,CAAAA,uCAAuC,GAI5D,CAAA;QACJ,cAAA,GAAA,IAAyBC,CAAAA,4CAA4C,GAIjE,CAAA;QACJ,cAAA,GAAA,IAAyBC,CAAAA,oBAAoB,GAEzC,CAAA;QACJ;;;;;;;;;;;;KAYF,GACE,cAAA,GAAA,IAAA,CAAyBC,+BAA+B,GACtD,IAAIj3C;QAmtDN;;KAEF,GAFE,IAGAk3C,CAAAA,cAAc,GAAG,AAAC,CAAA;YAChB,MAAMC,kBAAqD,CAAA;YAC3D,OAAO,OACL1O;gBAEA,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;gBAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;gBAEF,MAAMqe,cAAcC,sBAAoBnnB;gBACxCgnB,eAAe,CAACE,YAAY,GAC1BF,eAAe,CAACE,YAAY,IAC5B,AAAC,CAAA;oBACC,IAAI;wBACF,MAAME,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;wBAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;wBAC5C,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;wBAGJ,OAAOwtC,IAAI1oC,MAAM;oBACnB,SAAU;wBACR,OAAO4yC,eAAe,CAACE,YAAY;oBACrC;gBACF,CAAA;gBACF,OAAO,MAAMF,eAAe,CAACE,YAAY;YAC1C;QACH,CAAA;QA3uDE,IAAIG;QACJ,IAAIzL;QACJ,IAAIlG;QACJ,IAAIoG;QACJ,IAAIC;QACJ,IAAIC;QACJ,IAAI1D,uBAAsB,OAAOA,wBAAuB,UACtD,IAAI,CAACgN,WAAW,GAAGhN;aACd,IAAIA,qBAAoB;YAC7B,IAAI,CAACgN,WAAW,GAAGhN,oBAAmB5K,UAAU;YAChD,IAAI,CAAC6X,iCAAiC,GACpCjN,oBAAmBgP,gCAAgC;YACrDD,aAAa/O,oBAAmB+O,UAAU;YAC1CzL,cAActD,oBAAmBsD,WAAW;YAC5ClG,QAAQ4C,oBAAmB5C,KAAK;YAChCoG,kBAAkBxD,oBAAmBwD,eAAe;YACpDC,0BAA0BzD,oBAAmByD,uBAAuB;YACpEC,YAAY1D,oBAAmB0D,SAAS;QAC1C;QAEA,IAAI,CAACtI,YAAY,GAAGyE,kBAAkB1vB;QACtC,IAAI,CAAC+8B,cAAc,GAAG6B,cAAc/P,iBAAiB7uB;QAErD,IAAI,CAACg9B,UAAU,GAAG9J,gBAChBlzB,UACAmzB,aACAlG,OACAoG,iBACAC,yBACAC;QAEF,IAAI,CAAC0J,WAAW,GAAGxI,iBAAiB,IAAI,CAACuI,UAAU;QACnD,IAAI,CAACE,gBAAgB,GAAGvI,sBAAsB,IAAI,CAACqI,UAAU;QAE7D,IAAI,CAACG,aAAa,GAAG,IAAIjQ,mBAAmB,IAAI,CAAC6P,cAAc,EAAE;YAC/DxP,aAAa;YACbC,gBAAgBsR;QAClB;QACA,IAAI,CAAC3B,aAAa,CAAC4B,EAAE,CAAC,QAAQ,IAAI,CAACC,SAAS,CAACz8B,IAAI,CAAC,IAAI;QACtD,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CAAC,SAAS,IAAI,CAACE,UAAU,CAAC18B,IAAI,CAAC,IAAI;QACxD,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CAAC,SAAS,IAAI,CAACG,UAAU,CAAC38B,IAAI,CAAC,IAAI;QACxD,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,uBACA,IAAI,CAACI,wBAAwB,CAAC58B,IAAI,CAAC,IAAI;QAEzC,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,uBACA,IAAI,CAACK,+BAA+B,CAAC78B,IAAI,CAAC,IAAI;QAEhD,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,oBACA,IAAI,CAACM,qBAAqB,CAAC98B,IAAI,CAAC,IAAI;QAEtC,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,4BACA,IAAI,CAACO,4BAA4B,CAAC/8B,IAAI,CAAC,IAAI;QAE7C,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,yBACA,IAAI,CAACQ,0BAA0B,CAACh9B,IAAI,CAAC,IAAI;QAE3C,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,oBACA,IAAI,CAACS,qBAAqB,CAACj9B,IAAI,CAAC,IAAI;QAEtC,IAAI,CAAC46B,aAAa,CAAC4B,EAAE,CACnB,oBACA,IAAI,CAACU,qBAAqB,CAACl9B,IAAI,CAAC,IAAI;IAExC;IAEA;;GAEF,GACE,IAAI0iB,aAAqC;QACvC,OAAO,IAAI,CAAC4X,WAAW;IACzB;IAEA;;GAEF,GACE,IAAI6C,cAAsB;QACxB,OAAO,IAAI,CAACzU,YAAY;IAC1B;IAEA;;GAEF,GACE,MAAM0U,qBACJz5C,SAAoB,EACpB2pC,kBAAkD,EACV;QACxC,cAAA,GACA,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAACt4C,UAAUG,QAAQ;SAAG,EACtB4+B,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,cAAc1lB;QACvD,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwBC,CAAAA,GAAAA,mBAAM,AAANA;QACtD,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAA6BX,0BAAAA,EAAAA,UAAUG,QAAQ,GAAE,CACnD;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMsX,WACJ/c,SAAoB,EACpB2pC,kBAAkD,EACjC;QACjB,OAAO,MAAM,IAAI,CAAC8P,oBAAoB,CAACz5C,WAAW2pC,oBAC/CxM,IAAI,CAACrlB,CAAAA,IAAKA,EAAE7Y,KAAK,EACjBq+B,KAAK,CAACoc,CAAAA;YACL,MAAM,IAAI31C,MACR,sCAAsC/D,UAAUG,QAAQ,KAAK,OAAOu5C;QAExE;IACJ;IAEA;;GAEF,GACE,MAAM58B,aAAasoB,IAAY,EAA0B;QACvD,MAAMqT,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,gBAAgB;YAAC3R;SAAK;QAC/D,MAAM+I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc3qC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;QACrD,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAA,kCAAA,EAAqCykC,KAAI,CAC3C;QAEF,OAAO+I,IAAI1oC,MAAM;IACnB;IAEA;;;GAGF,GACE,MAAMk0C,uBAAwC;QAC5C,MAAMlB,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,qBAAqB,EAAE;QAChE,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;QAC5C,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMm0C,yBAA0C;QAC9C,MAAMnB,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,0BAA0B,EAAE;QACrE,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWtJ;QAC9B,IAAI,WAAWhB,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMo0C,UACJ3f,MAAqC,EACG;QACxC,IAAI4f,YAA6B,CAAA;QACjC,IAAI,OAAO5f,WAAW,UACpB4f,YAAY;YAAC/a,YAAY7E;QAAO;aAC3B,IAAIA,QACT4f,YAAY;YACV,GAAG5f,MAAM;YACT6E,YAAa7E,UAAUA,OAAO6E,UAAU,IAAK,IAAI,CAACA,UAAAA;QACnD;aAED+a,YAAY;YACV/a,YAAY,IAAI,CAACA,UAAAA;QAClB;QAGH,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,aAAa;YAAC+C;SAAU;QACjE,MAAM3L,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWrJ;QAC9B,IAAI,WAAWjB,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMs0C,eACJC,gBAA2B,EAC3Bjb,UAAuB,EACsB;QAC7C,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC;YAAC0B,iBAAiB75C,QAAQ;SAAG,EAAE4+B;QAC5D,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwB+E;QACtD,IAAI,WAAWrB,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMw0C,uBACJC,YAAuB,EACvBnb,UAAuB,EACsB;QAC7C,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC;YAAC4B,aAAa/5C,QAAQ;SAAG,EAAE4+B;QACxD,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,0BAA0B1lB;QACnE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwB+E;QACtD,IAAI,WAAWrB,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAM00C,wBACJC,YAAuB,EACvB5nC,MAA2B,EAC3Bm3B,kBAA+D,EACH;QAC5D,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,IAAI0Q,QAAe;YAACD,aAAaj6C,QAAQ;SAAG;QAC5C,IAAI,UAAUqS,QACZ6nC,MAAMjzC,IAAI,CAAC;YAAC0sC,MAAMthC,OAAOshC,IAAI,CAAC3zC,QAAQ;QAAE;aAExCk6C,MAAMjzC,IAAI,CAAC;YAACggB,WAAW5U,OAAO4U,SAAS,CAACjnB,QAAQ;QAAE;QAGpD,MAAMkxB,OAAO,IAAI,CAACinB,UAAU,CAAC+B,OAAOtb,YAAY,UAAU7E;QAC1D,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW7I;QAC9B,IAAI,WAAWzB,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAiDy5C,8CAAAA,EAAAA,aAAaj6C,QAAQ,GAAE,CAC1E;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAM60C,8BACJF,YAAuB,EACvB5nC,MAA2B,EAC3BusB,UAAuB,EAKvB;QACA,IAAIsb,QAAe;YAACD,aAAaj6C,QAAQ;SAAG;QAC5C,IAAI,UAAUqS,QACZ6nC,MAAMjzC,IAAI,CAAC;YAAC0sC,MAAMthC,OAAOshC,IAAI,CAAC3zC,QAAQ;QAAE;aAExCk6C,MAAMjzC,IAAI,CAAC;YAACggB,WAAW5U,OAAO4U,SAAS,CAACjnB,QAAQ;QAAE;QAGpD,MAAMkxB,OAAO,IAAI,CAACinB,UAAU,CAAC+B,OAAOtb,YAAY;QAChD,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW1I;QAC9B,IAAI,WAAW5B,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAiDy5C,8CAAAA,EAAAA,aAAaj6C,QAAQ,GAAE,CAC1E;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAM80C,mBACJrgB,MAAiC,EAC0B;QAC3D,MAAMsgB,MAAM;YACV,GAAGtgB,MAAM;YACT6E,YAAa7E,UAAUA,OAAO6E,UAAU,IAAK,IAAI,CAACA,UAAAA;QACnD;QACD,MAAM1N,OAAOmpB,IAAIhoC,MAAM,IAAIgoC,IAAIzb,UAAU,GAAG;YAACyb;SAAI,GAAG,EAAE;QACtD,MAAM/B,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWzI;QAC9B,IAAI,WAAW7B,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;GAGF,GACE,MAAMg1C,wBACJC,WAAsB,EACtB3b,UAAuB,EACyC;QAChE,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC;YAACoC,YAAYv6C,QAAQ;SAAG,EAAE4+B;QACvD,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW9I;QAC9B,IAAI,WAAWxB,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMk1C,yBACJ36C,SAAoB,EACpB2pC,kBAAsD,EACM;QAC5D,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAACt4C,UAAUG,QAAQ;SAAG,EACtB4+B,YACA,UACA7E;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EACV+4B,WACAhO,wBAAwB7qC,CAAAA,GAAAA,qBAAQ,AAARA,EAASqwC;QAEnC,IAAI,WAAW9B,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAoCX,iCAAAA,EAAAA,UAAUG,QAAQ,GAAE,CAC1D;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMm1C,qBACJ56C,SAAoB,EACpB2pC,kBAAsD,EAGtD;QACA,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAACt4C,UAAUG,QAAQ;SAAG,EACtB4+B,YACA,cACA7E;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EACV+4B,WACAhO,wBAAwB7qC,CAAAA,GAAAA,qBAAQ,AAARA,EAASwwC;QAEnC,IAAI,WAAWjC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAoCX,iCAAAA,EAAAA,UAAUG,QAAQ,GAAE,CAC1D;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMg/B,eACJzkC,SAAoB,EACpB2pC,kBAAsD,EACjB;QACrC,IAAI;YACF,MAAMwE,MAAM,MAAM,IAAI,CAACwM,wBAAwB,CAC7C36C,WACA2pC;YAEF,OAAOwE,IAAIlvC,KAAK;QACjB,EAAC,OAAOy6C,GAAG;YACV,MAAM,IAAI31C,MACR,sCAAsC/D,UAAUG,QAAQ,KAAK,OAAOu5C;QAExE;IACF;IAEA;;GAEF,GACE,MAAMmB,0BACJ55C,UAAuB,EACvB65C,SAAqC,EAGrC;QACA,MAAM,EAAC/b,UAAU,EAAE7E,MAAAA,EAAO,GAAGwP,4BAA4BoR;QACzD,MAAM1oC,OAAOnR,WAAWuD,GAAG,CAACtE,CAAAA,MAAOA,IAAIC,QAAQ;QAC/C,MAAMkxB,OAAO,IAAI,CAACinB,UAAU,CAAC;YAAClmC;SAAK,EAAE2sB,YAAY,cAAc7E;QAC/D,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,uBAAuB1lB;QAChE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EACV+4B,WACAhO,wBAAwBhgC,CAAAA,GAAAA,kBAAK,AAALA,EAAM7K,CAAAA,GAAAA,qBAAQ,AAARA,EAASwwC;QAEzC,IAAI,WAAWjC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAA,gCAAA,EAAmCyR,KAAI,CACzC;QAEF,OAAO+7B,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMs1C,kCACJ95C,UAAuB,EACvB0oC,kBAA2D,EACK;QAChE,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMv3B,OAAOnR,WAAWuD,GAAG,CAACtE,CAAAA,MAAOA,IAAIC,QAAQ;QAC/C,MAAMkxB,OAAO,IAAI,CAACinB,UAAU,CAAC;YAAClmC;SAAK,EAAE2sB,YAAY,UAAU7E;QAC3D,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,uBAAuB1lB;QAChE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EACV+4B,WACAhO,wBAAwBhgC,CAAAA,GAAAA,kBAAK,AAALA,EAAM7K,CAAAA,GAAAA,qBAAQ,AAARA,EAASqwC;QAEzC,IAAI,WAAW9B,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAA,gCAAA,EAAmCyR,KAAI,CACzC;QAEF,OAAO+7B,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMu1C,wBACJ/5C,UAAuB,EACvB0oC,kBAA2D,EAClB;QACzC,MAAMwE,MAAM,MAAM,IAAI,CAAC4M,iCAAiC,CACtD95C,YACA0oC;QAEF,OAAOwE,IAAIlvC,KAAK;IAClB;IAEA;;GAEF,GACE,MAAMg8C,mBACJj7C,SAAoB,EACpB2pC,kBAA0D,EAC1DtD,KAAc,EACgB;QAC9B,MAAM,EAACtH,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAACt4C,UAAUG,QAAQ;SAAG,EACtB4+B,YACAhrB,UAAS,YAAA,KACT;YACE,GAAGmmB,MAAM;YACTmM,OAAOA,SAAS,OAAOA,QAAQnM,QAAQmM;QACzC;QAGF,MAAMoS,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc+F;QAC5C,IAAI,WAAWnC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAkCX,+BAAAA,EAAAA,UAAUG,QAAQ,GAAE,CACxD;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GAME,iDAAA;IAKA,iDAAA;IACA,MAAMoX,mBACJuK,SAAoB,EACpB8zB,kBAA0D,EAI1D;QACA,MAAM,EAACnc,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BwR;QAC9B,MAAM,EAAC9nC,QAAQ,EAAE,GAAG+nC,uBAAsB,GAAGjhB,UAAU,CAAA;QACvD,MAAM7I,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAClxB,UAAUjnB,QAAQ;SAAG,EACtB4+B,YACA3rB,YAAY,UACZ+nC;QAEF,MAAM1C,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM+pB,aAAa3wC,CAAAA,GAAAA,kBAAK,AAALA,EAAMylC;QACzB,MAAM/B,MACJgN,sBAAsBE,WAAW,KAAK,OAClC37B,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwB2Q,eAC1C17B,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc6Q;QACtC,IAAI,WAAWjN,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAA2CymB,wCAAAA,EAAAA,UAAUjnB,QAAQ,GAAE,CACjE;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAM61C,yBACJl0B,SAAoB,EACpB8zB,kBAAgE,EAMhE;QACA,MAAM,EAACnc,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BwR;QAC9B,MAAM7pB,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAClxB,UAAUjnB,QAAQ;SAAG,EACtB4+B,YACA,cACA7E;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EACV+4B,WACAlO,cAAc9/B,CAAAA,GAAAA,kBAAK,AAALA,EAAM4lC;QAEtB,IAAI,WAAWlC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAA2CymB,wCAAAA,EAAAA,UAAUjnB,QAAQ,GAAE,CACjE;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAOA,uGAAA,GACA,iDAAA;IAMA,iDAAA;IACA,MAAMgY,mBACJ89B,QAAgE,EAChExc,UAAuB,EAC0B;QACjD,IAAIyc;QAEJ,IAAI,OAAOD,YAAY,UACrBC,eAAeD;aACV;YACL,MAAMrhB,SAASqhB;YAEf,IAAIrhB,OAAOgF,WAAW,EAAEuc,SACtB,OAAOx9B,QAAQif,MAAM,CAAChD,OAAOgF,WAAW,CAACp3B,MAAM;YAEjD0zC,eAAethB,OAAOvS,SAAS;QACjC;QAEA,IAAI+zB;QAEJ,IAAI;YACFA,mBAAmBlyB,CAAAA,GAAAA,oBAAI,AAAJA,EAAK5hB,MAAM,CAAC4zC;QAChC,EAAC,OAAOzwB,KAAK;YACZ,MAAM,IAAIhnB,MAAM,uCAAuCy3C;QACzD;QAEAhsB,OAAOksB,iBAAiB76C,MAAM,KAAK,IAAI;QAEvC,IAAI,OAAO06C,aAAa,UACtB,OAAO,MAAM,IAAI,CAACI,4CAA4C,CAAC;YAC7D5c,YAAYA,cAAc,IAAI,CAACA,UAAU;YACzCpX,WAAW6zB;QACb;aACK,IAAI,0BAA0BD,UACnC,OAAO,MAAM,IAAI,CAACK,oDAAoD,CAAC;YACrE7c,YAAYA,cAAc,IAAI,CAACA,UAAU;YACzCwc;QACF;aAEA,OAAO,MAAM,IAAI,CAACM,2CAA2C,CAAC;YAC5D9c,YAAYA,cAAc,IAAI,CAACA,UAAU;YACzCwc;QACF;IAEJ;IAEQO,uBAAuB33B,MAAoB,EAAkB;QACnE,OAAO,IAAIlG,QAAe,CAAC4U,GAAGqK;YAC5B,IAAI/Y,UAAU,MACZ;YAEF,IAAIA,OAAOs3B,OAAO,EAChBve,OAAO/Y,OAAOrc,MAAM;iBAEpBqc,OAAO43B,gBAAgB,CAAC,SAAS;gBAC/B7e,OAAO/Y,OAAOrc,MAAM;YACtB;QAEJ;IACF;IAEQk0C,kCAAkC,EACxCjd,UAAU,EACVpX,SAAAA,EAID,EAMC;QACA,IAAIs0B;QACJ,IAAIC;QAGJ,IAAIC,OAAO;QACX,MAAMC,sBAAsB,IAAIn+B,QAG7B,CAACC,SAASgf;YACX,IAAI;gBACF+e,0BAA0B,IAAI,CAACI,WAAW,CACxC10B,WACA,CAACliB,QAAyB2gB;oBACxB61B,0BAA0BloC;oBAC1B,MAAMwS,WAAW;wBACfH;wBACAnnB,OAAOwG;oBACR;oBACDyY,QAAQ;wBAACo+B,QAAQ7lB,kBAAkB8lB,SAAS;wBAAEh2B;oBAAQ;gBACvD,GACDwY;gBAEF,MAAMyd,2BAA2B,IAAIv+B,QACnCw+B,CAAAA;oBACE,IAAIR,2BAA2B,MAC7BQ;yBAEAP,kDACE,IAAI,CAACQ,0BAA0B,CAC7BT,yBACAU,CAAAA;wBACE,IAAIA,cAAc,cAChBF;oBAEJ;gBAGR;gBAED,CAAA;oBACC,MAAMD;oBACN,IAAIL,MAAM;oBACV,MAAM51B,WAAW,MAAM,IAAI,CAACq2B,kBAAkB,CAACj1B;oBAC/C,IAAIw0B,MAAM;oBACV,IAAI51B,YAAY,MACd;oBAEF,MAAM,EAACH,OAAO,EAAEnnB,KAAAA,EAAM,GAAGsnB;oBACzB,IAAItnB,SAAS,MACX;oBAEF,IAAIA,OAAO8rB,KACTmS,OAAOj+B,MAAM8rB,GAAG;yBACX;wBACL,OAAQgU;4BACN,KAAK;4BACL,KAAK;4BACL,KAAK;gCACH,IAAI9/B,MAAM8zC,kBAAkB,KAAK,aAC/B;gCAEF;4BAEF,KAAK;4BACL,KAAK;4BACL,KAAK;gCACH,IACE9zC,MAAM8zC,kBAAkB,KAAK,eAC7B9zC,MAAM8zC,kBAAkB,KAAK,aAE7B;gCAEF;4BAEF,wCAAA;4BACA,KAAK;4BACL,KAAK;wBACP;wBACAoJ,OAAO;wBACPj+B,QAAQ;4BACNo+B,QAAQ7lB,kBAAkB8lB,SAAS;4BACnCh2B,UAAU;gCACRH;gCACAnnB;4BACF;wBACF;oBACF;gBACF,CAAA;YACD,EAAC,OAAO8rB,KAAK;gBACZmS,OAAOnS;YACT;QACF;QACA,MAAM8xB,oBAAoBA;YACxB,IAAIX,iDAAiD;gBACnDA;gBACAA,kDAAkDnoC;YACpD;YACA,IAAIkoC,2BAA2B,MAAM;gBACnC,IAAI,CAACa,uBAAuB,CAACb;gBAC7BA,0BAA0BloC;YAC5B;QACD;QACD,OAAO;YAAC8oC;YAAmBT;QAAoB;IACjD;IAEA,MAAcR,qDAAqD,EACjE7c,UAAU,EACVwc,UAAU,EAACrc,WAAW,EAAElI,oBAAoB,EAAErP,SAAAA,EAAS,EAIxD,EAAE;QACD,IAAIw0B,OAAgB;QACpB,MAAMY,gBAAgB,IAAI9+B,QAEvBC,CAAAA;YACD,MAAM8+B,mBAAmB;gBACvB,IAAI;oBACF,MAAMlR,cAAc,MAAM,IAAI,CAACsM,cAAc,CAACrZ;oBAC9C,OAAO+M;gBACR,EAAC,OAAOmR,IAAI;oBACX,OAAO;gBACT;YACD;YACA,CAAA;gBACC,IAAIC,qBAAqB,MAAMF;gBAC/B,IAAIb,MAAM;gBACV,MAAOe,sBAAsBlmB,qBAAsB;oBACjD,MAAMqI,MAAM;oBACZ,IAAI8c,MAAM;oBACVe,qBAAqB,MAAMF;oBAC3B,IAAIb,MAAM;gBACZ;gBACAj+B,QAAQ;oBAACo+B,QAAQ7lB,kBAAkB0mB,oBAAAA;gBAAoB;YACzD,CAAA;QACF;QACA,MAAM,EAACN,iBAAiB,EAAET,mBAAAA,EAAoB,GAC5C,IAAI,CAACJ,iCAAiC,CAAC;YAACjd;YAAYpX;QAAS;QAC/D,MAAMy1B,sBAAsB,IAAI,CAACtB,sBAAsB,CAAC5c;QACxD,IAAIz5B;QACJ,IAAI;YACF,MAAM43C,UAAU,MAAMp/B,QAAQq/B,IAAI,CAAC;gBACjCF;gBACAhB;gBACAW;aACD;YACD,IAAIM,QAAQf,MAAM,KAAK7lB,kBAAkB8lB,SAAS,EAChD92C,SAAS43C,QAAQ92B,QAAQ;iBAEzB,MAAM,IAAIsF,2CAA2ClE;QAEzD,SAAU;YACRw0B,OAAO;YACPU;QACF;QACA,OAAOp3C;IACT;IAEA,MAAco2C,4CAA4C,EACxD9c,UAAU,EACVwc,UAAU,EACRrc,WAAW,EACX5H,cAAc,EACd6H,kBAAkB,EAClBC,UAAU,EACVzX,SAAAA,EACF,EAID,EAAE;QACD,IAAIw0B,OAAgB;QACpB,MAAMY,gBAAgB,IAAI9+B,QAGvBC,CAAAA;YACD,IAAIq/B,oBAAwCne;YAC5C,IAAIoe,kBAAiC;YACrC,MAAMC,uBAAuB;gBAC3B,IAAI;oBACF,MAAM,EAACr3B,OAAO,EAAEnnB,OAAOmhC,YAAAA,EAAa,GAAG,MAAM,IAAI,CAACsd,kBAAkB,CAClEve,oBACA;wBACEJ;wBACAzH;oBACF;oBAEFkmB,kBAAkBp3B,QAAQgf,IAAI;oBAC9B,OAAOhF,cAAcxV;gBACtB,EAAC,OAAO8uB,GAAG;oBACV,uDAAA;oBACA,iDAAA;oBACA,OAAO6D;gBACT;YACD;YACA,CAAA;gBACCA,oBAAoB,MAAME;gBAC1B,IAAItB,MAAM;gBACV,MACE,KADF,4CAAA;iBAEE;oBACA,IAAI/c,eAAeme,mBAAmB;wBACpCr/B,QAAQ;4BACNo+B,QAAQ7lB,kBAAkBknB,aAAa;4BACvCC,4BAA4BJ;wBAC9B;wBACA;oBACF;oBACA,MAAMne,MAAM;oBACZ,IAAI8c,MAAM;oBACVoB,oBAAoB,MAAME;oBAC1B,IAAItB,MAAM;gBACZ;YACF,CAAA;QACF;QACA,MAAM,EAACU,iBAAiB,EAAET,mBAAAA,EAAoB,GAC5C,IAAI,CAACJ,iCAAiC,CAAC;YAACjd;YAAYpX;QAAS;QAC/D,MAAMy1B,sBAAsB,IAAI,CAACtB,sBAAsB,CAAC5c;QACxD,IAAIz5B;QACJ,IAAI;YACF,MAAM43C,UAAU,MAAMp/B,QAAQq/B,IAAI,CAAC;gBACjCF;gBACAhB;gBACAW;aACD;YACD,IAAIM,QAAQf,MAAM,KAAK7lB,kBAAkB8lB,SAAS,EAChD92C,SAAS43C,QAAQ92B,QAAQ;iBACpB;gBACL,2DAAA;gBACA,IAAIs3B;gBAIJ,MACE,KADF,4CAAA;iBAEE;oBACA,MAAM5e,SAAS,MAAM,IAAI,CAAC2d,kBAAkB,CAACj1B;oBAC7C,IAAIsX,UAAU,MACZ;oBAEF,IACEA,OAAO7Y,OAAO,CAACgf,IAAI,GAClBiY,CAAAA,QAAQO,0BAA0B,IAAItmB,cAAAA,GACvC;wBACA,MAAM+H,MAAM;wBACZ;oBACF;oBACAwe,kBAAkB5e;oBAClB;gBACF;gBACA,IAAI4e,iBAAiB5+C,OAAO;oBAC1B,MAAM6+C,sBAAsB/e,cAAc;oBAC1C,MAAM,EAACgU,kBAAAA,EAAmB,GAAG8K,gBAAgB5+C,KAAK;oBAClD,OAAQ6+C;wBACN,KAAK;wBACL,KAAK;4BACH,IACE/K,uBAAuB,eACvBA,uBAAuB,eACvBA,uBAAuB,aAEvB,MAAM,IAAI7mB,oCAAoCvE;4BAEhD;wBACF,KAAK;wBACL,KAAK;wBACL,KAAK;4BACH,IACEorB,uBAAuB,eACvBA,uBAAuB,aAEvB,MAAM,IAAI7mB,oCAAoCvE;4BAEhD;wBACF,KAAK;wBACL,KAAK;wBACL,KAAK;4BACH,IAAIorB,uBAAuB,aACzB,MAAM,IAAI7mB,oCAAoCvE;4BAEhD;wBACF;4BACE,qBAAA;4BACA,6DAAA;4BACEkL,CAAAA,CAAAA,KAAa,CAAA,EAAIirB;oBACvB;oBACAr4C,SAAS;wBACP2gB,SAASy3B,gBAAgBz3B,OAAO;wBAChCnnB,OAAO;4BAAC8rB,KAAK8yB,gBAAgB5+C,KAAK,CAAC8rB,GAAAA;wBAAG;oBACvC;gBACH,OACE,MAAM,IAAImB,oCAAoCvE;YAElD;QACF,SAAU;YACRw0B,OAAO;YACPU;QACF;QACA,OAAOp3C;IACT;IAEA,MAAck2C,6CAA6C,EACzD5c,UAAU,EACVpX,SAAAA,EAID,EAAE;QACD,IAAIo2B;QACJ,MAAMhB,gBAAgB,IAAI9+B,QAGvBC,CAAAA;YACD,IAAI8/B,YAAY,IAAI,CAACpH,iCAAiC,IAAI;YAC1D,OAAQ7X;gBACN,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACHif,YAAY,IAAI,CAACpH,iCAAiC,IAAI;oBACtD;YAMJ;YACAmH,YAAYxe,WACV,IAAMrhB,QAAQ;oBAACo+B,QAAQ7lB,kBAAkBwnB,SAAS;oBAAED;gBAAU,IAC9DA;QAEJ;QACA,MAAM,EAACnB,iBAAiB,EAAET,mBAAAA,EAAoB,GAC5C,IAAI,CAACJ,iCAAiC,CAAC;YACrCjd;YACApX;QACF;QACF,IAAIliB;QACJ,IAAI;YACF,MAAM43C,UAAU,MAAMp/B,QAAQq/B,IAAI,CAAC;gBAAClB;gBAAqBW;aAAc;YACvE,IAAIM,QAAQf,MAAM,KAAK7lB,kBAAkB8lB,SAAS,EAChD92C,SAAS43C,QAAQ92B,QAAQ;iBAEzB,MAAM,IAAIwF,+BACRpE,WACA01B,QAAQW,SAAS,GAAG;QAG1B,SAAU;YACRE,aAAaH;YACblB;QACF;QACA,OAAOp3C;IACT;IAEA;;GAEF,GACE,MAAM04C,kBAA+C;QACnD,MAAM1F,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,mBAAmB,EAAE;QAC9D,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc9/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMqnC;QAClD,IAAI,WAAW3D,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAM24C,gBAAgBrf,UAAuB,EAA8B;QACzE,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC,EAAE,EAAEvZ;QACjC,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,mBAAmB1lB;QAC5D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhG;QAC9B,IAAI,WAAWtE,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMwX,QACJ0sB,kBAA+C,EAC9B;QACjB,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,WAAW1lB;QACpD,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;QAC5C,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAM44C,cACJ1U,kBAAqD,EACpC;QACjB,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,iBAAiB1lB;QAC1D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcp3B,CAAAA,GAAAA,mBAAM,AAANA;QAC5C,IAAI,WAAWg7B,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;;GAKF,GACE,MAAM64C,eACJC,SAAiB,EACjBC,KAAa,EACc;QAC3B,MAAMntB,OAAO;YAACktB;YAAWC;SAAM;QAC/B,MAAM/F,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc9/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMw+B;QAClD,IAAI,WAAWkF,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMm3C,mBACJj1B,SAA+B,EAC/BuS,MAA8B,EAC0B;QACxD,MAAM,EAAC9T,OAAO,EAAEnnB,OAAOwO,MAAAA,EAAO,GAAG,MAAM,IAAI,CAAC2P,oBAAoB,CAC9D;YAACuK;SAAU,EACXuS;QAEF1K,OAAO/hB,OAAO5M,MAAM,KAAK;QACzB,MAAM5B,QAAQwO,MAAM,CAAC,EAAE;QACvB,OAAO;YAAC2Y;YAASnnB;QAAM;IACzB;IAEA;;GAEF,GACE,MAAMme,qBACJ0Z,UAAuC,EACvCoD,MAA8B,EACiC;QAC/D,MAAM5V,SAAgB;YAACwS;SAAW;QAClC,IAAIoD,QACF5V,OAAOld,IAAI,CAAC8yB;QAEd,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,wBAAwBzyB;QACjE,MAAM6pB,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWzF;QAC9B,IAAI,WAAW7E,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMg5C,oBACJ9U,kBAA2D,EAC1C;QACjB,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,uBAAuB1lB;QAChE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcG,CAAAA,GAAAA,mBAAM,AAANA;QAC5C,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAMi5C,eAAe3f,UAAuB,EAAmB;QAC7D,MAAMt5B,SAAS,MAAM,IAAI,CAACo0C,SAAS,CAAC;YAClC9a;YACA4f,mCAAmC;QACrC;QACA,OAAOl5C,OAAOxG,KAAK,CAACsG,KAAK;IAC3B;IAEA;;GAEF,GACE,MAAMq5C,qBACJ7f,UAAuB,EACK;QAC5B,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC,EAAE,EAAEvZ;QACjC,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,wBAAwB1lB;QACjE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW5J;QAC9B,IAAI,WAAWV,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMo5C,mBACJtuB,SAAsB,EACtB8V,KAAc,EACdsD,kBAA0D,EACrB;QACrC,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAC/nB,UAAU/rB,GAAG,CAACujB,CAAAA,SAAUA,OAAO5nB,QAAQ;SAAI,EAC5C4+B,YACAhrB,UAAS,YAAA,KACT;YACE,GAAGmmB,MAAM;YACTmM,OAAOA,SAAS,OAAOA,QAAQnM,QAAQmM;QACzC;QAEF,MAAMoS,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWtN;QAC9B,IAAI,WAAWgD,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMq5C,mBAA2C;QAC/C,MAAMrG,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,oBAAoB,EAAE;QAC/D,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW3J;QAC9B,IAAI,WAAWX,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMs5C,aACJpV,kBAAoD,EAChC;QACpB,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,gBAAgB1lB;QACzD,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWzJ;QAC9B,IAAI,WAAWb,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMu5C,mBAA2C;QAC/C,MAAMvG,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,oBAAoB,EAAE;QAC/D,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWxJ;QAC9B,IAAI,WAAWd,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,MAAMs+C,gBAAgB9Q,IAAI1oC,MAAM;QAChC,OAAO,IAAIogC,cACToZ,cAAcnZ,aAAa,EAC3BmZ,cAAclZ,wBAAwB,EACtCkZ,cAAcjZ,MAAM,EACpBiZ,cAAchZ,gBAAgB,EAC9BgZ,cAAc/Y,eAChB;IACF;IAEA;;;GAGF,GACE,MAAMgZ,oBAA6C;QACjD,MAAMzG,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,qBAAqB,EAAE;QAChE,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWvJ;QAC9B,IAAI,WAAWf,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;GAGF,GACE,MAAM8+B,kCACJnR,UAAkB,EAClB2L,UAAuB,EACN;QACjB,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC;YAACllB;SAAW,EAAE2L;QAC3C,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CACtC,qCACA1lB;QAEF,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWxF;QAC9B,IAAI,WAAW9E,KAAK;YAClBzW,QAAQC,IAAI,CAAC;YACb,OAAO;QACT;QACA,OAAOwW,IAAI1oC,MAAM;IACnB;IAEA;;;;;GAKF,GACE,MAAM05C,6BAA6BpgB,UAAuB,EAKxD;QACA,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC,EAAE,EAAEvZ;QACjC,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW9C;QAC9B,IAAI,WAAWxH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;GAGF,GACE,MAAM25C,4BACJZ,KAAc,EACc;QAC5B,MAAM/F,YAAY,MAAM,IAAI,CAAC1B,WAAW,CACtC,+BACAyH,QAAQ;YAACA;SAAM,GAAG,EACpB;QACA,MAAMrQ,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWtC;QAC9B,IAAI,WAAWhI,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAIJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAM45C,6BACJ9nB,SAAoB,EACpBwH,UAAuB,EAC+B;QACtD,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAAC;YAAC/gB;SAAU,EAAEwH;QAC1C,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CACtC,gCACA1lB;QAGF,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWrC;QAC9B,IAAI,WAAWjI,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,MAAM,EAACylB,OAAO,EAAEnnB,KAAAA,EAAM,GAAGkvC,IAAI1oC,MAAM;QACnC,OAAO;YACL2gB;YACAnnB,OAAOA,UAAU,OAAOA,MAAMihC,aAAa,GAAG;QAC/C;IACH;IAEA;;GAEF,GACE,MAAM/G,iBACJh1B,OAAyB,EACzB46B,UAAuB,EACwB;QAC/C,MAAMugB,cAAc72B,SAAStkB,QAAQ/C,SAAS,IAAIuD,QAAQ,CAAC;QAC3D,MAAM0sB,OAAO,IAAI,CAACinB,UAAU,CAAC;YAACgH;SAAY,EAAEvgB;QAC5C,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,oBAAoB1lB;QAE7D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwB7qC,CAAAA,GAAAA,qBAAQ,AAARA,EAAS8qC,CAAAA,GAAAA,mBAAM,AAANA;QAC/D,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,IAAIwtC,IAAI1oC,MAAM,KAAK,MACjB,MAAM,IAAI1B,MAAM;QAElB,OAAOoqC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAM85C,4BACJrlB,MAA0C,EACL;QACrC,MAAMpI,WAAWoI,QAAQslB,wBAAwBh7C,IAAItE,CAAAA,MAAOA,IAAIC,QAAQ;QACxE,MAAMkxB,OAAOS,UAAUjxB,SAAS;YAACixB;SAAS,GAAG,EAAE;QAC/C,MAAM2mB,YAAY,MAAM,IAAI,CAAC1B,WAAW,CACtC,+BACA1lB;QAEF,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW1J;QAC9B,IAAI,WAAWZ,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IACA;;;;;GAKF,GACE,MAAMg6C,mBACJ1gB,UAAuB,EACwC;QAC/D,IAAI;YACF,MAAMoP,MAAM,MAAM,IAAI,CAACgR,4BAA4B,CAACpgB;YACpD,OAAOoP,IAAIlvC,KAAK;QACjB,EAAC,OAAOy6C,GAAG;YACV,MAAM,IAAI31C,MAAM,qCAAqC21C;QACvD;IACF;IAEA;;;GAGF,GACE,MAAMx8B,mBACJysB,kBAA0D,EACjB;QACzC,IAAI;YACF,MAAMwE,MAAM,MAAM,IAAI,CAACuR,4BAA4B,CAAC/V;YACpD,OAAOwE,IAAIlvC,KAAK;QACjB,EAAC,OAAOy6C,GAAG;YACV,MAAM,IAAI31C,MAAM,qCAAqC21C;QACvD;IACF;IAEA;;;GAGF,GACE,MAAMgG,6BACJ/V,kBAA0D,EACM;QAChE,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAACinB,UAAU,CAC1B,EAAE,EACFvZ,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW5C;QAC9B,IAAI,WAAW1H,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMk6C,iBACJpoB,SAAoB,EACpBujB,SAAkC,EACO;QACzC,MAAM,EAAC/b,UAAU,EAAE7E,MAAAA,EAAO,GAAGwP,4BAA4BoR;QACzD,MAAMzpB,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAC/gB;SAAU,EACXwH,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,oBAAoB1lB;QAC7D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW3C;QAC9B,IAAI,WAAW3H,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,2CAA2C42B,YAAY;QAG3D,OAAO4W,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMm6C,aAA+B;QACnC,MAAMnH,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,cAAc,EAAE;QACzD,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcgC;QAC5C,IAAI,WAAW4B,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMo6C,iBAAkC;QACtC,MAAMpH,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB,EAAE;QAC7D,MAAM5I,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAcp3B,CAAAA,GAAAA,mBAAM,AAANA;QAC5C,IAAI,WAAWg7B,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;;GAKF,GAME;;;GAGF,GACE,iDAAA;IAMA;;;GAGF,GACE,iDAAA;IAMA;;GAEF,GACE,iDAAA;IAMA,iDAAA;IAMA,iDAAA;IAMA;;GAEF,GACE,iDAAA;IACA,MAAMq6C,SACJ1a,IAAY,EACZ0V,SAAmC,EAMnC;QACA,MAAM,EAAC/b,UAAU,EAAE7E,MAAAA,EAAO,GAAGwP,4BAA4BoR;QACzD,MAAMzpB,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAAC3a;SAAK,EACNrG,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,YAAY1lB;QACrD,IAAI;YACF,OAAQ6I,QAAQ8lB;gBACd,KAAK;oBAAY;wBACf,MAAM7R,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWtD;wBAC9B,IAAI,WAAWhH,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,OAAOwtC,IAAI1oC,MAAM;oBACnB;gBACA,KAAK;oBAAQ;wBACX,MAAM0oC,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWvD;wBAC9B,IAAI,WAAW/G,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,OAAOwtC,IAAI1oC,MAAM;oBACnB;gBACA;oBAAS;wBACP,MAAM0oC,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW3D;wBAC9B,IAAI,WAAW3G,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,MAAM,EAAC8E,MAAAA,EAAO,GAAG0oC;wBACjB,OAAO1oC,SACH;4BACE,GAAGA,MAAM;4BACTwV,cAAcxV,OAAOwV,YAAY,CAACzW,GAAG,CACnC,CAAC,EAACoZ,WAAW,EAAEuP,IAAI,EAAEyE,OAAAA,EAAQ,GAAM,CAAA;oCACjCzE;oCACAvP,aAAa;wCACX,GAAGA,WAAW;wCACdzZ,SAASymC,6BACPhZ,SACAhU,YAAYzZ,OACd;oCACD;oCACDytB;gCACF,CAAA;wBAEJ,IACA;oBACN;YACF;QACD,EAAC,OAAO8nB,GAAG;YACV,MAAM,IAAIlb,mBACRkb,GACA;QAEJ;IACF;IAEA;;GAEF,GAME,iDAAA;IAMA,iDAAA;IAKA,iDAAA;IACA,MAAMuG,eACJ7a,IAAY,EACZ0V,SAAmC,EAMnC;QACA,MAAM,EAAC/b,UAAU,EAAE7E,MAAAA,EAAO,GAAGwP,4BAA4BoR;QACzD,MAAMzpB,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAAC3a;SAAK,EACNrG,YACA,cACA7E;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,YAAY1lB;QACrD,IAAI;YACF,OAAQ6I,QAAQ8lB;gBACd,KAAK;oBAAY;wBACf,MAAM7R,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWpD;wBAC9B,IAAI,WAAWlH,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,OAAOwtC,IAAI1oC,MAAM;oBACnB;gBACA,KAAK;oBAAQ;wBACX,MAAM0oC,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWnD;wBAC9B,IAAI,WAAWnH,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,OAAOwtC,IAAI1oC,MAAM;oBACnB;gBACA;oBAAS;wBACP,MAAM0oC,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWrD;wBAC9B,IAAI,WAAWjH,KACb,MAAMA,IAAIxtC,KAAK;wBAEjB,OAAOwtC,IAAI1oC,MAAM;oBACnB;YACF;QACD,EAAC,OAAOi0C,GAAG;YACV,MAAM,IAAIlb,mBAAmBkb,GAAmB;QAClD;IACF;IAwCA;;GAEF,GACE,MAAMwG,mBACJhF,kBAA0D,EACT;QACjD,IAAIiF;QACJ,IAAIphB;QAEJ,IAAI,OAAOmc,uBAAuB,UAChCnc,aAAamc;aACR,IAAIA,oBAAoB;YAC7B,MAAM,EAACnc,YAAYt8B,CAAC,EAAE,GAAG4R,MAAK,GAAG6mC;YACjCnc,aAAat8B;YACb09C,QAAQ9rC;QACV;QAEA,MAAMgd,OAAO,IAAI,CAACinB,UAAU,CAAC,EAAE,EAAEvZ,YAAY,UAAUohB;QACvD,MAAM1H,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,sBAAsB1lB;QAC/D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW7L;QAC9B,IAAI,WAAWuB,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAIJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;;;GAMF,GAME;;GAEF,GACE,iDAAA;IAMA;;GAEF,GACE,iDAAA;IACA,MAAM0X,eACJwK,SAAiB,EACjBmzB,SAAyC,EACK;QAC9C,MAAM,EAAC/b,UAAU,EAAE7E,MAAAA,EAAO,GAAGwP,4BAA4BoR;QACzD,MAAMzpB,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAACp4B;SAAU,EACXoX,YACAhrB,UAAS,YAAA,KACTmmB;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhD;QAC9B,IAAI,WAAWtH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAG1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;QACzB,IAAI,CAACA,QAAQ,OAAOA;QAEpB,OAAO;YACL,GAAGA,MAAM;YACTmY,aAAa;gBACX,GAAGnY,OAAOmY,WAAW;gBACrBzZ,SAASymC,6BACPnlC,OAAOmsB,OAAO,EACdnsB,OAAOmY,WAAW,CAACzZ,OACrB;YACF;QACD;IACH;IAEA;;GAEF,GACE,MAAMi8C,qBACJz4B,SAA+B,EAC/BgiB,kBAA6D,EAClB;QAC3C,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMtY,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAACp4B;SAAU,EACXoX,YACA,cACA7E;QAEF,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB1lB;QAC3D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW/C;QAC9B,IAAI,WAAWvH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAM46C,sBACJvpB,UAAkC,EAClC6S,kBAA6D,EACd;QAC/C,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMgF,QAAQ7X,WAAWtyB,GAAG,CAACmjB,CAAAA;YAC3B,MAAM0J,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;gBAACp4B;aAAU,EACXoX,YACA,cACA7E;YAEF,OAAO;gBACL0U,YAAY;gBACZvd;YACD;QACH;QAEA,MAAMonB,YAAY,MAAM,IAAI,CAACzB,gBAAgB,CAACrI;QAC9C,MAAMR,MAAMsK,UAAUj0C,GAAG,CAAEi0C,CAAAA;YACzB,MAAMtK,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW/C;YAC9B,IAAI,WAAWvH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;YAE1C,OAAOwtC,IAAI1oC,MAAM;QACnB;QAEA,OAAO0oC;IACT;IAEA;;;;;;;GAOF,GAME;;;;GAIF,GACE,iDAAA;IAMA;;;;GAIF,GACE,iDAAA;IACA,MAAMmS,gBACJxpB,UAAkC,EAClC6S,kBAA4D,EACV;QAClD,MAAM,EAAC5K,UAAU,EAAE7E,MAAAA,EAAO,GACxBwP,4BAA4BC;QAC9B,MAAMgF,QAAQ7X,WAAWtyB,GAAG,CAACmjB,CAAAA;YAC3B,MAAM0J,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;gBAACp4B;aAAU,EACXoX,YACAhrB,UAAS,YAAA,KACTmmB;YAEF,OAAO;gBACL0U,YAAY;gBACZvd;YACD;QACH;QAEA,MAAMonB,YAAY,MAAM,IAAI,CAACzB,gBAAgB,CAACrI;QAC9C,MAAMR,MAAMsK,UAAUj0C,GAAG,CAAEi0C,CAAAA;YACzB,MAAMtK,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhD;YAC9B,IAAI,WAAWtH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;YAE1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;YACzB,IAAI,CAACA,QAAQ,OAAOA;YAEpB,OAAO;gBACL,GAAGA,MAAM;gBACTmY,aAAa;oBACX,GAAGnY,OAAOmY,WAAW;oBACrBzZ,SAASymC,6BACPnlC,OAAOmsB,OAAO,EACdnsB,OAAOmY,WAAW,CAACzZ,OACrB;gBACF;YACD;QACH;QAEA,OAAOgqC;IACT;IAEA;;;;;GAKF,GACE,MAAMoS,kBACJnb,IAAY,EACZrG,UAAqB,EACI;QACzB,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAAC;YAAC3a;SAAK,EAAErG;QACrD,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,qBAAqB1lB;QAC9D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlD;QAE9B,IAAI,WAAWpH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAG1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;QACzB,IAAI,CAACA,QACH,MAAM,IAAI1B,MAAM,qBAAqBqhC,OAAO;QAG9C,MAAMob,QAAQ;YACZ,GAAG/6C,MAAM;YACTwV,cAAcxV,OAAOwV,YAAY,CAACzW,GAAG,CAAC,CAAC,EAACoZ,WAAW,EAAEuP,IAAAA,EAAK;gBACxD,MAAMhpB,UAAU,IAAIqtB,QAAQ5T,YAAYzZ,OAAO;gBAC/C,OAAO;oBACLgpB;oBACAvP,aAAa;wBACX,GAAGA,WAAW;wBACdzZ;oBACF;gBACD;YACF;QACF;QAED,OAAO;YACL,GAAGq8C,KAAK;YACRvlC,cAAculC,MAAMvlC,YAAY,CAACzW,GAAG,CAAC,CAAC,EAACoZ,WAAW,EAAEuP,IAAAA,EAAK;gBACvD,OAAO;oBACLA;oBACAvP,aAAaiZ,YAAY8D,QAAQ,CAC/B/c,YAAYzZ,OAAO,EACnByZ,YAAYkZ,UACd;gBACD;YACF;QACF;IACH;IAEA;;GAEF,GACE,MAAM2pB,UACJlC,SAAiB,EACjBmC,OAAgB,EAChB3hB,UAAqB,EACG;QACxB,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1CW,YAAY3sC,YAAY;YAACwqC;YAAWmC;SAAQ,GAAG;YAACnC;SAAU,EAC1Dxf;QAEF,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,aAAa1lB;QACtD,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWlO,cAAc9/B,CAAAA,GAAAA,kBAAK,AAALA,EAAMigC,CAAAA,GAAAA,mBAAM,AAANA;QAClD,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMk7C,mBACJvb,IAAY,EACZrG,UAAqB,EACK;QAC1B,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAAC3a;SAAK,EACNrG,YACAhrB,WACA;YACEisC,oBAAoB;YACpB/K,SAAS;QACX;QAEF,MAAMwD,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,YAAY1lB;QACrD,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWjD;QAC9B,IAAI,WAAWrH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;QACzB,IAAI,CAACA,QACH,MAAM,IAAI1B,MAAM,WAAWqhC,OAAO;QAEpC,OAAO3/B;IACT;IAEA;;;;GAIF,GACE,MAAMm7C,4BACJxb,IAAY,EACZrG,UAAqB,EACK;QAC1B,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAAC3a;SAAK,EACNrG,YACAhrB,WACA;YACEisC,oBAAoB;YACpB/K,SAAS;QACX;QAEF,MAAMwD,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,qBAAqB1lB;QAC9D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWjD;QAC9B,IAAI,WAAWrH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAE1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;QACzB,IAAI,CAACA,QACH,MAAM,IAAI1B,MAAM,qBAAqBqhC,OAAO;QAE9C,OAAO3/B;IACT;IAEA;;;;GAIF,GACE,MAAMo7C,wBACJl5B,SAA+B,EAC/BoX,UAAqB,EACiB;QACtC,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAAC;YAACp4B;SAAU,EAAEoX;QAC1D,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhD;QAC9B,IAAI,WAAWtH,KACb,MAAM,IAAI3P,mBAAmB2P,IAAIxtC,KAAK,EAAE;QAG1C,MAAM8E,SAAS0oC,IAAI1oC,MAAM;QACzB,IAAI,CAACA,QAAQ,OAAOA;QAEpB,MAAMtB,UAAU,IAAIqtB,QAAQ/rB,OAAOmY,WAAW,CAACzZ,OAAO;QACtD,MAAM2yB,aAAarxB,OAAOmY,WAAW,CAACkZ,UAAU;QAChD,OAAO;YACL,GAAGrxB,MAAM;YACTmY,aAAaiZ,YAAY8D,QAAQ,CAACx2B,SAAS2yB;QAC5C;IACH;IAEA;;;;GAIF,GACE,MAAMgqB,8BACJn5B,SAA+B,EAC/BoX,UAAqB,EACuB;QAC5C,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAACp4B;SAAU,EACXoX,YACA;QAEF,MAAM0Z,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW/C;QAC9B,IAAI,WAAWvH,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;GAIF,GACE,MAAMs7C,+BACJjqB,UAAkC,EAClCiI,UAAqB,EAC2B;QAChD,MAAM4P,QAAQ7X,WAAWtyB,GAAG,CAACmjB,CAAAA;YAC3B,MAAM0J,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;gBAACp4B;aAAU,EACXoX,YACA;YAEF,OAAO;gBACL6P,YAAY;gBACZvd;YACD;QACH;QAEA,MAAMonB,YAAY,MAAM,IAAI,CAACzB,gBAAgB,CAACrI;QAC9C,MAAMR,MAAMsK,UAAUj0C,GAAG,CAAEi0C,CAAAA;YACzB,MAAMtK,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW/C;YAC9B,IAAI,WAAWvH,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;YAGJ,OAAOwtC,IAAI1oC,MAAM;QACnB;QAEA,OAAO0oC;IACT;IAEA;;;;;;;;;GASF,GACE,MAAM6S,iCACJn2B,OAAkB,EAClB0zB,SAAiB,EACjBmC,OAAe,EACuB;QACtC,IAAIp3C,UAAe,CAAA;QAEnB,IAAI23C,sBAAsB,MAAM,IAAI,CAACrH,sBAAsB;QAC3D,MAAO,CAAE,CAAA,WAAWtwC,OAAAA,EAAU;YAC5Bi1C;YACA,IAAIA,aAAa,KAAKA,YAAY0C,qBAChC;YAGF,IAAI;gBACF,MAAMT,QAAQ,MAAM,IAAI,CAACI,2BAA2B,CAClDrC,WACA;gBAEF,IAAIiC,MAAM1pB,UAAU,CAACj2B,MAAM,GAAG,GAC5ByI,QAAQ43C,KAAK,GACXV,MAAM1pB,UAAU,CAAC0pB,MAAM1pB,UAAU,CAACj2B,MAAM,GAAG,EAAE,CAAC8D,QAAQ;YAE3D,EAAC,OAAOomB,KAAK;gBACZ,IAAIA,eAAehnB,SAASgnB,IAAI5mB,OAAO,CAAC4O,QAAQ,CAAC,YAC/C;qBAEA,MAAMgY;YAEV;QACF;QAEA,IAAIo2B,uBAAuB,MAAM,IAAI,CAAClkC,OAAO,CAAC;QAC9C,MAAO,CAAE,CAAA,YAAY3T,OAAAA,EAAU;YAC7Bo3C;YACA,IAAIA,UAAUS,sBACZ;YAGF,IAAI;gBACF,MAAMX,QAAQ,MAAM,IAAI,CAACI,2BAA2B,CAACF;gBACrD,IAAIF,MAAM1pB,UAAU,CAACj2B,MAAM,GAAG,GAC5ByI,QAAQ83C,MAAM,GACZZ,MAAM1pB,UAAU,CAAC0pB,MAAM1pB,UAAU,CAACj2B,MAAM,GAAG,EAAE,CAAC8D,QAAQ;YAE3D,EAAC,OAAOomB,KAAK;gBACZ,IAAIA,eAAehnB,SAASgnB,IAAI5mB,OAAO,CAAC4O,QAAQ,CAAC,YAC/C;qBAEA,MAAMgY;YAEV;QACF;QAEA,MAAMs2B,yBAAyB,MAAM,IAAI,CAACC,iCAAiC,CACzEz2B,SACAvhB;QAEF,OAAO+3C,uBAAuB78C,GAAG,CAACipC,CAAAA,OAAQA,KAAK9lB,SAAS;IAC1D;IAEA;;;;;;;GAOF,GACE,MAAM25B,kCACJz2B,OAAkB,EAClBvhB,OAA+C,EAC/Cy1B,UAAqB,EACmB;QACxC,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAACl1B,QAAQ1qB,QAAQ;SAAG,EACpB4+B,YACAhrB,WACAzK;QAEF,MAAMmvC,YAAY,MAAM,IAAI,CAAC1B,WAAW,CACtC,qCACA1lB;QAEF,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhI;QAC9B,IAAI,WAAWtC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;;;;GAOF,GACE,MAAM87C,wBACJ12B,OAAkB,EAClBvhB,OAAqC,EACrCy1B,UAAqB,EACmB;QACxC,MAAM1N,OAAO,IAAI,CAAC0uB,0BAA0B,CAC1C;YAACl1B,QAAQ1qB,QAAQ;SAAG,EACpB4+B,YACAhrB,WACAzK;QAEF,MAAMmvC,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,2BAA2B1lB;QACpE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAW7H;QAC9B,IAAI,WAAWzC,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT;QAGJ,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA,MAAM+7C,sBACJ9wB,UAAqB,EACrBwJ,MAA6B,EACqC;QAClE,MAAM,EAAC9T,OAAO,EAAEnnB,OAAOwiD,WAAAA,EAAY,GAAG,MAAM,IAAI,CAAC9G,wBAAwB,CACvEjqB,YACAwJ;QAGF,IAAIj7B,QAAQ;QACZ,IAAIwiD,gBAAgB,MAClBxiD,QAAQ,IAAI6oC,0BAA0B;YACpC5nC,KAAKwwB;YACLJ,OAAOwX,0BAA0BvnC,WAAW,CAACkhD,YAAYrtC,IAAI;QAC/D;QAGF,OAAO;YACLgS;YACAnnB;QACD;IACH;IAEA;;GAEF,GACE,MAAMy+C,mBACJtd,YAAuB,EACvBuJ,kBAA0D,EACL;QACrD,MAAM,EAACvjB,OAAO,EAAEnnB,OAAOwiD,WAAAA,EAAY,GAAG,MAAM,IAAI,CAAC9G,wBAAwB,CACvEva,cACAuJ;QAGF,IAAI1qC,QAAQ;QACZ,IAAIwiD,gBAAgB,MAClBxiD,QAAQ+gC,aAAaG,eAAe,CAACshB,YAAYrtC,IAAI;QAGvD,OAAO;YACLgS;YACAnnB;QACD;IACH;IAEA;;GAEF,GACE,MAAMyiD,SACJthB,YAAuB,EACvBuJ,kBAAgD,EAClB;QAC9B,OAAO,MAAM,IAAI,CAAC+T,kBAAkB,CAACtd,cAAcuJ,oBAChDxM,IAAI,CAACrlB,CAAAA,IAAKA,EAAE7Y,KAAK,EACjBq+B,KAAK,CAACoc,CAAAA;YACL,MAAM,IAAI31C,MACR,qCACEq8B,aAAajgC,QAAQ,KACrB,OACAu5C;QAEN;IACJ;IAEA;;;;;;;;;;;;;GAaF,GACE,MAAMiI,eACJC,EAAa,EACbvrC,QAAgB,EACe;QAC/B,MAAMoiC,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,kBAAkB;YACzD6K,GAAGzhD,QAAQ;YACXkW;SACD;QACD,MAAM83B,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWpC;QAC9B,IAAI,WAAWlI,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAcihD,WAAAA,EAAAA,GAAGzhD,QAAQ,GAAE,OAAA,CAC7B;QAEF,OAAOguC,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACE,MAAMo8C,gCACJC,YAAqB,EACoB;QACzC,IAAI,CAACA,cAAc;YACjB,6BAAA;YACA,MAAO,IAAI,CAACvK,iBAAiB,CAC3B,MAAMlY,MAAM;YAEd,MAAM0iB,iBAAiB5hC,KAAKG,GAAG,KAAK,IAAI,CAACk3B,cAAc,CAACE,SAAS;YACjE,MAAMsK,UAAUD,kBAAkBxY;YAClC,IAAI,IAAI,CAACiO,cAAc,CAACC,eAAe,KAAK,QAAQ,CAACuK,SACnD,OAAO,IAAI,CAACxK,cAAc,CAACC,eAAe;QAE9C;QAEA,OAAO,MAAM,IAAI,CAACwK,iBAAiB;IACrC;IAEA;;GAEF,GACE,MAAMA,oBAA6D;QACjE,IAAI,CAAC1K,iBAAiB,GAAG;QACzB,IAAI;YACF,MAAM2K,YAAY/hC,KAAKG,GAAG;YAC1B,MAAM6hC,wBAAwB,IAAI,CAAC3K,cAAc,CAACC,eAAe;YACjE,MAAM2K,kBAAkBD,wBACpBA,sBAAsB5qB,SAAS,GAC/B;YACJ,IAAK,IAAIt0B,IAAI,GAAGA,IAAI,IAAIA,IAAK;gBAC3B,MAAMw0C,kBAAkB,MAAM,IAAI,CAACv6B,kBAAkB,CAAC;gBAEtD,IAAIklC,oBAAoB3K,gBAAgBlgB,SAAS,EAAE;oBACjD,IAAI,CAACigB,cAAc,GAAG;wBACpBC;wBACAC,WAAWv3B,KAAKG,GAAG;wBACnBq3B,uBAAuB,EAAE;wBACzBC,qBAAqB,EAAA;oBACtB;oBACD,OAAOH;gBACT;gBAEA,sCAAA;gBACA,MAAMpY,MAAMtD,cAAc;YAC5B;YAEA,MAAM,IAAIh4B,MACR,CAAA,uCAAA,EAA0Coc,KAAKG,GAAG,KAAK4hC,UAAS,EAAA,CAClE;QACF,SAAU;YACR,IAAI,CAAC3K,iBAAiB,GAAG;QAC3B;IACF;IAEA;;GAEF,GACE,MAAM8K,0BACJnoB,MAAwC,EACA;QACxC,MAAM,EAAC6E,UAAU,EAAE7E,QAAQ4f,SAAAA,EAAU,GAAGpQ,4BAA4BxP;QACpE,MAAM7I,OAAO,IAAI,CAACinB,UAAU,CAAC,EAAE,EAAEvZ,YAAY,UAAU+a;QACvD,MAAMrB,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,6BAA6B1lB;QACtE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWhO,wBAAwBC,CAAAA,GAAAA,mBAAM,AAANA;QACtD,IAAI,WAAWyD,KACb,MAAM,IAAI3P,mBACR2P,IAAIxtC,KAAK,EACT,CAAA,sCAAA,CACF;QAEF,OAAOwtC,IAAI1oC,MAAM;IACnB;IAEA;;;;;GAKF,GAOE;;GAEF,GACE,iDAAA;IAMA;;GAEF,GACE,iDAAA;IACA,MAAM68C,oBACJC,oBAAkE,EAClEC,eAA2D,EAC3DC,eAA4C,EACkB;QAC9D,IAAI,aAAaF,sBAAsB;YACrC,MAAMG,cAAcH;YACpB,MAAM9nB,kBAAkBioB,YAAYthD,SAAS;YAC7C,MAAMuhD,qBACJz6B,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAAC63B,iBAAiB91B,QAAQ,CAAC;YACxC,IAAIvE,MAAMC,OAAO,CAACmiD,oBAAoBC,oBAAoB1uC,WACxD,MAAM,IAAIhQ,MAAM;YAGlB,MAAMm2B,SAAcsoB,mBAAmB,CAAA;YACvCtoB,OAAO9mB,QAAQ,GAAG;YAClB,IAAI,CAAE,CAAA,gBAAgB8mB,MAAAA,GACpBA,OAAO6E,UAAU,GAAG,IAAI,CAACA,UAAU;YAGrC,MAAM1N,OAAO;gBAACsxB;gBAAoBzoB;aAAO;YACzC,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,uBAAuB1lB;YAChE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWjM;YAC9B,IAAI,WAAW2B,KACb,MAAM,IAAIpqC,MAAM,qCAAqCoqC,IAAIxtC,KAAK,CAACwD,OAAO;YAExE,OAAOgqC,IAAI1oC,MAAM;QACnB;QAEA,IAAImY;QACJ,IAAI2kC,gCAAgC1rB,aAAa;YAC/C,IAAI+rB,aAA0BL;YAC9B3kC,cAAc,IAAIiZ;YAClBjZ,YAAYmZ,QAAQ,GAAG6rB,WAAW7rB,QAAQ;YAC1CnZ,YAAYgP,YAAY,GAAG21B,qBAAqB31B,YAAY;YAC5DhP,YAAYqZ,SAAS,GAAG2rB,WAAW3rB,SAAS;YAC5CrZ,YAAYkZ,UAAU,GAAG8rB,WAAW9rB,UAAU;QAChD,OAAO;YACLlZ,cAAciZ,YAAY8D,QAAQ,CAAC4nB;YACnC,mEAAA;YACA3kC,YAAYuZ,QAAQ,GAAGvZ,YAAYwZ,KAAK,GAAGrjB;QAC7C;QAEA,IAAIyuC,oBAAoBzuC,aAAa,CAAC3T,MAAMC,OAAO,CAACmiD,kBAClD,MAAM,IAAIz+C,MAAM;QAGlB,MAAM8Z,UAAU2kC;QAChB,IAAI5kC,YAAYqZ,SAAS,IAAIpZ,SAC3BD,YAAY/E,IAAI,IAAIgF;aACf;YACL,IAAIikC,eAAe,IAAI,CAACxK,wBAAwB;YAChD,OAAS;gBACP,MAAMG,kBACJ,MAAM,IAAI,CAACoK,+BAA+B,CAACC;gBAC7ClkC,YAAYoZ,oBAAoB,GAAGygB,gBAAgBzgB,oBAAoB;gBACvEpZ,YAAY8T,eAAe,GAAG+lB,gBAAgBlgB,SAAS;gBAEvD,IAAI,CAAC1Z,SAAS;gBAEdD,YAAY/E,IAAI,IAAIgF;gBACpB,IAAI,CAACD,YAAY+J,SAAS,EACxB,MAAM,IAAI5jB,MAAM,eAAhB,sBAAA;gBAGF,MAAM4jB,YAAY/J,YAAY+J,SAAS,CAAChjB,QAAQ,CAAC;gBACjD,IACE,CAAC,IAAI,CAAC6yC,cAAc,CAACI,mBAAmB,CAAC7kC,QAAQ,CAAC4U,cAClD,CAAC,IAAI,CAAC6vB,cAAc,CAACG,qBAAqB,CAAC5kC,QAAQ,CAAC4U,YACpD;oBACA,sEAAA;oBACA,iDAAA;oBACA,IAAI,CAAC6vB,cAAc,CAACI,mBAAmB,CAACxwC,IAAI,CAACugB;oBAC7C;gBACF,OACE,wEAAA;gBACA,kDAAA;gBACA,2EAAA;gBACA,+EAAA;gBACAm6B,eAAe;YAEnB;QACF;QAEA,MAAM39C,UAAUyZ,YAAYkb,QAAQ;QACpC,MAAMlF,WAAWzvB,QAAQ/C,SAAS;QAClC,MAAMq5B,kBAAkB7c,YAAY0c,UAAU,CAAC1G;QAC/C,MAAM+uB,qBAAqBloB,gBAAgB91B,QAAQ,CAAC;QACpD,MAAMu1B,SAAc;YAClB9mB,UAAU;YACV2rB,YAAY,IAAI,CAACA,UAAAA;QAClB;QAED,IAAI0jB,iBAAiB;YACnB,MAAMlyB,YAAY,AAChBnwB,CAAAA,MAAMC,OAAO,CAACoiD,mBACVA,kBACAt+C,QAAQyuB,aAAa,EAAA,EACzBpuB,GAAG,CAACtE,CAAAA,MAAOA,IAAIC,QAAQ;YAEzB+5B,MAAM,CAAC,WAAW,GAAG;gBACnB9mB,UAAU;gBACVmd;YACD;QACH;QAEA,IAAI1S,SACFqc,OAAO2oB,SAAS,GAAG;QAGrB,MAAMxxB,OAAO;YAACsxB;YAAoBzoB;SAAO;QACzC,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,uBAAuB1lB;QAChE,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWjM;QAC9B,IAAI,WAAW2B,KAAK;YAClB,IAAI5oB;YACJ,IAAI,UAAU4oB,IAAIxtC,KAAK,EAAE;gBACvB4kB,OAAO4oB,IAAIxtC,KAAK,CAACyT,IAAI,CAACmR,IAAI;gBAC1B,IAAIA,QAAQnlB,MAAMC,OAAO,CAACklB,OAAO;oBAC/B,MAAMu9B,cAAc;oBACpB,MAAMC,WAAWD,cAAcv9B,KAAKzhB,IAAI,CAACg/C;oBACzCprB,QAAQ/2B,KAAK,CAACwtC,IAAIxtC,KAAK,CAACwD,OAAO,EAAE4+C;gBACnC;YACF;YAEA,MAAM,IAAItmB,qBAAqB;gBAC7BC,QAAQ;gBACR/U,WAAW;gBACXgV,oBAAoBwR,IAAIxtC,KAAK,CAACwD,OAAO;gBACrCohB,MAAMA;YACR;QACF;QACA,OAAO4oB,IAAI1oC,MAAM;IACnB;IAEA;;;;;GAKF,GAOE;;GAEF,GACE,iDAAA;IAMA;;GAEF,GACE,iDAAA;IACA,MAAM+X,gBACJI,WAA+C,EAC/ColC,gBAA8C,EAC9C15C,OAAqB,EACU;QAC/B,IAAI,aAAasU,aAAa;YAC5B,IAAIolC,oBAAoB5iD,MAAMC,OAAO,CAAC2iD,mBACpC,MAAM,IAAIj/C,MAAM;YAGlB,MAAM02B,kBAAkB7c,YAAYxc,SAAS;YAC7C,OAAO,MAAM,IAAI,CAAC6hD,kBAAkB,CAACxoB,iBAAiBuoB;QACxD;QAEA,IAAIA,qBAAqBjvC,aAAa,CAAC3T,MAAMC,OAAO,CAAC2iD,mBACnD,MAAM,IAAIj/C,MAAM;QAGlB,MAAM8Z,UAAUmlC;QAChB,IAAIplC,YAAYqZ,SAAS,EACvBrZ,YAAY/E,IAAI,IAAIgF;aACf;YACL,IAAIikC,eAAe,IAAI,CAACxK,wBAAwB;YAChD,OAAS;gBACP,MAAMG,kBACJ,MAAM,IAAI,CAACoK,+BAA+B,CAACC;gBAC7ClkC,YAAYoZ,oBAAoB,GAAGygB,gBAAgBzgB,oBAAoB;gBACvEpZ,YAAY8T,eAAe,GAAG+lB,gBAAgBlgB,SAAS;gBACvD3Z,YAAY/E,IAAI,IAAIgF;gBACpB,IAAI,CAACD,YAAY+J,SAAS,EACxB,MAAM,IAAI5jB,MAAM,eAAhB,sBAAA;gBAGF,MAAM4jB,YAAY/J,YAAY+J,SAAS,CAAChjB,QAAQ,CAAC;gBACjD,IAAI,CAAC,IAAI,CAAC6yC,cAAc,CAACG,qBAAqB,CAAC5kC,QAAQ,CAAC4U,YAAY;oBAClE,sEAAA;oBACA,iDAAA;oBACA,IAAI,CAAC6vB,cAAc,CAACG,qBAAqB,CAACvwC,IAAI,CAACugB;oBAC/C;gBACF,OACE,wEAAA;gBACA,kDAAA;gBACA,2EAAA;gBACA,+EAAA;gBACAm6B,eAAe;YAEnB;QACF;QAEA,MAAMrnB,kBAAkB7c,YAAYxc,SAAS;QAC7C,OAAO,MAAM,IAAI,CAAC6hD,kBAAkB,CAACxoB,iBAAiBnxB;IACxD;IAEA;;;GAGF,GACE,MAAM25C,mBACJC,cAAmD,EACnD55C,OAAqB,EACU;QAC/B,MAAMq5C,qBAAqBl6B,SAASy6B,gBAAgBv+C,QAAQ,CAAC;QAC7D,MAAMc,SAAS,MAAM,IAAI,CAAC09C,sBAAsB,CAC9CR,oBACAr5C;QAEF,OAAO7D;IACT;IAEA;;;GAGF,GACE,MAAM09C,uBACJR,kBAA0B,EAC1Br5C,OAAqB,EACU;QAC/B,MAAM4wB,SAAc;YAAC9mB,UAAU;QAAS;QACxC,MAAMyrB,gBAAgBv1B,WAAWA,QAAQu1B,aAAa;QACtD,MAAMC,sBACJD,kBAAkB,OACd,YAFN,4EAAA;WAGOv1B,WAAWA,QAAQw1B,mBAAmB,IAAK,IAAI,CAACC,UAAU;QAEjE,IAAIz1B,WAAWA,QAAQ01B,UAAU,IAAI,MACnC9E,OAAO8E,UAAU,GAAG11B,QAAQ01B,UAAU;QAExC,IAAI11B,WAAWA,QAAQguB,cAAc,IAAI,MACvC4C,OAAO5C,cAAc,GAAGhuB,QAAQguB,cAAc;QAEhD,IAAIuH,eACF3E,OAAO2E,aAAa,GAAGA;QAEzB,IAAIC,qBACF5E,OAAO4E,mBAAmB,GAAGA;QAG/B,MAAMzN,OAAO;YAACsxB;YAAoBzoB;SAAO;QACzC,MAAMue,YAAY,MAAM,IAAI,CAAC1B,WAAW,CAAC,mBAAmB1lB;QAC5D,MAAM8c,MAAMzuB,CAAAA,GAAAA,mBAAM,AAANA,EAAO+4B,WAAWnC;QAC9B,IAAI,WAAWnI,KAAK;YAClB,IAAI5oB,OAAOxR;YACX,IAAI,UAAUo6B,IAAIxtC,KAAK,EACrB4kB,OAAO4oB,IAAIxtC,KAAK,CAACyT,IAAI,CAACmR,IAAI;YAG5B,MAAM,IAAIkX,qBAAqB;gBAC7BC,QAAQmC,gBAAgB,SAAS;gBACjClX,WAAW;gBACXgV,oBAAoBwR,IAAIxtC,KAAK,CAACwD,OAAO;gBACrCohB,MAAMA;YACR;QACF;QACA,OAAO4oB,IAAI1oC,MAAM;IACnB;IAEA;;GAEF,GACEqzC,YAAY;QACV,IAAI,CAAC5B,sBAAsB,GAAG;QAC9B,IAAI,CAACC,sBAAsB,GAAGiM,YAAY;YACxC,gDAAA;YACC,CAAA;gBACC,IAAI;oBACF,MAAM,IAAI,CAACnM,aAAa,CAACrP,MAAM,CAAC;gBAChC,oCAAA;gBACD,EAAC,OAAM,CAAA;YACV,CAAA;QACD,GAAE;QACH,IAAI,CAACyb,oBAAoB;IAC3B;IAEA;;GAEF,GACEtK,WAAWhuB,GAAU,EAAE;QACrB,IAAI,CAACmsB,sBAAsB,GAAG;QAC9Bxf,QAAQ/2B,KAAK,CAAC,aAAaoqB,IAAI5mB,OAAO;IACxC;IAEA;;GAEF,GACE60C,WAAWva,IAAY,EAAE;QACvB,IAAI,CAACyY,sBAAsB,GAAG;QAC9B,IAAI,CAACG,uBAAuB,GAC1B,AAAC,CAAA,IAAI,CAACA,uBAAuB,GAAG,CAAA,IAAKh0C,OAAOgW,gBAAgB;QAC9D,IAAI,IAAI,CAAC+9B,wBAAwB,EAAE;YACjC8G,aAAa,IAAI,CAAC9G,wBAAwB;YAC1C,IAAI,CAACA,wBAAwB,GAAG;QAClC;QACA,IAAI,IAAI,CAACD,sBAAsB,EAAE;YAC/BmM,cAAc,IAAI,CAACnM,sBAAsB;YACzC,IAAI,CAACA,sBAAsB,GAAG;QAChC;QAEA,IAAI1Y,SAAS,MAAM;YACjB,wEAAA;YACA,IAAI,CAAC4kB,oBAAoB;YACzB;QACF;QAEA,2DAAA;QACA,IAAI,CAACpL,4CAA4C,GAAG,CAAA;QACpD9lC,OAAOwS,OAAO,CACZ,IAAI,CAACuzB,oBACP,EAAExyC,OAAO,CAAC,CAAC,CAAC69C,MAAMzS,aAAa;YAC7B,IAAI,CAAC0S,gBAAgB,CAACD,MAAM;gBAC1B,GAAGzS,YAAY;gBACfxgB,OAAO;YACT;QACF;IACF;IAEA;;GAEF,GACUkzB,iBACND,IAA4B,EAC5BE,gBAA8B,EAC9B;QACA,MAAMC,YAAY,IAAI,CAACxL,oBAAoB,CAACqL,KAAK,EAAEjzB;QACnD,IAAI,CAAC4nB,oBAAoB,CAACqL,KAAK,GAAGE;QAClC,IAAIC,cAAcD,iBAAiBnzB,KAAK,EAAE;YACxC,MAAMqzB,uBACJ,IAAI,CAAC3L,uCAAuC,CAACuL,KAAK;YACpD,IAAII,sBACFA,qBAAqBj+C,OAAO,CAACk+C,CAAAA;gBAC3B,IAAI;oBACFA,GAAGH,iBAAiBnzB,KAAK;gBACzB,oCAAA;gBACD,EAAC,OAAM,CAAA;YACV;QAEJ;IACF;IAEA;;GAEF,GACUosB,2BACNmH,oBAA0C,EAC1C7V,QAAyC,EACP;QAClC,MAAMuV,OACJ,IAAI,CAACxL,uCAAuC,CAAC8L,qBAAqB;QACpE,IAAIN,QAAQ,MACV,OAAO,KAAM;QAEf,MAAMI,uBAAwB,IAAI,CAAC3L,uCAAuC,CACxEuL,KACD,KAAK,IAAIriD;QACVyiD,qBAAqBzwC,GAAG,CAAC86B;QACzB,OAAO;YACL2V,qBAAqBz+B,MAAM,CAAC8oB;YAC5B,IAAI2V,qBAAqBn6C,IAAI,KAAK,GAChC,OAAO,IAAI,CAACwuC,uCAAuC,CAACuL,KAAK;QAE5D;IACH;IAEA;;GAEF,GACE,MAAMF,uBAAuB;QAC3B,IAAIlxC,OAAOC,IAAI,CAAC,IAAI,CAAC8lC,oBAAoB,EAAEr3C,MAAM,KAAK,GAAG;YACvD,IAAI,IAAI,CAACq2C,sBAAsB,EAAE;gBAC/B,IAAI,CAACA,sBAAsB,GAAG;gBAC9B,IAAI,CAACE,wBAAwB,GAAG7X,WAAW;oBACzC,IAAI,CAAC6X,wBAAwB,GAAG;oBAChC,IAAI;wBACF,IAAI,CAACH,aAAa,CAAC6M,KAAK;oBACzB,EAAC,OAAO/4B,KAAK;wBACZ,mDAAA;wBACA,IAAIA,eAAehnB,OACjB2zB,QAAQlS,GAAG,CACT,CAAA,sCAAA,EAAyCuF,IAAI5mB,OAAO,CAAA,CACtD;oBAEJ;gBACD,GAAE;YACL;YACA;QACF;QAEA,IAAI,IAAI,CAACizC,wBAAwB,KAAK,MAAM;YAC1C8G,aAAa,IAAI,CAAC9G,wBAAwB;YAC1C,IAAI,CAACA,wBAAwB,GAAG;YAChC,IAAI,CAACF,sBAAsB,GAAG;QAChC;QAEA,IAAI,CAAC,IAAI,CAACA,sBAAsB,EAAE;YAChC,IAAI,CAACD,aAAa,CAAC8M,OAAO;YAC1B;QACF;QAEA,MAAMC,4BAA4B,IAAI,CAAC3M,uBAAuB;QAC9D,MAAM4M,iCAAiCA;YACrC,OAAOD,8BAA8B,IAAI,CAAC3M,uBAAuB;QAClE;QAED,MAAMp5B,QAAQnP,GAAG,CACf,+DAAA;QACA,gEAAA;QACA,6DAAA;QACA,mDAAA;QACAqD,OAAOC,IAAI,CAAC,IAAI,CAAC8lC,oBAAoB,EAAE1zC,GAAG,CAAC,OAAM++C;YAC/C,MAAMzS,eAAe,IAAI,CAACoH,oBAAoB,CAACqL,KAAK;YACpD,IAAIzS,iBAAiB/8B,WACnB,2CAAA;YACA;YAEF,OAAQ+8B,aAAaxgB,KAAK;gBACxB,KAAK;gBACL,KAAK;oBACH,IAAIwgB,aAAaoT,SAAS,CAAC16C,IAAI,KAAK,GAAG;wBACrC;;;;;;;;;;;;aAYd,GACc,OAAO,IAAI,CAAC0uC,oBAAoB,CAACqL,KAAK;wBACtC,IAAIzS,aAAaxgB,KAAK,KAAK,gBACzB,OAAO,IAAI,CAAC2nB,4CAA4C,CACtDnH,aAAaqT,oBAAoB,CAClC;wBAEH,MAAM,IAAI,CAACd,oBAAoB;wBAC/B;oBACF;oBACA,MAAM,AAAC,CAAA;wBACL,MAAM,EAAChyB,IAAI,EAAEtO,MAAAA,EAAO,GAAG+tB;wBACvB,IAAI;4BACF,IAAI,CAAC0S,gBAAgB,CAACD,MAAM;gCAC1B,GAAGzS,YAAY;gCACfxgB,OAAO;4BACT;4BACA,MAAM6zB,uBACH,MAAM,IAAI,CAAClN,aAAa,CAAC15B,IAAI,CAACwF,QAAQsO;4BACzC,IAAI,CAACmyB,gBAAgB,CAACD,MAAM;gCAC1B,GAAGzS,YAAY;gCACfqT;gCACA7zB,OAAO;4BACT;4BACA,IAAI,CAAC2nB,4CAA4C,CAC/CkM,qBACD,GAAGrT,aAAaoT,SAAS;4BAC1B,MAAM,IAAI,CAACb,oBAAoB;wBAChC,EAAC,OAAO3J,GAAG;4BACV,IAAIA,aAAa31C,OACf2zB,QAAQ/2B,KAAK,CACX,CAAA,EAAGoiB,OAAM,mBAAA,CAAqB,EAC9BsO,MACAqoB,EAAEv1C,OACJ;4BAEF,IAAI,CAAC8/C,kCACH;4BAEF,uDAAA;4BACA,IAAI,CAACT,gBAAgB,CAACD,MAAM;gCAC1B,GAAGzS,YAAY;gCACfxgB,OAAO;4BACT;4BACA,MAAM,IAAI,CAAC+yB,oBAAoB;wBACjC;oBACF,CAAA;oBACA;gBACF,KAAK;oBACH,IAAIvS,aAAaoT,SAAS,CAAC16C,IAAI,KAAK,GAClC,oDAAA;oBACA,uDAAA;oBACA,oBAAA;oBACA,MAAM,AAAC,CAAA;wBACL,MAAM,EAAC26C,oBAAoB,EAAEC,iBAAAA,EAAkB,GAAGtT;wBAClD,IACE,IAAI,CAACqH,+BAA+B,CAACh8B,GAAG,CAACgoC,uBAEzC;;;;;;;;iBAQlB,GACkB,IAAI,CAAChM,+BAA+B,CAACjzB,MAAM,CACzCi/B;6BAEG;4BACL,IAAI,CAACX,gBAAgB,CAACD,MAAM;gCAC1B,GAAGzS,YAAY;gCACfxgB,OAAO;4BACT;4BACA,IAAI,CAACkzB,gBAAgB,CAACD,MAAM;gCAC1B,GAAGzS,YAAY;gCACfxgB,OAAO;4BACT;4BACA,IAAI;gCACF,MAAM,IAAI,CAAC2mB,aAAa,CAAC15B,IAAI,CAAC6mC,mBAAmB;oCAC/CD;iCACD;4BACF,EAAC,OAAOzK,GAAG;gCACV,IAAIA,aAAa31C,OACf2zB,QAAQ/2B,KAAK,CAAC,CAAGyjD,EAAAA,kBAAiB,OAAA,CAAS,EAAE1K,EAAEv1C,OAAO;gCAExD,IAAI,CAAC8/C,kCACH;gCAEF,uDAAA;gCACA,IAAI,CAACT,gBAAgB,CAACD,MAAM;oCAC1B,GAAGzS,YAAY;oCACfxgB,OAAO;gCACT;gCACA,MAAM,IAAI,CAAC+yB,oBAAoB;gCAC/B;4BACF;wBACF;wBACA,IAAI,CAACG,gBAAgB,CAACD,MAAM;4BAC1B,GAAGzS,YAAY;4BACfxgB,OAAO;wBACT;wBACA,MAAM,IAAI,CAAC+yB,oBAAoB;oBACjC,CAAA;oBAEF;YAIJ;QACF;IAEJ;IAEA;;GAEF,GACUgB,0BAGNF,oBAA0C,EAC1CG,YAAmC,EAC7B;QACN,MAAMJ,YACJ,IAAI,CAACjM,4CAA4C,CAACkM,qBAAqB;QACzE,IAAID,cAAcnwC,WAChB;QAEFmwC,UAAUx+C,OAAO,CAACk+C,CAAAA;YAChB,IAAI;gBACFA,GACE,qEAAA;gBACA,0EAAA;gBACA,2DAAA;gBACA,aAAA;mBACGU;YAEN,EAAC,OAAO5K,GAAG;gBACVhiB,QAAQ/2B,KAAK,CAAC+4C;YAChB;QACF;IACF;IAEA;;GAEF,GACET,yBAAyBsL,YAAoB,EAAE;QAC7C,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAC7B6kC,cACA1T;QAEF,IAAI,CAACwT,yBAAyB,CAAwBvT,cAAc;YAClErrC,OAAOxG,KAAK;YACZwG,OAAO2gB,OAAO;SACf;IACH;IAEA;;GAEF,GACUo+B,kBACNC,kBAAsC,EACtC;;;;;;;;;;;;;;;;;;;;;;;GAuBJ,GACIpzB,IAAsB,EACA;QACtB,MAAMwyB,uBAAuB,IAAI,CAAChM,yBAAyB;QAC3D,MAAM0L,OAAO/K,sBAAoB;YAACiM,mBAAmB1hC,MAAM;YAAEsO;SAAK;QAClE,MAAMqzB,uBAAuB,IAAI,CAACxM,oBAAoB,CAACqL,KAAK;QAC5D,IAAImB,yBAAyB3wC,WAC3B,IAAI,CAACmkC,oBAAoB,CAACqL,KAAK,GAAG;YAChC,GAAGkB,kBAAkB;YACrBpzB;YACA6yB,WAAW,IAAIhjD,IAAI;gBAACujD,mBAAmBzW,QAAQ;aAAC;YAChD1d,OAAO;QACR;aAEDo0B,qBAAqBR,SAAS,CAAChxC,GAAG,CAACuxC,mBAAmBzW,QAAQ;QAEhE,IAAI,CAAC+J,uCAAuC,CAAC8L,qBAAqB,GAAGN;QACrE,IAAI,CAACzL,mDAAmD,CACtD+L,qBACD,GAAG;YACF,OAAO,IAAI,CAAC/L,mDAAmD,CAC7D+L,qBACD;YACD,OAAO,IAAI,CAAC9L,uCAAuC,CAAC8L,qBAAqB;YACzE,MAAM/S,eAAe,IAAI,CAACoH,oBAAoB,CAACqL,KAAK;YACpD/zB,OACEshB,iBAAiB/8B,WACjB,CAA4E8vC,yEAAAA,EAAAA,qBAAoB,CAClG;YACA/S,aAAaoT,SAAS,CAACh/B,MAAM,CAACu/B,mBAAmBzW,QAAQ;YACzD,MAAM,IAAI,CAACqV,oBAAoB;QAChC;QACD,IAAI,CAACA,oBAAoB;QACzB,OAAOQ;IACT;IAEA;;;;;;;GAOF,GACEc,gBACE3kD,SAAoB,EACpBguC,QAA+B,EAC/BjP,UAAuB,EACD;QACtB,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAACt4C,UAAUG,QAAQ;SAAG,EACtB4+B,cAAc,IAAI,CAAC4X,WAAW,IAAI,aAAa,mCAAA;QAC/C;QAEF,OAAO,IAAI,CAAC6N,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACpB,GACD/yB;IAEJ;IAEA;;;;GAIF,GACE,MAAMuzB,4BACJf,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;IAEA;;GAEF,GACE3K,gCAAgCqL,YAAoB,EAAE;QACpD,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAC7B6kC,cACAvT;QAEF,IAAI,CAACqT,yBAAyB,CAA+BvT,cAAc;YACzE;gBACEgU,WAAWr/C,OAAOxG,KAAK,CAAC8oB,MAAM;gBAC9B05B,aAAah8C,OAAOxG,KAAK,CAACyV,OAAAA;YAC5B;YACAjP,OAAO2gB,OAAO;SACf;IACH;IAEA;;;;;;;;;GASF,GACE2+B,uBACE39B,SAAoB,EACpB4mB,QAAsC,EACtCjP,UAAuB,EACvBimB,OAAoC,EACd;QACtB,MAAM3zB,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAClxB,UAAUjnB,QAAQ;SAAG,EACtB4+B,cAAc,IAAI,CAAC4X,WAAW,IAAI,aAAa,mCAAA;QAC/C,SAAQ,YAAA,KACRqO,UAAU;YAACA,SAASA;QAAO,IAAIjxC,UAAS,SAAA;QAE1C,OAAO,IAAI,CAACywC,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACpB,GACD/yB;IAEJ;IAEA;;;;GAIF,GACE,MAAM4zB,mCACJpB,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;IAEA;;GAEF,GACEqB,OACE1yC,MAAkB,EAClBw7B,QAAsB,EACtBjP,UAAuB,EACD;QACtB,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAC,OAAO9lC,WAAW,WAAW;gBAAC2yC,UAAU;oBAAC3yC,OAAO7N,QAAQ;iBAAE;YAAE,IAAG6N;SAAO,EACvEusB,cAAc,IAAI,CAAC4X,WAAW,IAAI,YAD2B,mCAAA;;QAG/D,OAAO,IAAI,CAAC6N,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACpB,GACD/yB;IAEJ;IAEA;;;;GAIF,GACE,MAAM+zB,qBACJvB,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CAAChB,sBAAsB;IAClE;IAEA;;GAEF,GACEtK,sBAAsBgL,YAAoB,EAAE;QAC1C,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAAO6kC,cAAc/N;QACpD,IAAI,CAAC6N,yBAAyB,CAAevT,cAAc;YACzDrrC,OAAOxG,KAAK;YACZwG,OAAO2gB,OAAO;SACf;IACH;IAEA;;GAEF,GACE+yB,sBAAsBoL,YAAoB,EAAE;QAC1C,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAAO6kC,cAAcnT;QACpD,IAAI,CAACiT,yBAAyB,CAAqBvT,cAAc;YAACrrC;SAAO;IAC3E;IAEA;;;;;GAKF,GACE4/C,aAAarX,QAA4B,EAAwB;QAC/D,OAAO,IAAI,CAACwW,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACrB,GACA,EAAE;IAEN;IAEA;;;;GAIF,GACE,MAAMkB,yBACJzB,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;IAEA;;GAEF,GACEzK,6BAA6BmL,YAAoB,EAAE;QACjD,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAC7B6kC,cACA5S;QAEF,IAAI,CAAC0S,yBAAyB,CAAqBvT,cAAc;YAACrrC;SAAO;IAC3E;IAEA;;;;;;GAMF,GACE8/C,aAAavX,QAA4B,EAAwB;QAC/D,OAAO,IAAI,CAACwW,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACrB,GACA,EAAE;IAEN;IAEA;;;;GAIF,GACE,MAAMoB,yBACJ3B,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;IAEA;;GAEF,GAEE,MAAcgB,+BACZhB,oBAA0C,EAC1C4B,gBAAwB,EACxB;QACA,MAAMC,UACJ,IAAI,CAAC5N,mDAAmD,CACtD+L,qBACD;QACH,IAAI6B,SACF,MAAMA;aAENhuB,QAAQC,IAAI,CACV,wEACE,CAAA,EAAA,EAAKksB,qBAAoB,QAAA,EAAW4B,iBAAgB,SAAA,CAAW,GAC/D;IAGR;IAEAnN,WACEjnB,IAAgB,EAChBs0B,QAAqB,EACrBvyC,QAAkC,EAClC+sC,KAAW,EACC;QACZ,MAAMphB,aAAa4mB,YAAY,IAAI,CAAChP,WAAW;QAC/C,IAAI5X,cAAc3rB,YAAY+sC,OAAO;YACnC,IAAI72C,UAAe,CAAA;YACnB,IAAI8J,UACF9J,QAAQ8J,QAAQ,GAAGA;YAErB,IAAI2rB,YACFz1B,QAAQy1B,UAAU,GAAGA;YAEvB,IAAIohB,OACF72C,UAAU6I,OAAO0W,MAAM,CAACvf,SAAS62C;YAEnC9uB,KAAKjqB,IAAI,CAACkC;QACZ;QACA,OAAO+nB;IACT;IAEA;;GAEF,GACE0uB,2BACE1uB,IAAgB,EAChBs0B,QAAmB,EACnBvyC,QAAkC,EAClC+sC,KAAW,EACC;QACZ,MAAMphB,aAAa4mB,YAAY,IAAI,CAAChP,WAAW;QAC/C,IAAI5X,cAAc,CAAC;YAAC;YAAa;SAAY,CAAChsB,QAAQ,CAACgsB,aACrD,MAAM,IAAIh7B,MACR,gDACE,IAAI,CAAC4yC,WAAW,GAChB;QAGN,OAAO,IAAI,CAAC2B,UAAU,CAACjnB,MAAMs0B,UAAUvyC,UAAU+sC;IACnD;IAEA;;GAEF,GACE9G,2BAA2BkL,YAAoB,EAAE;QAC/C,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAC7B6kC,cACA3S;QAEF,IAAInsC,OAAOxG,KAAK,KAAK,qBACnB;;;;;;;;;;;;OAYN,GACM,IAAI,CAACk5C,+BAA+B,CAACjlC,GAAG,CAAC49B;QAE3C,IAAI,CAACuT,yBAAyB,CAC5BvT,cACArrC,OAAOxG,KAAK,KAAK,sBACb;YAAC;gBAACykB,MAAM;YAAU;YAAGje,OAAO2gB,OAAO;SAAC,GACpC;YAAC;gBAAC1C,MAAM;gBAAUje,QAAQA,OAAOxG,KAAAA;YAAK;YAAGwG,OAAO2gB,OAAO;SAC7D;IACF;IAEA;;;;;;;GAOF,GACEi2B,YACE10B,SAA+B,EAC/BqmB,QAAiC,EACjCjP,UAAuB,EACD;QACtB,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAC3wB;SAAU,EACXoX,cAAc,IAAI,CAAC4X,WAAW,IAAI,YAFpC,mCAAA;;QAIA,MAAMkN,uBAAuB,IAAI,CAACW,iBAAiB,CACjD;YACExW,UAAUA,CAACuW,cAAcn+B;gBACvB,IAAIm+B,aAAa7gC,IAAI,KAAK,UAAU;oBAClCsqB,SAASuW,aAAa9+C,MAAM,EAAE2gB;oBAC9B,+DAAA;oBACA,wDAAA;oBACA,IAAI;wBACF,IAAI,CAAC02B,uBAAuB,CAAC+G;oBAC7B,oCAAA;oBACD,EAAC,OAAO+B,MAAM;oBACb,mBAAA;oBAAA;gBAEJ;YACD;YACD7iC,QAAQ;YACRqhC,mBAAmB;QACpB,GACD/yB;QAEF,OAAOwyB;IACT;IAEA;;;;;;;;;GASF,GACEgC,uBACEl+B,SAA+B,EAC/BqmB,QAAuC,EACvC1kC,OAAsC,EAChB;QACtB,MAAM,EAACy1B,UAAU,EAAE,GAAGohB,OAAM,GAAG;YAC7B,GAAG72C,OAAO;YACVy1B,YACGz1B,WAAWA,QAAQy1B,UAAU,IAAK,IAAI,CAAC4X,WAAW,IAAI,YADzD5X,mCAAAA;QAED;QACD,MAAM1N,OAAO,IAAI,CAACinB,UAAU,CAC1B;YAAC3wB;SAAU,EACXoX,YACAhrB,UAAS,YAAA,KACTosC;QAEF,MAAM0D,uBAAuB,IAAI,CAACW,iBAAiB,CACjD;YACExW,UAAUA,CAACuW,cAAcn+B;gBACvB4nB,SAASuW,cAAcn+B;gBACvB,+DAAA;gBACA,wDAAA;gBACA,IAAI;oBACF,IAAI,CAAC02B,uBAAuB,CAAC+G;gBAC7B,oCAAA;gBACD,EAAC,OAAO+B,MAAM;gBACb,mBAAA;gBAAA;YAEH;YACD7iC,QAAQ;YACRqhC,mBAAmB;QACpB,GACD/yB;QAEF,OAAOwyB;IACT;IAEA;;;;GAIF,GACE,MAAM/G,wBACJ+G,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;IAEA;;GAEF,GACEvK,sBAAsBiL,YAAoB,EAAE;QAC1C,MAAM,EAAC9+C,MAAM,EAAEqrC,YAAAA,EAAa,GAAGpxB,CAAAA,GAAAA,mBAAM,AAANA,EAAO6kC,cAAc1S;QACpD,IAAI,CAACwS,yBAAyB,CAAqBvT,cAAc;YAACrrC;SAAO;IAC3E;IAEA;;;;;GAKF,GACEqgD,aAAa9X,QAA4B,EAAwB;QAC/D,OAAO,IAAI,CAACwW,iBAAiB,CAC3B;YACExW;YACAjrB,QAAQ;YACRqhC,mBAAmB;QACrB,GACA,EAAE;IAEN;IAEA;;;;GAIF,GACE,MAAM2B,yBACJlC,oBAA0C,EAC3B;QACf,MAAM,IAAI,CAACgB,8BAA8B,CACvChB,sBACA;IAEJ;AACF;AC5oNA;;CAEA,GAMA;;CAEA,GACO,MAAMmC;IAGX;;;;;GAKF,GACE/hD,YAAYwjB,OAAwB,CAAE;QAAA,IAAA,CAR9Bw+B,QAAQ,GAAA,KAAA;QASd,IAAI,CAACA,QAAQ,GAAGx+B,WAAW7L;IAC7B;IAEA;;;;GAIF,GACE,OAAOiL,WAAoB;QACzB,OAAO,IAAIm/B,QAAQpqC;IACrB;IAEA;;;;;;;;;;;;;GAaF,GACE,OAAOmL,cACLD,SAAqB,EACrBxd,OAAoC,EAC3B;QACT,IAAIwd,UAAUnc,UAAU,KAAK,IAC3B,MAAM,IAAI5G,MAAM;QAElB,MAAM/D,YAAY8mB,UAAUhkB,KAAK,CAAC,IAAI;QACtC,IAAI,CAACwG,WAAW,CAACA,QAAQ48C,cAAc,EAAE;YACvC,MAAM59B,gBAAgBxB,UAAUhkB,KAAK,CAAC,GAAG;YACzC,MAAMqjD,oBAAoB/pC,aAAakM;YACvC,IAAK,IAAIzb,KAAK,GAAGA,KAAK,IAAIA,KAAM;gBAC9B,IAAI7M,SAAS,CAAC6M,GAAG,KAAKs5C,iBAAiB,CAACt5C,GAAG,EACzC,MAAM,IAAI9I,MAAM;YAEpB;QACF;QACA,OAAO,IAAIiiD,QAAQ;YAAChmD;YAAW8mB;QAAS;IAC1C;IAEA;;;;;;GAMF,GACE,OAAOG,SAASD,IAAgB,EAAW;QACzC,MAAMhnB,YAAYoc,aAAa4K;QAC/B,MAAMF,YAAY,IAAIzkB,WAAW;QACjCykB,UAAUnhB,GAAG,CAACqhB;QACdF,UAAUnhB,GAAG,CAAC3F,WAAW;QACzB,OAAO,IAAIgmD,QAAQ;YAAChmD;YAAW8mB;QAAS;IAC1C;IAEA;;;;GAIF,GACE,IAAI9mB,YAAuB;QACzB,OAAO,IAAIspB,UAAU,IAAI,CAAC28B,QAAQ,CAACjmD,SAAS;IAC9C;IAEA;;;GAGF,GACE,IAAI8mB,YAAwB;QAC1B,OAAO,IAAIzkB,WAAW,IAAI,CAAC4jD,QAAQ,CAACn/B,SAAS;IAC/C;AACF;AC7CA;;CAEA,GAwBA;;;CAGA,GACas/B,MAAAA,mCAAmCj0C,OAAOkxB,MAAM,CAAC;IAC5DgjB,mBAAmB;QACjB1yC,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YACAga,cAAa9gB,GAAG,CAAC;YACjB+5C,IAAiB;YACjBj5B,cAAaphB,EAAE,CAAC;SACjB;IACF;IACDs6C,mBAAmB;QACjB5yC,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACpC;IACDi6C,mBAAmB;QACjB7yC,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YACAga,cAAa9gB,GAAG,CAAC;YACjB+5C;YACAj5B,cAAaoG,GAAG,CACdE,aACAtG,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KACxC;SAEH;IACF;IACDk6C,uBAAuB;QACrB9yC,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACpC;IACDm6C,kBAAkB;QAChB/yC,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACrC;AACF;AAEO,MAAMo6C;IACX;;GAEF,GACE1iD,aAAc,CAAA;IAEd,OAAO28B,sBACL/Y,WAAmC,EACP;QAC5B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QAEzC,MAAM0Z,wBAAwBzT,cAAa9gB,GAAG,CAAC;QAC/C,MAAMoH,QAAQmtB,sBAAsBl5B,MAAM,CAACigB,YAAYzT,IAAI;QAE3D,IAAIsP;QACJ,KAAK,MAAM,CAACkjC,YAAYv4B,OAAO,IAAIlc,OAAOwS,OAAO,CAC/CyhC,kCAEA,IAAK/3B,OAAe1a,KAAK,IAAIA,OAAO;YAClC+P,OAAOkjC;YACP;QACF;QAEF,IAAI,CAACljC,MACH,MAAM,IAAI3f,MACR;QAGJ,OAAO2f;IACT;IAEA,OAAOmjC,wBACLh/B,WAAmC,EACV;QACzB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC0/B,eAAe,CAACj/B,YAAYzV,IAAI,EAAE;QAEvC,MAAM,EAAC20C,UAAAA,EAAW,GAAGpnB,aACnBymB,iCAAiCC,iBAAiB,EAClDx+B,YAAYzT,IACd;QAEA,OAAO;YACLq0B,WAAW5gB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACrCpN,OAAOkN,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACjCg/B,YAAY1jD,OAAO0jD;QACpB;IACH;IAEA,OAAOC,wBACLn/B,WAAmC,EACV;QACzB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAIS,YAAYzV,IAAI,CAACvR,MAAM,GAAG,GAC5B,MAAM,IAAIkD,MACR,CAA8B8jB,2BAAAA,EAAAA,YAAYzV,IAAI,CAACvR,MAAM,CAAA,0BAAA,CACvD;QAGF,MAAM,EAAC0vB,SAAAA,EAAU,GAAGoP,aAClBymB,iCAAiCI,iBAAiB,EAClD3+B,YAAYzT,IACd;QACA,OAAO;YACL8b,aAAarI,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC0gB,WAAW5gB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACrCpN,OACEkN,YAAYzV,IAAI,CAACvR,MAAM,GAAG,IAAIgnB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM,GAAGhU;YAC7Dwc,WAAWA,UAAU/rB,GAAG,CAACjB,CAAAA,SAAU,IAAI+lB,UAAU/lB;QAClD;IACH;IAEA,OAAO0jD,uBACLp/B,WAAmC,EACX;QACxB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC0/B,eAAe,CAACj/B,YAAYzV,IAAI,EAAE;QAEvC,OAAO;YACL8d,aAAarI,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC0gB,WAAW5gB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACrCm/B,WAAWr/B,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QAChC;IACH;IAEA,OAAOo/B,wBACLt/B,WAAmC,EACV;QACzB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC0/B,eAAe,CAACj/B,YAAYzV,IAAI,EAAE;QAEvC,OAAO;YACL8d,aAAarI,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC0gB,WAAW5gB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QAChC;IACH;IAEA,OAAOq/B,4BACLv/B,WAAmC,EACN;QAC7B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC0/B,eAAe,CAACj/B,YAAYzV,IAAI,EAAE;QAEvC,OAAO;YACL8d,aAAarI,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC0gB,WAAW5gB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QAChC;IACH;IAEA;;GAEF,GACE,OAAO8Y,eAAezZ,SAAoB,EAAE;QAC1C,IAAI,CAACA,UAAUuC,MAAM,CAAC09B,0BAA0BjgC,SAAS,GACvD,MAAM,IAAIrjB,MACR;IAGN;IACA;;GAEF,GACE,OAAO+iD,gBAAgB10C,IAAgB,EAAEgxB,cAAsB,EAAE;QAC/D,IAAIhxB,KAAKvR,MAAM,GAAGuiC,gBAChB,MAAM,IAAIr/B,MACR,CAA8BqO,2BAAAA,EAAAA,KAAKvR,MAAM,CAAA,yBAAA,EAA4BuiC,eAAc,CACrF;IAEJ;AACF;AAEO,MAAMikB;IACX;;GAEF,GACEpjD,aAAc,CAAA;IAMd,OAAOqjD,kBAAkBhjC,MAA+B,EAAE;QACxD,MAAM,CAACijC,oBAAoBC,SAAS,GAAGl+B,UAAU/B,sBAAsB,CACrE;YAACjD,OAAOmkB,SAAS,CAAChgB,QAAQ;YAAIiY,CAAAA,GAAAA,wBAAU,AAAVA,EAAW5+B,OAAOwiB,OAAOyiC,UAAU,GAAG;SAAG,EACvE,IAAI,CAAC3/B,SACP;QAEA,MAAM1D,OAAO0iC,iCAAiCC,iBAAiB;QAC/D,MAAMjyC,OAAOorB,WAAW9b,MAAM;YAC5BqjC,YAAYjlD,OAAOwiB,OAAOyiC,UAAU;YACpCS,UAAUA;QACZ;QAEA,MAAMp1C,OAAO;YACX;gBACE2V,QAAQw/B;gBACR7oC,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAOmkB,SAAS;gBACxB/pB,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAO3J,KAAK;gBACpB+D,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQob,cAAc/b,SAAS;gBAC/B1I,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,OAAO;YACL,IAAIyH,uBAAuB;gBACzBvP,WAAW,IAAI,CAACA,SAAS;gBACzBhV,MAAMA;gBACNgC,MAAMA;YACP;YACDmzC;SACD;IACH;IAEA,OAAOE,kBAAkBnjC,MAA+B,EAAE;QACxD,MAAMZ,OAAO0iC,iCAAiCG,iBAAiB;QAC/D,MAAMnyC,OAAOorB,WAAW9b;QAExB,MAAMtR,OAAO;YACX;gBACE2V,QAAQzD,OAAO4L,WAAW;gBAC1BxR,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAOmkB,SAAS;gBACxB/pB,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,OAAO,IAAIyH,uBAAuB;YAChCvP,WAAW,IAAI,CAACA,SAAS;YACzBhV,MAAMA;YACNgC,MAAMA;QACR;IACF;IAEA,OAAOszC,kBAAkBpjC,MAA+B,EAAE;QACxD,MAAMZ,OAAO0iC,iCAAiCI,iBAAiB;QAC/D,MAAMpyC,OAAOorB,WAAW9b,MAAM;YAC5B6M,WAAWjM,OAAOiM,SAAS,CAAC/rB,GAAG,CAACmjD,CAAAA,OAAQA,KAAK99B,OAAO;QACtD;QAEA,MAAMzX,OAAO;YACX;gBACE2V,QAAQzD,OAAO4L,WAAW;gBAC1BxR,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAOmkB,SAAS;gBACxB/pB,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,IAAI5K,OAAO3J,KAAK,EACdvI,KAAKhL,IAAI,CACP;YACE2gB,QAAQzD,OAAO3J,KAAK;YACpB+D,UAAU;YACVwQ,YAAY;QACd,GACA;YACEnH,QAAQob,cAAc/b,SAAS;YAC/B1I,UAAU;YACVwQ,YAAY;QACd;QAIJ,OAAO,IAAIyH,uBAAuB;YAChCvP,WAAW,IAAI,CAACA,SAAS;YACzBhV,MAAMA;YACNgC,MAAMA;QACR;IACF;IAEA,OAAOwzC,sBAAsBtjC,MAAmC,EAAE;QAChE,MAAMZ,OAAO0iC,iCAAiCK,qBAAqB;QACnE,MAAMryC,OAAOorB,WAAW9b;QAExB,MAAMtR,OAAO;YACX;gBACE2V,QAAQzD,OAAO4L,WAAW;gBAC1BxR,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAOmkB,SAAS;gBACxB/pB,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,OAAO,IAAIyH,uBAAuB;YAChCvP,WAAW,IAAI,CAACA,SAAS;YACzBhV,MAAMA;YACNgC,MAAMA;QACR;IACF;IAEA,OAAOyzC,iBAAiBvjC,MAA8B,EAAE;QACtD,MAAMZ,OAAO0iC,iCAAiCM,gBAAgB;QAC9D,MAAMtyC,OAAOorB,WAAW9b;QAExB,MAAMtR,OAAO;YACX;gBACE2V,QAAQzD,OAAO4L,WAAW;gBAC1BxR,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAOmkB,SAAS;gBACxB/pB,UAAU;gBACVwQ,YAAY;YACd;YACA;gBACEnH,QAAQzD,OAAO4iC,SAAS;gBACxBxoC,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,OAAO,IAAIyH,uBAAuB;YAChCvP,WAAW,IAAI,CAACA,SAAS;YACzBhV,MAAMA;YACNgC,MAAMA;QACR;IACF;AACF;AA5KaizC,0BAMJjgC,SAAS,GAAc,IAAIkC,UAChC;ACjQJ;;CAEA,GACO,MAAMw+B;IACX;;GAEF,GACE7jD,aAAc,CAAA;IAEd;;GAEF,GACE,OAAO28B,sBACL/Y,WAAmC,EACL;QAC9B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QAEzC,MAAM0Z,wBAAwBzT,cAAaphB,EAAE,CAAC;QAC9C,MAAM80B,YAAYD,sBAAsBl5B,MAAM,CAACigB,YAAYzT,IAAI;QAE/D,IAAIsP;QACJ,KAAK,MAAM,CAACsd,QAAQ3S,OAAO,IAAIlc,OAAOwS,OAAO,CAC3CojC,oCAEA,IAAI15B,OAAO1a,KAAK,IAAIotB,WAAW;YAC7Brd,OAAOsd;YACP;QACF;QAGF,IAAI,CAACtd,MACH,MAAM,IAAI3f,MACR;QAIJ,OAAO2f;IACT;IAEA;;GAEF,GACE,OAAOskC,mBACLngC,WAAmC,EACf;QACpB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,MAAM,EAAC/P,KAAK,EAAE4wC,aAAAA,EAAc,GAAGtoB,aAC7BooB,mCAAmCG,YAAY,EAC/CrgC,YAAYzT,IACd;QACA,OAAO;YAACiD;YAAO4wC;QAAc;IAC/B;IAEA;;GAEF,GACE,OAAOE,uBACLtgC,WAAmC,EACX;QACxB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,MAAM,EAACjmB,KAAAA,EAAM,GAAGw+B,aACdooB,mCAAmCK,gBAAgB,EACnDvgC,YAAYzT,IACd;QACA,OAAO;YAACjT;QAAM;IAChB;IAEA;;GAEF,GACE,OAAOknD,0BACLxgC,WAAmC,EACR;QAC3B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,MAAM,EAAC/P,KAAAA,EAAM,GAAGsoB,aACdooB,mCAAmCO,mBAAmB,EACtDzgC,YAAYzT,IACd;QACA,OAAO;YAACiD;QAAM;IAChB;IAEA;;GAEF,GACE,OAAOkxC,0BACL1gC,WAAmC,EACR;QAC3B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,MAAM,EAACohC,aAAAA,EAAc,GAAG7oB,aACtBooB,mCAAmCU,mBAAmB,EACtD5gC,YAAYzT,IACd;QACA,OAAO;YAACo0C;QAAc;IACxB;IAEA;;GAEF,GACE,OAAO3nB,eAAezZ,SAAoB,EAAE;QAC1C,IAAI,CAACA,UAAUuC,MAAM,CAAC++B,qBAAqBthC,SAAS,GAClD,MAAM,IAAIrjB,MACR;IAGN;AACF;AAEA;;CAEA,GAoBA;;CAEA,GAQA;;CAEA,GAMA;;CAEA,GAMA;;CAEA,GAMA;;;CAGA,GACagkD,MAAAA,qCAAqC51C,OAAOkxB,MAAM,CAI5D;IACD6kB,cAAc;QACZv0C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YACAga,cAAaphB,EAAE,CAAC;YAChBohB,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACD67C,kBAAkB;QAChBz0C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAaphB,EAAE,CAAC;YAAgBohB,cAAa9gB,GAAG,CAAC;SAAS;IAC9D;IACD+7C,qBAAqB;QACnB30C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAaphB,EAAE,CAAC;YAAgBohB,cAAa9gB,GAAG,CAAC;SAAS;IAC9D;IACDk8C,qBAAqB;QACnB90C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAaphB,EAAE,CAAC;YAAgBS,IAAI;SAAiB;IAC1D;AACF;AAEA;;CAEA,GACO,MAAMg8C;IACX;;GAEF,GACEzkD,aAAc,CAAA;IAEd;;GAEF,GAKE;;GAEF,GACE,OAAO0kD,aAAarkC,MAA0B,EAA0B;QACtE,MAAMZ,OAAOqkC,mCAAmCG,YAAY;QAC5D,MAAM9zC,OAAOorB,WAAW9b,MAAMY;QAC9B,OAAO,IAAIqS,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA,OAAOw0C,iBACLtkC,MAA8B,EACN;QACxB,MAAMZ,OAAOqkC,mCAAmCK,gBAAgB;QAChE,MAAMh0C,OAAOorB,WAAW9b,MAAMY;QAC9B,OAAO,IAAIqS,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA,OAAOy0C,oBACLvkC,MAAiC,EACT;QACxB,MAAMZ,OAAOqkC,mCAAmCO,mBAAmB;QACnE,MAAMl0C,OAAOorB,WAAW9b,MAAMY;QAC9B,OAAO,IAAIqS,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA,OAAO00C,oBACLxkC,MAAiC,EACT;QACxB,MAAMZ,OAAOqkC,mCAAmCU,mBAAmB;QACnE,MAAMr0C,OAAOorB,WAAW9b,MAAM;YAC5B8kC,eAAe1mD,OAAOwiB,OAAOkkC,aAAa;QAC5C;QACA,OAAO,IAAI7xB,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;AACF;AA/Das0C,qBASJthC,SAAS,GAAc,IAAIkC,UAChC;AC1NJ,MAAMy/B,sBAAoB;AAC1B,MAAMC,qBAAmB;AACzB,MAAMC,kBAAkB;AAExB;;CAEA,GAQA;;CAEA,GAOA,MAAMC,6BAA6B77B,cAAaha,MAAM,CAYpD;IACAga,cAAaphB,EAAE,CAAC;IAChBohB,cAAaphB,EAAE,CAAC;IAChBohB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;CAClB;AAEM,MAAM+8C;IACX;;GAEF,GACEllD,aAAc,CAAA;IAEd;;GAEF,GAKE;;;;GAIF,GACE,OAAOmlD,+BACL9kC,MAAmD,EAC3B;QACxB,MAAM,EAACtkB,SAAS,EAAEmE,OAAO,EAAEwjB,SAAS,EAAE0hC,gBAAAA,EAAiB,GAAG/kC;QAE1DkL,OACExvB,UAAUa,MAAM,KAAKmoD,oBACrB,CAAsBA,mBAAAA,EAAAA,mBAAuChpD,oBAAAA,EAAAA,UAAUa,MAAM,CAAA,MAAA,CAC/E;QAEA2uB,OACE7H,UAAU9mB,MAAM,KAAKooD,iBACrB,CAAqBA,kBAAAA,EAAAA,gBAAsCthC,oBAAAA,EAAAA,UAAU9mB,MAAM,CAAA,MAAA,CAC7E;QAEA,MAAMyoD,kBAAkBJ,2BAA2Bt7B,IAAI;QACvD,MAAM27B,kBAAkBD,kBAAkBtpD,UAAUa,MAAM;QAC1D,MAAM2oD,oBAAoBD,kBAAkB5hC,UAAU9mB,MAAM;QAC5D,MAAM4oD,gBAAgB;QAEtB,MAAM5lB,kBAAkB3b,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAACs/B,oBAAoBrlD,QAAQtD,MAAM;QAEvE,MAAM8S,QACJ01C,oBAAoB,OAChB,OAFN,sEAAA;WAGMA;QAENH,2BAA2BxhD,MAAM,CAC/B;YACE+hD;YACAC,SAAS;YACTH;YACAI,2BAA2Bh2C;YAC3B21C;YACAM,2BAA2Bj2C;YAC3B61C;YACAK,iBAAiB1lD,QAAQtD,MAAM;YAC/BipD,yBAAyBn2C;QAC1B,GACDkwB;QAGFA,gBAAgBlhC,IAAI,CAAC3C,WAAWspD;QAChCzlB,gBAAgBlhC,IAAI,CAACglB,WAAW4hC;QAChC1lB,gBAAgBlhC,IAAI,CAACwB,SAASqlD;QAE9B,OAAO,IAAI7yB,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAW+hC,eAAe/hC,SAAS;YACnChT,MAAMyvB;QACR;IACF;IAEA;;;GAGF,GACE,OAAOkmB,gCACLzlC,MAAoD,EAC5B;QACxB,MAAM,EAAC0lC,UAAU,EAAE7lD,OAAO,EAAEklD,gBAAAA,EAAiB,GAAG/kC;QAEhDkL,OACEw6B,WAAWnpD,MAAM,KAAKkoD,qBACtB,CAAuBA,oBAAAA,EAAAA,oBAAwCiB,oBAAAA,EAAAA,WAAWnpD,MAAM,CAAA,MAAA,CAClF;QAEA,IAAI;YACF,MAAM4mB,UAAUu+B,QAAQj/B,aAAa,CAACijC;YACtC,MAAMhqD,YAAYynB,QAAQznB,SAAS,CAAC6pB,OAAO;YAC3C,MAAMlC,YAAY9O,KAAK1U,SAASsjB,QAAQX,SAAS;YAEjD,OAAO,IAAI,CAACsiC,8BAA8B,CAAC;gBACzCppD;gBACAmE;gBACAwjB;gBACA0hC;YACF;QACD,EAAC,OAAO1oD,OAAO;YACd,MAAM,IAAIoD,MAAM,CAA+BpD,4BAAAA,EAAAA,MAAK,CAAE;QACxD;IACF;AACF;AApGawoD,eASJ/hC,SAAS,GAAc,IAAIkC,UAChC;AChEG,MAAM2gC,YAAYA,CACvBC,SACAC;IAEA,MAAMxiC,YAAYyiC,CAAAA,GAAAA,oBAAS,AAATA,EAAUvxC,IAAI,CAACqxC,SAASC;IAC1C,OAAO;QAACxiC,UAAU0iC,iBAAiB;QAAI1iC,UAAU2iC,QAAQ;KAAE;AAC7D;AACiCF,CAAAA,GAAAA,oBAAS,AAATA,EAAUhiC,KAAK,CAACmiC,iBAAAA;AAC1C,MAAMC,kBAAkBJ,CAAAA,GAAAA,oBAAS,AAATA,EAAUhuC,YAAY;ACArD,MAAM2sC,oBAAoB;AAC1B,MAAM0B,yBAAyB;AAC/B,MAAMzB,mBAAmB;AACzB,MAAM0B,oCAAoC;AAE1C;;CAEA,GASA;;CAEA,GASA;;CAEA,GAOA,MAAMC,+BAA+Bt9B,cAAaha,MAAM,CActD;IACAga,cAAaphB,EAAE,CAAC;IAChBohB,cAAajhB,GAAG,CAAC;IACjBihB,cAAaphB,EAAE,CAAC;IAChBohB,cAAajhB,GAAG,CAAC;IACjBihB,cAAaphB,EAAE,CAAC;IAChBohB,cAAajhB,GAAG,CAAC;IACjBihB,cAAajhB,GAAG,CAAC;IACjBihB,cAAaphB,EAAE,CAAC;IAChBohB,cAAaC,IAAI,CAAC,IAAI;IACtBD,cAAaC,IAAI,CAAC,IAAI;IACtBD,cAAaphB,EAAE,CAAC;CACjB;AAEM,MAAM2+C;IACX;;GAEF,GACE3mD,aAAc,CAAA;IAEd;;GAEF,GAKE;;;GAGF,GACE,OAAO4mD,sBACL7qD,SAA8C,EACtC;QACRwvB,OACExvB,UAAUa,MAAM,KAAKmoD,kBACrB,CAAsBA,mBAAAA,EAAAA,iBAAuChpD,oBAAAA,EAAAA,UAAUa,MAAM,CAAA,MAAA,CAC/E;QAEA,IAAI;YACF,OAAOqnB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACkoD,CAAAA,GAAAA,gBAAU,AAAVA,EAAWriC,SAASzoB,aAAa8C,KAAK,CACvD,CAAC2nD;QAEJ,EAAC,OAAO9pD,OAAO;YACd,MAAM,IAAIoD,MAAM,CAAwCpD,qCAAAA,EAAAA,MAAK,CAAE;QACjE;IACF;IAEA;;;GAGF,GACE,OAAOyoD,+BACL9kC,MAAqD,EAC7B;QACxB,MAAM,EAACtkB,SAAS,EAAEmE,OAAO,EAAEwjB,SAAS,EAAEojC,UAAU,EAAE1B,gBAAAA,EAAiB,GACjE/kC;QACF,OAAOsmC,iBAAiBI,+BAA+B,CAAC;YACtDC,YAAYL,iBAAiBC,qBAAqB,CAAC7qD;YACnDmE;YACAwjB;YACAojC;YACA1B;QACF;IACF;IAEA;;;GAGF,GACE,OAAO2B,gCACL1mC,MAAsD,EAC9B;QACxB,MAAM,EACJ2mC,YAAYC,UAAU,EACtB/mD,OAAO,EACPwjB,SAAS,EACTojC,UAAU,EACV1B,mBAAmB,CAAA,EACpB,GAAG/kC;QAEJ,IAAI2mC;QACJ,IAAI,OAAOC,eAAe;YACxB,IAAIA,WAAWpyC,UAAU,CAAC,OACxBmyC,aAAa/iC,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACsoD,WAAWC,MAAM,CAAC,IAAI;iBAE/CF,aAAa/iC,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACsoD,YAAY;eAGvCD,aAAaC;QAGf17B,OACEy7B,WAAWpqD,MAAM,KAAK4pD,wBACtB,CAAmBA,gBAAAA,EAAAA,uBAA6CQ,oBAAAA,EAAAA,WAAWpqD,MAAM,CAAA,MAAA,CACnF;QAEA,MAAMuqD,YAAY,IAAIV;QACtB,MAAMW,mBAAmBD;QACzB,MAAM7B,kBAAkB6B,YAAYH,WAAWpqD,MAAM;QACrD,MAAM2oD,oBAAoBD,kBAAkB5hC,UAAU9mB,MAAM,GAAG;QAC/D,MAAM4oD,gBAAgB;QAEtB,MAAM5lB,kBAAkB3b,CAAAA,GAAAA,cAAM,AAANA,EAAOgC,KAAK,CAClCygC,6BAA6B/8B,IAAI,GAAGzpB,QAAQtD,MAC9C;QAEA8pD,6BAA6BjjD,MAAM,CACjC;YACE+hD;YACAF;YACAI,2BAA2BN;YAC3BgC;YACAC,4BAA4BjC;YAC5BG;YACAK,iBAAiB1lD,QAAQtD,MAAM;YAC/BipD,yBAAyBT;YACzB1hC,WAAWc,SAASd;YACpBsjC,YAAYxiC,SAASwiC;YACrBF;QACD,GACDlnB;QAGFA,gBAAgBlhC,IAAI,CAAC8lB,SAAStkB,UAAUwmD,6BAA6B/8B,IAAI;QAEzE,OAAO,IAAI+I,uBAAuB;YAChCvkB,MAAM,EAAE;YACRgV,WAAWwjC,iBAAiBxjC,SAAS;YACrChT,MAAMyvB;QACR;IACF;IAEA;;;GAGF,GACE,OAAOkmB,gCACLzlC,MAAsD,EAC9B;QACxB,MAAM,EAAC0lC,YAAYuB,IAAI,EAAEpnD,OAAO,EAAEklD,gBAAAA,EAAiB,GAAG/kC;QAEtDkL,OACE+7B,KAAK1qD,MAAM,KAAKkoD,mBAChB,CAAuBA,oBAAAA,EAAAA,kBAAwCwC,oBAAAA,EAAAA,KAAK1qD,MAAM,CAAA,MAAA,CAC5E;QAEA,IAAI;YACF,MAAMmpD,aAAavhC,SAAS8iC;YAC5B,MAAMvrD,YAAYwqD,gBAChBR,YACA,OACAlnD,KAAK,CAAC,IAHR,0BAAA;YAIA,MAAM0oD,cAActjC,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACkoD,CAAAA,GAAAA,gBAAU,AAAVA,EAAWriC,SAAStkB;YACpD,MAAM,CAACwjB,WAAWojC,WAAW,GAAGd,UAAUuB,aAAaxB;YAEvD,OAAO,IAAI,CAACZ,8BAA8B,CAAC;gBACzCppD;gBACAmE;gBACAwjB;gBACAojC;gBACA1B;YACF;QACD,EAAC,OAAO1oD,OAAO;YACd,MAAM,IAAIoD,MAAM,CAA+BpD,4BAAAA,EAAAA,MAAK,CAAE;QACxD;IACF;AACF;AAzJaiqD,iBASJxjC,SAAS,GAAc,IAAIkC,UAChC;A,I;ACjEJ;;;CAGA,GACamiC,MAAAA,kBAAkB,IAAIniC,UACjC;AAGF;;CAEA,GACO,MAAMoiC;IAMX;;;;GAIF,GACEznD,YAAY0nD,MAAiB,EAAEC,UAAqB,CAAE;QAVtD,oBAAA,GAAA,IAAA,CACAD,MAAM,GAAA,KAAA;QACN,uBAAA,GAAA,IAAA,CACAC,UAAU,GAAA,KAAA;QAQR,IAAI,CAACD,MAAM,GAAGA;QACd,IAAI,CAACC,UAAU,GAAGA;IACpB;AACF;AAOA;;CAEA,GACO,MAAMC;IAQX;;GAEF,GACE5nD,YAAY6nD,aAAqB,EAAEzlB,KAAa,EAAE0lB,SAAoB,CAAE;QAVxE,wCAAA,GAAA,IAAA,CACAD,aAAa,GAAA,KAAA;QACb,+BAAA,GAAA,IAAA,CACAzlB,KAAK,GAAA,KAAA;QACL,+BAAA,GAAA,IAAA,CACA0lB,SAAS,GAAA,KAAA;QAMP,IAAI,CAACD,aAAa,GAAGA;QACrB,IAAI,CAACzlB,KAAK,GAAGA;QACb,IAAI,CAAC0lB,SAAS,GAAGA;IACnB;AAMF;AAACC,UArBYH;AAAAA,OAoBJ1gC,OAAO,GAAW,IAAI0gC,QAAO,GAAG,GAAGviC,UAAU6B,OAAO;AAS7D;;CAEA,GAcA;;CAEA,GAWA;;CAEA,GAOA;;CAEA,GAOA;;CAEA,GASA;;CAEA,GAWA;;CAEA,GAQA;;CAEA,GAUA;;CAEA,GASA;;CAEA,GAMA;;CAEA,GAOA;;CAEA,GACO,MAAM8gC;IACX;;GAEF,GACEhoD,aAAc,CAAA;IAEd;;GAEF,GACE,OAAO28B,sBACL/Y,WAAmC,EACb;QACtB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QAEzC,MAAM0Z,wBAAwBzT,cAAa9gB,GAAG,CAAC;QAC/C,MAAMw0B,YAAYD,sBAAsBl5B,MAAM,CAACigB,YAAYzT,IAAI;QAE/D,IAAIsP;QACJ,KAAK,MAAM,CAACsd,QAAQ3S,OAAO,IAAIlc,OAAOwS,OAAO,CAACunC,2BAC5C,IAAI79B,OAAO1a,KAAK,IAAIotB,WAAW;YAC7Brd,OAAOsd;YACP;QACF;QAGF,IAAI,CAACtd,MACH,MAAM,IAAI3f,MAAM;QAGlB,OAAO2f;IACT;IAEA;;GAEF,GACE,OAAOyoC,iBACLtkC,WAAmC,EACZ;QACvB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACyb,UAAU,EAAEC,MAAAA,EAAO,GAAG6R,aAC3BusB,0BAA0BE,UAAU,EACpCvkC,YAAYzT,IACd;QAEA,OAAO;YACLi4C,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC8F,YAAY,IAAI69B,WACd,IAAIpiC,UAAUuE,WAAW89B,MAAM,GAC/B,IAAIriC,UAAUuE,WAAW+9B,UAAU;YAErC99B,QAAQ,IAAI+9B,OACV/9B,OAAOg+B,aAAa,EACpBh+B,OAAOuY,KAAK,EACZ,IAAI/c,UAAUwE,OAAOi+B,SAAS;QAEjC;IACH;IAEA;;GAEF,GACE,OAAOO,eACLzkC,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtCutB,aAAWusB,0BAA0BK,QAAQ,EAAE1kC,YAAYzT,IAAI;QAE/D,OAAO;YACLi4C,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCmqB,YAAYrqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QACvC;IACH;IAEA;;GAEF,GACE,OAAOykC,gBACL3kC,WAAmC,EACb;QACtB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtC,MAAM,EAACq6C,aAAa,EAAEC,sBAAAA,EAAuB,GAAG/sB,aAC9CusB,0BAA0BS,SAAS,EACnC9kC,YAAYzT,IACd;QAEA,MAAMw4C,IAA0B;YAC9BP,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5Cmb,qBAAqB,IAAI5Z,UAAUmjC;YACnCC,wBAAwB;gBACtB/4C,OAAO+4C;YACT;QACD;QACD,IAAI7kC,YAAYzV,IAAI,CAACvR,MAAM,GAAG,GAC5B+rD,EAAEC,eAAe,GAAGhlC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;QAEhD,OAAO6kC;IACT;IAEA;;GAEF,GACE,OAAOE,wBACLjlC,WAAmC,EACL;QAC9B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EACJq6C,aAAa,EACbC,sBAAsB,EACtBK,aAAa,EACbC,cAAAA,EACD,GAAGrtB,aACFusB,0BAA0Be,iBAAiB,EAC3CplC,YAAYzT,IACd;QAEA,MAAMw4C,IAAkC;YACtCP,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCmlC,eAAerlC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACzCglC,eAAeA;YACfC,gBAAgB,IAAI1jC,UAAU0jC;YAC9B9pB,qBAAqB,IAAI5Z,UAAUmjC;YACnCC,wBAAwB;gBACtB/4C,OAAO+4C;YACT;QACD;QACD,IAAI7kC,YAAYzV,IAAI,CAACvR,MAAM,GAAG,GAC5B+rD,EAAEC,eAAe,GAAGhlC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;QAEhD,OAAO6kC;IACT;IAEA;;GAEF,GACE,OAAOO,YAAYtlC,WAAmC,EAAoB;QACxE,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtC,MAAM,EAACiE,QAAAA,EAAS,GAAGspB,aACjBusB,0BAA0BkB,KAAK,EAC/BvlC,YAAYzT,IACd;QAEA,OAAO;YACLi4C,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCslC,kBAAkBxlC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5CkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5C1R;QACD;IACH;IAEA;;GAEF,GACE,OAAOi3C,YAAYzlC,WAAmC,EAAoB;QACxE,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtCutB,aAAWusB,0BAA0BqB,KAAK,EAAE1lC,YAAYzT,IAAI;QAE5D,OAAO;YACLi4C,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCylC,mBAAmB3lC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC7CkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QACvC;IACH;IAEA;;GAEF,GACE,OAAO0lC,eACL5lC,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtC,MAAM,EAACiE,QAAAA,EAAS,GAAGspB,aACjBusB,0BAA0BwB,QAAQ,EAClC7lC,YAAYzT,IACd;QAEA,MAAMw4C,IAAyB;YAC7BP,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvC2Z,UAAU7Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACpCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5C1R;QACD;QACD,IAAIwR,YAAYzV,IAAI,CAACvR,MAAM,GAAG,GAC5B+rD,EAAEC,eAAe,GAAGhlC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;QAEhD,OAAO6kC;IACT;IAEA;;GAEF,GACE,OAAOe,iBACL9lC,WAAmC,EACZ;QACvB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QACtCutB,aAAWusB,0BAA0B0B,UAAU,EAAE/lC,YAAYzT,IAAI;QAEjE,OAAO;YACLi4C,aAAaxkC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACvCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QACvC;IACH;IAEA;;GAEF,GACE,OAAO8Y,eAAezZ,SAAoB,EAAE;QAC1C,IAAI,CAACA,UAAUuC,MAAM,CAACkkC,aAAazmC,SAAS,GAC1C,MAAM,IAAIrjB,MAAM;IAEpB;IAEA;;GAEF,GACE,OAAOo9B,eAAe/uB,IAAgB,EAAEgxB,cAAsB,EAAE;QAC9D,IAAIhxB,KAAKvR,MAAM,GAAGuiC,gBAChB,MAAM,IAAIr/B,MACR,CAA8BqO,2BAAAA,EAAAA,KAAKvR,MAAM,CAAA,yBAAA,EAA4BuiC,eAAc,CACrF;IAEJ;AACF;AAEA;;CAEA,GA+CA;;;CAGA,GACa8oB,MAAAA,4BAA4B/5C,OAAOkxB,MAAM,CAInD;IACD+oB,YAAY;QACVz4C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAA0C;YACnEga,cAAa9gB,GAAG,CAAC;YACjBonB;YACAA;SACD;IACF;IACDg5B,WAAW;QACTh5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAyC;YAClEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBtG,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACDggD,UAAU;QACR54C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAwC;YACjEga,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACD6gD,OAAO;QACLz5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAqC;YAC9Dga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaU,IAAI,CAAC;SACnB;IACF;IACD2/B,UAAU;QACR/5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAwC;YACjEga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaU,IAAI,CAAC;SACnB;IACF;IACD6/B,YAAY;QACVj6C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAA0C;YACnEga,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACDghD,OAAO;QACL55C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAqC;YAC9Dga,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACD0gD,mBAAmB;QACjBt5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CACzB;YACEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBtG,cAAa9gB,GAAG,CAAC;YACjBonB,WAAkB;YAClBA,UAAiB;SAErB;IACF;AACF;AAEA;;CAEA,GAMA;;CAEA,GACam6B,MAAAA,2BAA2B37C,OAAOkxB,MAAM,CAAC;IACpD0qB,QAAQ;QACNp6C,OAAO;IACR;IACDq6C,YAAY;QACVr6C,OAAO;IACT;AACF;AAEA;;CAEA,GACO,MAAMk6C;IACX;;GAEF,GACE5pD,aAAc,CAAA;IAEd;;GAEF,GAcE;;GAEF,GACE,OAAOgqD,WAAW3pC,MAA6B,EAA0B;QACvE,MAAM,EAAC+nC,WAAW,EAAEx+B,UAAU,EAAEC,QAAQogC,WAAAA,EAAY,GAAG5pC;QACvD,MAAMwJ,SAAiBogC,eAAerC,OAAO1gC,OAAO;QACpD,MAAMzH,OAAOwoC,0BAA0BE,UAAU;QACjD,MAAMh4C,OAAOorB,WAAW9b,MAAM;YAC5BmK,YAAY;gBACV89B,QAAQljC,SAASoF,WAAW89B,MAAM,CAACljC,QAAQ;gBAC3CmjC,YAAYnjC,SAASoF,WAAW+9B,UAAU,CAACnjC,QAAQ;YACpD;YACDqF,QAAQ;gBACNg+B,eAAeh+B,OAAOg+B,aAAa;gBACnCzlB,OAAOvY,OAAOuY,KAAK;gBACnB0lB,WAAWtjC,SAASqF,OAAOi+B,SAAS,CAACtjC,QAAQ;YAC/C;QACF;QACA,MAAMob,kBAAkB;YACtBzxB,MAAM;gBACJ;oBAAC2V,QAAQskC;oBAAa3tC,UAAU;oBAAOwQ,YAAY;gBAAI;gBACvD;oBAACnH,QAAQqU;oBAAoB1d,UAAU;oBAAOwQ,YAAY;gBAAK;aAChE;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACD;QACD,OAAO,IAAIuiB,uBAAuBkN;IACpC;IAEA;;;GAGF,GACE,OAAOJ,sBACLnf,MAAwC,EAC3B;QACb,MAAM1G,cAAc,IAAIiZ;QACxBjZ,YAAY1K,GAAG,CACbiwB,cAAcM,qBAAqB,CAAC;YAClCnC,YAAYhd,OAAOgd,UAAU;YAC7BC,kBAAkBjd,OAAO+nC,WAAW;YACpCxqB,YAAYvd,OAAOud,UAAU;YAC7B7a,MAAM1C,OAAO0C,IAAI;YACjB3Q,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAO,IAAI,CAACA,KAAK;YACjBha,WAAW,IAAI,CAACA,SAAAA;QAClB;QAGF,MAAM,EAACilC,WAAW,EAAEx+B,UAAU,EAAEC,MAAAA,EAAO,GAAGxJ;QAC1C,OAAO1G,YAAY1K,GAAG,CAAC,IAAI,CAAC+6C,UAAU,CAAC;YAAC5B;YAAax+B;YAAYC;QAAM;IACzE;IAEA;;GAEF,GACE,OAAOyV,cAAcjf,MAAgC,EAAe;QAClE,MAAM1G,cAAc,IAAIiZ;QACxBjZ,YAAY1K,GAAG,CACbiwB,cAAcI,aAAa,CAAC;YAC1BjC,YAAYhd,OAAOgd,UAAU;YAC7BC,kBAAkBjd,OAAO+nC,WAAW;YACpCh2C,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAO,IAAI,CAACA,KAAK;YACjBha,WAAW,IAAI,CAACA,SAAAA;QAClB;QAGF,MAAM,EAACilC,WAAW,EAAEx+B,UAAU,EAAEC,MAAAA,EAAO,GAAGxJ;QAC1C,OAAO1G,YAAY1K,GAAG,CAAC,IAAI,CAAC+6C,UAAU,CAAC;YAAC5B;YAAax+B;YAAYC;QAAM;IACzE;IAEA;;;;GAIF,GACE,OAAOqgC,SAAS7pC,MAA2B,EAAe;QACxD,MAAM,EAAC+nC,WAAW,EAAEpsB,gBAAgB,EAAEiS,UAAAA,EAAW,GAAG5tB;QAEpD,MAAMZ,OAAOwoC,0BAA0BK,QAAQ;QAC/C,MAAMn4C,OAAOorB,WAAW9b;QAExB,OAAO,IAAImT,cAAc3jB,GAAG,CAAC;YAC3Bd,MAAM;gBACJ;oBAAC2V,QAAQskC;oBAAa3tC,UAAU;oBAAOwQ,YAAY;gBAAI;gBACvD;oBAACnH,QAAQmqB;oBAAYxzB,UAAU;oBAAOwQ,YAAY;gBAAK;gBACvD;oBAACnH,QAAQiU;oBAAqBtd,UAAU;oBAAOwQ,YAAY;gBAAK;gBAChE;oBACEnH,QAAQyU;oBACR9d,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBAACnH,QAAQ0jC;oBAAiB/sC,UAAU;oBAAOwQ,YAAY;gBAAK;gBAC5D;oBAACnH,QAAQkY;oBAAkBvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC7D;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;GAGF,GACE,OAAOg6C,UAAU9pC,MAA4B,EAAe;QAC1D,MAAM,EACJ+nC,WAAW,EACXpsB,gBAAgB,EAChBiD,mBAAmB,EACnBwpB,sBAAsB,EACtBG,eAAAA,EACD,GAAGvoC;QAEJ,MAAMZ,OAAOwoC,0BAA0BS,SAAS;QAChD,MAAMv4C,OAAOorB,WAAW9b,MAAM;YAC5B+oC,eAAehkC,SAASya,oBAAoBza,QAAQ;YACpDikC,wBAAwBA,uBAAuB/4C,KAAAA;QACjD;QAEA,MAAMvB,OAAO;YACX;gBAAC2V,QAAQskC;gBAAa3tC,UAAU;gBAAOwQ,YAAY;YAAI;YACvD;gBAACnH,QAAQiU;gBAAqBtd,UAAU;gBAAOwQ,YAAY;YAAI;YAC/D;gBAACnH,QAAQkY;gBAAkBvhB,UAAU;gBAAMwQ,YAAY;YAAK;SAC7D;QACD,IAAI29B,iBACFz6C,KAAKhL,IAAI,CAAC;YACR2gB,QAAQ8kC;YACRnuC,UAAU;YACVwQ,YAAY;QACd;QAEF,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;GAGF,GACE,OAAOi6C,kBAAkB/pC,MAAoC,EAAe;QAC1E,MAAM,EACJ+nC,WAAW,EACXa,aAAa,EACbH,aAAa,EACbC,cAAc,EACd9pB,mBAAmB,EACnBwpB,sBAAsB,EACtBG,eAAAA,EACD,GAAGvoC;QAEJ,MAAMZ,OAAOwoC,0BAA0Be,iBAAiB;QACxD,MAAM74C,OAAOorB,WAAW9b,MAAM;YAC5B+oC,eAAehkC,SAASya,oBAAoBza,QAAQ;YACpDikC,wBAAwBA,uBAAuB/4C,KAAK;YACpDo5C,eAAeA;YACfC,gBAAgBvkC,SAASukC,eAAevkC,QAAQ;QAClD;QAEA,MAAMrW,OAAO;YACX;gBAAC2V,QAAQskC;gBAAa3tC,UAAU;gBAAOwQ,YAAY;YAAI;YACvD;gBAACnH,QAAQmlC;gBAAexuC,UAAU;gBAAMwQ,YAAY;YAAK;YACzD;gBAACnH,QAAQiU;gBAAqBtd,UAAU;gBAAOwQ,YAAY;YAAK;SACjE;QACD,IAAI29B,iBACFz6C,KAAKhL,IAAI,CAAC;YACR2gB,QAAQ8kC;YACRnuC,UAAU;YACVwQ,YAAY;QACd;QAEF,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOk6C,iBAAiBhqC,MAAwB,EAA0B;QACxE,MAAM,EAAC+nC,WAAW,EAAEpsB,gBAAgB,EAAEotB,gBAAgB,EAAEh3C,QAAAA,EAAS,GAAGiO;QACpE,MAAMZ,OAAOwoC,0BAA0BkB,KAAK;QAC5C,MAAMh5C,OAAOorB,WAAW9b,MAAM;YAACrN;QAAQ;QACvC,OAAO,IAAIsgB,uBAAuB;YAChCvkB,MAAM;gBACJ;oBAAC2V,QAAQskC;oBAAa3tC,UAAU;oBAAOwQ,YAAY;gBAAI;gBACvD;oBAACnH,QAAQslC;oBAAkB3uC,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC5D;oBAACnH,QAAQkY;oBAAkBvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC7D;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOkD,MACLgN,MAAwB,EACxB,mEAAA;IACAiqC,iBAAyB,EACZ;QACb,MAAM3wC,cAAc,IAAIiZ;QACxBjZ,YAAY1K,GAAG,CACbiwB,cAAcI,aAAa,CAAC;YAC1BjC,YAAYhd,OAAO2b,gBAAgB;YACnCsB,kBAAkBjd,OAAO+oC,gBAAgB;YACzCh3C,UAAUk4C;YACVntB,OAAO,IAAI,CAACA,KAAK;YACjBha,WAAW,IAAI,CAACA,SAAAA;QAClB;QAEF,OAAOxJ,YAAY1K,GAAG,CAAC,IAAI,CAACo7C,gBAAgB,CAAChqC;IAC/C;IAEA;;;GAGF,GACE,OAAOkqC,cACLlqC,MAAgC,EAChC,8EAAA;IACAiqC,iBAA0B,EACb;QACb,MAAM,EACJlC,WAAW,EACXpsB,gBAAgB,EAChBotB,gBAAgB,EAChBxrB,UAAU,EACV7a,IAAI,EACJ3Q,QAAAA,EACD,GAAGiO;QACJ,MAAM1G,cAAc,IAAIiZ;QACxBjZ,YAAY1K,GAAG,CACbiwB,cAAcc,QAAQ,CAAC;YACrBjC,eAAeqrB;YACfxrB;YACA7a;YACAoa,OAAO,IAAI,CAACA,KAAK;YACjBha,WAAW,IAAI,CAACA,SAAAA;QAClB;QAEF,IAAImnC,qBAAqBA,oBAAoB,GAC3C3wC,YAAY1K,GAAG,CACbiwB,cAAcK,QAAQ,CAAC;YACrBlC,YAAYhd,OAAO2b,gBAAgB;YACnCyB,UAAU2rB;YACVh3C,UAAUk4C;QACZ;QAGJ,OAAO3wC,YAAY1K,GAAG,CACpB,IAAI,CAACo7C,gBAAgB,CAAC;YACpBjC;YACApsB;YACAotB;YACAh3C;QACF;IAEJ;IAEA;;GAEF,GACE,OAAOo4C,MAAMnqC,MAAwB,EAAe;QAClD,MAAM,EAAC+nC,WAAW,EAAEmB,iBAAiB,EAAEvtB,gBAAAA,EAAiB,GAAG3b;QAC3D,MAAMZ,OAAOwoC,0BAA0BqB,KAAK;QAC5C,MAAMn5C,OAAOorB,WAAW9b;QAExB,OAAO,IAAImT,cAAc3jB,GAAG,CAAC;YAC3Bd,MAAM;gBACJ;oBAAC2V,QAAQskC;oBAAa3tC,UAAU;oBAAOwQ,YAAY;gBAAI;gBACvD;oBAACnH,QAAQylC;oBAAmB9uC,UAAU;oBAAOwQ,YAAY;gBAAI;gBAC7D;oBAACnH,QAAQiU;oBAAqBtd,UAAU;oBAAOwQ,YAAY;gBAAK;gBAChE;oBACEnH,QAAQyU;oBACR9d,UAAU;oBACVwQ,YAAY;gBACd;gBACA;oBAACnH,QAAQkY;oBAAkBvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC7D;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOs6C,SAASpqC,MAA2B,EAAe;QACxD,MAAM,EAAC+nC,WAAW,EAAEpsB,gBAAgB,EAAEyB,QAAQ,EAAErrB,QAAQ,EAAEw2C,eAAAA,EAAgB,GACxEvoC;QACF,MAAMZ,OAAOwoC,0BAA0BwB,QAAQ;QAC/C,MAAMt5C,OAAOorB,WAAW9b,MAAM;YAACrN;QAAQ;QAEvC,MAAMjE,OAAO;YACX;gBAAC2V,QAAQskC;gBAAa3tC,UAAU;gBAAOwQ,YAAY;YAAI;YACvD;gBAACnH,QAAQ2Z;gBAAUhjB,UAAU;gBAAOwQ,YAAY;YAAI;YACpD;gBAACnH,QAAQiU;gBAAqBtd,UAAU;gBAAOwQ,YAAY;YAAK;YAChE;gBACEnH,QAAQyU;gBACR9d,UAAU;gBACVwQ,YAAY;YACd;YACA;gBAACnH,QAAQkY;gBAAkBvhB,UAAU;gBAAMwQ,YAAY;YAAK;SAC7D;QACD,IAAI29B,iBACFz6C,KAAKhL,IAAI,CAAC;YACR2gB,QAAQ8kC;YACRnuC,UAAU;YACVwQ,YAAY;QACd;QAEF,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOu6C,WAAWrqC,MAA6B,EAAe;QAC5D,MAAM,EAAC+nC,WAAW,EAAEpsB,gBAAAA,EAAiB,GAAG3b;QACxC,MAAMZ,OAAOwoC,0BAA0B0B,UAAU;QACjD,MAAMx5C,OAAOorB,WAAW9b;QAExB,OAAO,IAAImT,cAAc3jB,GAAG,CAAC;YAC3Bd,MAAM;gBACJ;oBAAC2V,QAAQskC;oBAAa3tC,UAAU;oBAAOwQ,YAAY;gBAAI;gBACvD;oBAACnH,QAAQiU;oBAAqBtd,UAAU;oBAAOwQ,YAAY;gBAAK;gBAChE;oBAACnH,QAAQkY;oBAAkBvhB,UAAU;oBAAMwQ,YAAY;gBAAK;aAC7D;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;AACF;AA7Way5C,aASJzmC,SAAS,GAAc,IAAIkC,UAChC;AAGF;;;;;;CAMF,GAnBaukC,aAoBJzsB,KAAK,GAAW;AC/kBzB;;CAEA,GACO,MAAMwtB;IAIS,aAAA,GAEpB3qD,YACEkuC,UAAqB,EACrB0c,eAA0B,EAC1BC,oBAA+B,EAC/BxjB,UAAkB,CAClB;QAAA,IAAA,CAVF6G,UAAU,GAAA,KAAA;QAAA,IAAA,CACV0c,eAAe,GAAA,KAAA;QAAA,IAAA,CACfC,oBAAoB,GAAA,KAAA;QAAA,IAAA,CACpBxjB,UAAU,GAAA,KAAA;QAQR,IAAI,CAAC6G,UAAU,GAAGA;QAClB,IAAI,CAAC0c,eAAe,GAAGA;QACvB,IAAI,CAACC,oBAAoB,GAAGA;QAC5B,IAAI,CAACxjB,UAAU,GAAGA;IACpB;AACF;AAEA;;CAEA,GAQA;;CAEA,GAOA;;CAEA,GASA;;CAEA,GAUA;;CAEA,GAQA;;CAEA,GAOA;;CAEA,GACO,MAAMyjB;IACX;;GAEF,GACE9qD,aAAc,CAAA;IAEd;;GAEF,GACE,OAAO28B,sBACL/Y,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QAEzC,MAAM0Z,wBAAwBzT,cAAa9gB,GAAG,CAAC;QAC/C,MAAMw0B,YAAYD,sBAAsBl5B,MAAM,CAACigB,YAAYzT,IAAI;QAE/D,IAAIsP;QACJ,KAAK,MAAM,CAACsd,QAAQ3S,OAAO,IAAIlc,OAAOwS,OAAO,CAACqqC,0BAC5C,IAAI3gC,OAAO1a,KAAK,IAAIotB,WAAW;YAC7Brd,OAAOsd;YACP;QACF;QAGF,IAAI,CAACtd,MACH,MAAM,IAAI3f,MAAM;QAGlB,OAAO2f;IACT;IAEA;;GAEF,GACE,OAAOurC,wBACLpnC,WAAmC,EACV;QACzB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAAC4b,QAAAA,EAAS,GAAG2R,aACjBqvB,yBAAyBE,iBAAiB,EAC1CrnC,YAAYzT,IACd;QAEA,OAAO;YACL89B,YAAYrqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCoqB,YAAYtqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCiG,UAAU,IAAI4gC,SACZ,IAAItlC,UAAU0E,SAASmkB,UAAU,GACjC,IAAI7oB,UAAU0E,SAAS6gC,eAAe,GACtC,IAAIvlC,UAAU0E,SAAS8gC,oBAAoB,GAC3C9gC,SAASsd,UACX;QACD;IACH;IAEA;;GAEF,GACE,OAAOkhB,gBACL3kC,WAAmC,EACd;QACrB,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACq6C,aAAa,EAAE0C,qBAAAA,EAAsB,GAAGxvB,aAC7CqvB,yBAAyBrC,SAAS,EAClC9kC,YAAYzT,IACd;QAEA,OAAO;YACL89B,YAAYrqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCkY,kBAAkBpY,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAC5Cmb,qBAAqB,IAAI5Z,UAAUmjC;YACnC0C,uBAAuB;gBACrBx7C,OAAOw7C;YACT;QACD;IACH;IAEA;;GAEF,GACE,OAAOrC,wBACLjlC,WAAmC,EACN;QAC7B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EACJ6b,2BAA2B,EACzBmhC,qCAAqC,EACrCC,8BAA8B,EAC9B5C,aAAa,EACb0C,qBAAAA,EACF,EACD,GAAGxvB,aACFqvB,yBAAyB/B,iBAAiB,EAC1CplC,YAAYzT,IACd;QAEA,OAAO;YACLk7C,sCAAsCznC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YAChEqnC,uCAAuC,IAAI9lC,UACzC8lC;YAEFC,gCAAgCA;YAChCnsB,qBAAqB,IAAI5Z,UAAUmjC;YACnC0C,uBAAuB;gBACrBx7C,OAAOw7C;YACR;YACDjd,YAAYrqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QACjC;IACH;IAEA;;GAEF,GACE,OAAO0lC,eACL5lC,WAAmC,EACJ;QAC/B,IAAI,CAACgZ,cAAc,CAAChZ,YAAYT,SAAS;QACzC,IAAI,CAAC+Z,cAAc,CAACtZ,YAAYzV,IAAI,EAAE;QAEtC,MAAM,EAACiE,QAAAA,EAAS,GAAGspB,aACjBqvB,yBAAyBtB,QAAQ,EACjC7lC,YAAYzT,IACd;QAEA,OAAO;YACL89B,YAAYrqB,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtCwnC,4BAA4B1nC,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAM;YACtD1R;YACAqrB,UAAU7Z,YAAYzV,IAAI,CAAC,EAAE,CAAC2V,MAAAA;QAC/B;IACH;IAEA;;GAEF,GACE,OAAO8Y,eAAezZ,SAAoB,EAAE;QAC1C,IAAI,CAACA,UAAUuC,MAAM,CAAC6lC,YAAYpoC,SAAS,GACzC,MAAM,IAAIrjB,MAAM;IAEpB;IAEA;;GAEF,GACE,OAAOo9B,eAAe/uB,IAAgB,EAAEgxB,cAAsB,EAAE;QAC9D,IAAIhxB,KAAKvR,MAAM,GAAGuiC,gBAChB,MAAM,IAAIr/B,MACR,CAA8BqO,2BAAAA,EAAAA,KAAKvR,MAAM,CAAA,yBAAA,EAA4BuiC,eAAc,CACrF;IAEJ;AACF;AAEA;;CAEA,GAYA,cAAA,GA6BA,MAAM4rB,2BAA2B78C,OAAOkxB,MAAM,CAI3C;IACD6rB,mBAAmB;QACjBv7C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAgD;YACzEga,cAAa9gB,GAAG,CAAC;YACjBonB;SACD;IACF;IACDg5B,WAAW;QACTh5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAwC;YACjEga,cAAa9gB,GAAG,CAAC;YACjBonB,UAAiB;YACjBtG,cAAa9gB,GAAG,CAAC;SAClB;IACF;IACDmhD,UAAU;QACR/5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAuC;YAChEga,cAAa9gB,GAAG,CAAC;YACjB8gB,cAAaU,IAAI,CAAC;SACnB;IACF;IACD0hC,yBAAyB;QACvB97C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAEzB;YAACga,cAAa9gB,GAAG,CAAC;SAAe;IACpC;IACD0gD,mBAAmB;QACjBt5C,OAAO;QACP0a,QAAQhB,cAAaha,MAAM,CAAgD;YACzEga,cAAa9gB,GAAG,CAAC;YACjBonB;SACD;IACH;AACF;AAEA;;CAEA,GAMA;;CAEA,GACa+7B,MAAAA,0BAA0Bv9C,OAAOkxB,MAAM,CAAC;IACnDssB,OAAO;QACLh8C,OAAO;IACR;IACDq6C,YAAY;QACVr6C,OAAO;IACT;AACF;AAEA;;CAEA,GACO,MAAM67C;IACX;;GAEF,GACEvrD,aAAc,CAAA;IAEd;;GAEF,GAgBE;;GAEF,GACE,OAAO2rD,kBACLtrC,MAA+B,EACP;QACxB,MAAM,EAAC4tB,UAAU,EAAEC,UAAU,EAAEnkB,QAAAA,EAAS,GAAG1J;QAC3C,MAAMZ,OAAOsrC,yBAAyBE,iBAAiB;QACvD,MAAM96C,OAAOorB,WAAW9b,MAAM;YAC5BsK,UAAU;gBACRmkB,YAAY1pB,SAASuF,SAASmkB,UAAU,CAAC1pB,QAAQ;gBACjDomC,iBAAiBpmC,SAASuF,SAAS6gC,eAAe,CAACpmC,QAAQ;gBAC3DqmC,sBAAsBrmC,SACpBuF,SAAS8gC,oBAAoB,CAACrmC,QAAQ;gBAExC6iB,YAAYtd,SAASsd,UAAAA;YACvB;QACF;QACA,MAAMzH,kBAAkB;YACtBzxB,MAAM;gBACJ;oBAAC2V,QAAQmqB;oBAAYxzB,UAAU;oBAAOwQ,YAAY;gBAAI;gBACtD;oBAACnH,QAAQqU;oBAAoB1d,UAAU;oBAAOwQ,YAAY;gBAAK;gBAC/D;oBAACnH,QAAQiU;oBAAqBtd,UAAU;oBAAOwQ,YAAY;gBAAK;gBAChE;oBAACnH,QAAQoqB;oBAAYzzB,UAAU;oBAAMwQ,YAAY;gBAAK;aACvD;YACD9H,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACD;QACD,OAAO,IAAIuiB,uBAAuBkN;IACpC;IAEA;;GAEF,GACE,OAAON,cAAcjf,MAA+B,EAAe;QACjE,MAAM1G,cAAc,IAAIiZ;QACxBjZ,YAAY1K,GAAG,CACbiwB,cAAcI,aAAa,CAAC;YAC1BjC,YAAYhd,OAAOgd,UAAU;YAC7BC,kBAAkBjd,OAAO4tB,UAAU;YACnC77B,UAAUiO,OAAOjO,QAAQ;YACzB+qB,OAAO,IAAI,CAACA,KAAK;YACjBha,WAAW,IAAI,CAACA,SAAAA;QAClB;QAGF,OAAOxJ,YAAY1K,GAAG,CACpB,IAAI,CAAC08C,iBAAiB,CAAC;YACrB1d,YAAY5tB,OAAO4tB,UAAU;YAC7BC,YAAY7tB,OAAO0J,QAAQ,CAACmkB,UAAU;YACtCnkB,UAAU1J,OAAO0J,QAAAA;QACnB;IAEJ;IAEA;;GAEF,GACE,OAAOogC,UAAU9pC,MAA2B,EAAe;QACzD,MAAM,EACJ4tB,UAAU,EACVjS,gBAAgB,EAChBiD,mBAAmB,EACnBisB,qBAAAA,EACD,GAAG7qC;QAEJ,MAAMZ,OAAOsrC,yBAAyBrC,SAAS;QAC/C,MAAMv4C,OAAOorB,WAAW9b,MAAM;YAC5B+oC,eAAehkC,SAASya,oBAAoBza,QAAQ;YACpD0mC,uBAAuBA,sBAAsBx7C,KAAAA;QAC/C;QAEA,MAAMvB,OAAO;YACX;gBAAC2V,QAAQmqB;gBAAYxzB,UAAU;gBAAOwQ,YAAY;YAAI;YACtD;gBAACnH,QAAQiU;gBAAqBtd,UAAU;gBAAOwQ,YAAY;YAAK;YAChE;gBAACnH,QAAQkY;gBAAkBvhB,UAAU;gBAAMwQ,YAAY;YAAK;SAC7D;QAED,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;GAGF,GACE,OAAOi6C,kBAAkB/pC,MAAmC,EAAe;QACzE,MAAM,EACJgrC,oCAAoC,EACpCF,qCAAqC,EACrCC,8BAA8B,EAC9BnsB,mBAAmB,EACnBisB,qBAAqB,EACrBjd,UAAAA,EACD,GAAG5tB;QAEJ,MAAMZ,OAAOsrC,yBAAyB/B,iBAAiB;QACvD,MAAM74C,OAAOorB,WAAW9b,MAAM;YAC5BuK,2BAA2B;gBACzBmhC,uCAAuC3mC,SACrC2mC,sCAAsC3mC,QAAQ;gBAEhD4mC,gCAAgCA;gBAChC5C,eAAehkC,SAASya,oBAAoBza,QAAQ;gBACpD0mC,uBAAuBA,sBAAsBx7C,KAAAA;YAC/C;QACF;QAEA,MAAMvB,OAAO;YACX;gBAAC2V,QAAQmqB;gBAAYxzB,UAAU;gBAAOwQ,YAAY;YAAI;YACtD;gBAACnH,QAAQiU;gBAAqBtd,UAAU;gBAAOwQ,YAAY;YAAK;YAChE;gBACEnH,QAAQunC;gBACR5wC,UAAU;gBACVwQ,YAAY;YACd;SACD;QAED,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;GAEF,GACE,OAAOs6C,SAASpqC,MAAqC,EAAe;QAClE,MAAM,EAAC4tB,UAAU,EAAEqd,0BAA0B,EAAEl5C,QAAQ,EAAEqrB,QAAAA,EAAS,GAAGpd;QACrE,MAAMZ,OAAOsrC,yBAAyBtB,QAAQ;QAC9C,MAAMt5C,OAAOorB,WAAW9b,MAAM;YAACrN;QAAQ;QAEvC,MAAMjE,OAAO;YACX;gBAAC2V,QAAQmqB;gBAAYxzB,UAAU;gBAAOwQ,YAAY;YAAI;YACtD;gBAACnH,QAAQ2Z;gBAAUhjB,UAAU;gBAAOwQ,YAAY;YAAI;YACpD;gBAACnH,QAAQwnC;gBAA4B7wC,UAAU;gBAAMwQ,YAAY;YAAK;SACvE;QAED,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;IAEA;;;;;;;GAOF,GACE,OAAOy7C,aACLvrC,MAAqC,EACrCwrC,yBAAiC,EACjCC,iBAAyB,EACZ;QACb,IAAIzrC,OAAOjO,QAAQ,GAAGy5C,4BAA4BC,mBAChD,MAAM,IAAIhsD,MACR;QAGJ,OAAOyrD,YAAYd,QAAQ,CAACpqC;IAC9B;IAEA;;GAEF,GACE,OAAO0rC,wBACL1rC,MAAqC,EACxB;QACb,MAAM,EAAC4tB,UAAU,EAAEqd,0BAA0B,EAAEpd,UAAAA,EAAW,GAAG7tB;QAC7D,MAAMZ,OAAOsrC,yBAAyBS,uBAAuB;QAC7D,MAAMr7C,OAAOorB,WAAW9b;QAExB,MAAMtR,OAAO;YACX;gBAAC2V,QAAQmqB;gBAAYxzB,UAAU;gBAAOwQ,YAAY;YAAI;YACtD;gBAACnH,QAAQoqB;gBAAYzzB,UAAU;gBAAMwQ,YAAY;YAAK;YACtD;gBAACnH,QAAQwnC;gBAA4B7wC,UAAU;gBAAMwQ,YAAY;YAAK;SACvE;QAED,OAAO,IAAI2H,cAAc3jB,GAAG,CAAC;YAC3Bd;YACAgV,WAAW,IAAI,CAACA,SAAS;YACzBhT;QACF;IACF;AACF;AAxNao7C,YASJpoC,SAAS,GAAc,IAAIkC,UAChC;AAGF;;;;;;;;CAQF,GArBakmC,YAsBJpuB,KAAK,GAAW;AC1XZ6uB,MAAAA,qBAAqB,IAAI3mC,UACpC;AAGF;;CAEA,GAMA;;CAEA,GAYA,MAAM4mC,aAAalmB,CAAAA,GAAAA,iBAAI,AAAJA,EAAK;IACtBhmC,MAAMmP,CAAAA,GAAAA,mBAAM,AAANA;IACNg9C,SAAS/lB,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;IAClBi9C,SAAShmB,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;IAClBk9C,iBAAiBjmB,CAAAA,GAAAA,qBAAQ,AAARA,EAASj3B,CAAAA,GAAAA,mBAAM,AAANA;AAC5B;AAEA;;CAEA,GACO,MAAMm9C;IAUX;;;;;GAKF,GACErsD,YAAY/D,GAAc,EAAEutC,IAAU,CAAE;QAfxC;;KAEF,GAFE,IAAA,CAGAvtC,GAAG,GAAA,KAAA;QACH;;KAEF,GAFE,IAAA,CAGAutC,IAAI,GAAA,KAAA;QASF,IAAI,CAACvtC,GAAG,GAAGA;QACX,IAAI,CAACutC,IAAI,GAAGA;IACd;IAEA;;;;;;GAMF,GACE,OAAO8iB,eACLhtD,MAA2C,EACrB;QACtB,IAAI4tB,YAAY;eAAI5tB;SAAO;QAC3B,MAAMitD,iBAAiBx9B,aAAsB7B;QAC7C,IAAIq/B,mBAAmB,GAAG,OAAO;QAEjC,MAAMC,aAA+B,EAAE;QACvC,IAAK,IAAIxtD,IAAI,GAAGA,IAAI,GAAGA,IAAK;YAC1B,MAAMjD,YAAY,IAAIspB,UACpB8H,cAAcD,WAAW,GAAGpxB;YAE9B,MAAM2e,WAAWwS,aAAaC,eAAe;YAC7Cs/B,WAAWrpD,IAAI,CAAC;gBAACpH;gBAAW0e;YAAQ;QACtC;QAEA,IAAI+xC,UAAU,CAAC,EAAE,CAACzwD,SAAS,CAAC2pB,MAAM,CAACsmC,qBACjC;YAAA,IAAIQ,UAAU,CAAC,EAAE,CAAC/xC,QAAQ,EAAE;gBAC1B,MAAMgyC,UAAe/8B,aAAoB/rB,MAAM,CAACsgB,CAAAA,GAAAA,cAAM,AAANA,EAAOtlB,IAAI,CAACuuB;gBAC5D,MAAMsc,OAAOx/B,KAAKmU,KAAK,CAACsuC;gBACxBC,CAAAA,GAAAA,mBAAU,AAAVA,EAAWljB,MAAMyiB;gBACjB,OAAO,IAAII,cAAcG,UAAU,CAAC,EAAE,CAACzwD,SAAS,EAAEytC;YACpD;QAAA;QAGF,OAAO;IACT;AACF;ACjGamjB,MAAAA,kBAAkB,IAAItnC,UACjC;AAQF;;CAEA,GAqDA;;;;CAIA,GACA,MAAMunC,oBAAoBxjC,cAAaha,MAAM,CAAkB;IAC7DsgB,UAAiB;IACjBA,UAAiB;IACjBtG,cAAaphB,EAAE,CAAC;IAChBohB,cAAawS,IAAI;IAAI,eAAA;IACrBxS,cAAaoG,GAAG,CACdpG,cAAaha,MAAM,CAAC;QAClBga,cAAawS,IAAI,CAAC;QAClBxS,cAAa9gB,GAAG,CAAC;KAClB,GACD8gB,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KACxC;IAEF8gB,cAAaphB,EAAE,CAAC;IAChBohB,cAAawS,IAAI,CAAC;IAClBxS,cAAawS,IAAI;IAAI,0BAAA;IACrBxS,cAAaoG,GAAG,CACdpG,cAAaha,MAAM,CAAC;QAClBga,cAAawS,IAAI,CAAC;QAClBlM,UAAiB;KAClB,GACDtG,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KACxC;IAEF8gB,cAAaha,MAAM,CACjB;QACEga,cAAaoG,GAAG,CACdpG,cAAaha,MAAM,CAAC;YAClBsgB,UAAiB;YACjBtG,cAAawS,IAAI,CAAC;YAClBxS,cAAawS,IAAI,CAAC;SACnB,GACD,IACA;QAEFxS,cAAawS,IAAI,CAAC;QAClBxS,cAAaphB,EAAE,CAAC;KACjB,EACD;IAEFohB,cAAawS,IAAI;IAAI,sBAAA;IACrBxS,cAAaoG,GAAG,CACdpG,cAAaha,MAAM,CAAC;QAClBga,cAAawS,IAAI,CAAC;QAClBxS,cAAawS,IAAI,CAAC;QAClBxS,cAAawS,IAAI,CAAC;KACnB,GACDxS,cAAa7pB,MAAM,CAAC6pB,cAAa9gB,GAAG,IAAI,KACxC;IAEF8gB,cAAaha,MAAM,CACjB;QAACga,cAAawS,IAAI,CAAC;QAASxS,cAAawS,IAAI,CAAC;KAAa,EAC3D;CAEH;AAcD;;CAEA,GACO,MAAMixB;IAWX;;GAEF,GACE7sD,YAAYotB,IAAqB,CAAE;QAAA,IAAA,CAbnC8gB,UAAU,GAAA,KAAA;QAAA,IAAA,CACV2c,oBAAoB,GAAA,KAAA;QAAA,IAAA,CACpBxjB,UAAU,GAAA,KAAA;QAAA,IAAA,CACVkH,QAAQ,GAAA,KAAA;QAAA,IAAA,CACRue,KAAK,GAAA,KAAA;QAAA,IAAA,CACLC,gBAAgB,GAAA,KAAA;QAAA,IAAA,CAChBC,WAAW,GAAA,KAAA;QAAA,IAAA,CACX3e,YAAY,GAAA,KAAA;QAAA,IAAA,CACZ4e,aAAa,GAAA,KAAA;QAMX,IAAI,CAAC/e,UAAU,GAAG9gB,KAAK8gB,UAAU;QACjC,IAAI,CAAC2c,oBAAoB,GAAGz9B,KAAKy9B,oBAAoB;QACrD,IAAI,CAACxjB,UAAU,GAAGja,KAAKia,UAAU;QACjC,IAAI,CAACkH,QAAQ,GAAGnhB,KAAKmhB,QAAQ;QAC7B,IAAI,CAACue,KAAK,GAAG1/B,KAAK0/B,KAAK;QACvB,IAAI,CAACC,gBAAgB,GAAG3/B,KAAK2/B,gBAAgB;QAC7C,IAAI,CAACC,WAAW,GAAG5/B,KAAK4/B,WAAW;QACnC,IAAI,CAAC3e,YAAY,GAAGjhB,KAAKihB,YAAY;QACrC,IAAI,CAAC4e,aAAa,GAAG7/B,KAAK6/B,aAAa;IACzC;IAEA;;;;;GAKF,GACE,OAAO/wB,gBACL58B,MAA2C,EAC9B;QACb,MAAM4tD,gBAAgB;QACtB,MAAMC,KAAKP,kBAAkBjpD,MAAM,CAAC6gB,SAASllB,SAAS4tD;QAEtD,IAAI3e,WAA0B4e,GAAG5e,QAAQ;QACzC,IAAI,CAAC4e,GAAGC,aAAa,EACnB7e,WAAW;QAGb,OAAO,IAAIse,YAAY;YACrB3e,YAAY,IAAI7oB,UAAU8nC,GAAGjf,UAAU;YACvC2c,sBAAsB,IAAIxlC,UAAU8nC,GAAGtC,oBAAoB;YAC3DxjB,YAAY8lB,GAAG9lB,UAAU;YACzBylB,OAAOK,GAAGL,KAAK;YACfve;YACAwe,kBAAkBI,GAAGJ,gBAAgB,CAACxsD,GAAG,CAAC8sD;YAC1CL,aAAaM,eAAeH,GAAGH,WAAW;YAC1C3e,cAAc8e,GAAG9e,YAAY;YAC7B4e,eAAeE,GAAGF,aAAAA;QACpB;IACF;AACF;AAEA,SAASI,qBAAqB,EAC5BzC,eAAe,EACfxoB,KAAAA,EACmB;IACnB,OAAO;QACLA;QACAwoB,iBAAiB,IAAIvlC,UAAUulC;IAChC;AACH;AAEA,SAAS2C,iBAAiB,EACxBvxB,gBAAgB,EAChBwxB,2BAA2B,EAC3BC,WAAAA,EACc;IACd,OAAO;QACLzxB,kBAAkB,IAAI3W,UAAU2W;QAChCwxB;QACAC;IACD;AACH;AAEA,SAASH,eAAe,EAACxnC,GAAG,EAAE4nC,GAAG,EAAEC,OAAAA,EAAqB;IACtD,IAAIA,SACF,OAAO,EAAE;IAGX,OAAO;WACF7nC,IAAIjnB,KAAK,CAAC6uD,MAAM,GAAGntD,GAAG,CAACgtD;WACvBznC,IAAIjnB,KAAK,CAAC,GAAG6uD,KAAKntD,GAAG,CAACgtD;KAC1B;AACH;AC3OA,MAAM13C,WAAW;IACfS,MAAM;QACJs3C,QAAQ;QACRC,SAAS;QACT,gBAAgB;IACjB;IACDC,OAAO;QACLF,QAAQ;QACRC,SAAS;QACT,gBAAgB;IAClB;AACF;AAIA;;;;;;CAMA,GACO,SAASE,cAAcC,OAAiB,EAAEC,GAAa;IAC5D,MAAMhyD,MAAMgyD,QAAQ,QAAQ,SAAS;IAErC,IAAI,CAACD,SACH,OAAOn4C,QAAQ,CAAC5Z,IAAI,CAAC,SAAS;IAGhC,MAAM+iB,MAAMnJ,QAAQ,CAAC5Z,IAAI,CAAC+xD,QAAQ;IAClC,IAAI,CAAChvC,KACH,MAAM,IAAIlf,MAAM,CAAA,QAAA,EAAW7D,IAAgB+xD,UAAAA,EAAAA,QAAO,CAAE;IAEtD,OAAOhvC;AACT;ACtBA;;;;;;;;;;CAUA,GAQA;;;CAGA,GACA,wCAAA;AAOA,wCAAA;AACO,eAAekvC,6BACpBj5B,UAAsB,EACtBgqB,cAAsB,EACtBkP,oCAGa,EACbC,mBAAoC;IAEpC,IAAIC;IACJ,IAAIhpD;IACJ,IACE8oD,wCACAjgD,OAAOoO,SAAS,CAAC8W,cAAc,CAAC9Z,IAAI,CAClC60C,sCACA,yBAEF;QACAE,uBACEF;QACF9oD,UAAU+oD;IACZ,OAAO,IACLD,wCACAjgD,OAAOoO,SAAS,CAAC8W,cAAc,CAAC9Z,IAAI,CAClC60C,sCACA,eAEF;QACAE,uBACEF;QACF9oD,UAAU+oD;IACZ,OACE/oD,UAAU8oD;IAIZ,MAAMxzB,cAAct1B,WAAW;QAC7Bu1B,eAAev1B,QAAQu1B,aAAa;QACpCC,qBAAqBx1B,QAAQw1B,mBAAmB,IAAIx1B,QAAQy1B,UAAU;QACtEzH,gBAAgBhuB,QAAQguB,cAAAA;IACzB;IAED,MAAM3P,YAAY,MAAMuR,WAAW+pB,kBAAkB,CACnDC,gBACAtkB;IAGF,MAAMG,aAAaz1B,WAAWA,QAAQy1B,UAAU;IAChD,MAAMqd,sBAAsBkW,uBACxBp5B,WAAWzb,kBAAkB,CAAC60C,sBAAsBvzB,cACpD7F,WAAWzb,kBAAkB,CAACkK,WAAWoX;IAC7C,MAAME,SAAS,AAAC,CAAA,MAAMmd,mBAAAA,EAAqBn9C,KAAK;IAEhD,IAAIggC,OAAOlU,GAAG,EAAE;QACd,IAAIpD,aAAa,MACf,MAAM,IAAI8U,qBAAqB;YAC7BC,QAAQkC,aAAaC,gBAAgB,SAAS;YAC9ClX,WAAWA;YACXgV,oBAAoB,CAAY1uB,SAAAA,EAAAA,KAAKC,SAAS,CAAC+wB,QAAO,CAAA,CAAA;QACxD;QAEF,MAAM,IAAIl7B,MACR,CAAA,gBAAA,EAAmB4jB,UAAS,SAAA,EAAY1Z,KAAKC,SAAS,CAAC+wB,QAAO,CAAA,CAChE;IACF;IAEA,OAAOtX;AACT;ACzFA;;CAEA,GACO,MAAM4qC,mBAAmB;;;ACvBhC;;;;;CAKC,GACD,2BAA2B,GAE3B;AAEA,MAAM,SAAS,QAAQ;AACvB,MAAM,UAAU,QAAQ;AACxB,MAAM,sBACJ,AAAC,OAAO,WAAW,cAAc,OAAO,MAAM,CAAC,MAAM,KAAK,WAAY,mCAAmC;GACrG,MAAM,CAAC,MAAM,CAAC,8BAA8B,mCAAmC;GAC/E;AAEN,QAAQ,MAAM,GAAG;AACjB,QAAQ,UAAU,GAAG;AACrB,QAAQ,iBAAiB,GAAG;AAE5B,MAAM,eAAe;AACrB,QAAQ,UAAU,GAAG;AAErB;;;;;;;;;;;;;CAaC,GACD,OAAO,mBAAmB,GAAG;AAE7B,IAAI,CAAC,OAAO,mBAAmB,IAAI,OAAO,YAAY,eAClD,OAAO,QAAQ,KAAK,KAAK,YAC3B,QAAQ,KAAK,CACX;AAKJ,SAAS;IACP,8CAA8C;IAC9C,IAAI;QACF,MAAM,MAAM,IAAI,WAAW;QAC3B,MAAM,QAAQ;YAAE,KAAK;gBAAc,OAAO;YAAG;QAAE;QAC/C,OAAO,cAAc,CAAC,OAAO,WAAW,SAAS;QACjD,OAAO,cAAc,CAAC,KAAK;QAC3B,OAAO,IAAI,GAAG,OAAO;IACvB,EAAE,OAAO,GAAG;QACV,OAAO;IACT;AACF;AAEA,OAAO,cAAc,CAAC,OAAO,SAAS,EAAE,UAAU;IAChD,YAAY;IACZ,KAAK;QACH,IAAI,CAAC,OAAO,QAAQ,CAAC,IAAI,GAAG,OAAO;QACnC,OAAO,IAAI,CAAC,MAAM;IACpB;AACF;AAEA,OAAO,cAAc,CAAC,OAAO,SAAS,EAAE,UAAU;IAChD,YAAY;IACZ,KAAK;QACH,IAAI,CAAC,OAAO,QAAQ,CAAC,IAAI,GAAG,OAAO;QACnC,OAAO,IAAI,CAAC,UAAU;IACxB;AACF;AAEA,SAAS,aAAc,MAAM;IAC3B,IAAI,SAAS,cACX,MAAM,IAAI,WAAW,gBAAgB,SAAS;IAEhD,4CAA4C;IAC5C,MAAM,MAAM,IAAI,WAAW;IAC3B,OAAO,cAAc,CAAC,KAAK,OAAO,SAAS;IAC3C,OAAO;AACT;AAEA;;;;;;;;CAQC,GAED,SAAS,OAAQ,GAAG,EAAE,gBAAgB,EAAE,MAAM;IAC5C,eAAe;IACf,IAAI,OAAO,QAAQ,UAAU;QAC3B,IAAI,OAAO,qBAAqB,UAC9B,MAAM,IAAI,UACR;QAGJ,OAAO,YAAY;IACrB;IACA,OAAO,KAAK,KAAK,kBAAkB;AACrC;AAEA,OAAO,QAAQ,GAAG,KAAK,kCAAkC;;AAEzD,SAAS,KAAM,KAAK,EAAE,gBAAgB,EAAE,MAAM;IAC5C,IAAI,OAAO,UAAU,UACnB,OAAO,WAAW,OAAO;IAG3B,IAAI,YAAY,MAAM,CAAC,QACrB,OAAO,cAAc;IAGvB,IAAI,SAAS,MACX,MAAM,IAAI,UACR,oHAC0C,OAAO;IAIrD,IAAI,WAAW,OAAO,gBACjB,SAAS,WAAW,MAAM,MAAM,EAAE,cACrC,OAAO,gBAAgB,OAAO,kBAAkB;IAGlD,IAAI,OAAO,sBAAsB,eAC5B,CAAA,WAAW,OAAO,sBAClB,SAAS,WAAW,MAAM,MAAM,EAAE,kBAAkB,GACvD,OAAO,gBAAgB,OAAO,kBAAkB;IAGlD,IAAI,OAAO,UAAU,UACnB,MAAM,IAAI,UACR;IAIJ,MAAM,UAAU,MAAM,OAAO,IAAI,MAAM,OAAO;IAC9C,IAAI,WAAW,QAAQ,YAAY,OACjC,OAAO,OAAO,IAAI,CAAC,SAAS,kBAAkB;IAGhD,MAAM,IAAI,WAAW;IACrB,IAAI,GAAG,OAAO;IAEd,IAAI,OAAO,WAAW,eAAe,OAAO,WAAW,IAAI,QACvD,OAAO,KAAK,CAAC,OAAO,WAAW,CAAC,KAAK,YACvC,OAAO,OAAO,IAAI,CAAC,KAAK,CAAC,OAAO,WAAW,CAAC,CAAC,WAAW,kBAAkB;IAG5E,MAAM,IAAI,UACR,oHAC0C,OAAO;AAErD;AAEA;;;;;;;EAOE,GACF,OAAO,IAAI,GAAG,SAAU,KAAK,EAAE,gBAAgB,EAAE,MAAM;IACrD,OAAO,KAAK,OAAO,kBAAkB;AACvC;AAEA,kFAAkF;AAClF,4CAA4C;AAC5C,OAAO,cAAc,CAAC,OAAO,SAAS,EAAE,WAAW,SAAS;AAC5D,OAAO,cAAc,CAAC,QAAQ;AAE9B,SAAS,WAAY,IAAI;IACvB,IAAI,OAAO,SAAS,UAClB,MAAM,IAAI,UAAU;SACf,IAAI,OAAO,GAChB,MAAM,IAAI,WAAW,gBAAgB,OAAO;AAEhD;AAEA,SAAS,MAAO,IAAI,EAAE,IAAI,EAAE,QAAQ;IAClC,WAAW;IACX,IAAI,QAAQ,GACV,OAAO,aAAa;IAEtB,IAAI,SAAS,WACX,wDAAwD;IACxD,uDAAuD;IACvD,oCAAoC;IACpC,OAAO,OAAO,aAAa,WACvB,aAAa,MAAM,IAAI,CAAC,MAAM,YAC9B,aAAa,MAAM,IAAI,CAAC;IAE9B,OAAO,aAAa;AACtB;AAEA;;;EAGE,GACF,OAAO,KAAK,GAAG,SAAU,IAAI,EAAE,IAAI,EAAE,QAAQ;IAC3C,OAAO,MAAM,MAAM,MAAM;AAC3B;AAEA,SAAS,YAAa,IAAI;IACxB,WAAW;IACX,OAAO,aAAa,OAAO,IAAI,IAAI,QAAQ,QAAQ;AACrD;AAEA;;GAEG,GACH,OAAO,WAAW,GAAG,SAAU,IAAI;IACjC,OAAO,YAAY;AACrB;AACA;;CAEC,GACD,OAAO,eAAe,GAAG,SAAU,IAAI;IACrC,OAAO,YAAY;AACrB;AAEA,SAAS,WAAY,MAAM,EAAE,QAAQ;IACnC,IAAI,OAAO,aAAa,YAAY,aAAa,IAC/C,WAAW;IAGb,IAAI,CAAC,OAAO,UAAU,CAAC,WACrB,MAAM,IAAI,UAAU,uBAAuB;IAG7C,MAAM,SAAS,WAAW,QAAQ,YAAY;IAC9C,IAAI,MAAM,aAAa;IAEvB,MAAM,SAAS,IAAI,KAAK,CAAC,QAAQ;IAEjC,IAAI,WAAW,QACb,2EAA2E;IAC3E,0EAA0E;IAC1E,oCAAoC;IACpC,MAAM,IAAI,KAAK,CAAC,GAAG;IAGrB,OAAO;AACT;AAEA,SAAS,cAAe,KAAK;IAC3B,MAAM,SAAS,MAAM,MAAM,GAAG,IAAI,IAAI,QAAQ,MAAM,MAAM,IAAI;IAC9D,MAAM,MAAM,aAAa;IACzB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,KAAK,EAC/B,GAAG,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG;IAEtB,OAAO;AACT;AAEA,SAAS,cAAe,SAAS;IAC/B,IAAI,WAAW,WAAW,aAAa;QACrC,MAAM,OAAO,IAAI,WAAW;QAC5B,OAAO,gBAAgB,KAAK,MAAM,EAAE,KAAK,UAAU,EAAE,KAAK,UAAU;IACtE;IACA,OAAO,cAAc;AACvB;AAEA,SAAS,gBAAiB,KAAK,EAAE,UAAU,EAAE,MAAM;IACjD,IAAI,aAAa,KAAK,MAAM,UAAU,GAAG,YACvC,MAAM,IAAI,WAAW;IAGvB,IAAI,MAAM,UAAU,GAAG,aAAc,CAAA,UAAU,CAAA,GAC7C,MAAM,IAAI,WAAW;IAGvB,IAAI;IACJ,IAAI,eAAe,aAAa,WAAW,WACzC,MAAM,IAAI,WAAW;SAChB,IAAI,WAAW,WACpB,MAAM,IAAI,WAAW,OAAO;SAE5B,MAAM,IAAI,WAAW,OAAO,YAAY;IAG1C,4CAA4C;IAC5C,OAAO,cAAc,CAAC,KAAK,OAAO,SAAS;IAE3C,OAAO;AACT;AAEA,SAAS,WAAY,GAAG;IACtB,IAAI,OAAO,QAAQ,CAAC,MAAM;QACxB,MAAM,MAAM,QAAQ,IAAI,MAAM,IAAI;QAClC,MAAM,MAAM,aAAa;QAEzB,IAAI,IAAI,MAAM,KAAK,GACjB,OAAO;QAGT,IAAI,IAAI,CAAC,KAAK,GAAG,GAAG;QACpB,OAAO;IACT;IAEA,IAAI,IAAI,MAAM,KAAK,WAAW;QAC5B,IAAI,OAAO,IAAI,MAAM,KAAK,YAAY,YAAY,IAAI,MAAM,GAC1D,OAAO,aAAa;QAEtB,OAAO,cAAc;IACvB;IAEA,IAAI,IAAI,IAAI,KAAK,YAAY,MAAM,OAAO,CAAC,IAAI,IAAI,GACjD,OAAO,cAAc,IAAI,IAAI;AAEjC;AAEA,SAAS,QAAS,MAAM;IACtB,wEAAwE;IACxE,sDAAsD;IACtD,IAAI,UAAU,cACZ,MAAM,IAAI,WAAW,4DACa,aAAa,QAAQ,CAAC,MAAM;IAEhE,OAAO,SAAS;AAClB;AAEA,SAAS,WAAY,MAAM;IACzB,IAAI,CAAC,UAAU,QACb,SAAS;IAEX,OAAO,OAAO,KAAK,CAAC,CAAC;AACvB;AAEA,OAAO,QAAQ,GAAG,SAAS,SAAU,CAAC;IACpC,OAAO,KAAK,QAAQ,EAAE,SAAS,KAAK,QAClC,MAAM,OAAO,SAAS,CAAC,qDAAqD;;AAChF;AAEA,OAAO,OAAO,GAAG,SAAS,QAAS,CAAC,EAAE,CAAC;IACrC,IAAI,WAAW,GAAG,aAAa,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU;IACxE,IAAI,WAAW,GAAG,aAAa,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE,MAAM,EAAE,EAAE,UAAU;IACxE,IAAI,CAAC,OAAO,QAAQ,CAAC,MAAM,CAAC,OAAO,QAAQ,CAAC,IAC1C,MAAM,IAAI,UACR;IAIJ,IAAI,MAAM,GAAG,OAAO;IAEpB,IAAI,IAAI,EAAE,MAAM;IAChB,IAAI,IAAI,EAAE,MAAM;IAEhB,IAAK,IAAI,IAAI,GAAG,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,IAAI,KAAK,EAAE,EAC/C,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,EAAE;QACjB,IAAI,CAAC,CAAC,EAAE;QACR,IAAI,CAAC,CAAC,EAAE;QACR;IACF;IAGF,IAAI,IAAI,GAAG,OAAO;IAClB,IAAI,IAAI,GAAG,OAAO;IAClB,OAAO;AACT;AAEA,OAAO,UAAU,GAAG,SAAS,WAAY,QAAQ;IAC/C,OAAQ,OAAO,UAAU,WAAW;QAClC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT;YACE,OAAO;IACX;AACF;AAEA,OAAO,MAAM,GAAG,SAAS,OAAQ,IAAI,EAAE,MAAM;IAC3C,IAAI,CAAC,MAAM,OAAO,CAAC,OACjB,MAAM,IAAI,UAAU;IAGtB,IAAI,KAAK,MAAM,KAAK,GAClB,OAAO,OAAO,KAAK,CAAC;IAGtB,IAAI;IACJ,IAAI,WAAW,WAAW;QACxB,SAAS;QACT,IAAK,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAC7B,UAAU,IAAI,CAAC,EAAE,CAAC,MAAM;IAE5B;IAEA,MAAM,SAAS,OAAO,WAAW,CAAC;IAClC,IAAI,MAAM;IACV,IAAK,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,EAAE,EAAG;QAChC,IAAI,MAAM,IAAI,CAAC,EAAE;QACjB,IAAI,WAAW,KAAK;YAClB,IAAI,MAAM,IAAI,MAAM,GAAG,OAAO,MAAM,EAAE;gBACpC,IAAI,CAAC,OAAO,QAAQ,CAAC,MAAM,MAAM,OAAO,IAAI,CAAC;gBAC7C,IAAI,IAAI,CAAC,QAAQ;YACnB,OACE,WAAW,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,QACA,KACA;eAGC,IAAI,CAAC,OAAO,QAAQ,CAAC,MAC1B,MAAM,IAAI,UAAU;aAEpB,IAAI,IAAI,CAAC,QAAQ;QAEnB,OAAO,IAAI,MAAM;IACnB;IACA,OAAO;AACT;AAEA,SAAS,WAAY,MAAM,EAAE,QAAQ;IACnC,IAAI,OAAO,QAAQ,CAAC,SAClB,OAAO,OAAO,MAAM;IAEtB,IAAI,YAAY,MAAM,CAAC,WAAW,WAAW,QAAQ,cACnD,OAAO,OAAO,UAAU;IAE1B,IAAI,OAAO,WAAW,UACpB,MAAM,IAAI,UACR,6FACmB,OAAO;IAI9B,MAAM,MAAM,OAAO,MAAM;IACzB,MAAM,YAAa,UAAU,MAAM,GAAG,KAAK,SAAS,CAAC,EAAE,KAAK;IAC5D,IAAI,CAAC,aAAa,QAAQ,GAAG,OAAO;IAEpC,oCAAoC;IACpC,IAAI,cAAc;IAClB,OACE,OAAQ;QACN,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO;QACT,KAAK;QACL,KAAK;YACH,OAAO,YAAY,QAAQ,MAAM;QACnC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,MAAM;QACf,KAAK;YACH,OAAO,QAAQ;QACjB,KAAK;YACH,OAAO,cAAc,QAAQ,MAAM;QACrC;YACE,IAAI,aACF,OAAO,YAAY,KAAK,YAAY,QAAQ,MAAM,CAAC,cAAc;;YAEnE,WAAW,AAAC,CAAA,KAAK,QAAO,EAAG,WAAW;YACtC,cAAc;IAClB;AAEJ;AACA,OAAO,UAAU,GAAG;AAEpB,SAAS,aAAc,QAAQ,EAAE,KAAK,EAAE,GAAG;IACzC,IAAI,cAAc;IAElB,4EAA4E;IAC5E,6BAA6B;IAE7B,2EAA2E;IAC3E,mEAAmE;IACnE,8DAA8D;IAC9D,kEAAkE;IAClE,IAAI,UAAU,aAAa,QAAQ,GACjC,QAAQ;IAEV,6EAA6E;IAC7E,uBAAuB;IACvB,IAAI,QAAQ,IAAI,CAAC,MAAM,EACrB,OAAO;IAGT,IAAI,QAAQ,aAAa,MAAM,IAAI,CAAC,MAAM,EACxC,MAAM,IAAI,CAAC,MAAM;IAGnB,IAAI,OAAO,GACT,OAAO;IAGT,0EAA0E;IAC1E,SAAS;IACT,WAAW;IAEX,IAAI,OAAO,OACT,OAAO;IAGT,IAAI,CAAC,UAAU,WAAW;IAE1B,MAAO,KACL,OAAQ;QACN,KAAK;YACH,OAAO,SAAS,IAAI,EAAE,OAAO;QAE/B,KAAK;QACL,KAAK;YACH,OAAO,UAAU,IAAI,EAAE,OAAO;QAEhC,KAAK;YACH,OAAO,WAAW,IAAI,EAAE,OAAO;QAEjC,KAAK;QACL,KAAK;YACH,OAAO,YAAY,IAAI,EAAE,OAAO;QAElC,KAAK;YACH,OAAO,YAAY,IAAI,EAAE,OAAO;QAElC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,aAAa,IAAI,EAAE,OAAO;QAEnC;YACE,IAAI,aAAa,MAAM,IAAI,UAAU,uBAAuB;YAC5D,WAAW,AAAC,CAAA,WAAW,EAAC,EAAG,WAAW;YACtC,cAAc;IAClB;AAEJ;AAEA,+EAA+E;AAC/E,4EAA4E;AAC5E,6EAA6E;AAC7E,2EAA2E;AAC3E,yEAAyE;AACzE,mDAAmD;AACnD,OAAO,SAAS,CAAC,SAAS,GAAG;AAE7B,SAAS,KAAM,CAAC,EAAE,CAAC,EAAE,CAAC;IACpB,MAAM,IAAI,CAAC,CAAC,EAAE;IACd,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACX,CAAC,CAAC,EAAE,GAAG;AACT;AAEA,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS;IACjC,MAAM,MAAM,IAAI,CAAC,MAAM;IACvB,IAAI,MAAM,MAAM,GACd,MAAM,IAAI,WAAW;IAEvB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,EAC5B,KAAK,IAAI,EAAE,GAAG,IAAI;IAEpB,OAAO,IAAI;AACb;AAEA,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS;IACjC,MAAM,MAAM,IAAI,CAAC,MAAM;IACvB,IAAI,MAAM,MAAM,GACd,MAAM,IAAI,WAAW;IAEvB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,EAAG;QAC/B,KAAK,IAAI,EAAE,GAAG,IAAI;QAClB,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI;IACxB;IACA,OAAO,IAAI;AACb;AAEA,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS;IACjC,MAAM,MAAM,IAAI,CAAC,MAAM;IACvB,IAAI,MAAM,MAAM,GACd,MAAM,IAAI,WAAW;IAEvB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,KAAK,EAAG;QAC/B,KAAK,IAAI,EAAE,GAAG,IAAI;QAClB,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI;QACtB,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI;QACtB,KAAK,IAAI,EAAE,IAAI,GAAG,IAAI;IACxB;IACA,OAAO,IAAI;AACb;AAEA,OAAO,SAAS,CAAC,QAAQ,GAAG,SAAS;IACnC,MAAM,SAAS,IAAI,CAAC,MAAM;IAC1B,IAAI,WAAW,GAAG,OAAO;IACzB,IAAI,UAAU,MAAM,KAAK,GAAG,OAAO,UAAU,IAAI,EAAE,GAAG;IACtD,OAAO,aAAa,KAAK,CAAC,IAAI,EAAE;AAClC;AAEA,OAAO,SAAS,CAAC,cAAc,GAAG,OAAO,SAAS,CAAC,QAAQ;AAE3D,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,CAAC;IAC1C,IAAI,CAAC,OAAO,QAAQ,CAAC,IAAI,MAAM,IAAI,UAAU;IAC7C,IAAI,IAAI,KAAK,GAAG,OAAO;IACvB,OAAO,OAAO,OAAO,CAAC,IAAI,EAAE,OAAO;AACrC;AAEA,OAAO,SAAS,CAAC,OAAO,GAAG,SAAS;IAClC,IAAI,MAAM;IACV,MAAM,MAAM,QAAQ,iBAAiB;IACrC,MAAM,IAAI,CAAC,QAAQ,CAAC,OAAO,GAAG,KAAK,OAAO,CAAC,WAAW,OAAO,IAAI;IACjE,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,OAAO;IAC9B,OAAO,aAAa,MAAM;AAC5B;AACA,IAAI,qBACF,OAAO,SAAS,CAAC,oBAAoB,GAAG,OAAO,SAAS,CAAC,OAAO;AAGlE,OAAO,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,SAAS,EAAE,OAAO;IACjF,IAAI,WAAW,QAAQ,aACrB,SAAS,OAAO,IAAI,CAAC,QAAQ,OAAO,MAAM,EAAE,OAAO,UAAU;IAE/D,IAAI,CAAC,OAAO,QAAQ,CAAC,SACnB,MAAM,IAAI,UACR,mFACoB,OAAO;IAI/B,IAAI,UAAU,WACZ,QAAQ;IAEV,IAAI,QAAQ,WACV,MAAM,SAAS,OAAO,MAAM,GAAG;IAEjC,IAAI,cAAc,WAChB,YAAY;IAEd,IAAI,YAAY,WACd,UAAU,IAAI,CAAC,MAAM;IAGvB,IAAI,QAAQ,KAAK,MAAM,OAAO,MAAM,IAAI,YAAY,KAAK,UAAU,IAAI,CAAC,MAAM,EAC5E,MAAM,IAAI,WAAW;IAGvB,IAAI,aAAa,WAAW,SAAS,KACnC,OAAO;IAET,IAAI,aAAa,SACf,OAAO;IAET,IAAI,SAAS,KACX,OAAO;IAGT,WAAW;IACX,SAAS;IACT,eAAe;IACf,aAAa;IAEb,IAAI,IAAI,KAAK,QAAQ,OAAO;IAE5B,IAAI,IAAI,UAAU;IAClB,IAAI,IAAI,MAAM;IACd,MAAM,MAAM,KAAK,GAAG,CAAC,GAAG;IAExB,MAAM,WAAW,IAAI,CAAC,KAAK,CAAC,WAAW;IACvC,MAAM,aAAa,OAAO,KAAK,CAAC,OAAO;IAEvC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,EAAE,EACzB,IAAI,QAAQ,CAAC,EAAE,KAAK,UAAU,CAAC,EAAE,EAAE;QACjC,IAAI,QAAQ,CAAC,EAAE;QACf,IAAI,UAAU,CAAC,EAAE;QACjB;IACF;IAGF,IAAI,IAAI,GAAG,OAAO;IAClB,IAAI,IAAI,GAAG,OAAO;IAClB,OAAO;AACT;AAEA,+EAA+E;AAC/E,oEAAoE;AACpE,EAAE;AACF,aAAa;AACb,gCAAgC;AAChC,sCAAsC;AACtC,qEAAqE;AACrE,iEAAiE;AACjE,kDAAkD;AAClD,SAAS,qBAAsB,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG;IACnE,8BAA8B;IAC9B,IAAI,OAAO,MAAM,KAAK,GAAG,OAAO;IAEhC,uBAAuB;IACvB,IAAI,OAAO,eAAe,UAAU;QAClC,WAAW;QACX,aAAa;IACf,OAAO,IAAI,aAAa,YACtB,aAAa;SACR,IAAI,aAAa,aACtB,aAAa;IAEf,aAAa,CAAC,WAAW,oBAAoB;;IAC7C,IAAI,YAAY,aACd,4EAA4E;IAC5E,aAAa,MAAM,IAAK,OAAO,MAAM,GAAG;IAG1C,0EAA0E;IAC1E,IAAI,aAAa,GAAG,aAAa,OAAO,MAAM,GAAG;IACjD,IAAI,cAAc,OAAO,MAAM,EAAE;QAC/B,IAAI,KAAK,OAAO;aACX,aAAa,OAAO,MAAM,GAAG;IACpC,OAAO,IAAI,aAAa,GAAG;QACzB,IAAI,KAAK,aAAa;aACjB,OAAO;IACd;IAEA,gBAAgB;IAChB,IAAI,OAAO,QAAQ,UACjB,MAAM,OAAO,IAAI,CAAC,KAAK;IAGzB,iEAAiE;IACjE,IAAI,OAAO,QAAQ,CAAC,MAAM;QACxB,6DAA6D;QAC7D,IAAI,IAAI,MAAM,KAAK,GACjB,OAAO;QAET,OAAO,aAAa,QAAQ,KAAK,YAAY,UAAU;IACzD,OAAO,IAAI,OAAO,QAAQ,UAAU;QAClC,MAAM,MAAM,KAAK,kCAAkC;;QACnD,IAAI,OAAO,WAAW,SAAS,CAAC,OAAO,KAAK,YAAY;YACtD,IAAI,KACF,OAAO,WAAW,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,KAAK;iBAEtD,OAAO,WAAW,SAAS,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,KAAK;QAE9D;QACA,OAAO,aAAa,QAAQ;YAAC;SAAI,EAAE,YAAY,UAAU;IAC3D;IAEA,MAAM,IAAI,UAAU;AACtB;AAEA,SAAS,aAAc,GAAG,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG;IACxD,IAAI,YAAY;IAChB,IAAI,YAAY,IAAI,MAAM;IAC1B,IAAI,YAAY,IAAI,MAAM;IAE1B,IAAI,aAAa,WAAW;QAC1B,WAAW,OAAO,UAAU,WAAW;QACvC,IAAI,aAAa,UAAU,aAAa,WACpC,aAAa,aAAa,aAAa,YAAY;YACrD,IAAI,IAAI,MAAM,GAAG,KAAK,IAAI,MAAM,GAAG,GACjC,OAAO;YAET,YAAY;YACZ,aAAa;YACb,aAAa;YACb,cAAc;QAChB;IACF;IAEA,SAAS,KAAM,GAAG,EAAE,CAAC;QACnB,IAAI,cAAc,GAChB,OAAO,GAAG,CAAC,EAAE;aAEb,OAAO,IAAI,YAAY,CAAC,IAAI;IAEhC;IAEA,IAAI;IACJ,IAAI,KAAK;QACP,IAAI,aAAa;QACjB,IAAK,IAAI,YAAY,IAAI,WAAW,IAClC,IAAI,KAAK,KAAK,OAAO,KAAK,KAAK,eAAe,KAAK,IAAI,IAAI,aAAa;YACtE,IAAI,eAAe,IAAI,aAAa;YACpC,IAAI,IAAI,aAAa,MAAM,WAAW,OAAO,aAAa;QAC5D,OAAO;YACL,IAAI,eAAe,IAAI,KAAK,IAAI;YAChC,aAAa;QACf;IAEJ,OAAO;QACL,IAAI,aAAa,YAAY,WAAW,aAAa,YAAY;QACjE,IAAK,IAAI,YAAY,KAAK,GAAG,IAAK;YAChC,IAAI,QAAQ;YACZ,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,IAC7B,IAAI,KAAK,KAAK,IAAI,OAAO,KAAK,KAAK,IAAI;gBACrC,QAAQ;gBACR;YACF;YAEF,IAAI,OAAO,OAAO;QACpB;IACF;IAEA,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,GAAG,EAAE,UAAU,EAAE,QAAQ;IACtE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,YAAY,cAAc;AACrD;AAEA,OAAO,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,GAAG,EAAE,UAAU,EAAE,QAAQ;IACpE,OAAO,qBAAqB,IAAI,EAAE,KAAK,YAAY,UAAU;AAC/D;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,GAAG,EAAE,UAAU,EAAE,QAAQ;IAC5E,OAAO,qBAAqB,IAAI,EAAE,KAAK,YAAY,UAAU;AAC/D;AAEA,SAAS,SAAU,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC5C,SAAS,OAAO,WAAW;IAC3B,MAAM,YAAY,IAAI,MAAM,GAAG;IAC/B,IAAI,CAAC,QACH,SAAS;SACJ;QACL,SAAS,OAAO;QAChB,IAAI,SAAS,WACX,SAAS;IAEb;IAEA,MAAM,SAAS,OAAO,MAAM;IAE5B,IAAI,SAAS,SAAS,GACpB,SAAS,SAAS;IAEpB,IAAI;IACJ,IAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,EAAG;QAC3B,MAAM,SAAS,SAAS,OAAO,MAAM,CAAC,IAAI,GAAG,IAAI;QACjD,IAAI,YAAY,SAAS,OAAO;QAChC,GAAG,CAAC,SAAS,EAAE,GAAG;IACpB;IACA,OAAO;AACT;AAEA,SAAS,UAAW,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC7C,OAAO,WAAW,YAAY,QAAQ,IAAI,MAAM,GAAG,SAAS,KAAK,QAAQ;AAC3E;AAEA,SAAS,WAAY,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC9C,OAAO,WAAW,aAAa,SAAS,KAAK,QAAQ;AACvD;AAEA,SAAS,YAAa,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC/C,OAAO,WAAW,cAAc,SAAS,KAAK,QAAQ;AACxD;AAEA,SAAS,UAAW,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM;IAC7C,OAAO,WAAW,eAAe,QAAQ,IAAI,MAAM,GAAG,SAAS,KAAK,QAAQ;AAC9E;AAEA,OAAO,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ;IACvE,uBAAuB;IACvB,IAAI,WAAW,WAAW;QACxB,WAAW;QACX,SAAS,IAAI,CAAC,MAAM;QACpB,SAAS;IACX,iCAAiC;IACjC,OAAO,IAAI,WAAW,aAAa,OAAO,WAAW,UAAU;QAC7D,WAAW;QACX,SAAS,IAAI,CAAC,MAAM;QACpB,SAAS;IACX,qDAAqD;IACrD,OAAO,IAAI,SAAS,SAAS;QAC3B,SAAS,WAAW;QACpB,IAAI,SAAS,SAAS;YACpB,SAAS,WAAW;YACpB,IAAI,aAAa,WAAW,WAAW;QACzC,OAAO;YACL,WAAW;YACX,SAAS;QACX;IACF,OACE,MAAM,IAAI,MACR;IAIJ,MAAM,YAAY,IAAI,CAAC,MAAM,GAAG;IAChC,IAAI,WAAW,aAAa,SAAS,WAAW,SAAS;IAEzD,IAAI,AAAC,OAAO,MAAM,GAAG,KAAM,CAAA,SAAS,KAAK,SAAS,CAAA,KAAO,SAAS,IAAI,CAAC,MAAM,EAC3E,MAAM,IAAI,WAAW;IAGvB,IAAI,CAAC,UAAU,WAAW;IAE1B,IAAI,cAAc;IAClB,OACE,OAAQ;QACN,KAAK;YACH,OAAO,SAAS,IAAI,EAAE,QAAQ,QAAQ;QAExC,KAAK;QACL,KAAK;YACH,OAAO,UAAU,IAAI,EAAE,QAAQ,QAAQ;QAEzC,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,WAAW,IAAI,EAAE,QAAQ,QAAQ;QAE1C,KAAK;YACH,2DAA2D;YAC3D,OAAO,YAAY,IAAI,EAAE,QAAQ,QAAQ;QAE3C,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,UAAU,IAAI,EAAE,QAAQ,QAAQ;QAEzC;YACE,IAAI,aAAa,MAAM,IAAI,UAAU,uBAAuB;YAC5D,WAAW,AAAC,CAAA,KAAK,QAAO,EAAG,WAAW;YACtC,cAAc;IAClB;AAEJ;AAEA,OAAO,SAAS,CAAC,MAAM,GAAG,SAAS;IACjC,OAAO;QACL,MAAM;QACN,MAAM,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;IACtD;AACF;AAEA,SAAS,YAAa,GAAG,EAAE,KAAK,EAAE,GAAG;IACnC,IAAI,UAAU,KAAK,QAAQ,IAAI,MAAM,EACnC,OAAO,OAAO,aAAa,CAAC;SAE5B,OAAO,OAAO,aAAa,CAAC,IAAI,KAAK,CAAC,OAAO;AAEjD;AAEA,SAAS,UAAW,GAAG,EAAE,KAAK,EAAE,GAAG;IACjC,MAAM,KAAK,GAAG,CAAC,IAAI,MAAM,EAAE;IAC3B,MAAM,MAAM,EAAE;IAEd,IAAI,IAAI;IACR,MAAO,IAAI,IAAK;QACd,MAAM,YAAY,GAAG,CAAC,EAAE;QACxB,IAAI,YAAY;QAChB,IAAI,mBAAmB,AAAC,YAAY,OAChC,IACA,AAAC,YAAY,OACT,IACA,AAAC,YAAY,OACT,IACA;QAEZ,IAAI,IAAI,oBAAoB,KAAK;YAC/B,IAAI,YAAY,WAAW,YAAY;YAEvC,OAAQ;gBACN,KAAK;oBACH,IAAI,YAAY,MACd,YAAY;oBAEd;gBACF,KAAK;oBACH,aAAa,GAAG,CAAC,IAAI,EAAE;oBACvB,IAAI,AAAC,CAAA,aAAa,IAAG,MAAO,MAAM;wBAChC,gBAAgB,AAAC,CAAA,YAAY,IAAG,KAAM,MAAO,aAAa;wBAC1D,IAAI,gBAAgB,MAClB,YAAY;oBAEhB;oBACA;gBACF,KAAK;oBACH,aAAa,GAAG,CAAC,IAAI,EAAE;oBACvB,YAAY,GAAG,CAAC,IAAI,EAAE;oBACtB,IAAI,AAAC,CAAA,aAAa,IAAG,MAAO,QAAQ,AAAC,CAAA,YAAY,IAAG,MAAO,MAAM;wBAC/D,gBAAgB,AAAC,CAAA,YAAY,GAAE,KAAM,MAAM,AAAC,CAAA,aAAa,IAAG,KAAM,MAAO,YAAY;wBACrF,IAAI,gBAAgB,SAAU,CAAA,gBAAgB,UAAU,gBAAgB,MAAK,GAC3E,YAAY;oBAEhB;oBACA;gBACF,KAAK;oBACH,aAAa,GAAG,CAAC,IAAI,EAAE;oBACvB,YAAY,GAAG,CAAC,IAAI,EAAE;oBACtB,aAAa,GAAG,CAAC,IAAI,EAAE;oBACvB,IAAI,AAAC,CAAA,aAAa,IAAG,MAAO,QAAQ,AAAC,CAAA,YAAY,IAAG,MAAO,QAAQ,AAAC,CAAA,aAAa,IAAG,MAAO,MAAM;wBAC/F,gBAAgB,AAAC,CAAA,YAAY,GAAE,KAAM,OAAO,AAAC,CAAA,aAAa,IAAG,KAAM,MAAM,AAAC,CAAA,YAAY,IAAG,KAAM,MAAO,aAAa;wBACnH,IAAI,gBAAgB,UAAU,gBAAgB,UAC5C,YAAY;oBAEhB;YACJ;QACF;QAEA,IAAI,cAAc,MAAM;YACtB,oDAAoD;YACpD,oDAAoD;YACpD,YAAY;YACZ,mBAAmB;QACrB,OAAO,IAAI,YAAY,QAAQ;YAC7B,yCAAyC;YACzC,aAAa;YACb,IAAI,IAAI,CAAC,cAAc,KAAK,QAAQ;YACpC,YAAY,SAAS,YAAY;QACnC;QAEA,IAAI,IAAI,CAAC;QACT,KAAK;IACP;IAEA,OAAO,sBAAsB;AAC/B;AAEA,wEAAwE;AACxE,iDAAiD;AACjD,qCAAqC;AACrC,MAAM,uBAAuB;AAE7B,SAAS,sBAAuB,UAAU;IACxC,MAAM,MAAM,WAAW,MAAM;IAC7B,IAAI,OAAO,sBACT,OAAO,OAAO,YAAY,CAAC,KAAK,CAAC,QAAQ,YAAY,sBAAsB;;IAG7E,wDAAwD;IACxD,IAAI,MAAM;IACV,IAAI,IAAI;IACR,MAAO,IAAI,IACT,OAAO,OAAO,YAAY,CAAC,KAAK,CAC9B,QACA,WAAW,KAAK,CAAC,GAAG,KAAK;IAG7B,OAAO;AACT;AAEA,SAAS,WAAY,GAAG,EAAE,KAAK,EAAE,GAAG;IAClC,IAAI,MAAM;IACV,MAAM,KAAK,GAAG,CAAC,IAAI,MAAM,EAAE;IAE3B,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,EAC7B,OAAO,OAAO,YAAY,CAAC,GAAG,CAAC,EAAE,GAAG;IAEtC,OAAO;AACT;AAEA,SAAS,YAAa,GAAG,EAAE,KAAK,EAAE,GAAG;IACnC,IAAI,MAAM;IACV,MAAM,KAAK,GAAG,CAAC,IAAI,MAAM,EAAE;IAE3B,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,EAC7B,OAAO,OAAO,YAAY,CAAC,GAAG,CAAC,EAAE;IAEnC,OAAO;AACT;AAEA,SAAS,SAAU,GAAG,EAAE,KAAK,EAAE,GAAG;IAChC,MAAM,MAAM,IAAI,MAAM;IAEtB,IAAI,CAAC,SAAS,QAAQ,GAAG,QAAQ;IACjC,IAAI,CAAC,OAAO,MAAM,KAAK,MAAM,KAAK,MAAM;IAExC,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,EAAE,EAC7B,OAAO,mBAAmB,CAAC,GAAG,CAAC,EAAE,CAAC;IAEpC,OAAO;AACT;AAEA,SAAS,aAAc,GAAG,EAAE,KAAK,EAAE,GAAG;IACpC,MAAM,QAAQ,IAAI,KAAK,CAAC,OAAO;IAC/B,IAAI,MAAM;IACV,4EAA4E;IAC5E,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,GAAG,GAAG,KAAK,EACzC,OAAO,OAAO,YAAY,CAAC,KAAK,CAAC,EAAE,GAAI,KAAK,CAAC,IAAI,EAAE,GAAG;IAExD,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,KAAK,EAAE,GAAG;IACjD,MAAM,MAAM,IAAI,CAAC,MAAM;IACvB,QAAQ,CAAC,CAAC;IACV,MAAM,QAAQ,YAAY,MAAM,CAAC,CAAC;IAElC,IAAI,QAAQ,GAAG;QACb,SAAS;QACT,IAAI,QAAQ,GAAG,QAAQ;IACzB,OAAO,IAAI,QAAQ,KACjB,QAAQ;IAGV,IAAI,MAAM,GAAG;QACX,OAAO;QACP,IAAI,MAAM,GAAG,MAAM;IACrB,OAAO,IAAI,MAAM,KACf,MAAM;IAGR,IAAI,MAAM,OAAO,MAAM;IAEvB,MAAM,SAAS,IAAI,CAAC,QAAQ,CAAC,OAAO;IACpC,4CAA4C;IAC5C,OAAO,cAAc,CAAC,QAAQ,OAAO,SAAS;IAE9C,OAAO;AACT;AAEA;;CAEC,GACD,SAAS,YAAa,MAAM,EAAE,GAAG,EAAE,MAAM;IACvC,IAAI,AAAC,SAAS,MAAO,KAAK,SAAS,GAAG,MAAM,IAAI,WAAW;IAC3D,IAAI,SAAS,MAAM,QAAQ,MAAM,IAAI,WAAW;AAClD;AAEA,OAAO,SAAS,CAAC,UAAU,GAC3B,OAAO,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,MAAM,EAAE,UAAU,EAAE,QAAQ;IAC7E,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UAAU,YAAY,QAAQ,YAAY,IAAI,CAAC,MAAM;IAE1D,IAAI,MAAM,IAAI,CAAC,OAAO;IACtB,IAAI,MAAM;IACV,IAAI,IAAI;IACR,MAAO,EAAE,IAAI,cAAe,CAAA,OAAO,KAAI,EACrC,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG;IAG5B,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,UAAU,GAC3B,OAAO,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,MAAM,EAAE,UAAU,EAAE,QAAQ;IAC7E,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UACH,YAAY,QAAQ,YAAY,IAAI,CAAC,MAAM;IAG7C,IAAI,MAAM,IAAI,CAAC,SAAS,EAAE,WAAW;IACrC,IAAI,MAAM;IACV,MAAO,aAAa,KAAM,CAAA,OAAO,KAAI,EACnC,OAAO,IAAI,CAAC,SAAS,EAAE,WAAW,GAAG;IAGvC,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,SAAS,GAC1B,OAAO,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,MAAM,EAAE,QAAQ;IAC/D,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,IAAI,CAAC,OAAO;AACrB;AAEA,OAAO,SAAS,CAAC,YAAY,GAC7B,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,SAAS,EAAE,IAAI;AAC7C;AAEA,OAAO,SAAS,CAAC,YAAY,GAC7B,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,AAAC,IAAI,CAAC,OAAO,IAAI,IAAK,IAAI,CAAC,SAAS,EAAE;AAC/C;AAEA,OAAO,SAAS,CAAC,YAAY,GAC7B,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IAEjD,OAAO,AAAC,CAAA,AAAC,IAAI,CAAC,OAAO,GAChB,IAAI,CAAC,SAAS,EAAE,IAAI,IACpB,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,IACtB,IAAI,CAAC,SAAS,EAAE,GAAG;AAC1B;AAEA,OAAO,SAAS,CAAC,YAAY,GAC7B,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IAEjD,OAAO,AAAC,IAAI,CAAC,OAAO,GAAG,YACpB,CAAA,AAAC,IAAI,CAAC,SAAS,EAAE,IAAI,KACrB,IAAI,CAAC,SAAS,EAAE,IAAI,IACrB,IAAI,CAAC,SAAS,EAAE,AAAD;AACnB;AAEA,OAAO,SAAS,CAAC,eAAe,GAAG,mBAAmB,SAAS,gBAAiB,MAAM;IACpF,SAAS,WAAW;IACpB,eAAe,QAAQ;IACvB,MAAM,QAAQ,IAAI,CAAC,OAAO;IAC1B,MAAM,OAAO,IAAI,CAAC,SAAS,EAAE;IAC7B,IAAI,UAAU,aAAa,SAAS,WAClC,YAAY,QAAQ,IAAI,CAAC,MAAM,GAAG;IAGpC,MAAM,KAAK,QACT,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK;IAExB,MAAM,KAAK,IAAI,CAAC,EAAE,OAAO,GACvB,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,OAAO,KAAK;IAEd,OAAO,OAAO,MAAO,CAAA,OAAO,OAAO,OAAO,GAAE;AAC9C;AAEA,OAAO,SAAS,CAAC,eAAe,GAAG,mBAAmB,SAAS,gBAAiB,MAAM;IACpF,SAAS,WAAW;IACpB,eAAe,QAAQ;IACvB,MAAM,QAAQ,IAAI,CAAC,OAAO;IAC1B,MAAM,OAAO,IAAI,CAAC,SAAS,EAAE;IAC7B,IAAI,UAAU,aAAa,SAAS,WAClC,YAAY,QAAQ,IAAI,CAAC,MAAM,GAAG;IAGpC,MAAM,KAAK,QAAQ,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB,IAAI,CAAC,EAAE,OAAO;IAEhB,MAAM,KAAK,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KAC/B,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB;IAEF,OAAO,AAAC,CAAA,OAAO,OAAO,OAAO,GAAE,IAAK,OAAO;AAC7C;AAEA,OAAO,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,MAAM,EAAE,UAAU,EAAE,QAAQ;IAC3E,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UAAU,YAAY,QAAQ,YAAY,IAAI,CAAC,MAAM;IAE1D,IAAI,MAAM,IAAI,CAAC,OAAO;IACtB,IAAI,MAAM;IACV,IAAI,IAAI;IACR,MAAO,EAAE,IAAI,cAAe,CAAA,OAAO,KAAI,EACrC,OAAO,IAAI,CAAC,SAAS,EAAE,GAAG;IAE5B,OAAO;IAEP,IAAI,OAAO,KAAK,OAAO,KAAK,GAAG,CAAC,GAAG,IAAI;IAEvC,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,MAAM,EAAE,UAAU,EAAE,QAAQ;IAC3E,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UAAU,YAAY,QAAQ,YAAY,IAAI,CAAC,MAAM;IAE1D,IAAI,IAAI;IACR,IAAI,MAAM;IACV,IAAI,MAAM,IAAI,CAAC,SAAS,EAAE,EAAE;IAC5B,MAAO,IAAI,KAAM,CAAA,OAAO,KAAI,EAC1B,OAAO,IAAI,CAAC,SAAS,EAAE,EAAE,GAAG;IAE9B,OAAO;IAEP,IAAI,OAAO,KAAK,OAAO,KAAK,GAAG,CAAC,GAAG,IAAI;IAEvC,OAAO;AACT;AAEA,OAAO,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,MAAM,EAAE,QAAQ;IAC7D,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,IAAI,CAAE,CAAA,IAAI,CAAC,OAAO,GAAG,IAAG,GAAI,OAAQ,IAAI,CAAC,OAAO;IAChD,OAAQ,AAAC,CAAA,OAAO,IAAI,CAAC,OAAO,GAAG,CAAA,IAAK;AACtC;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,MAAM,MAAM,IAAI,CAAC,OAAO,GAAI,IAAI,CAAC,SAAS,EAAE,IAAI;IAChD,OAAO,AAAC,MAAM,SAAU,MAAM,aAAa;AAC7C;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,MAAM,MAAM,IAAI,CAAC,SAAS,EAAE,GAAI,IAAI,CAAC,OAAO,IAAI;IAChD,OAAO,AAAC,MAAM,SAAU,MAAM,aAAa;AAC7C;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IAEjD,OAAO,AAAC,IAAI,CAAC,OAAO,GACjB,IAAI,CAAC,SAAS,EAAE,IAAI,IACpB,IAAI,CAAC,SAAS,EAAE,IAAI,KACpB,IAAI,CAAC,SAAS,EAAE,IAAI;AACzB;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IAEjD,OAAO,AAAC,IAAI,CAAC,OAAO,IAAI,KACrB,IAAI,CAAC,SAAS,EAAE,IAAI,KACpB,IAAI,CAAC,SAAS,EAAE,IAAI,IACpB,IAAI,CAAC,SAAS,EAAE;AACrB;AAEA,OAAO,SAAS,CAAC,cAAc,GAAG,mBAAmB,SAAS,eAAgB,MAAM;IAClF,SAAS,WAAW;IACpB,eAAe,QAAQ;IACvB,MAAM,QAAQ,IAAI,CAAC,OAAO;IAC1B,MAAM,OAAO,IAAI,CAAC,SAAS,EAAE;IAC7B,IAAI,UAAU,aAAa,SAAS,WAClC,YAAY,QAAQ,IAAI,CAAC,MAAM,GAAG;IAGpC,MAAM,MAAM,IAAI,CAAC,SAAS,EAAE,GAC1B,IAAI,CAAC,SAAS,EAAE,GAAG,MACnB,IAAI,CAAC,SAAS,EAAE,GAAG,KAAK,KACvB,CAAA,QAAQ,GAAI,WAAW;IAAd;IAEZ,OAAO,AAAC,CAAA,OAAO,QAAQ,OAAO,GAAE,IAC9B,OAAO,QACP,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK;AAC1B;AAEA,OAAO,SAAS,CAAC,cAAc,GAAG,mBAAmB,SAAS,eAAgB,MAAM;IAClF,SAAS,WAAW;IACpB,eAAe,QAAQ;IACvB,MAAM,QAAQ,IAAI,CAAC,OAAO;IAC1B,MAAM,OAAO,IAAI,CAAC,SAAS,EAAE;IAC7B,IAAI,UAAU,aAAa,SAAS,WAClC,YAAY,QAAQ,IAAI,CAAC,MAAM,GAAG;IAGpC,MAAM,MAAM,AAAC,CAAA,SAAS,EAAC,IAAK,WAAW;IACrC,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB,IAAI,CAAC,EAAE,OAAO;IAEhB,OAAO,AAAC,CAAA,OAAO,QAAQ,OAAO,GAAE,IAC9B,OAAO,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KAC7B,IAAI,CAAC,EAAE,OAAO,GAAG,KAAK,KACtB,IAAI,CAAC,EAAE,OAAO,GAAG,MACjB;AACJ;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,QAAQ,MAAM,IAAI;AAC9C;AAEA,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,QAAQ;IACnE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,QAAQ,OAAO,IAAI;AAC/C;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,QAAQ,MAAM,IAAI;AAC9C;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,MAAM,EAAE,QAAQ;IACrE,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,YAAY,QAAQ,GAAG,IAAI,CAAC,MAAM;IACjD,OAAO,QAAQ,IAAI,CAAC,IAAI,EAAE,QAAQ,OAAO,IAAI;AAC/C;AAEA,SAAS,SAAU,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IAClD,IAAI,CAAC,OAAO,QAAQ,CAAC,MAAM,MAAM,IAAI,UAAU;IAC/C,IAAI,QAAQ,OAAO,QAAQ,KAAK,MAAM,IAAI,WAAW;IACrD,IAAI,SAAS,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,WAAW;AACtD;AAEA,OAAO,SAAS,CAAC,WAAW,GAC5B,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;IACtF,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UAAU;QACb,MAAM,WAAW,KAAK,GAAG,CAAC,GAAG,IAAI,cAAc;QAC/C,SAAS,IAAI,EAAE,OAAO,QAAQ,YAAY,UAAU;IACtD;IAEA,IAAI,MAAM;IACV,IAAI,IAAI;IACR,IAAI,CAAC,OAAO,GAAG,QAAQ;IACvB,MAAO,EAAE,IAAI,cAAe,CAAA,OAAO,KAAI,EACrC,IAAI,CAAC,SAAS,EAAE,GAAG,AAAC,QAAQ,MAAO;IAGrC,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,WAAW,GAC5B,OAAO,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;IACtF,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,aAAa,eAAe;IAC5B,IAAI,CAAC,UAAU;QACb,MAAM,WAAW,KAAK,GAAG,CAAC,GAAG,IAAI,cAAc;QAC/C,SAAS,IAAI,EAAE,OAAO,QAAQ,YAAY,UAAU;IACtD;IAEA,IAAI,IAAI,aAAa;IACrB,IAAI,MAAM;IACV,IAAI,CAAC,SAAS,EAAE,GAAG,QAAQ;IAC3B,MAAO,EAAE,KAAK,KAAM,CAAA,OAAO,KAAI,EAC7B,IAAI,CAAC,SAAS,EAAE,GAAG,AAAC,QAAQ,MAAO;IAGrC,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,UAAU,GAC3B,OAAO,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,KAAK,EAAE,MAAM,EAAE,QAAQ;IACxE,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,MAAM;IACtD,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,aAAa,GAC9B,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,QAAQ;IACxD,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,aAAa,GAC9B,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,QAAQ;IACxD,IAAI,CAAC,OAAO,GAAI,UAAU;IAC1B,IAAI,CAAC,SAAS,EAAE,GAAI,QAAQ;IAC5B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,aAAa,GAC9B,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,YAAY;IAC5D,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,aAAa,GAC9B,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,YAAY;IAC5D,IAAI,CAAC,OAAO,GAAI,UAAU;IAC1B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,QAAQ;IAC5B,OAAO,SAAS;AAClB;AAEA,SAAS,eAAgB,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG;IACnD,WAAW,OAAO,KAAK,KAAK,KAAK,QAAQ;IAEzC,IAAI,KAAK,OAAO,QAAQ,OAAO;IAC/B,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,IAAI,KAAK,OAAO,SAAS,OAAO,MAAM,OAAO;IAC7C,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,GAAG;IAChB,OAAO;AACT;AAEA,SAAS,eAAgB,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG;IACnD,WAAW,OAAO,KAAK,KAAK,KAAK,QAAQ;IAEzC,IAAI,KAAK,OAAO,QAAQ,OAAO;IAC/B,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,IAAI,KAAK,OAAO,SAAS,OAAO,MAAM,OAAO;IAC7C,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,SAAS,EAAE,GAAG;IAClB,KAAK,MAAM;IACX,GAAG,CAAC,OAAO,GAAG;IACd,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,gBAAgB,GAAG,mBAAmB,SAAS,iBAAkB,KAAK,EAAE,SAAS,CAAC;IACjG,OAAO,eAAe,IAAI,EAAE,OAAO,QAAQ,OAAO,IAAI,OAAO;AAC/D;AAEA,OAAO,SAAS,CAAC,gBAAgB,GAAG,mBAAmB,SAAS,iBAAkB,KAAK,EAAE,SAAS,CAAC;IACjG,OAAO,eAAe,IAAI,EAAE,OAAO,QAAQ,OAAO,IAAI,OAAO;AAC/D;AAEA,OAAO,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;IACpF,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU;QACb,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,AAAC,IAAI,aAAc;QAE7C,SAAS,IAAI,EAAE,OAAO,QAAQ,YAAY,QAAQ,GAAG,CAAC;IACxD;IAEA,IAAI,IAAI;IACR,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,CAAC,OAAO,GAAG,QAAQ;IACvB,MAAO,EAAE,IAAI,cAAe,CAAA,OAAO,KAAI,EAAI;QACzC,IAAI,QAAQ,KAAK,QAAQ,KAAK,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,GACrD,MAAM;QAER,IAAI,CAAC,SAAS,EAAE,GAAG,AAAC,CAAA,AAAC,QAAQ,OAAQ,CAAA,IAAK,MAAM;IAClD;IAEA,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,KAAK,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ;IACpF,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU;QACb,MAAM,QAAQ,KAAK,GAAG,CAAC,GAAG,AAAC,IAAI,aAAc;QAE7C,SAAS,IAAI,EAAE,OAAO,QAAQ,YAAY,QAAQ,GAAG,CAAC;IACxD;IAEA,IAAI,IAAI,aAAa;IACrB,IAAI,MAAM;IACV,IAAI,MAAM;IACV,IAAI,CAAC,SAAS,EAAE,GAAG,QAAQ;IAC3B,MAAO,EAAE,KAAK,KAAM,CAAA,OAAO,KAAI,EAAI;QACjC,IAAI,QAAQ,KAAK,QAAQ,KAAK,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,GACrD,MAAM;QAER,IAAI,CAAC,SAAS,EAAE,GAAG,AAAC,CAAA,AAAC,QAAQ,OAAQ,CAAA,IAAK,MAAM;IAClD;IAEA,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,KAAK,EAAE,MAAM,EAAE,QAAQ;IACtE,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,MAAM;IACtD,IAAI,QAAQ,GAAG,QAAQ,OAAO,QAAQ;IACtC,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,QAAQ;IACxD,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,QAAQ;IACxD,IAAI,CAAC,OAAO,GAAI,UAAU;IAC1B,IAAI,CAAC,SAAS,EAAE,GAAI,QAAQ;IAC5B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,YAAY;IAC5D,IAAI,CAAC,OAAO,GAAI,QAAQ;IACxB,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UAAU,SAAS,IAAI,EAAE,OAAO,QAAQ,GAAG,YAAY;IAC5D,IAAI,QAAQ,GAAG,QAAQ,aAAa,QAAQ;IAC5C,IAAI,CAAC,OAAO,GAAI,UAAU;IAC1B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,UAAU;IAC9B,IAAI,CAAC,SAAS,EAAE,GAAI,QAAQ;IAC5B,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,eAAe,GAAG,mBAAmB,SAAS,gBAAiB,KAAK,EAAE,SAAS,CAAC;IAC/F,OAAO,eAAe,IAAI,EAAE,OAAO,QAAQ,CAAC,OAAO,uBAAuB,OAAO;AACnF;AAEA,OAAO,SAAS,CAAC,eAAe,GAAG,mBAAmB,SAAS,gBAAiB,KAAK,EAAE,SAAS,CAAC;IAC/F,OAAO,eAAe,IAAI,EAAE,OAAO,QAAQ,CAAC,OAAO,uBAAuB,OAAO;AACnF;AAEA,SAAS,aAAc,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtD,IAAI,SAAS,MAAM,IAAI,MAAM,EAAE,MAAM,IAAI,WAAW;IACpD,IAAI,SAAS,GAAG,MAAM,IAAI,WAAW;AACvC;AAEA,SAAS,WAAY,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ;IAC7D,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UACH,aAAa,KAAK,OAAO,QAAQ,GAAG,wBAAwB;IAE9D,QAAQ,KAAK,CAAC,KAAK,OAAO,QAAQ,cAAc,IAAI;IACpD,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,OAAO,WAAW,IAAI,EAAE,OAAO,QAAQ,MAAM;AAC/C;AAEA,OAAO,SAAS,CAAC,YAAY,GAAG,SAAS,aAAc,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC5E,OAAO,WAAW,IAAI,EAAE,OAAO,QAAQ,OAAO;AAChD;AAEA,SAAS,YAAa,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ;IAC9D,QAAQ,CAAC;IACT,SAAS,WAAW;IACpB,IAAI,CAAC,UACH,aAAa,KAAK,OAAO,QAAQ,GAAG,yBAAyB;IAE/D,QAAQ,KAAK,CAAC,KAAK,OAAO,QAAQ,cAAc,IAAI;IACpD,OAAO,SAAS;AAClB;AAEA,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,OAAO,YAAY,IAAI,EAAE,OAAO,QAAQ,MAAM;AAChD;AAEA,OAAO,SAAS,CAAC,aAAa,GAAG,SAAS,cAAe,KAAK,EAAE,MAAM,EAAE,QAAQ;IAC9E,OAAO,YAAY,IAAI,EAAE,OAAO,QAAQ,OAAO;AACjD;AAEA,4EAA4E;AAC5E,OAAO,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,MAAM,EAAE,WAAW,EAAE,KAAK,EAAE,GAAG;IACpE,IAAI,CAAC,OAAO,QAAQ,CAAC,SAAS,MAAM,IAAI,UAAU;IAClD,IAAI,CAAC,OAAO,QAAQ;IACpB,IAAI,CAAC,OAAO,QAAQ,GAAG,MAAM,IAAI,CAAC,MAAM;IACxC,IAAI,eAAe,OAAO,MAAM,EAAE,cAAc,OAAO,MAAM;IAC7D,IAAI,CAAC,aAAa,cAAc;IAChC,IAAI,MAAM,KAAK,MAAM,OAAO,MAAM;IAElC,2BAA2B;IAC3B,IAAI,QAAQ,OAAO,OAAO;IAC1B,IAAI,OAAO,MAAM,KAAK,KAAK,IAAI,CAAC,MAAM,KAAK,GAAG,OAAO;IAErD,yBAAyB;IACzB,IAAI,cAAc,GAChB,MAAM,IAAI,WAAW;IAEvB,IAAI,QAAQ,KAAK,SAAS,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,WAAW;IAC5D,IAAI,MAAM,GAAG,MAAM,IAAI,WAAW;IAElC,cAAc;IACd,IAAI,MAAM,IAAI,CAAC,MAAM,EAAE,MAAM,IAAI,CAAC,MAAM;IACxC,IAAI,OAAO,MAAM,GAAG,cAAc,MAAM,OACtC,MAAM,OAAO,MAAM,GAAG,cAAc;IAGtC,MAAM,MAAM,MAAM;IAElB,IAAI,IAAI,KAAK,UAAU,OAAO,WAAW,SAAS,CAAC,UAAU,KAAK,YAChE,iDAAiD;IACjD,IAAI,CAAC,UAAU,CAAC,aAAa,OAAO;SAEpC,WAAW,SAAS,CAAC,GAAG,CAAC,IAAI,CAC3B,QACA,IAAI,CAAC,QAAQ,CAAC,OAAO,MACrB;IAIJ,OAAO;AACT;AAEA,SAAS;AACT,0CAA0C;AAC1C,0CAA0C;AAC1C,sDAAsD;AACtD,OAAO,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ;IAC9D,uBAAuB;IACvB,IAAI,OAAO,QAAQ,UAAU;QAC3B,IAAI,OAAO,UAAU,UAAU;YAC7B,WAAW;YACX,QAAQ;YACR,MAAM,IAAI,CAAC,MAAM;QACnB,OAAO,IAAI,OAAO,QAAQ,UAAU;YAClC,WAAW;YACX,MAAM,IAAI,CAAC,MAAM;QACnB;QACA,IAAI,aAAa,aAAa,OAAO,aAAa,UAChD,MAAM,IAAI,UAAU;QAEtB,IAAI,OAAO,aAAa,YAAY,CAAC,OAAO,UAAU,CAAC,WACrD,MAAM,IAAI,UAAU,uBAAuB;QAE7C,IAAI,IAAI,MAAM,KAAK,GAAG;YACpB,MAAM,OAAO,IAAI,UAAU,CAAC;YAC5B,IAAI,AAAC,aAAa,UAAU,OAAO,OAC/B,aAAa,UACf,uEAAuE;YACvE,MAAM;QAEV;IACF,OAAO,IAAI,OAAO,QAAQ,UACxB,MAAM,MAAM;SACP,IAAI,OAAO,QAAQ,WACxB,MAAM,OAAO;IAGf,qEAAqE;IACrE,IAAI,QAAQ,KAAK,IAAI,CAAC,MAAM,GAAG,SAAS,IAAI,CAAC,MAAM,GAAG,KACpD,MAAM,IAAI,WAAW;IAGvB,IAAI,OAAO,OACT,OAAO,IAAI;IAGb,QAAQ,UAAU;IAClB,MAAM,QAAQ,YAAY,IAAI,CAAC,MAAM,GAAG,QAAQ;IAEhD,IAAI,CAAC,KAAK,MAAM;IAEhB,IAAI;IACJ,IAAI,OAAO,QAAQ,UACjB,IAAK,IAAI,OAAO,IAAI,KAAK,EAAE,EACzB,IAAI,CAAC,EAAE,GAAG;SAEP;QACL,MAAM,QAAQ,OAAO,QAAQ,CAAC,OAC1B,MACA,OAAO,IAAI,CAAC,KAAK;QACrB,MAAM,MAAM,MAAM,MAAM;QACxB,IAAI,QAAQ,GACV,MAAM,IAAI,UAAU,gBAAgB,MAClC;QAEJ,IAAK,IAAI,GAAG,IAAI,MAAM,OAAO,EAAE,EAC7B,IAAI,CAAC,IAAI,MAAM,GAAG,KAAK,CAAC,IAAI,IAAI;IAEpC;IAEA,OAAO,IAAI;AACb;AAEA,gBAAgB;AAChB,gBAAgB;AAEhB,+DAA+D;AAC/D,MAAM,SAAS,CAAC;AAChB,SAAS,EAAG,GAAG,EAAE,UAAU,EAAE,IAAI;IAC/B,MAAM,CAAC,IAAI,GAAG,MAAM,kBAAkB;QACpC,aAAe;YACb,KAAK;YAEL,OAAO,cAAc,CAAC,IAAI,EAAE,WAAW;gBACrC,OAAO,WAAW,KAAK,CAAC,IAAI,EAAE;gBAC9B,UAAU;gBACV,cAAc;YAChB;YAEA,mEAAmE;YACnE,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;YACnC,0EAA0E;YAC1E,iBAAiB;YACjB,IAAI,CAAC,KAAK,CAAC,4CAA4C;;YACvD,qCAAqC;YACrC,OAAO,IAAI,CAAC,IAAI;QAClB;QAEA,IAAI,OAAQ;YACV,OAAO;QACT;QAEA,IAAI,KAAM,KAAK,EAAE;YACf,OAAO,cAAc,CAAC,IAAI,EAAE,QAAQ;gBAClC,cAAc;gBACd,YAAY;gBACZ;gBACA,UAAU;YACZ;QACF;QAEA,WAAY;YACV,OAAO,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACjD;IACF;AACF;AAEA,EAAE,4BACA,SAAU,IAAI;IACZ,IAAI,MACF,OAAO,CAAC,EAAE,KAAK,4BAA4B,CAAC;IAG9C,OAAO;AACT,GAAG;AACL,EAAE,wBACA,SAAU,IAAI,EAAE,MAAM;IACpB,OAAO,CAAC,KAAK,EAAE,KAAK,iDAAiD,EAAE,OAAO,OAAO,CAAC;AACxF,GAAG;AACL,EAAE,oBACA,SAAU,GAAG,EAAE,KAAK,EAAE,KAAK;IACzB,IAAI,MAAM,CAAC,cAAc,EAAE,IAAI,kBAAkB,CAAC;IAClD,IAAI,WAAW;IACf,IAAI,OAAO,SAAS,CAAC,UAAU,KAAK,GAAG,CAAC,SAAS,KAAK,IACpD,WAAW,sBAAsB,OAAO;SACnC,IAAI,OAAO,UAAU,UAAU;QACpC,WAAW,OAAO;QAClB,IAAI,QAAQ,OAAO,MAAM,OAAO,OAAO,QAAQ,CAAE,CAAA,OAAO,MAAM,OAAO,GAAE,GACrE,WAAW,sBAAsB;QAEnC,YAAY;IACd;IACA,OAAO,CAAC,YAAY,EAAE,MAAM,WAAW,EAAE,SAAS,CAAC;IACnD,OAAO;AACT,GAAG;AAEL,SAAS,sBAAuB,GAAG;IACjC,IAAI,MAAM;IACV,IAAI,IAAI,IAAI,MAAM;IAClB,MAAM,QAAQ,GAAG,CAAC,EAAE,KAAK,MAAM,IAAI;IACnC,MAAO,KAAK,QAAQ,GAAG,KAAK,EAC1B,MAAM,CAAC,CAAC,EAAE,IAAI,KAAK,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,CAAC;IAEvC,OAAO,CAAC,EAAE,IAAI,KAAK,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC;AACnC;AAEA,kBAAkB;AAClB,kBAAkB;AAElB,SAAS,YAAa,GAAG,EAAE,MAAM,EAAE,UAAU;IAC3C,eAAe,QAAQ;IACvB,IAAI,GAAG,CAAC,OAAO,KAAK,aAAa,GAAG,CAAC,SAAS,WAAW,KAAK,WAC5D,YAAY,QAAQ,IAAI,MAAM,GAAI,CAAA,aAAa,CAAA;AAEnD;AAEA,SAAS,WAAY,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,UAAU;IAC3D,IAAI,QAAQ,OAAO,QAAQ,KAAK;QAC9B,MAAM,IAAI,OAAO,QAAQ,WAAW,MAAM;QAC1C,IAAI;QACJ,IAAI,aAAa;YACf,IAAI,QAAQ,KAAK,QAAQ,OAAO,IAC9B,QAAQ,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,IAAI,EAAE,AAAC,CAAA,aAAa,CAAA,IAAK,EAAE,EAAE,EAAE,CAAC;iBAE7D,QAAQ,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,AAAC,CAAA,aAAa,CAAA,IAAK,IAAI,EAAE,EAAE,EAAE,aAAa,CAAC,GAC5D,CAAC,EAAE,AAAC,CAAA,aAAa,CAAA,IAAK,IAAI,EAAE,EAAE,EAAE,CAAC;eAG3C,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,CAAC;QAE3C,MAAM,IAAI,OAAO,gBAAgB,CAAC,SAAS,OAAO;IACpD;IACA,YAAY,KAAK,QAAQ;AAC3B;AAEA,SAAS,eAAgB,KAAK,EAAE,IAAI;IAClC,IAAI,OAAO,UAAU,UACnB,MAAM,IAAI,OAAO,oBAAoB,CAAC,MAAM,UAAU;AAE1D;AAEA,SAAS,YAAa,KAAK,EAAE,MAAM,EAAE,IAAI;IACvC,IAAI,KAAK,KAAK,CAAC,WAAW,OAAO;QAC/B,eAAe,OAAO;QACtB,MAAM,IAAI,OAAO,gBAAgB,CAAC,QAAQ,UAAU,cAAc;IACpE;IAEA,IAAI,SAAS,GACX,MAAM,IAAI,OAAO,wBAAwB;IAG3C,MAAM,IAAI,OAAO,gBAAgB,CAAC,QAAQ,UACR,CAAC,GAAG,EAAE,OAAO,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAC,EACrC;AACpC;AAEA,mBAAmB;AACnB,mBAAmB;AAEnB,MAAM,oBAAoB;AAE1B,SAAS,YAAa,GAAG;IACvB,uDAAuD;IACvD,MAAM,IAAI,KAAK,CAAC,IAAI,CAAC,EAAE;IACvB,wFAAwF;IACxF,MAAM,IAAI,IAAI,GAAG,OAAO,CAAC,mBAAmB;IAC5C,8CAA8C;IAC9C,IAAI,IAAI,MAAM,GAAG,GAAG,OAAO;IAC3B,uFAAuF;IACvF,MAAO,IAAI,MAAM,GAAG,MAAM,EACxB,MAAM,MAAM;IAEd,OAAO;AACT;AAEA,SAAS,YAAa,MAAM,EAAE,KAAK;IACjC,QAAQ,SAAS;IACjB,IAAI;IACJ,MAAM,SAAS,OAAO,MAAM;IAC5B,IAAI,gBAAgB;IACpB,MAAM,QAAQ,EAAE;IAEhB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,EAAE,EAAG;QAC/B,YAAY,OAAO,UAAU,CAAC;QAE9B,yBAAyB;QACzB,IAAI,YAAY,UAAU,YAAY,QAAQ;YAC5C,uBAAuB;YACvB,IAAI,CAAC,eAAe;gBAClB,cAAc;gBACd,IAAI,YAAY,QAAQ;oBACtB,mBAAmB;oBACnB,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,IAAI,MAAM,IAAI,CAAC,MAAM,MAAM;oBAC9C;gBACF,OAAO,IAAI,IAAI,MAAM,QAAQ;oBAC3B,gBAAgB;oBAChB,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,IAAI,MAAM,IAAI,CAAC,MAAM,MAAM;oBAC9C;gBACF;gBAEA,aAAa;gBACb,gBAAgB;gBAEhB;YACF;YAEA,mBAAmB;YACnB,IAAI,YAAY,QAAQ;gBACtB,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,IAAI,MAAM,IAAI,CAAC,MAAM,MAAM;gBAC9C,gBAAgB;gBAChB;YACF;YAEA,uBAAuB;YACvB,YAAY,AAAC,CAAA,gBAAgB,UAAU,KAAK,YAAY,MAAK,IAAK;QACpE,OAAO,IAAI,eACT,2CAA2C;QAC3C;YAAA,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,IAAI,MAAM,IAAI,CAAC,MAAM,MAAM;QAAI;QAGpD,gBAAgB;QAEhB,cAAc;QACd,IAAI,YAAY,MAAM;YACpB,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,GAAG;YACtB,MAAM,IAAI,CAAC;QACb,OAAO,IAAI,YAAY,OAAO;YAC5B,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,GAAG;YACtB,MAAM,IAAI,CACR,aAAa,MAAM,MACnB,YAAY,OAAO;QAEvB,OAAO,IAAI,YAAY,SAAS;YAC9B,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,GAAG;YACtB,MAAM,IAAI,CACR,aAAa,MAAM,MACnB,aAAa,MAAM,OAAO,MAC1B,YAAY,OAAO;QAEvB,OAAO,IAAI,YAAY,UAAU;YAC/B,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,GAAG;YACtB,MAAM,IAAI,CACR,aAAa,OAAO,MACpB,aAAa,MAAM,OAAO,MAC1B,aAAa,MAAM,OAAO,MAC1B,YAAY,OAAO;QAEvB,OACE,MAAM,IAAI,MAAM;IAEpB;IAEA,OAAO;AACT;AAEA,SAAS,aAAc,GAAG;IACxB,MAAM,YAAY,EAAE;IACpB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,EAAE,EAChC,sDAAsD;IACtD,UAAU,IAAI,CAAC,IAAI,UAAU,CAAC,KAAK;IAErC,OAAO;AACT;AAEA,SAAS,eAAgB,GAAG,EAAE,KAAK;IACjC,IAAI,GAAG,IAAI;IACX,MAAM,YAAY,EAAE;IACpB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,EAAE,EAAG;QACnC,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK,GAAG;QAEtB,IAAI,IAAI,UAAU,CAAC;QACnB,KAAK,KAAK;QACV,KAAK,IAAI;QACT,UAAU,IAAI,CAAC;QACf,UAAU,IAAI,CAAC;IACjB;IAEA,OAAO;AACT;AAEA,SAAS,cAAe,GAAG;IACzB,OAAO,OAAO,WAAW,CAAC,YAAY;AACxC;AAEA,SAAS,WAAY,GAAG,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM;IAC3C,IAAI;IACJ,IAAK,IAAI,GAAG,IAAI,QAAQ,EAAE,EAAG;QAC3B,IAAI,AAAC,IAAI,UAAU,IAAI,MAAM,IAAM,KAAK,IAAI,MAAM,EAAG;QACrD,GAAG,CAAC,IAAI,OAAO,GAAG,GAAG,CAAC,EAAE;IAC1B;IACA,OAAO;AACT;AAEA,mFAAmF;AACnF,qEAAqE;AACrE,mDAAmD;AACnD,SAAS,WAAY,GAAG,EAAE,IAAI;IAC5B,OAAO,eAAe,QACnB,OAAO,QAAQ,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,CAAC,IAAI,IAAI,QACjE,IAAI,WAAW,CAAC,IAAI,KAAK,KAAK,IAAI;AACxC;AACA,SAAS,YAAa,GAAG;IACvB,mBAAmB;IACnB,OAAO,QAAQ,IAAI,sCAAsC;;AAC3D;AAEA,4CAA4C;AAC5C,mDAAmD;AACnD,MAAM,sBAAsB,AAAC;IAC3B,MAAM,WAAW;IACjB,MAAM,QAAQ,IAAI,MAAM;IACxB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EAAG;QAC3B,MAAM,MAAM,IAAI;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,EAAE,EACxB,KAAK,CAAC,MAAM,EAAE,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;IAE9C;IACA,OAAO;AACT;AAEA,yDAAyD;AACzD,SAAS,mBAAoB,EAAE;IAC7B,OAAO,OAAO,WAAW,cAAc,yBAAyB;AAClE;AAEA,SAAS;IACP,MAAM,IAAI,MAAM;AAClB;;;ACzjEA;AAEA,QAAQ,UAAU,GAAG;AACrB,QAAQ,WAAW,GAAG;AACtB,QAAQ,aAAa,GAAG;AAExB,IAAI,SAAS,EAAE;AACf,IAAI,YAAY,EAAE;AAClB,IAAI,MAAM,OAAO,eAAe,cAAc,aAAa;AAE3D,IAAI,OAAO;AACX,IAAK,IAAI,IAAI,GAAG,MAAM,KAAK,MAAM,EAAE,IAAI,KAAK,EAAE,EAAG;IAC/C,MAAM,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;IACnB,SAAS,CAAC,KAAK,UAAU,CAAC,GAAG,GAAG;AAClC;AAEA,6DAA6D;AAC7D,6DAA6D;AAC7D,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG;AAC/B,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,GAAG;AAE/B,SAAS,QAAS,GAAG;IACnB,IAAI,MAAM,IAAI,MAAM;IAEpB,IAAI,MAAM,IAAI,GACZ,MAAM,IAAI,MAAM;IAGlB,yDAAyD;IACzD,yDAAyD;IACzD,IAAI,WAAW,IAAI,OAAO,CAAC;IAC3B,IAAI,aAAa,IAAI,WAAW;IAEhC,IAAI,kBAAkB,aAAa,MAC/B,IACA,IAAK,WAAW;IAEpB,OAAO;QAAC;QAAU;KAAgB;AACpC;AAEA,4DAA4D;AAC5D,SAAS,WAAY,GAAG;IACtB,IAAI,OAAO,QAAQ;IACnB,IAAI,WAAW,IAAI,CAAC,EAAE;IACtB,IAAI,kBAAkB,IAAI,CAAC,EAAE;IAC7B,OAAO,AAAE,CAAA,WAAW,eAAc,IAAK,IAAI,IAAK;AAClD;AAEA,SAAS,YAAa,GAAG,EAAE,QAAQ,EAAE,eAAe;IAClD,OAAO,AAAE,CAAA,WAAW,eAAc,IAAK,IAAI,IAAK;AAClD;AAEA,SAAS,YAAa,GAAG;IACvB,IAAI;IACJ,IAAI,OAAO,QAAQ;IACnB,IAAI,WAAW,IAAI,CAAC,EAAE;IACtB,IAAI,kBAAkB,IAAI,CAAC,EAAE;IAE7B,IAAI,MAAM,IAAI,IAAI,YAAY,KAAK,UAAU;IAE7C,IAAI,UAAU;IAEd,sEAAsE;IACtE,IAAI,MAAM,kBAAkB,IACxB,WAAW,IACX;IAEJ,IAAI;IACJ,IAAK,IAAI,GAAG,IAAI,KAAK,KAAK,EAAG;QAC3B,MACE,AAAC,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,IAAI,KAChC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,IAAI,KACpC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,IAAI,IACrC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG;QAClC,GAAG,CAAC,UAAU,GAAG,AAAC,OAAO,KAAM;QAC/B,GAAG,CAAC,UAAU,GAAG,AAAC,OAAO,IAAK;QAC9B,GAAG,CAAC,UAAU,GAAG,MAAM;IACzB;IAEA,IAAI,oBAAoB,GAAG;QACzB,MACE,AAAC,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,IAAI,IAChC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,IAAI;QACvC,GAAG,CAAC,UAAU,GAAG,MAAM;IACzB;IAEA,IAAI,oBAAoB,GAAG;QACzB,MACE,AAAC,SAAS,CAAC,IAAI,UAAU,CAAC,GAAG,IAAI,KAChC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,IAAI,IACpC,SAAS,CAAC,IAAI,UAAU,CAAC,IAAI,GAAG,IAAI;QACvC,GAAG,CAAC,UAAU,GAAG,AAAC,OAAO,IAAK;QAC9B,GAAG,CAAC,UAAU,GAAG,MAAM;IACzB;IAEA,OAAO;AACT;AAEA,SAAS,gBAAiB,GAAG;IAC3B,OAAO,MAAM,CAAC,OAAO,KAAK,KAAK,GAC7B,MAAM,CAAC,OAAO,KAAK,KAAK,GACxB,MAAM,CAAC,OAAO,IAAI,KAAK,GACvB,MAAM,CAAC,MAAM,KAAK;AACtB;AAEA,SAAS,YAAa,KAAK,EAAE,KAAK,EAAE,GAAG;IACrC,IAAI;IACJ,IAAI,SAAS,EAAE;IACf,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,KAAK,EAAG;QACnC,MACE,AAAC,CAAA,AAAC,KAAK,CAAC,EAAE,IAAI,KAAM,QAAO,IAC1B,CAAA,AAAC,KAAK,CAAC,IAAI,EAAE,IAAI,IAAK,MAAK,IAC3B,CAAA,KAAK,CAAC,IAAI,EAAE,GAAG,IAAG;QACrB,OAAO,IAAI,CAAC,gBAAgB;IAC9B;IACA,OAAO,OAAO,IAAI,CAAC;AACrB;AAEA,SAAS,cAAe,KAAK;IAC3B,IAAI;IACJ,IAAI,MAAM,MAAM,MAAM;IACtB,IAAI,aAAa,MAAM,EAAE,sCAAsC;;IAC/D,IAAI,QAAQ,EAAE;IACd,IAAI,iBAAiB,MAAM,wBAAwB;;IAEnD,+EAA+E;IAC/E,IAAK,IAAI,IAAI,GAAG,OAAO,MAAM,YAAY,IAAI,MAAM,KAAK,eACtD,MAAM,IAAI,CAAC,YAAY,OAAO,GAAG,AAAC,IAAI,iBAAkB,OAAO,OAAQ,IAAI;IAG7E,sEAAsE;IACtE,IAAI,eAAe,GAAG;QACpB,MAAM,KAAK,CAAC,MAAM,EAAE;QACpB,MAAM,IAAI,CACR,MAAM,CAAC,OAAO,EAAE,GAChB,MAAM,CAAC,AAAC,OAAO,IAAK,KAAK,GACzB;IAEJ,OAAO,IAAI,eAAe,GAAG;QAC3B,MAAM,AAAC,CAAA,KAAK,CAAC,MAAM,EAAE,IAAI,CAAA,IAAK,KAAK,CAAC,MAAM,EAAE;QAC5C,MAAM,IAAI,CACR,MAAM,CAAC,OAAO,GAAG,GACjB,MAAM,CAAC,AAAC,OAAO,IAAK,KAAK,GACzB,MAAM,CAAC,AAAC,OAAO,IAAK,KAAK,GACzB;IAEJ;IAEA,OAAO,MAAM,IAAI,CAAC;AACpB;;;ACrJA,uFAAuF,GACvF,QAAQ,IAAI,GAAG,SAAU,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM;IACzD,IAAI,GAAG;IACP,IAAI,OAAO,AAAC,SAAS,IAAK,OAAO;IACjC,IAAI,OAAO,AAAC,CAAA,KAAK,IAAG,IAAK;IACzB,IAAI,QAAQ,QAAQ;IACpB,IAAI,QAAQ;IACZ,IAAI,IAAI,OAAQ,SAAS,IAAK;IAC9B,IAAI,IAAI,OAAO,KAAK;IACpB,IAAI,IAAI,MAAM,CAAC,SAAS,EAAE;IAE1B,KAAK;IAEL,IAAI,IAAK,AAAC,CAAA,KAAM,CAAC,KAAK,IAAK;IAC3B,MAAO,CAAC;IACR,SAAS;IACT,MAAO,QAAQ,GAAG,IAAI,AAAC,IAAI,MAAO,MAAM,CAAC,SAAS,EAAE,EAAE,KAAK,GAAG,SAAS;IAEvE,IAAI,IAAK,AAAC,CAAA,KAAM,CAAC,KAAK,IAAK;IAC3B,MAAO,CAAC;IACR,SAAS;IACT,MAAO,QAAQ,GAAG,IAAI,AAAC,IAAI,MAAO,MAAM,CAAC,SAAS,EAAE,EAAE,KAAK,GAAG,SAAS;IAEvE,IAAI,MAAM,GACR,IAAI,IAAI;SACH,IAAI,MAAM,MACf,OAAO,IAAI,MAAO,AAAC,CAAA,IAAI,KAAK,CAAA,IAAK;SAC5B;QACL,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG;QACpB,IAAI,IAAI;IACV;IACA,OAAO,AAAC,CAAA,IAAI,KAAK,CAAA,IAAK,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI;AAC5C;AAEA,QAAQ,KAAK,GAAG,SAAU,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,MAAM;IACjE,IAAI,GAAG,GAAG;IACV,IAAI,OAAO,AAAC,SAAS,IAAK,OAAO;IACjC,IAAI,OAAO,AAAC,CAAA,KAAK,IAAG,IAAK;IACzB,IAAI,QAAQ,QAAQ;IACpB,IAAI,KAAM,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,OAAO,KAAK,GAAG,CAAC,GAAG,OAAO;IAC9D,IAAI,IAAI,OAAO,IAAK,SAAS;IAC7B,IAAI,IAAI,OAAO,IAAI;IACnB,IAAI,IAAI,QAAQ,KAAM,UAAU,KAAK,IAAI,QAAQ,IAAK,IAAI;IAE1D,QAAQ,KAAK,GAAG,CAAC;IAEjB,IAAI,MAAM,UAAU,UAAU,UAAU;QACtC,IAAI,MAAM,SAAS,IAAI;QACvB,IAAI;IACN,OAAO;QACL,IAAI,KAAK,KAAK,CAAC,KAAK,GAAG,CAAC,SAAS,KAAK,GAAG;QACzC,IAAI,QAAS,CAAA,IAAI,KAAK,GAAG,CAAC,GAAG,CAAC,EAAC,IAAK,GAAG;YACrC;YACA,KAAK;QACP;QACA,IAAI,IAAI,SAAS,GACf,SAAS,KAAK;aAEd,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,IAAI;QAEhC,IAAI,QAAQ,KAAK,GAAG;YAClB;YACA,KAAK;QACP;QAEA,IAAI,IAAI,SAAS,MAAM;YACrB,IAAI;YACJ,IAAI;QACN,OAAO,IAAI,IAAI,SAAS,GAAG;YACzB,IAAI,AAAC,CAAA,AAAC,QAAQ,IAAK,CAAA,IAAK,KAAK,GAAG,CAAC,GAAG;YACpC,IAAI,IAAI;QACV,OAAO;YACL,IAAI,QAAQ,KAAK,GAAG,CAAC,GAAG,QAAQ,KAAK,KAAK,GAAG,CAAC,GAAG;YACjD,IAAI;QACN;IACF;IAEA,MAAO,QAAQ,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,MAAM,KAAK,GAAG,KAAK,KAAK,QAAQ;IAE3E,IAAI,AAAC,KAAK,OAAQ;IAClB,QAAQ;IACR,MAAO,OAAO,GAAG,MAAM,CAAC,SAAS,EAAE,GAAG,IAAI,MAAM,KAAK,GAAG,KAAK,KAAK,QAAQ;IAE1E,MAAM,CAAC,SAAS,IAAI,EAAE,IAAI,IAAI;AAChC;;;AEpFA,oEAAA;;8DAuFa;6CAsCA;gDAYA;+CAIA;4CAMA;AAiBb;;;;;;;;CAQG,GACH,4DAAgB;yDAKH;AAEb;;;;;;CAMG,GACH,6DAAgB;iDA6FH;mDACA;oDAyMA;wDAOA;0DAOA;AA/eb;AACA;AACA;AACA;AACA;AACA;AAQA;AAGA;;;;;CAKG,GAEH,MAAM,YAAY,OAChB;AAEF,iCAAiC;AACjC,MAAM,kBAAkB,OACtB;AAGF,kBAAkB;AAClB,MAAM,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO;AACtE,kBAAkB;AAClB,MAAM,OAAO,OAAO,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO,KAAK,OAAO,OAAO;AAE7E,SAAS,oBAAoB,CAAS;IACpC,MAAM,IAAI;IACV,MAAM,KAAK,AAAC,IAAI,IAAK;IACrB,MAAM,KAAK,AAAC,KAAK,IAAK,GAAG,UAAU;IACnC,MAAM,KAAK,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,IAAI,KAAK,KAAK,KAAM,GAAG,aAAa;IACrD,MAAM,KAAK,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,IAAI,KAAK,KAAK,IAAK,GAAG,OAAO;IAC9C,MAAM,MAAM,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,IAAI,KAAK,KAAK,KAAM;IACtC,MAAM,MAAM,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,KAAK,MAAM,KAAK,MAAO;IACzC,MAAM,MAAM,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,KAAK,MAAM,KAAK,MAAO;IACzC,MAAM,MAAM,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,KAAK,MAAM,KAAK,MAAO;IACzC,MAAM,OAAO,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,KAAK,MAAM,KAAK,MAAO;IAC1C,MAAM,OAAO,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,MAAM,MAAM,KAAK,MAAO;IAC3C,MAAM,OAAO,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,MAAM,MAAM,KAAK,MAAO;IAC3C,MAAM,YAAY,AAAC,CAAA,GAAA,eAAI,AAAJ,EAAK,MAAM,KAAK,KAAK,IAAK;IAC7C,yCAAyC;IACzC,OAAO;QAAE;QAAW;IAAE;AACxB;AAEA,SAAS,kBAAkB,KAAiB;IAC1C,kFAAkF;IAClF,yDAAyD;IACzD,KAAK,CAAC,EAAE,IAAI,KAAK,cAAc;IAC/B,oDAAoD;IACpD,KAAK,CAAC,GAAG,IAAI,KAAK,cAAc;IAChC,4DAA4D;IAC5D,KAAK,CAAC,GAAG,IAAI,IAAI,cAAc;IAC/B,OAAO;AACT;AAEA,YAAY;AACZ,SAAS,QAAQ,CAAS,EAAE,CAAS;IACnC,MAAM,IAAI;IACV,MAAM,KAAK,CAAA,GAAA,cAAG,AAAH,EAAI,IAAI,IAAI,GAAG,IAAI,KAAK;IACnC,MAAM,KAAK,CAAA,GAAA,cAAG,AAAH,EAAI,KAAK,KAAK,GAAG,IAAI,KAAK;IACrC,sBAAsB;IACtB,MAAM,MAAM,oBAAoB,IAAI,IAAI,SAAS;IACjD,IAAI,IAAI,CAAA,GAAA,cAAG,AAAH,EAAI,IAAI,KAAK,KAAK,IAAI,qBAAqB;IACnD,MAAM,MAAM,CAAA,GAAA,cAAG,AAAH,EAAI,IAAI,IAAI,GAAG,IAAI,MAAM;IACrC,MAAM,QAAQ,GAAG,uBAAuB;IACxC,MAAM,QAAQ,CAAA,GAAA,cAAG,AAAH,EAAI,IAAI,iBAAiB,IAAI,wBAAwB;IACnE,MAAM,WAAW,QAAQ,GAAG,yCAAyC;IACrE,MAAM,WAAW,QAAQ,CAAA,GAAA,cAAG,AAAH,EAAI,CAAC,GAAG,IAAI,yCAAyC;IAC9E,MAAM,SAAS,QAAQ,CAAA,GAAA,cAAG,AAAH,EAAI,CAAC,IAAI,iBAAiB,IAAI,wCAAwC;IAC7F,IAAI,UAAU,IAAI;IAClB,IAAI,YAAY,QAAQ,IAAI,OAAO,yCAAyC;IAC5E,IAAI,CAAA,GAAA,uBAAY,AAAZ,EAAa,GAAG,IAAI,IAAI,CAAA,GAAA,cAAG,AAAH,EAAI,CAAC,GAAG;IACpC,OAAO;QAAE,SAAS,YAAY;QAAU,OAAO;IAAC;AAClD;AAGO,MAAM,2BAA2B;IACtC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,MAAM,KAAK,CAAA,GAAA,gBAAK,AAAL,EAAM,WAAW,WAAW;AAEvC,MAAM,kBAAkB;IACtB,WAAW;IACX,GAAG,OAAO;IACV,kDAAkD;IAClD,mEAAmE;IACnE,GAAG,OAAO;IACV,oEAAoE;IACpE;IACA,4CAA4C;IAC5C,sDAAsD;IACtD,GAAG,OAAO;IACV,WAAW;IACX,GAAG,OAAO;IACV,wCAAwC;IACxC,IAAI,OAAO;IACX,IAAI,OAAO;IACX,MAAM,CAAA,GAAA,cAAM,AAAN;iBACN,CAAA,GAAA,kBAAW,AAAX;IACA;IACA,OAAO;IACP,iGAAiG;IACjG,sBAAsB;IACtB;AACQ;AAEH,MAAM,UAAU,aAAA,GAAgB,CAAA,GAAA,yBAAc,AAAd,EAAe;AAEtD,SAAS,eAAe,IAAgB,EAAE,GAAe,EAAE,MAAe;IACxE,IAAI,IAAI,MAAM,GAAG,KAAK,MAAM,IAAI,MAAM;IACtC,OAAO,CAAA,GAAA,kBAAW,AAAX,EACL,CAAA,GAAA,kBAAW,AAAX,EAAY,qCACZ,IAAI,WAAW;QAAC,SAAS,IAAI;QAAG,IAAI,MAAM;KAAC,GAC3C,KACA;AAEJ;AAEO,MAAM,aAAa,aAAA,GAAgB,CAAA,GAAA,yBAAc,AAAd,EAAe;IACvD,GAAG,eAAe;IAClB,QAAQ;AACT;AACM,MAAM,YAAY,aAAA,GAAgB,CAAA,GAAA,yBAAc,AAAd,EAAe;IACtD,GAAG,eAAe;IAClB,QAAQ;IACR,SAAS,CAAA,GAAA,cAAM,AAAN;AACV;AAEM,MAAM,SAAyB,AAAhB,aAAA,GAAiB,CAAA,IACrC,CAAA,GAAA,wBAAU,AAAV,EAAW;QACT,GAAG;QACH,GAAG,OAAO;QACV,gBAAgB;QAChB,aAAa;QACb,IAAI,OAAO;QACX,YAAY,CAAC;YACX,MAAM,IAAI;YACV,2BAA2B;YAC3B,MAAM,EAAE,SAAS,EAAE,EAAE,EAAE,GAAG,oBAAoB;YAC9C,OAAO,CAAA,GAAA,cAAG,AAAH,EAAI,CAAA,GAAA,eAAI,AAAJ,EAAK,WAAW,OAAO,IAAI,KAAK,IAAI;QACjD;QACA;qBACA,CAAA,GAAA,kBAAW,AAAX;IACD,EAAA;AAWG,SAAU,uBAAuB,UAAe;IACpD,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,aAAa,CAAC,OAAO,CAAC;IAC5C,MAAM,MAAM,OAAO;IACnB,OAAO,GAAG,OAAO,CAAC,GAAG,MAAM,CAAC,AAAC,CAAA,MAAM,CAAA,IAAK,GAAG,GAAG,CAAC,MAAM;AACvD;AACO,MAAM,sBAAsB,wBAAwB,aAAa;AASlE,SAAU,wBAAwB,WAAuB;IAC7D,MAAM,SAAS,gBAAgB,IAAI,CAAC,YAAY,QAAQ,CAAC,GAAG;IAC5D,OAAO,gBAAgB,iBAAiB,CAAC,QAAQ,QAAQ,CAAC,GAAG;AAC/D;AAEA,6EAA6E;AAC7E,8EAA8E;AAC9E,mEAAmE;AAEnE,MAAM,UAAU,AAAC,CAAA,GAAG,KAAK,GAAG,OAAO,EAAC,IAAK,OAAO,IAAI,iDAAiD;AAErG,MAAM,UAAU,GAAG,GAAG,CAAC,KAAK,UAAU,eAAe;AACrD,MAAM,UAAU,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,mBAAmB;AAC5D,MAAM,UAAU,AAAC,CAAA,GAAG,KAAK,GAAG,OAAO,EAAC,IAAK,OAAO,IAAI,iDAAiD;AACrG,MAAM,SAAS,OAAO;AAEtB,kBAAkB;AAClB,SAAS,mCAAmC,CAAS;IACnD,IAAI,MAAM,GAAG,GAAG,CAAC,IAAU,iBAAiB;IAC5C,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,qBAAqB;IACnD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,GAAG,GAAG,GAAG,yEAAyE;IACvG,IAAI,MAAM,GAAG,GAAG,CAAC,SAAU,kEAAkE;IAC7F,IAAI,MAAM,GAAG,GAAG,CAAC,KAAU,kBAAkB;IAC7C,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,KAAQ,0CAA0C;IACxE,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,SAAS,4CAA4C;IAC3E,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,oDAAoD;IAClF,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,2DAA2D;IACzF,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,mEAAmE;IACjG,IAAI,MAAM,GAAG,GAAG,CAAC,MAAU,mBAAmB;IAC9C,MAAM,GAAG,GAAG,CAAC,MAAc,qCAAqC;IAChE,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,qCAAqC;IACnE,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,2CAA2C;IACzE,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,2CAA2C;IACzE,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,UAAU,yDAAyD;IACzF,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,+DAA+D;IAC7F,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,UAAU,sBAAsB;IACtD,MAAM,GAAG,GAAG,CAAC,MAAc,mBAAmB;IAC9C,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,uBAAuB;IACrD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,wBAAwB;IACnD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,wEAAwE;IACxG,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,MAAQ,kEAAkE;IAChG,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,IAAQ,qBAAqB;IACnD,MAAM,GAAG,GAAG,CAAC,KAAK,UAAY,sBAAsB;IACpD,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,UAAU,sBAAsB;IACtD,IAAI,MAAM,GAAG,GAAG,CAAC,KAAK,MAAQ,mEAAmE;IACjG,MAAM,GAAG,GAAG,CAAC,MAAc,mBAAmB;IAC9C,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,uBAAuB;IACrD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,wBAAwB;IACnD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,wEAAwE;IACxG,MAAM,GAAG,GAAG,CAAC,KAAc,kBAAkB;IAC7C,MAAM,GAAG,GAAG,CAAC,KAAK,MAAY,uBAAuB;IACrD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,wBAAwB;IACnD,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,KAAK,KAAK,8DAA8D;IAC9F,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,KAAM,8DAA8D;IAC5F,IAAI,KAAK,GAAG,KAAK,CAAC,IAAY,iDAAiD;IAC/E,IAAI,GAAG,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC,IAAI,OAAO,KAAK,oCAAoC;IAC1E,OAAO;QAAE,KAAK;QAAI,KAAK;QAAI,KAAK;QAAG,KAAK;IAAG,GAAI,6BAA6B;AAC9E;AAEA,MAAM,kBAAkB,CAAA,GAAA,qBAAU,AAAV,EAAW,IAAI,GAAG,GAAG,CAAC,OAAO,WAAW,wBAAwB;AACxF,SAAS,qCAAqC,CAAS;IACrD,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,mCAAmC,IAAI,8BAA8B;IACpG,wCAAwC;IACxC,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,sBAAsB;IACjD,KAAK,GAAG,GAAG,CAAC,IAAI,kBAAkB,oBAAoB;IACtD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,kDAAkD;IAC7E,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,sBAAsB;IACjD,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,MAAM,yEAAyE;IACpG,IAAI,MAAM,GAAG,GAAG,CAAC,IAAI,KAAK,oBAAoB;IAC9C,IAAI,IAAI,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,qBAAqB;IACnD,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,IAAI,EAAE,IAAI,2BAA2B;IACzD,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,2BAA2B;IACxD,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,2BAA2B;IACxD,KAAK,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,EAAE,IAAI,2BAA2B;IAExD,MAAM,MAAM,GAAG,WAAW,CAAC;QAAC;QAAI;KAAG,GAAG,iBAAiB;IACvD,OAAO;QAAE,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE;QAAG,GAAG,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE;IAAC,GAAI,+BAA+B;AAC1F;AAEA,MAAM,MAAsB,AAAhB,aAAA,GAAiB,CAAA,IAC3B,CAAA,GAAA,2BAAY,AAAZ,EACE,QAAQ,aAAa,EACrB,CAAC,UAAsB,qCAAqC,OAAO,CAAC,EAAE,GACtE;QACE,KAAK;QACL,WAAW;QACX,GAAG,GAAG,KAAK;QACX,GAAG;QACH,GAAG;QACH,QAAQ;QACR,MAAM,CAAA,GAAA,cAAM,AAAN;IACP,EAAA;AAEE,MAAM,cAA8B,AAAhB,aAAA,GAAiB,CAAA,IAAM,IAAI,WAAW,AAAX;AAC/C,MAAM,gBAAgC,AAAhB,aAAA,GAAiB,CAAA,IAAM,IAAI,aAAa,AAAb;AAExD,SAAS,eAAe,KAAc;IACpC,IAAI,CAAE,CAAA,iBAAiB,SAAA,GAAY,MAAM,IAAI,MAAM;AACrD;AAEA,iCAAiC;AACjC,MAAM,UAAU;AAChB,YAAY;AACZ,MAAM,oBAAoB,OACxB;AAEF,aAAa;AACb,MAAM,oBAAoB,OACxB;AAEF,OAAO;AACP,MAAM,iBAAiB,OACrB;AAEF,SAAS;AACT,MAAM,iBAAiB,OACrB;AAEF,yBAAyB;AACzB,MAAM,aAAa,CAAC,SAAmB,QAAQ,KAAK;AAEpD,MAAM,WAAW,OAAO;AACxB,MAAM,qBAAqB,CAAC,QAC1B,QAAQ,KAAK,CAAC,EAAE,CAAC,MAAM,CAAC,CAAA,GAAA,wBAAe,AAAf,EAAgB,SAAS;AAInD,uCAAuC;AACvC,kDAAkD;AAClD,SAAS,0BAA0B,EAAU;IAC3C,MAAM,EAAE,CAAC,EAAE,GAAG,QAAQ,KAAK;IAC3B,MAAM,IAAI,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK;IAChC,MAAM,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,MAAM;IACnC,MAAM,IAAI,IAAI,UAAU,KAAK,KAAK,IAAI;IACtC,MAAM,KAAK,IAAI,AAAC,CAAA,IAAI,GAAA,IAAO,iBAAiB,IAAI;IAChD,IAAI,IAAI,OAAO,KAAK,IAAI;IACxB,MAAM,IAAI,IAAI,AAAC,CAAA,IAAI,IAAI,CAAA,IAAK,IAAI,IAAI,KAAK,IAAI;IAC7C,IAAI,EAAE,SAAS,UAAU,EAAE,OAAO,CAAC,EAAE,GAAG,QAAQ,IAAI,IAAI,IAAI;IAC5D,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI;IAC1B,IAAI,CAAC,CAAA,GAAA,uBAAY,AAAZ,EAAa,IAAI,IAAI,KAAK,IAAI,CAAC;IACpC,IAAI,CAAC,YAAY,IAAI,IAAI,IAAI;IAC7B,IAAI,CAAC,YAAY,IAAI,GAAG,IAAI;IAC5B,MAAM,KAAK,IAAI,IAAK,CAAA,IAAI,GAAA,IAAO,iBAAiB,IAAI,IAAI;IACxD,MAAM,KAAK,IAAI;IACf,MAAM,KAAK,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI,KAAK;IAClC,MAAM,KAAK,IAAI,KAAK,oBAAoB,KAAK;IAC7C,MAAM,KAAK,IAAI,MAAM,KAAK,KAAK;IAC/B,MAAM,KAAK,IAAI,MAAM,KAAK,KAAK;IAC/B,OAAO,IAAI,QAAQ,aAAa,CAAC,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK,KAAK,IAAI,KAAK;AACtF;AAEA;;;;;;CAMG,GACH,MAAM;IAGJ,0EAA0E;IAC1E,kDAAkD;IAClD,YAA6B,EAAiB,CAA9C;QAA6B,IAAA,CAAA,EAAE,GAAF;IAAoB;IAEjD,OAAO,WAAW,EAAuB,EAAzC;QACE,OAAO,IAAI,UAAU,QAAQ,aAAa,CAAC,UAAU,CAAC;IACxD;IAEA;;;;;;KAMG,GACH,OAAO,YAAY,GAAQ,EAA3B;QACE,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,iBAAiB,KAAK;QACxC,MAAM,KAAK,mBAAmB,IAAI,KAAK,CAAC,GAAG;QAC3C,MAAM,KAAK,0BAA0B;QACrC,MAAM,KAAK,mBAAmB,IAAI,KAAK,CAAC,IAAI;QAC5C,MAAM,KAAK,0BAA0B;QACrC,OAAO,IAAI,UAAU,GAAG,GAAG,CAAC;IAC9B;IAEA;;;;KAIG,GACH,OAAO,QAAQ,GAAQ,EAAvB;QACE,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,gBAAgB,KAAK;QACvC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,KAAK;QAC9B,MAAM,IAAI,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK;QAChC,MAAM,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,MAAM;QACnC,MAAM,OAAO;QACb,MAAM,IAAI,mBAAmB;QAC7B,qFAAqF;QACrF,iDAAiD;QACjD,IAAI,CAAC,CAAA,GAAA,mBAAU,AAAV,EAAW,CAAA,GAAA,wBAAe,AAAf,EAAgB,GAAG,KAAK,QAAQ,CAAA,GAAA,uBAAY,AAAZ,EAAa,GAAG,IAAI,MAAM,IAAI,MAAM;QACpF,MAAM,KAAK,IAAI,IAAI;QACnB,MAAM,KAAK,IAAI,MAAM,IAAI,KAAK,cAAc;QAC5C,MAAM,KAAK,IAAI,MAAM,IAAI,KAAK,IAAI;QAClC,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,IAAI,IAAI,IAAI,IAAI,OAAO,OAAO,IAAI;QACxC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,GAAG,WAAW,IAAI,IAAI,QAAQ,IAAI;QAC7D,MAAM,KAAK,IAAI,IAAI,KAAK,IAAI;QAC5B,MAAM,KAAK,IAAI,IAAI,KAAK,IAAI,IAAI;QAChC,IAAI,IAAI,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,KAAK,KAAK;QAChC,IAAI,CAAA,GAAA,uBAAY,AAAZ,EAAa,GAAG,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK;QAC1C,MAAM,IAAI,IAAI,KAAK,KAAK,KAAK;QAC7B,MAAM,IAAI,IAAI,IAAI,IAAI,KAAK;QAC3B,IAAI,CAAC,WAAW,CAAA,GAAA,uBAAY,AAAZ,EAAa,GAAG,MAAM,MAAM,KAAK,MAAM,IAAI,MAAM;QACjE,OAAO,IAAI,UAAU,IAAI,QAAQ,aAAa,CAAC,GAAG,GAAG,KAAK;IAC5D;IAEA;;;KAGG,GACH,aAAA;QACE,IAAI,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE;QAC5C,MAAM,IAAI,QAAQ,KAAK,CAAC,EAAE,CAAC,KAAK;QAChC,MAAM,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,MAAM;QACnC,MAAM,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI;QAC7C,MAAM,KAAK,IAAI,IAAI,IAAI,IAAI;QAC3B,4BAA4B;QAC5B,MAAM,OAAO,IAAI,KAAK;QACtB,MAAM,EAAE,OAAO,OAAO,EAAE,GAAG,WAAW,IAAI,KAAK,QAAQ,IAAI;QAC3D,MAAM,KAAK,IAAI,UAAU,KAAK,IAAI;QAClC,MAAM,KAAK,IAAI,UAAU,KAAK,IAAI;QAClC,MAAM,OAAO,IAAI,KAAK,KAAK,IAAI,IAAI;QACnC,IAAI,GAAW,IAAI;QACnB,IAAI,CAAA,GAAA,uBAAY,AAAZ,EAAa,IAAI,MAAM,IAAI;YAC7B,IAAI,KAAK,IAAI,IAAI;YACjB,IAAI,KAAK,IAAI,IAAI;YACjB,IAAI;YACJ,IAAI;YACJ,IAAI,IAAI,KAAK;QACf,OACE,IAAI,IAAI,IAAI;QAEd,IAAI,CAAA,GAAA,uBAAY,AAAZ,EAAa,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,IAAI,IAAI;QAChD,IAAI,IAAI,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,IAAI,wCAAwC;QAClE,IAAI,CAAA,GAAA,uBAAY,AAAZ,EAAa,GAAG,IAAI,IAAI,IAAI,CAAC;QACjC,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,GAAG,KAAK,KAAK;IACtC;IAEA,QAAA;QACE,OAAO,CAAA,GAAA,mBAAU,AAAV,EAAW,IAAI,CAAC,UAAU;IACnC;IAEA,WAAA;QACE,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,gCAAgC;IAChC,OAAO,KAAgB,EAAvB;QACE,eAAe;QACf,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,EAAE;QAClC,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,MAAM,EAAE;QACnC,MAAM,MAAM,QAAQ,KAAK,CAAC,EAAE,CAAC,MAAM;QACnC,8CAA8C;QAC9C,MAAM,MAAM,IAAI,KAAK,QAAQ,IAAI,KAAK;QACtC,MAAM,MAAM,IAAI,KAAK,QAAQ,IAAI,KAAK;QACtC,OAAO,OAAO;IAChB;IAEA,IAAI,KAAgB,EAApB;QACE,eAAe;QACf,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,MAAM,EAAE;IAC3C;IAEA,SAAS,KAAgB,EAAzB;QACE,eAAe;QACf,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE;IAChD;IAEA,SAAS,MAAc,EAAvB;QACE,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC;IACxC;IAEA,eAAe,MAAc,EAA7B;QACE,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC;IAC9C;IAEA,SAAA;QACE,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,MAAM;IACrC;IAEA,SAAA;QACE,OAAO,IAAI,UAAU,IAAI,CAAC,EAAE,CAAC,MAAM;IACrC;AACD;AACM,MAAM,iBAAiC,AAAhB,aAAA,GAAiB,CAAA;IAC7C,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,aAAa,CAAC,IAAI;IAC9E,IAAI,CAAC,UAAU,IAAI,EAAE,UAAU,IAAI,GAAG,IAAI,UAAU,QAAQ,aAAa,CAAC,IAAI;IAC9E,OAAO;AACT,CAAA;AAGO,MAAM,qBAAqB,CAAC,KAAiB;IAClD,MAAM,IAAI,QAAQ,GAAG;IACrB,MAAM,MAAM,OAAO,MAAM,WAAW,CAAA,GAAA,kBAAW,AAAX,EAAY,KAAK;IACrD,MAAM,gBAAgB,CAAA,GAAA,iCAAkB,AAAlB,EAAmB,KAAK,KAAK,IAAI,CAAA,GAAA,cAAM,AAAN;IACvD,MAAM,IAAI,UAAU,WAAW,CAAC;IAChC,OAAO;AACT;AACO,MAAM,uBAAuB,oBAAoB,SAAS;;;;;AEhdjE,4CAAa;4CAkNA;gDACA;gDACA;4CACA;AArPb;AACA;;AACA;AAEA,0GAA0G;AAC1G,kBAAkB;AAClB,MAAM,CAAC,WAAW,UAAU,GAAmB,AAAhB,aAAA,GAAiB,CAAA,IAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC;QAC9D;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;QAClE;QAAsB;QAAsB;QAAsB;KACnE,CAAC,GAAG,CAAC,CAAA,IAAK,OAAO,IAAG;AAErB,4DAA4D;AAC5D,MAAM,aAAa,aAAA,GAAgB,IAAI,YAAY;AACnD,MAAM,aAAa,aAAA,GAAgB,IAAI,YAAY;AAC7C,MAAO,eAAe,CAAA,GAAA,YAAc,AAAd;IAsB1B,aAAA;QACE,KAAK,CAAC,KAAK,IAAI,IAAI;QAtBrB,wHAAwH;QACxH,qDAAqD;QACrD,yGAAyG;QACzG,sCAAsC;QACtC,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;IAIL;IACA,kBAAkB;IACR,MAAA;QAIR,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI;QAC/E,OAAO;YAAC;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;SAAG;IACzE;IACA,kBAAkB;IACR,IACR,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAC9F,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU,EAFtF;QAIR,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;QACf,IAAI,CAAC,EAAE,GAAG,KAAK;IACjB;IACU,QAAQ,IAAc,EAAE,MAAc,EAAtC;QACR,gGAAgG;QAChG,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,KAAK,UAAU,EAAG;YACxC,UAAU,CAAC,EAAE,GAAG,KAAK,SAAS,CAAC;YAC/B,UAAU,CAAC,EAAE,GAAG,KAAK,SAAS,CAAE,UAAU;QAC5C;QACA,IAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAK;YAC5B,uFAAuF;YACvF,MAAM,OAAO,UAAU,CAAC,IAAI,GAAG,GAAG;YAClC,MAAM,OAAO,UAAU,CAAC,IAAI,GAAG,GAAG;YAClC,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,MAAM,MAAM,KAAK,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,MAAM,MAAM,KAAK,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,MAAM,MAAM;YAC1F,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,MAAM,MAAM,KAAK,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,MAAM,MAAM,KAAK,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,MAAM,MAAM;YAC1F,sFAAsF;YACtF,MAAM,MAAM,UAAU,CAAC,IAAI,EAAE,GAAG;YAChC,MAAM,MAAM,UAAU,CAAC,IAAI,EAAE,GAAG;YAChC,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,KAAK,KAAK,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,KAAK,KAAK,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,KAAK,KAAK;YACtF,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,KAAK,KAAK,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,KAAK,KAAK,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,KAAK,KAAK;YACtF,8DAA8D;YAC9D,MAAM,OAAO,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,IAAI,GAAG;YACtE,MAAM,OAAO,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,MAAM,KAAK,KAAK,UAAU,CAAC,IAAI,EAAE,EAAE,UAAU,CAAC,IAAI,GAAG;YAC5E,UAAU,CAAC,EAAE,GAAG,OAAO;YACvB,UAAU,CAAC,EAAE,GAAG,OAAO;QACzB;QACA,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI;QAC7E,4CAA4C;QAC5C,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;YAC3B,yEAAyE;YACzE,MAAM,UAAU,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI;YACrF,MAAM,UAAU,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI;YACrF,yEAAyE;YACzE,MAAM,OAAO,AAAC,KAAK,KAAO,CAAC,KAAK;YAChC,MAAM,OAAO,AAAC,KAAK,KAAO,CAAC,KAAK;YAChC,6DAA6D;YAC7D,kBAAkB;YAClB,MAAM,OAAO,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,IAAI,SAAS,MAAM,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE;YACrE,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,MAAM,IAAI,SAAS,MAAM,SAAS,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE;YAC1E,MAAM,MAAM,OAAO;YACnB,yEAAyE;YACzE,MAAM,UAAU,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI;YACrF,MAAM,UAAU,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,MAAM,CAAC,IAAI,IAAI;YACrF,MAAM,OAAO,AAAC,KAAK,KAAO,KAAK,KAAO,KAAK;YAC3C,MAAM,OAAO,AAAC,KAAK,KAAO,KAAK,KAAO,KAAK;YAC3C,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACT,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,KAAK,GAAG,KAAK,GAAG,MAAM,GAAG,MAAM,EAAC;YAC5D,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,KAAK,KAAK;YACV,MAAM,MAAM,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,KAAK,SAAS;YACpC,KAAK,CAAA,GAAA,qBAAG,AAAH,EAAI,KAAK,CAAC,KAAK,KAAK,SAAS;YAClC,KAAK,MAAM;QACb;QACA,qDAAqD;QACpD,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACnE,CAAA,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,CAAA,GAAA,qBAAG,AAAH,EAAI,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE,GAAG,GAAG,KAAK,GAAG,KAAK,EAAC;QACpE,IAAI,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;IACvE;IACU,aAAA;QACR,WAAW,IAAI,CAAC;QAChB,WAAW,IAAI,CAAC;IAClB;IACA,UAAA;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;QACjB,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;IACxD;AACD;AAED,MAAM,mBAAmB;IAmBvB,aAAA;QACE,KAAK;QAnBP,sCAAsC;QACtC,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QAIH,IAAI,CAAC,SAAS,GAAG;IACnB;AACD;AAED,MAAM,mBAAmB;IAmBvB,aAAA;QACE,KAAK;QAnBP,sCAAsC;QACtC,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QAIH,IAAI,CAAC,SAAS,GAAG;IACnB;AACD;AAED,MAAM,eAAe;IAmBnB,aAAA;QACE,KAAK;QAnBP,sCAAsC;QACtC,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QACL,IAAA,CAAA,EAAE,GAAG;QAIH,IAAI,CAAC,SAAS,GAAG;IACnB;AACD;AAEM,MAAM,SAAS,aAAA,GAAgB,CAAA,GAAA,wBAAe,AAAf,EAAgB,IAAM,IAAI;AACzD,MAAM,aAAa,aAAA,GAAgB,CAAA,GAAA,wBAAe,AAAf,EAAgB,IAAM,IAAI;AAC7D,MAAM,aAAa,aAAA,GAAgB,CAAA,GAAA,wBAAe,AAAf,EAAgB,IAAM,IAAI;AAC7D,MAAM,SAAS,aAAA,GAAgB,CAAA,GAAA,wBAAe,AAAf,EAAgB,IAAM,IAAI;;;;;yCEpOnD;yCAEA;AAEb;;;CAGG,GACH,4CAAsB;AAzBtB;AACA;AAEA,yBAAyB;AACzB,SAAS,aAAa,IAAc,EAAE,UAAkB,EAAE,KAAa,EAAE,IAAa;IACpF,IAAI,OAAO,KAAK,YAAY,KAAK,YAAY,OAAO,KAAK,YAAY,CAAC,YAAY,OAAO;IACzF,MAAM,OAAO,OAAO;IACpB,MAAM,WAAW,OAAO;IACxB,MAAM,KAAK,OAAO,AAAC,SAAS,OAAQ;IACpC,MAAM,KAAK,OAAO,QAAQ;IAC1B,MAAM,IAAI,OAAO,IAAI;IACrB,MAAM,IAAI,OAAO,IAAI;IACrB,KAAK,SAAS,CAAC,aAAa,GAAG,IAAI;IACnC,KAAK,SAAS,CAAC,aAAa,GAAG,IAAI;AACrC;AAGO,MAAM,MAAM,CAAC,GAAW,GAAW,IAAc,AAAC,IAAI,IAAM,CAAC,IAAI;AAEjE,MAAM,MAAM,CAAC,GAAW,GAAW,IAAc,AAAC,IAAI,IAAM,IAAI,IAAM,IAAI;AAM3E,MAAgB,eAAoC,CAAA,GAAA,aAAO,AAAP;IAcxD,YACW,QAAgB,EAClB,SAAiB,EACf,SAAiB,EACjB,IAAa,CAJxB;QAME,KAAK;QALI,IAAA,CAAA,QAAQ,GAAR;QACF,IAAA,CAAA,SAAS,GAAT;QACE,IAAA,CAAA,SAAS,GAAT;QACA,IAAA,CAAA,IAAI,GAAJ;QATD,IAAA,CAAA,QAAQ,GAAG;QACX,IAAA,CAAA,MAAM,GAAG;QACT,IAAA,CAAA,GAAG,GAAG;QACN,IAAA,CAAA,SAAS,GAAG;QASpB,IAAI,CAAC,MAAM,GAAG,IAAI,WAAW;QAC7B,IAAI,CAAC,IAAI,GAAG,CAAA,GAAA,mBAAU,AAAV,EAAW,IAAI,CAAC,MAAM;IACpC;IACA,OAAO,IAAW,EAAlB;QACE,CAAA,GAAA,gBAAM,AAAN,EAAO,IAAI;QACX,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,GAAG,IAAI;QACvC,OAAO,CAAA,GAAA,gBAAO,AAAP,EAAQ;QACf,MAAM,MAAM,KAAK,MAAM;QACvB,IAAK,IAAI,MAAM,GAAG,MAAM,KAAO;YAC7B,MAAM,OAAO,KAAK,GAAG,CAAC,WAAW,IAAI,CAAC,GAAG,EAAE,MAAM;YACjD,8EAA8E;YAC9E,IAAI,SAAS,UAAU;gBACrB,MAAM,WAAW,CAAA,GAAA,mBAAU,AAAV,EAAW;gBAC5B,MAAO,YAAY,MAAM,KAAK,OAAO,SAAU,IAAI,CAAC,OAAO,CAAC,UAAU;gBACtE;YACF;YACA,OAAO,GAAG,CAAC,KAAK,QAAQ,CAAC,KAAK,MAAM,OAAO,IAAI,CAAC,GAAG;YACnD,IAAI,CAAC,GAAG,IAAI;YACZ,OAAO;YACP,IAAI,IAAI,CAAC,GAAG,KAAK,UAAU;gBACzB,IAAI,CAAC,OAAO,CAAC,MAAM;gBACnB,IAAI,CAAC,GAAG,GAAG;YACb;QACF;QACA,IAAI,CAAC,MAAM,IAAI,KAAK,MAAM;QAC1B,IAAI,CAAC,UAAU;QACf,OAAO,IAAI;IACb;IACA,WAAW,GAAe,EAA1B;QACE,CAAA,GAAA,gBAAM,AAAN,EAAO,IAAI;QACX,CAAA,GAAA,gBAAM,AAAN,EAAO,KAAK,IAAI;QAChB,IAAI,CAAC,QAAQ,GAAG;QAChB,UAAU;QACV,iEAAiE;QACjE,sEAAsE;QACtE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,GAAG,IAAI;QAC7C,IAAI,EAAE,GAAG,EAAE,GAAG,IAAI;QAClB,oCAAoC;QACpC,MAAM,CAAC,MAAM,GAAG;QAChB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,IAAI,CAAC;QAC/B,yEAAyE;QACzE,+CAA+C;QAC/C,IAAI,IAAI,CAAC,SAAS,GAAG,WAAW,KAAK;YACnC,IAAI,CAAC,OAAO,CAAC,MAAM;YACnB,MAAM;QACR;QACA,uCAAuC;QACvC,IAAK,IAAI,IAAI,KAAK,IAAI,UAAU,IAAK,MAAM,CAAC,EAAE,GAAG;QACjD,gGAAgG;QAChG,oFAAoF;QACpF,iDAAiD;QACjD,aAAa,MAAM,WAAW,GAAG,OAAO,IAAI,CAAC,MAAM,GAAG,IAAI;QAC1D,IAAI,CAAC,OAAO,CAAC,MAAM;QACnB,MAAM,QAAQ,CAAA,GAAA,mBAAU,AAAV,EAAW;QACzB,MAAM,MAAM,IAAI,CAAC,SAAS;QAC1B,yFAAyF;QACzF,IAAI,MAAM,GAAG,MAAM,IAAI,MAAM;QAC7B,MAAM,SAAS,MAAM;QACrB,MAAM,QAAQ,IAAI,CAAC,GAAG;QACtB,IAAI,SAAS,MAAM,MAAM,EAAE,MAAM,IAAI,MAAM;QAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK,MAAM,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,EAAE,EAAE;IACpE;IACA,SAAA;QACE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI;QAClC,IAAI,CAAC,UAAU,CAAC;QAChB,MAAM,MAAM,OAAO,KAAK,CAAC,GAAG;QAC5B,IAAI,CAAC,OAAO;QACZ,OAAO;IACT;IACA,WAAW,EAAM,EAAjB;QACE,MAAA,CAAA,KAAO,IAAK,IAAI,CAAC,WAAmB,EAAA;QACpC,GAAG,GAAG,IAAI,IAAI,CAAC,GAAG;QAClB,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,EAAE,GAAG,IAAI;QACnE,GAAG,MAAM,GAAG;QACZ,GAAG,GAAG,GAAG;QACT,GAAG,QAAQ,GAAG;QACd,GAAG,SAAS,GAAG;QACf,IAAI,SAAS,UAAU,GAAG,MAAM,CAAC,GAAG,CAAC;QACrC,OAAO;IACT;AACD;;;;;AEtHD,oBAAoB;AACpB,6CAAgB;AAsChB,4CAAS;AAAT,0CAAiB;AAAjB,2CAAuB;AAAvB,0CAA8B;AAA9B,4CAAoC;AAApC,4CAA4C;AA/C5C,SAAS,OAAO,CAAS;IACvB,IAAI,CAAC,OAAO,aAAa,CAAC,MAAM,IAAI,GAAG,MAAM,IAAI,MAAM,CAAA,+BAAA,EAAkC,EAAC,CAAE;AAC9F;AAEA,SAAS,KAAK,CAAU;IACtB,IAAI,OAAO,MAAM,WAAW,MAAM,IAAI,MAAM,CAAA,sBAAA,EAAyB,EAAC,CAAE;AAC1E;AAGM,SAAU,QAAQ,CAAU;IAChC,OACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,WAAW,CAAC,IAAI,KAAK;AAElE;AAEA,SAAS,MAAM,CAAyB,EAAE,GAAG,OAAiB;IAC5D,IAAI,CAAC,QAAQ,IAAI,MAAM,IAAI,MAAM;IACjC,IAAI,QAAQ,MAAM,GAAG,KAAK,CAAC,QAAQ,QAAQ,CAAC,EAAE,MAAM,GAClD,MAAM,IAAI,MAAM,CAAA,8BAAA,EAAiC,QAAO,gBAAA,EAAmB,EAAE,MAAM,CAAA,CAAE;AACzF;AAQA,SAAS,KAAK,CAAO;IACnB,IAAI,OAAO,MAAM,cAAc,OAAO,EAAE,MAAM,KAAK,YACjD,MAAM,IAAI,MAAM;IAClB,OAAO,EAAE,SAAS;IAClB,OAAO,EAAE,QAAQ;AACnB;AAEA,SAAS,OAAO,QAAa,EAAE,gBAAgB,IAAI;IACjD,IAAI,SAAS,SAAS,EAAE,MAAM,IAAI,MAAM;IACxC,IAAI,iBAAiB,SAAS,QAAQ,EAAE,MAAM,IAAI,MAAM;AAC1D;AACA,SAAS,OAAO,GAAQ,EAAE,QAAa;IACrC,MAAM;IACN,MAAM,MAAM,SAAS,SAAS;IAC9B,IAAI,IAAI,MAAM,GAAG,KACf,MAAM,IAAI,MAAM,CAAA,sDAAA,EAAyD,IAAG,CAAE;AAElF;AAIA,MAAM,SAAS;IAAE;IAAQ;IAAM;IAAO;IAAM;IAAQ;AAAM;kBAC3C;;;AElDf,oEAAA,GAEA,oFAAoF;AACpF,sEAAsE;AACtE,kEAAkE;AAClE,8DAA8D;AAC9D,+DAA+D;AAC/D,2EAA2E;;;AAG3E,0CAA0C;AAC1C,oFAAoF;AACpF,6CAAgB;wCAYH;yCACA;gDAIA;0CAIA;0CAEA;0CAGA;8CAEA;kDAMA;AAEb,qCAAqC;AACrC,gDAAgB;AAUhB;;CAEG,GACH,gDAAgB;AAmBhB;;CAEG,GACH,gDAAgB;8CAqBH;AAEb,6DAA6D;AAC7D,+CAAsB;AAgBtB;;CAEG,GACH,iDAAgB;AAMhB;;;;CAIG,GACH,6CAAgB;AAMhB;;CAEG,GACH,iDAAgB;AAgBhB,kDAAkD;AAClD,0CAAsB;AAwCtB,+CAAgB;AAYhB,qDAAgB;AAShB,6DAAgB;AAWhB,gEAAgB;AAWhB;;CAEG,GACH,iDAAgB;AAlPhB;AACA;AAGM,SAAU,QAAQ,CAAU;IAChC,OACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,WAAW,CAAC,IAAI,KAAK;AAElE;AAOO,MAAM,KAAK,CAAC,MAAoB,IAAI,WAAW,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,UAAU;AACzF,MAAM,MAAM,CAAC,MAClB,IAAI,YAAY,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,KAAK,KAAK,CAAC,IAAI,UAAU,GAAG;AAGnE,MAAM,aAAa,CAAC,MACzB,IAAI,SAAS,IAAI,MAAM,EAAE,IAAI,UAAU,EAAE,IAAI,UAAU;AAGlD,MAAM,OAAO,CAAC,MAAc,QAAkB,AAAC,QAAS,KAAK,QAAW,SAAS;AAEjF,MAAM,OAAO,CAAC,MAAc,QACjC,AAAC,QAAQ,QAAU,AAAC,SAAU,KAAK,UAAY;AAE1C,MAAM,OAAO,IAAI,WAAW,IAAI,YAAY;IAAC;CAAW,EAAE,MAAM,CAAC,CAAC,EAAE,KAAK;AAEzE,MAAM,WAAW,CAAC,OACvB,AAAE,QAAQ,KAAM,aACf,AAAC,QAAQ,IAAK,WACd,AAAC,SAAS,IAAK,SACf,AAAC,SAAS,KAAM;AAEZ,MAAM,eAAe,OAAO,CAAC,IAAc,IAAI,CAAC,IAAc,SAAS;AAGxE,SAAU,WAAW,GAAgB;IACzC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAC9B,GAAG,CAAC,EAAE,GAAG,SAAS,GAAG,CAAC,EAAE;AAE5B;AAEA,wDAAwD;AACxD,MAAM,QAAQ,aAAA,GAAgB,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAI,CAAC,GAAG,IAC5D,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;AAKvB,SAAU,WAAW,KAAiB;IAC1C,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,oCAAoC;IACpC,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,OAAO,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;IAExB,OAAO;AACT;AAEA,iEAAiE;AACjE,MAAM,SAAS;IAAE,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;AAAG;AAChE,SAAS,cAAc,IAAY;IACjC,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAO,OAAO,EAAE;IACnE,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAQ,CAAA,OAAO,EAAE,GAAG,EAAA;IACvE,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAQ,CAAA,OAAO,EAAE,GAAG,EAAA;IACvE;AACF;AAKM,SAAU,WAAW,GAAW;IACpC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,8BAA8B,OAAO;IAClF,MAAM,KAAK,IAAI,MAAM;IACrB,MAAM,KAAK,KAAK;IAChB,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,4DAA4D;IACxF,MAAM,QAAQ,IAAI,WAAW;IAC7B,IAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,MAAM,MAAM,EAAG;QAC/C,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC;QACxC,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC,KAAK;QAC7C,IAAI,OAAO,aAAa,OAAO,WAAW;YACxC,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;YAClC,MAAM,IAAI,MAAM,iDAAiD,OAAO,gBAAgB;QAC1F;QACA,KAAK,CAAC,GAAG,GAAG,KAAK,KAAK;IACxB;IACA,OAAO;AACT;AAKO,MAAM,WAAW,WAAa;AAG9B,eAAe,UAAU,KAAa,EAAE,IAAY,EAAE,EAAuB;IAClF,IAAI,KAAK,KAAK,GAAG;IACjB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;QAC9B,GAAG;QACH,+FAA+F;QAC/F,MAAM,OAAO,KAAK,GAAG,KAAK;QAC1B,IAAI,QAAQ,KAAK,OAAO,MAAM;QAC9B,MAAM;QACN,MAAM;IACR;AACF;AASM,SAAU,YAAY,GAAW;IACrC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,CAAA,iCAAA,EAAoC,OAAO,IAAG,CAAE;IAC7F,OAAO,IAAI,WAAW,IAAI,cAAc,MAAM,CAAC,OAAO,4BAA4B;AACpF;AAQM,SAAU,QAAQ,IAAW;IACjC,IAAI,OAAO,SAAS,UAAU,OAAO,YAAY;IACjD,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,OAAO;AACT;AAKM,SAAU,YAAY,GAAG,MAAoB;IACjD,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,CAAA,GAAA,eAAM,AAAN,EAAO;QACP,OAAO,EAAE,MAAM;IACjB;IACA,MAAM,MAAM,IAAI,WAAW;IAC3B,IAAK,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QAC/C,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,IAAI,GAAG,CAAC,GAAG;QACX,OAAO,EAAE,MAAM;IACjB;IACA,OAAO;AACT;AAGM,MAAgB;IAqBpB,0CAA0C;IAC1C,QAAA;QACE,OAAO,IAAI,CAAC,UAAU;IACxB;AACD;AAaD,MAAM,QAAQ,CAAA,EAAG,QAAQ;AAEnB,SAAU,UACd,QAAY,EACZ,IAAS;IAET,IAAI,SAAS,aAAa,MAAM,IAAI,CAAC,UAAU,mBAC7C,MAAM,IAAI,MAAM;IAClB,MAAM,SAAS,OAAO,MAAM,CAAC,UAAU;IACvC,OAAO;AACT;AAIM,SAAU,gBAAmC,QAAuB;IACxE,MAAM,QAAQ,CAAC,MAA2B,WAAW,MAAM,CAAC,QAAQ,MAAM,MAAM;IAChF,MAAM,MAAM;IACZ,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,IAAM;IACrB,OAAO;AACT;AAEM,SAAU,wBACd,QAA+B;IAE/B,MAAM,QAAQ,CAAC,KAAY,OAAyB,SAAS,MAAM,MAAM,CAAC,QAAQ,MAAM,MAAM;IAC9F,MAAM,MAAM,SAAS,CAAA;IACrB,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,CAAC,OAAY,SAAS;IACrC,OAAO;AACT;AAEM,SAAU,2BACd,QAAkC;IAElC,MAAM,QAAQ,CAAC,KAAY,OAAyB,SAAS,MAAM,MAAM,CAAC,QAAQ,MAAM,MAAM;IAC9F,MAAM,MAAM,SAAS,CAAA;IACrB,MAAM,SAAS,GAAG,IAAI,SAAS;IAC/B,MAAM,QAAQ,GAAG,IAAI,QAAQ;IAC7B,MAAM,MAAM,GAAG,CAAC,OAAY,SAAS;IACrC,OAAO;AACT;AAKM,SAAU,YAAY,cAAc,EAAE;IAC1C,IAAI,CAAA,GAAA,cAAM,AAAN,KAAU,OAAO,CAAA,GAAA,cAAM,AAAN,EAAO,eAAe,KAAK,YAC9C,OAAO,CAAA,GAAA,cAAM,AAAN,EAAO,eAAe,CAAC,IAAI,WAAW;IAE/C,MAAM,IAAI,MAAM;AAClB;;;;;4CE5Pa;AAAN,MAAM,SACX,OAAO,eAAe,YAAY,YAAY,aAAa,WAAW,MAAM,GAAG;;;;;AEsDjF,kBAAkB;AAClB,6CACE;AADF,2CACW;AADX,2CACkB;AADlB,2CAEE;AAFF,2CAES;AAFT,4CAGE;AAHF,4CAGU;AAHV,4CAGkB;AAHlB,4CAG0B;AAH1B,6CAIE;AAJF,6CAIW;AAJX,4CAKE;AALF,4CAKU;AALV,4CAKkB;AALlB,4CAK0B;AAL1B,yCAME;AANF,2CAMO;AANP,2CAMc;AANd,2CAMqB;AANrB,2CAM4B;AAN5B,2CAMmC;AANnC,2CAM0C;AAjE1C,MAAM,aAAa,aAAA,GAAgB,OAAO,KAAK,KAAK;AACpD,MAAM,OAAO,aAAA,GAAgB,OAAO;AAEpC,+EAA+E;AAC/E,SAAS,QAAQ,CAAS,EAAE,KAAK,KAAK;IACpC,IAAI,IAAI,OAAO;QAAE,GAAG,OAAO,IAAI;QAAa,GAAG,OAAO,AAAC,KAAK,OAAQ;IAAW;IAC/E,OAAO;QAAE,GAAG,OAAO,AAAC,KAAK,OAAQ,cAAc;QAAG,GAAG,OAAO,IAAI,cAAc;IAAC;AACjF;AAEA,SAAS,MAAM,GAAa,EAAE,KAAK,KAAK;IACtC,IAAI,KAAK,IAAI,YAAY,IAAI,MAAM;IACnC,IAAI,KAAK,IAAI,YAAY,IAAI,MAAM;IACnC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;QACnC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,QAAQ,GAAG,CAAC,EAAE,EAAE;QACjC,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG;YAAC;YAAG;SAAE;IACzB;IACA,OAAO;QAAC;QAAI;KAAG;AACjB;AAEA,MAAM,QAAQ,CAAC,GAAW,IAAc,AAAC,OAAO,MAAM,MAAM,OAAQ,OAAO,MAAM;AACjF,uBAAuB;AACvB,MAAM,QAAQ,CAAC,GAAW,IAAY,IAAc,MAAM;AAC1D,MAAM,QAAQ,CAAC,GAAW,GAAW,IAAc,AAAC,KAAM,KAAK,IAAO,MAAM;AAC5E,oCAAoC;AACpC,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,MAAM,IAAM,KAAM,KAAK;AAC5E,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAM,KAAK,IAAO,MAAM;AAC7E,gEAAgE;AAChE,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAM,KAAK,IAAO,MAAO,IAAI;AAClF,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,MAAO,IAAI,KAAQ,KAAM,KAAK;AACnF,+CAA+C;AAC/C,MAAM,UAAU,CAAC,IAAY,IAAc;AAC3C,MAAM,UAAU,CAAC,GAAW,KAAe;AAC3C,mCAAmC;AACnC,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAK,IAAM,MAAO,KAAK;AAC5E,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAK,IAAM,MAAO,KAAK;AAC5E,+DAA+D;AAC/D,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAM,IAAI,KAAQ,MAAO,KAAK;AACnF,MAAM,SAAS,CAAC,GAAW,GAAW,IAAc,AAAC,KAAM,IAAI,KAAQ,MAAO,KAAK;AAEnF,8EAA8E;AAC9E,0EAA0E;AAC1E,SAAS,IAAI,EAAU,EAAE,EAAU,EAAE,EAAU,EAAE,EAAU;IACzD,MAAM,IAAI,AAAC,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA;IAC/B,OAAO;QAAE,GAAG,AAAC,KAAK,KAAM,CAAA,AAAC,IAAI,KAAK,KAAM,CAAA,IAAM;QAAG,GAAG,IAAI;IAAC;AAC3D;AACA,qCAAqC;AACrC,MAAM,QAAQ,CAAC,IAAY,IAAY,KAAe,AAAC,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA;AACxF,MAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,KAClD,AAAC,KAAK,KAAK,KAAM,CAAA,AAAC,MAAM,KAAK,KAAM,CAAA,IAAM;AAC3C,MAAM,QAAQ,CAAC,IAAY,IAAY,IAAY,KACjD,AAAC,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA;AACjD,MAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,IAAY,KAC9D,AAAC,KAAK,KAAK,KAAK,KAAM,CAAA,AAAC,MAAM,KAAK,KAAM,CAAA,IAAM;AAChD,MAAM,QAAQ,CAAC,IAAY,IAAY,IAAY,IAAY,KAC7D,AAAC,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA,IAAM,CAAA,OAAO,CAAA;AAC9D,MAAM,QAAQ,CAAC,KAAa,IAAY,IAAY,IAAY,IAAY,KAC1E,AAAC,KAAK,KAAK,KAAK,KAAK,KAAM,CAAA,AAAC,MAAM,KAAK,KAAM,CAAA,IAAM;AAWrD,kBAAkB;AAClB,MAAM,MAAM;IACV;IAAS;IAAO;IAChB;IAAO;IACP;IAAQ;IAAQ;IAAQ;IACxB;IAAS;IACT;IAAQ;IAAQ;IAAQ;IACxB;IAAK;IAAO;IAAO;IAAO;IAAO;IAAO;AACzC;kBACc;;;AE5Ef,oEAAA,GACA,8DAA8D;;;AAgG9D,oFAAoF;AACpF,oDAAgB;AAhGhB;AACA;AAEA;AAEA,qEAAqE;AACrE,kBAAkB;AAClB,MAAM,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO;AAetE,8EAA8E;AAC9E,MAAM,iBAAiB;IAAE,QAAQ;AAAI;AAErC,SAAS,aAAa,KAAgB;IACpC,MAAM,OAAO,CAAA,GAAA,sBAAa,AAAb,EAAc;IAC3B,SAAG,cAAc,CACf,OACA;QACE,MAAM;QACN,GAAG;QACH,GAAG;QACH,aAAa;IACd,GACD;QACE,mBAAmB;QACnB,QAAQ;QACR,SAAS;QACT,YAAY;IACb;IAEH,eAAe;IACf,OAAO,OAAO,MAAM,CAAC;QAAE,GAAG,IAAI;IAAA;AAChC;AAoDM,SAAU,eAAe,QAAmB;IAChD,MAAM,QAAQ,aAAa;IAC3B,MAAM,EACJ,EAAE,EACF,GAAG,WAAW,EACd,SAAS,OAAO,EAChB,MAAM,KAAK,EACX,WAAW,EACX,WAAW,EACX,GAAG,QAAQ,EACZ,GAAG;IACJ,MAAM,OAAO,OAAQ,OAAO,cAAc,KAAK;IAC/C,MAAM,OAAO,GAAG,MAAM,EAAE,qBAAqB;IAE7C,YAAY;IACZ,MAAM,UACJ,MAAM,OAAO,IACZ,CAAA,CAAC,GAAW;QACX,IAAI;YACF,OAAO;gBAAE,SAAS;gBAAM,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;YAAG;QACvD,EAAE,OAAO,GAAG;YACV,OAAO;gBAAE,SAAS;gBAAO,OAAO;YAAG;QACrC;IACF,CAAA;IACF,MAAM,oBAAoB,MAAM,iBAAiB,IAAK,CAAA,CAAC,QAAsB,KAAA,GAAQ,OAAO;IAC5F,MAAM,SACJ,MAAM,MAAM,IACX,CAAA,CAAC,MAAkB,KAAiB;QACnC,IAAI,IAAI,MAAM,IAAI,QAAQ,MAAM,IAAI,MAAM;QAC1C,OAAO;IACT,CAAA,GAAI,OAAO;IACb,MAAM,QAAQ,CAAC,IAAc,OAAO,MAAM,YAAY,MAAM,GAAG,aAAa;IAC5E,MAAM,UAAU,CAAC,GAAW,MAAgB,MAAM,MAAM,MAAM,QAAQ,IAAI,KAAK,kBAAkB;IACjG,MAAM,eAAe,CAAC,IAAc,MAAM,OAAO,QAAQ,GAAG,OAAO,mBAAmB;IACtF,SAAS,cAAc,CAAS,EAAE,GAAW;QAC3C,kBAAkB;QAClB,IAAI,QAAQ,GAAG,MAAM,OAAO;QAC5B,MAAM,IAAI,MAAM,CAAA,wBAAA,EAA2B,IAAG,MAAA,EAAS,OAAO,EAAC,CAAA,EAAI,EAAC,CAAE;IACxE;IACA,SAAS,UAAU,CAAS;QAC1B,0BAA0B;QAC1B,OAAO,MAAM,MAAM,IAAI,cAAc,GAAG,cAAc,sCAAsC;IAC9F;IACA,MAAM,mBAAmB,IAAI;IAC7B,SAAS,QAAQ,KAAc;QAC7B,IAAI,CAAE,CAAA,iBAAiB,KAAA,GAAQ,MAAM,IAAI,MAAM;IACjD;IACA,qFAAqF;IACrF,2EAA2E;IAC3E,MAAM;QAIJ,YACW,EAAU,EACV,EAAU,EACV,EAAU,EACV,EAAU,CAJrB;YACW,IAAA,CAAA,EAAE,GAAF;YACA,IAAA,CAAA,EAAE,GAAF;YACA,IAAA,CAAA,EAAE,GAAF;YACA,IAAA,CAAA,EAAE,GAAF;YAET,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM;YACvC,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM;YACvC,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM;YACvC,IAAI,CAAC,aAAa,KAAK,MAAM,IAAI,MAAM;QACzC;QAEA,IAAI,IAAJ;YACE,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC;QAC1B;QACA,IAAI,IAAJ;YACE,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC;QAC1B;QAEA,OAAO,WAAW,CAAsB,EAAxC;YACE,IAAI,aAAa,OAAO,MAAM,IAAI,MAAM;YACxC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,KAAK,CAAA;YACtB,IAAI,CAAC,aAAa,MAAM,CAAC,aAAa,IAAI,MAAM,IAAI,MAAM;YAC1D,OAAO,IAAI,MAAM,GAAG,GAAG,KAAK,KAAK,IAAI;QACvC;QACA,OAAO,WAAW,MAAe,EAAjC;YACE,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,GAAG,CAAC,CAAC,IAAM,EAAE,EAAE;YACnD,OAAO,OAAO,GAAG,CAAC,CAAC,GAAG,IAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,EAAE,GAAG,GAAG,CAAC,MAAM,UAAU;QACxE;QAOA,0CAA0C;QAC1C,eAAe,UAAkB,EAAjC;YACE,IAAI,CAAC,YAAY,GAAG;YACpB,iBAAiB,MAAM,CAAC,IAAI;QAC9B;QACA,iEAAiE;QACjE,oCAAoC;QACpC,iBAAA;YACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;YACjB,IAAI,IAAI,CAAC,GAAG,IAAI,MAAM,IAAI,MAAM,oBAAoB,mCAAmC;YACvF,uDAAuD;YACvD,+EAA+E;YAC/E,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI;YAC3C,MAAM,KAAK,KAAK,IAAI,IAAI,KAAK;YAC7B,MAAM,KAAK,KAAK,IAAI,IAAI,KAAK;YAC7B,MAAM,KAAK,KAAK,IAAI,IAAI,KAAK;YAC7B,MAAM,KAAK,KAAK,KAAK,KAAK,KAAK;YAC/B,MAAM,MAAM,KAAK,KAAK,IAAI,MAAM;YAChC,MAAM,OAAO,KAAK,KAAK,KAAK,MAAM,MAAM,eAAe;YACvD,MAAM,QAAQ,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,OAAO,aAAa;YAC/D,IAAI,SAAS,OAAO,MAAM,IAAI,MAAM;YACpC,6EAA6E;YAC7E,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,KAAK,KAAK,IAAI;YACpB,IAAI,OAAO,IAAI,MAAM,IAAI,MAAM;QACjC;QAEA,gCAAgC;QAChC,OAAO,KAAY,EAAnB;YACE,QAAQ;YACR,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI;YACvC,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG;YACnC,MAAM,OAAO,KAAK,KAAK;YACvB,MAAM,OAAO,KAAK,KAAK;YACvB,MAAM,OAAO,KAAK,KAAK;YACvB,MAAM,OAAO,KAAK,KAAK;YACvB,OAAO,SAAS,QAAQ,SAAS;QACnC;QAEU,MAAA;YACR,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI;QAC/B;QAEA,SAAA;YACE,8DAA8D;YAC9D,OAAO,IAAI,MAAM,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE;QAClE;QAEA,yCAAyC;QACzC,sFAAsF;QACtF,oCAAoC;QACpC,SAAA;YACE,MAAM,EAAE,CAAC,EAAE,GAAG;YACd,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI;YACvC,MAAM,IAAI,KAAK,KAAK,KAAK,UAAU;YACnC,MAAM,IAAI,KAAK,KAAK,KAAK,UAAU;YACnC,MAAM,IAAI,KAAK,MAAM,KAAK,KAAK,MAAM,YAAY;YACjD,MAAM,IAAI,KAAK,IAAI,IAAI,UAAU;YACjC,MAAM,OAAO,KAAK;YAClB,MAAM,IAAI,KAAK,KAAK,OAAO,QAAQ,IAAI,IAAI,mBAAmB;YAC9D,MAAM,IAAI,IAAI,GAAG,UAAU;YAC3B,MAAM,IAAI,IAAI,GAAG,UAAU;YAC3B,MAAM,IAAI,IAAI,GAAG,UAAU;YAC3B,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI;QAC/B;QAEA,0CAA0C;QAC1C,sFAAsF;QACtF,+BAA+B;QAC/B,IAAI,KAAY,EAAhB;YACE,QAAQ;YACR,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;YACjB,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG,IAAI;YAC/C,MAAM,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,IAAI,EAAE,EAAE,GAAG;YAC3C,8DAA8D;YAC9D,yFAAyF;YACzF,yBAAyB;YACzB,8DAA8D;YAC9D,IAAI,MAAM,OAAO,KAAK;gBACpB,MAAM,IAAI,KAAK,AAAC,CAAA,KAAK,EAAA,IAAO,CAAA,KAAK,EAAA;gBACjC,MAAM,IAAI,KAAK,AAAC,CAAA,KAAK,EAAA,IAAO,CAAA,KAAK,EAAA;gBACjC,MAAM,IAAI,KAAK,IAAI;gBACnB,IAAI,MAAM,KAAK,OAAO,IAAI,CAAC,MAAM,IAAI,iDAAiD;gBACtF,MAAM,IAAI,KAAK,KAAK,MAAM;gBAC1B,MAAM,IAAI,KAAK,KAAK,MAAM;gBAC1B,MAAM,IAAI,IAAI;gBACd,MAAM,IAAI,IAAI;gBACd,MAAM,IAAI,IAAI;gBACd,MAAM,KAAK,KAAK,IAAI;gBACpB,MAAM,KAAK,KAAK,IAAI;gBACpB,MAAM,KAAK,KAAK,IAAI;gBACpB,MAAM,KAAK,KAAK,IAAI;gBACpB,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI;YAC/B;YACA,MAAM,IAAI,KAAK,KAAK,KAAK,YAAY;YACrC,MAAM,IAAI,KAAK,KAAK,KAAK,YAAY;YACrC,MAAM,IAAI,KAAK,KAAK,IAAI,KAAK,cAAc;YAC3C,MAAM,IAAI,KAAK,KAAK,KAAK,YAAY;YACrC,MAAM,IAAI,KAAK,AAAC,CAAA,KAAK,EAAA,IAAO,CAAA,KAAK,EAAA,IAAM,IAAI,IAAI,0BAA0B;YACzE,MAAM,IAAI,IAAI,GAAG,UAAU;YAC3B,MAAM,IAAI,IAAI,GAAG,UAAU;YAC3B,MAAM,IAAI,KAAK,IAAI,IAAI,IAAI,YAAY;YACvC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YACnC,MAAM,KAAK,KAAK,IAAI,IAAI,WAAW;YAEnC,OAAO,IAAI,MAAM,IAAI,IAAI,IAAI;QAC/B;QAEA,SAAS,KAAY,EAArB;YACE,OAAO,IAAI,CAAC,GAAG,CAAC,MAAM,MAAM;QAC9B;QAEQ,KAAK,CAAS,EAAd;YACN,OAAO,KAAK,UAAU,CAAC,IAAI,EAAE,kBAAkB,GAAG,MAAM,UAAU;QACpE;QAEA,gCAAgC;QAChC,SAAS,MAAc,EAAvB;YACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,QAAQ;YACjD,OAAO,MAAM,UAAU,CAAC;gBAAC;gBAAG;aAAE,CAAC,CAAC,EAAE;QACpC;QAEA,mEAAmE;QACnE,iEAAiE;QACjE,gDAAgD;QAChD,8CAA8C;QAC9C,eAAe,MAAc,EAA7B;YACE,IAAI,IAAI,UAAU,SAAS,wBAAwB;YACnD,IAAI,MAAM,KAAK,OAAO;YACtB,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,MAAM,KAAK,OAAO,IAAI;YAC5C,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;YACzC,OAAO,KAAK,YAAY,CAAC,IAAI,EAAE;QACjC;QAEA,qCAAqC;QACrC,mEAAmE;QACnE,gCAAgC;QAChC,8DAA8D;QAC9D,eAAA;YACE,OAAO,IAAI,CAAC,cAAc,CAAC,UAAU,GAAG;QAC1C;QAEA,iEAAiE;QACjE,yCAAyC;QACzC,gBAAA;YACE,OAAO,KAAK,YAAY,CAAC,IAAI,EAAE,aAAa,GAAG;QACjD;QAEA,yDAAyD;QACzD,+DAA+D;QAC/D,SAAS,EAAW,EAApB;YACE,MAAM,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,IAAI,CAAC,EAAE,GAAG,IAAI;YACpC,MAAM,MAAM,IAAI,CAAC,GAAG;YACpB,IAAI,MAAM,MAAM,KAAK,MAAM,MAAO,GAAG,GAAG,CAAC,IAAe,2BAA2B;YACnF,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,KAAK,KAAK,IAAI;YACpB,IAAI,KAAK,OAAO;gBAAE,GAAG;gBAAK,GAAG;YAAG;YAChC,IAAI,OAAO,KAAK,MAAM,IAAI,MAAM;YAChC,OAAO;gBAAE,GAAG;gBAAI,GAAG;YAAE;QACvB;QAEA,gBAAA;YACE,MAAM,EAAE,GAAG,QAAQ,EAAE,GAAG;YACxB,IAAI,aAAa,KAAK,OAAO,IAAI;YACjC,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B;QAEA,+CAA+C;QAC/C,gCAAgC;QAChC,OAAO,QAAQ,GAAQ,EAAE,SAAS,KAAK,EAAvC;YACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG;YACjB,MAAM,MAAM,GAAG,KAAK;YACpB,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,YAAY,KAAK,MAAM,0BAA0B;YACnE,MAAM,SAAS,IAAI,KAAK,IAAI,kCAAkC;YAC9D,MAAM,WAAW,GAAG,CAAC,MAAM,EAAE,EAAE,mBAAmB;YAClD,MAAM,CAAC,MAAM,EAAE,GAAG,WAAW,MAAO,iBAAiB;YACrD,MAAM,IAAI,SAAG,eAAe,CAAC;YAC7B,IAAI,MAAM;iBAGR,6CAA6C;YAC7C,IAAI,QAAQ,cAAc,GAAG,OAAO,gDAAgD;iBAC/E,cAAc,GAAG,GAAG,KAAK,GAAG,iDAAiD;YAGpF,sFAAsF;YACtF,0EAA0E;YAC1E,MAAM,KAAK,KAAK,IAAI,IAAI,qCAAqC;YAC7D,MAAM,IAAI,KAAK,KAAK,MAAM,aAAa;YACvC,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,gBAAgB;YAC5C,IAAI,EAAE,OAAO,EAAE,OAAO,CAAC,EAAE,GAAG,QAAQ,GAAG,IAAI,SAAS;YACpD,IAAI,CAAC,SAAS,MAAM,IAAI,MAAM;YAC9B,MAAM,SAAS,AAAC,CAAA,IAAI,GAAA,MAAS,KAAK,yDAAyD;YAC3F,MAAM,gBAAgB,AAAC,CAAA,WAAW,IAAA,MAAU,GAAG,gBAAgB;YAC/D,IAAI,CAAC,UAAU,MAAM,OAAO,eAC1B,2BAA2B;YAC3B,MAAM,IAAI,MAAM;YAClB,IAAI,kBAAkB,QAAQ,IAAI,KAAK,CAAC,IAAI,iCAAiC;YAC7E,OAAO,MAAM,UAAU,CAAC;gBAAE;gBAAG;YAAC;QAChC;QACA,OAAO,eAAe,OAAY,EAAlC;YACE,OAAO,qBAAqB,SAAS,KAAK;QAC5C;QACA,aAAA;YACE,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,QAAQ;YAC9B,MAAM,QAAQ,SAAG,eAAe,CAAC,GAAG,GAAG,KAAK,GAAG,gCAAgC;YAC/E,KAAK,CAAC,MAAM,MAAM,GAAG,EAAE,IAAI,IAAI,MAAM,OAAO,GAAG,2CAA2C;YAC1F,OAAO,OAAO,4CAA4C;QAC5D;QACA,QAAA;YACE,OAAO,SAAG,UAAU,CAAC,IAAI,CAAC,UAAU,KAAK,0CAA0C;QACrF;I;IAhQgB,MAAA,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,EAAE,MAAM,EAAE,EAAE,KAAK,KAAK,MAAM,EAAE,GAAG,MAAM,EAAE;IAClE,MAAA,IAAI,GAAG,IAAI,MAAM,KAAK,KAAK,KAAK,MAAM,aAAa;IAiQrE,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,CAAC,EAAE,GAAG;IAC7B,MAAM,OAAO,CAAA,GAAA,aAAI,AAAJ,EAAK,OAAO,cAAc;IAEvC,SAAS,KAAK,CAAS;QACrB,OAAO,CAAA,GAAA,cAAG,AAAH,EAAI,GAAG;IAChB;IACA,qCAAqC;IACrC,SAAS,QAAQ,IAAgB;QAC/B,OAAO,KAAK,SAAG,eAAe,CAAC;IACjC;IAEA,8EAAA,GACA,SAAS,qBAAqB,GAAQ;QACpC,MAAM,MAAM;QACZ,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,eAAe,KAAK;QACtC,mFAAmF;QACnF,qDAAqD;QACrD,MAAM,SAAS,CAAA,GAAA,oBAAW,AAAX,EAAY,sBAAsB,MAAM,MAAM,IAAI;QACjE,MAAM,OAAO,kBAAkB,OAAO,KAAK,CAAC,GAAG,OAAO,oCAAoC;QAC1F,MAAM,SAAS,OAAO,KAAK,CAAC,KAAK,IAAI,MAAM,2CAA2C;QACtF,MAAM,SAAS,QAAQ,OAAO,4BAA4B;QAC1D,MAAM,QAAQ,EAAE,QAAQ,CAAC,SAAS,wCAAwC;QAC1E,MAAM,aAAa,MAAM,UAAU,IAAI,4BAA4B;QACnE,OAAO;YAAE;YAAM;YAAQ;YAAQ;YAAO;QAAU;IAClD;IAEA,iGAAiG;IACjG,SAAS,aAAa,OAAY;QAChC,OAAO,qBAAqB,SAAS,UAAU;IACjD;IAEA,8CAA8C;IAC9C,SAAS,mBAAmB,UAAe,IAAI,YAAY,EAAE,GAAG,IAAkB;QAChF,MAAM,MAAM,SAAG,WAAW,IAAI;QAC9B,OAAO,QAAQ,MAAM,OAAO,KAAK,CAAA,GAAA,oBAAW,AAAX,EAAY,WAAW,UAAU,CAAC,CAAC;IACtE;IAEA,iDAAA,GACA,SAAS,KAAK,GAAQ,EAAE,OAAY,EAAE,UAA6B,CAAA,CAAE;QACnE,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,WAAW;QAC7B,IAAI,SAAS,MAAM,QAAQ,MAAM,qBAAqB;QACtD,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,qBAAqB;QAC5D,MAAM,IAAI,mBAAmB,QAAQ,OAAO,EAAE,QAAQ,MAAM,oCAAoC;QAChG,MAAM,IAAI,EAAE,QAAQ,CAAC,GAAG,UAAU,IAAI,SAAS;QAC/C,MAAM,IAAI,mBAAmB,QAAQ,OAAO,EAAE,GAAG,YAAY,MAAM,kBAAkB;QACrF,MAAM,IAAI,KAAK,IAAI,IAAI,SAAS,wBAAwB;QACxD,UAAU,IAAI,aAAa;QAC3B,MAAM,MAAM,SAAG,WAAW,CAAC,GAAG,SAAG,eAAe,CAAC,GAAG,GAAG,KAAK;QAC5D,OAAO,CAAA,GAAA,oBAAW,AAAX,EAAY,UAAU,KAAK,cAAc,IAAI,oBAAoB;IAC1E;IAEA,MAAM,aAAkD;IACxD,SAAS,OAAO,GAAQ,EAAE,GAAQ,EAAE,SAAc,EAAE,UAAU,UAAU;QACtE,MAAM,EAAE,OAAO,EAAE,MAAM,EAAE,GAAG;QAC5B,MAAM,MAAM,GAAG,KAAK,EAAE,0EAA0E;QAChG,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,aAAa,KAAK,IAAI,MAAM,yCAAyC;QACvF,MAAM,CAAA,GAAA,oBAAW,AAAX,EAAY,WAAW;QAC7B,IAAI,SAAS,MAAM,QAAQ,MAAM,qBAAqB;QAEtD,MAAM,IAAI,SAAG,eAAe,CAAC,IAAI,KAAK,CAAC,KAAK,IAAI;QAChD,6EAA6E;QAC7E,4EAA4E;QAC5E,IAAI,GAAG,GAAG;QACV,IAAI;YACF,IAAI,MAAM,OAAO,CAAC,WAAW;YAC7B,IAAI,MAAM,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,MAAM;YACrC,KAAK,EAAE,cAAc,CAAC,IAAI,4BAA4B;QACxD,EAAE,OAAO,OAAO;YACd,OAAO;QACT;QACA,IAAI,CAAC,UAAU,EAAE,YAAY,IAAI,OAAO;QAExC,MAAM,IAAI,mBAAmB,SAAS,EAAE,UAAU,IAAI,EAAE,UAAU,IAAI;QACtE,MAAM,MAAM,EAAE,GAAG,CAAC,EAAE,cAAc,CAAC;QACnC,4BAA4B;QAC5B,OAAO,IAAI,QAAQ,CAAC,IAAI,aAAa,GAAG,MAAM,CAAC,MAAM,IAAI;IAC3D;IAEA,EAAE,cAAc,CAAC,IAAI,sEAAsE;IAE3F,MAAM,QAAQ;QACZ;QACA,6FAA6F;QAC7F,kBAAkB,IAAkB,YAAY,GAAG,KAAK;QAExD;;;;;SAKG,GACH,YAAW,aAAa,CAAC,EAAE,QAAQ,MAAM,IAAI;YAC3C,MAAM,cAAc,CAAC;YACrB,MAAM,QAAQ,CAAC,OAAO;YACtB,OAAO;QACT;IACD;IAED,OAAO;QACL;QACA;QACA;QACA;QACA,eAAe;QACf;IACD;AACH;;;AEhgBA,oEAAA,GACA,sDAAsD;;;AAiBtD,wBAAwB;AACxB,yCAAgB;AAIhB;;;;;CAKG,GACH,oCAAoC;AACpC,yCAAgB;AAYhB,0DAA0D;AAC1D,0CAAgB;AAShB,8BAA8B;AAC9B,4CAAgB;AAwBhB;;;;;;;CAOG,GACH,mDAAgB;AAwDhB,4CAAgB;kDA8DH;AAkDb,mDAAgB;AAchB,0BAA0B;AAE1B;;;CAGG,GACH,2CAAgB;AAgBhB;;;CAGG,GACH,mDAAgB;AAmBhB,2CAAgB;AAIhB,8EAA8E;AAC9E,gDAAgB;AAQhB,kBAAkB;AAClB,6CAAgB;AAQhB;;;;;;;;;;;CAWG,GACH,2CAAgB;AAyDhB,+CAAgB;AAMhB,gDAAgB;AAMhB;;;;;CAKG,GACH,yDAAgB;AAchB;;;;;CAKG,GACH,yDAAgB;AAMhB;;;;;;CAMG,GACH,sDAAgB;AAKhB;;;;;;;;;;;;CAYG,GACH,oDAAgB;AAtdhB;AASA,kBAAkB;AAClB,MAAM,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO;AACtE,kBAAkB;AAClB,MAAM,MAAM,OAAO,IAAI,MAAM,OAAO,IAAI,MAAM,OAAO;AACrD,kBAAkB;AAClB,MAAM,MAAM,OAAO,IAAI,OAAO,OAAO;AAG/B,SAAU,IAAI,CAAS,EAAE,CAAS;IACtC,MAAM,SAAS,IAAI;IACnB,OAAO,UAAU,MAAM,SAAS,IAAI;AACtC;AAQM,SAAU,IAAI,GAAW,EAAE,KAAa,EAAE,MAAc;IAC5D,IAAI,UAAU,OAAO,QAAQ,KAAK,MAAM,IAAI,MAAM;IAClD,IAAI,WAAW,KAAK,OAAO;IAC3B,IAAI,MAAM;IACV,MAAO,QAAQ,IAAK;QAClB,IAAI,QAAQ,KAAK,MAAM,AAAC,MAAM,MAAO;QACrC,MAAM,AAAC,MAAM,MAAO;QACpB,UAAU;IACZ;IACA,OAAO;AACT;AAGM,SAAU,KAAK,CAAS,EAAE,KAAa,EAAE,MAAc;IAC3D,IAAI,MAAM;IACV,MAAO,UAAU,IAAK;QACpB,OAAO;QACP,OAAO;IACT;IACA,OAAO;AACT;AAGM,SAAU,OAAO,MAAc,EAAE,MAAc;IACnD,IAAI,WAAW,OAAO,UAAU,KAC9B,MAAM,IAAI,MAAM,CAAA,0CAAA,EAA6C,OAAM,KAAA,EAAQ,OAAM,CAAE;IAErF,yEAAyE;IACzE,kFAAkF;IAClF,IAAI,IAAI,IAAI,QAAQ;IACpB,IAAI,IAAI;IACR,kBAAkB;IAClB,IAAI,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI;IACnC,MAAO,MAAM,IAAK;QAChB,gEAAgE;QAChE,MAAM,IAAI,IAAI;QACd,MAAM,IAAI,IAAI;QACd,MAAM,IAAI,IAAI,IAAI;QAClB,MAAM,IAAI,IAAI,IAAI;QAClB,kBAAkB;QAClB,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI,GAAG,IAAI;IACzC;IACA,MAAM,MAAM;IACZ,IAAI,QAAQ,KAAK,MAAM,IAAI,MAAM;IACjC,OAAO,IAAI,GAAG;AAChB;AAUM,SAAU,cAAc,CAAS;IACrC,gEAAgE;IAChE,kDAAkD;IAClD,0CAA0C;IAC1C,8CAA8C;IAC9C,kCAAkC;IAClC,MAAM,YAAY,AAAC,CAAA,IAAI,GAAA,IAAO;IAE9B,IAAI,GAAW,GAAW;IAC1B,mDAAmD;IACnD,oDAAoD;IACpD,IAAK,IAAI,IAAI,KAAK,IAAI,GAAG,IAAI,QAAQ,KAAK,KAAK,KAAK;IAEpD,sEAAsE;IACtE,IAAK,IAAI,KAAK,IAAI,KAAK,IAAI,GAAG,WAAW,OAAO,IAAI,KAAK;IAEzD,YAAY;IACZ,IAAI,MAAM,GAAG;QACX,MAAM,SAAS,AAAC,CAAA,IAAI,GAAA,IAAO;QAC3B,OAAO,SAAS,YAAe,EAAa,EAAE,CAAI;YAChD,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG;YACvB,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,IAAI,MAAM,IAAI,MAAM;YAC9C,OAAO;QACT;IACF;IAEA,YAAY;IACZ,MAAM,SAAS,AAAC,CAAA,IAAI,GAAA,IAAO;IAC3B,OAAO,SAAS,YAAe,EAAa,EAAE,CAAI;QAChD,sEAAsE;QACtE,IAAI,GAAG,GAAG,CAAC,GAAG,eAAe,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,IAAI,MAAM;QAC7D,IAAI,IAAI;QACR,6BAA6B;QAC7B,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,EAAE,IAAI,IAAI,2BAA2B;QACjE,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,SAAS,iCAAiC;QAC5D,IAAI,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,kCAAkC;QAExD,MAAO,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG,EAAG;YACzB,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,OAAO,GAAG,IAAI,EAAE,6FAA6F;YACrI,yBAAyB;YACzB,IAAI,IAAI;YACR,IAAK,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI,IAAI,GAAG,IAAK;gBACnC,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,GAAG;gBACxB,KAAK,GAAG,GAAG,CAAC,KAAK,WAAW;YAC9B;YACA,8GAA8G;YAC9G,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG,OAAO,OAAO,IAAI,IAAI,KAAK,iBAAiB;YACjE,IAAI,GAAG,GAAG,CAAC,KAAK,cAAc;YAC9B,IAAI,GAAG,GAAG,CAAC,GAAG,KAAK,UAAU;YAC7B,IAAI,GAAG,GAAG,CAAC,GAAG,IAAI,SAAS;YAC3B,IAAI;QACN;QACA,OAAO;IACT;AACF;AAEM,SAAU,OAAO,CAAS;IAC9B,uGAAuG;IACvG,sGAAsG;IAEtG,gBAAgB;IAChB,mBAAmB;IACnB,IAAI,IAAI,QAAQ,KAAK;QACnB,0BAA0B;QAC1B,gBAAgB;QAChB,yGAAyG;QACzG,kCAAkC;QAClC,MAAM,SAAS,AAAC,CAAA,IAAI,GAAA,IAAO;QAC3B,OAAO,SAAS,UAAa,EAAa,EAAE,CAAI;YAC9C,MAAM,OAAO,GAAG,GAAG,CAAC,GAAG;YACvB,wBAAwB;YACxB,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,IAAI,MAAM,IAAI,MAAM;YAC9C,OAAO;QACT;IACF;IAEA,oFAAoF;IACpF,IAAI,IAAI,QAAQ,KAAK;QACnB,MAAM,KAAK,AAAC,CAAA,IAAI,GAAA,IAAO;QACvB,OAAO,SAAS,UAAa,EAAa,EAAE,CAAI;YAC9C,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG;YACrB,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI;YACrB,MAAM,KAAK,GAAG,GAAG,CAAC,GAAG;YACrB,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM;YAClC,MAAM,OAAO,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC,GAAG,GAAG,GAAG;YACxC,IAAI,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,IAAI,MAAM,IAAI,MAAM;YAC9C,OAAO;QACT;IACF;IAEA,iBAAiB;IACA;IAsBjB,wCAAwC;IACxC,OAAO,cAAc;AACvB;AAGO,MAAM,eAAe,CAAC,KAAa,SAAmB,AAAC,CAAA,IAAI,KAAK,UAAU,GAAA,MAAS;AA4C1F,kBAAkB;AAClB,MAAM,eAAe;IACnB;IAAU;IAAW;IAAO;IAAO;IAAO;IAAQ;IAClD;IAAO;IAAO;IAAO;IAAO;IAAO;IACnC;IAAQ;IAAQ;IAAQ;CAChB;AACJ,SAAU,cAAiB,KAAgB;IAC/C,MAAM,UAAU;QACd,OAAO;QACP,MAAM;QACN,OAAO;QACP,MAAM;IACmB;IAC3B,MAAM,OAAO,aAAa,MAAM,CAAC,CAAC,KAAK;QACrC,GAAG,CAAC,IAAI,GAAG;QACX,OAAO;IACT,GAAG;IACH,OAAO,CAAA,GAAA,uBAAc,AAAd,EAAe,OAAO;AAC/B;AAQM,SAAU,MAAS,CAAY,EAAE,GAAM,EAAE,KAAa;IAC1D,4CAA4C;IAC5C,mBAAmB;IACnB,IAAI,QAAQ,KAAK,MAAM,IAAI,MAAM;IACjC,IAAI,UAAU,KAAK,OAAO,EAAE,GAAG;IAC/B,IAAI,UAAU,KAAK,OAAO;IAC1B,IAAI,IAAI,EAAE,GAAG;IACb,IAAI,IAAI;IACR,MAAO,QAAQ,IAAK;QAClB,IAAI,QAAQ,KAAK,IAAI,EAAE,GAAG,CAAC,GAAG;QAC9B,IAAI,EAAE,GAAG,CAAC;QACV,UAAU;IACZ;IACA,OAAO;AACT;AAMM,SAAU,cAAiB,CAAY,EAAE,IAAS;IACtD,MAAM,MAAM,IAAI,MAAM,KAAK,MAAM;IACjC,6DAA6D;IAC7D,MAAM,iBAAiB,KAAK,MAAM,CAAC,CAAC,KAAK,KAAK;QAC5C,IAAI,EAAE,GAAG,CAAC,MAAM,OAAO;QACvB,GAAG,CAAC,EAAE,GAAG;QACT,OAAO,EAAE,GAAG,CAAC,KAAK;IACpB,GAAG,EAAE,GAAG;IACR,sBAAsB;IACtB,MAAM,WAAW,EAAE,GAAG,CAAC;IACvB,sEAAsE;IACtE,KAAK,WAAW,CAAC,CAAC,KAAK,KAAK;QAC1B,IAAI,EAAE,GAAG,CAAC,MAAM,OAAO;QACvB,GAAG,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,KAAK,GAAG,CAAC,EAAE;QAC1B,OAAO,EAAE,GAAG,CAAC,KAAK;IACpB,GAAG;IACH,OAAO;AACT;AAEM,SAAU,MAAS,CAAY,EAAE,GAAM,EAAE,GAAe;IAC5D,OAAO,EAAE,GAAG,CAAC,KAAK,OAAO,QAAQ,WAAW,OAAO,KAAK,EAAE,KAAK,IAAI,EAAE,GAAG,CAAC;AAC3E;AAGM,SAAU,WAAc,CAAY;IACxC,MAAM,gBAAgB,AAAC,CAAA,EAAE,KAAK,GAAG,GAAA,IAAO,KAAK,qBAAqB;IAClE,OAAO,CAAC;QACN,MAAM,IAAI,EAAE,GAAG,CAAC,GAAG;QACnB,OAAO,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,KAAK,EAAE,GAAG,CAAC,GAAG,EAAE,GAAG;IAC3C;AACF;AAGM,SAAU,QAAQ,CAAS,EAAE,UAAmB;IACpD,iCAAiC;IACjC,MAAM,cAAc,eAAe,YAAY,aAAa,EAAE,QAAQ,CAAC,GAAG,MAAM;IAChF,MAAM,cAAc,KAAK,IAAI,CAAC,cAAc;IAC5C,OAAO;QAAE,YAAY;QAAa;IAAW;AAC/C;AAeM,SAAU,MACd,KAAa,EACb,MAAe,EACf,OAAO,KAAK,EACZ,QAAiC,CAAA,CAAE;IAEnC,IAAI,SAAS,KAAK,MAAM,IAAI,MAAM,CAAA,8BAAA,EAAiC,MAAK,CAAE;IAC1E,MAAM,EAAE,YAAY,IAAI,EAAE,aAAa,KAAK,EAAE,GAAG,QAAQ,OAAO;IAChE,IAAI,QAAQ,MAAM,MAAM,IAAI,MAAM;IAClC,MAAM,QAAQ,OAAO;IACrB,MAAM,IAAuB,OAAO,MAAM,CAAC;QACzC;QACA;QACA;QACA,MAAM,CAAA,GAAA,gBAAO,AAAP,EAAQ;QACd,MAAM;QACN,KAAK;QACL,QAAQ,CAAC,MAAQ,IAAI,KAAK;QAC1B,SAAS,CAAC;YACR,IAAI,OAAO,QAAQ,UACjB,MAAM,IAAI,MAAM,CAAA,4CAAA,EAA+C,OAAO,IAAG,CAAE;YAC7E,OAAO,OAAO,OAAO,MAAM,OAAO,8CAA8C;QAClF;QACA,KAAK,CAAC,MAAQ,QAAQ;QACtB,OAAO,CAAC,MAAQ,AAAC,CAAA,MAAM,GAAA,MAAS;QAChC,KAAK,CAAC,MAAQ,IAAI,CAAC,KAAK;QACxB,KAAK,CAAC,KAAK,MAAQ,QAAQ;QAE3B,KAAK,CAAC,MAAQ,IAAI,MAAM,KAAK;QAC7B,KAAK,CAAC,KAAK,MAAQ,IAAI,MAAM,KAAK;QAClC,KAAK,CAAC,KAAK,MAAQ,IAAI,MAAM,KAAK;QAClC,KAAK,CAAC,KAAK,MAAQ,IAAI,MAAM,KAAK;QAClC,KAAK,CAAC,KAAK,QAAU,MAAM,GAAG,KAAK;QACnC,KAAK,CAAC,KAAK,MAAQ,IAAI,MAAM,OAAO,KAAK,QAAQ;QAEjD,uCAAuC;QACvC,MAAM,CAAC,MAAQ,MAAM;QACrB,MAAM,CAAC,KAAK,MAAQ,MAAM;QAC1B,MAAM,CAAC,KAAK,MAAQ,MAAM;QAC1B,MAAM,CAAC,KAAK,MAAQ,MAAM;QAE1B,KAAK,CAAC,MAAQ,OAAO,KAAK;QAC1B,MAAM,MAAM,IAAI,IAAK,CAAA,CAAC,IAAM,MAAM,GAAG,EAAC;QACtC,aAAa,CAAC,MAAQ,cAAc,GAAG;QACvC,yCAAyC;QACzC,+EAA+E;QAC/E,MAAM,CAAC,GAAG,GAAG,IAAO,IAAI,IAAI;QAC5B,SAAS,CAAC,MAAS,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,KAAK,SAAS,CAAA,GAAA,wBAAe,AAAf,EAAgB,KAAK;QAC7E,WAAW,CAAC;YACV,IAAI,MAAM,MAAM,KAAK,OACnB,MAAM,IAAI,MAAM,CAAA,uBAAA,EAA0B,MAAK,MAAA,EAAS,MAAM,MAAM,CAAA,CAAE;YACxE,OAAO,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,SAAS,CAAA,GAAA,wBAAe,AAAf,EAAgB;QACzD;IACU;IACZ,OAAO,OAAO,MAAM,CAAC;AACvB;AAEM,SAAU,UAAa,EAAa,EAAE,GAAM;IAChD,IAAI,CAAC,GAAG,KAAK,EAAE,MAAM,IAAI,MAAM,CAAA,wBAAA,CAA0B;IACzD,MAAM,OAAO,GAAG,IAAI,CAAC;IACrB,OAAO,GAAG,KAAK,CAAC,QAAQ,OAAO,GAAG,GAAG,CAAC;AACxC;AAEM,SAAU,WAAc,EAAa,EAAE,GAAM;IACjD,IAAI,CAAC,GAAG,KAAK,EAAE,MAAM,IAAI,MAAM,CAAA,wBAAA,CAA0B;IACzD,MAAM,OAAO,GAAG,IAAI,CAAC;IACrB,OAAO,GAAG,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ;AACzC;AAQM,SAAU,oBACd,IAAyB,EACzB,UAAkB,EAClB,OAAO,KAAK;IAEZ,OAAO,CAAA,GAAA,oBAAW,AAAX,EAAY,eAAe;IAClC,MAAM,UAAU,KAAK,MAAM;IAC3B,MAAM,SAAS,QAAQ,YAAY,WAAW,GAAG;IACjD,IAAI,SAAS,MAAM,UAAU,UAAU,UAAU,MAC/C,MAAM,IAAI,MAAM,CAAA,8BAAA,EAAiC,OAAM,0BAAA,EAA6B,QAAO,CAAE;IAC/F,MAAM,MAAM,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,QAAQ,CAAA,GAAA,wBAAe,AAAf,EAAgB;IAC3D,OAAO,IAAI,KAAK,aAAa,OAAO;AACtC;AAQM,SAAU,oBAAoB,UAAkB;IACpD,IAAI,OAAO,eAAe,UAAU,MAAM,IAAI,MAAM;IACpD,MAAM,YAAY,WAAW,QAAQ,CAAC,GAAG,MAAM;IAC/C,OAAO,KAAK,IAAI,CAAC,YAAY;AAC/B;AASM,SAAU,iBAAiB,UAAkB;IACjD,MAAM,SAAS,oBAAoB;IACnC,OAAO,SAAS,KAAK,IAAI,CAAC,SAAS;AACrC;AAeM,SAAU,eAAe,GAAe,EAAE,UAAkB,EAAE,OAAO,KAAK;IAC9E,MAAM,MAAM,IAAI,MAAM;IACtB,MAAM,WAAW,oBAAoB;IACrC,MAAM,SAAS,iBAAiB;IAChC,iGAAiG;IACjG,IAAI,MAAM,MAAM,MAAM,UAAU,MAAM,MACpC,MAAM,IAAI,MAAM,CAAA,SAAA,EAAY,OAAM,0BAAA,EAA6B,IAAG,CAAE;IACtE,MAAM,MAAM,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB;IAC1D,+EAA+E;IAC/E,MAAM,UAAU,IAAI,KAAK,aAAa,OAAO;IAC7C,OAAO,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,SAAS,YAAY,CAAA,GAAA,wBAAe,AAAf,EAAgB,SAAS;AAC9E;;;AEneA,oEAAA,GACA,0EAA0E;AAC1E,8DAA8D;AAC9D,+EAA+E;AAC/E,uCAAuC;;;AAcvC,6CAAgB;AAOhB,4CAAgB;AAQhB;;CAEG,GACH,gDAAgB;AAUhB,yDAAgB;AAKhB,iDAAgB;AAehB;;CAEG,GACH,gDAAgB;AAkBhB,oCAAoC;AACpC,qDAAgB;AAGhB,qDAAgB;AAKhB,qDAAgB;AAGhB,qDAAgB;AAGhB,wBAAwB;AACxB,wDAAgB;AAIhB;;;;;;;;CAQG,GACH,iDAAgB;AAqBhB;;CAEG,GACH,iDAAgB;AAgBhB,0CAA0C;AAC1C,gDAAgB;AAWhB;;CAEG,GACH,iDAAgB;AAKhB,iBAAiB;AAEjB;;;CAGG,GACH,4CAAgB;AAMhB;;;;CAIG,GACH,4CAAgB;AAIhB;;CAEG,GACH,4CAAgB;6CAQH;AAOb;;;;;;CAMG,GACH,oDAAgB;AAiEhB,wEAAwE;AAExE,oDAAgB,gBAsBhB,sBAAsB;CACtB,uEAAuE;CACvE,gFAAgF;CAChF,4BAA4B;CAC5B,2DAA2D;CAC3D,qEAAqE;CACrE,+DAA+D;CAC/D,4DAA4D;;AAzT5D,MAAM,MAAM,OAAO;AACnB,MAAM,MAAM,OAAO;AACnB,MAAM,MAAM,OAAO;AAWb,SAAU,QAAQ,CAAU;IAChC,OACE,aAAa,cACZ,KAAK,QAAQ,OAAO,MAAM,YAAY,EAAE,WAAW,CAAC,IAAI,KAAK;AAElE;AAEM,SAAU,OAAO,IAAa;IAClC,IAAI,CAAC,QAAQ,OAAO,MAAM,IAAI,MAAM;AACtC;AAEA,wDAAwD;AACxD,MAAM,QAAQ,aAAA,GAAgB,MAAM,IAAI,CAAC;IAAE,QAAQ;AAAG,GAAI,CAAC,GAAG,IAC5D,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;AAKvB,SAAU,WAAW,KAAiB;IAC1C,OAAO;IACP,oCAAoC;IACpC,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,OAAO,KAAK,CAAC,KAAK,CAAC,EAAE,CAAC;IAExB,OAAO;AACT;AAEM,SAAU,oBAAoB,GAAoB;IACtD,MAAM,MAAM,IAAI,QAAQ,CAAC;IACzB,OAAO,IAAI,MAAM,GAAG,IAAI,CAAA,CAAA,EAAI,IAAG,CAAE,GAAG;AACtC;AAEM,SAAU,YAAY,GAAW;IACrC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,8BAA8B,OAAO;IAClF,aAAa;IACb,OAAO,OAAO,QAAQ,KAAK,MAAM,CAAA,EAAA,EAAK,IAAG,CAAE;AAC7C;AAEA,iEAAiE;AACjE,MAAM,SAAS;IAAE,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;IAAI,IAAI;AAAG;AAChE,SAAS,cAAc,IAAY;IACjC,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAO,OAAO,EAAE;IACnE,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAQ,CAAA,OAAO,EAAE,GAAG,EAAA;IACvE,IAAI,QAAQ,OAAO,EAAE,IAAI,QAAQ,OAAO,EAAE,EAAE,OAAO,OAAQ,CAAA,OAAO,EAAE,GAAG,EAAA;IACvE;AACF;AAKM,SAAU,WAAW,GAAW;IACpC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,8BAA8B,OAAO;IAClF,MAAM,KAAK,IAAI,MAAM;IACrB,MAAM,KAAK,KAAK;IAChB,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM,4DAA4D;IACxF,MAAM,QAAQ,IAAI,WAAW;IAC7B,IAAK,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,IAAI,MAAM,MAAM,EAAG;QAC/C,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC;QACxC,MAAM,KAAK,cAAc,IAAI,UAAU,CAAC,KAAK;QAC7C,IAAI,OAAO,aAAa,OAAO,WAAW;YACxC,MAAM,OAAO,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,KAAK,EAAE;YAClC,MAAM,IAAI,MAAM,iDAAiD,OAAO,gBAAgB;QAC1F;QACA,KAAK,CAAC,GAAG,GAAG,KAAK,KAAK;IACxB;IACA,OAAO;AACT;AAGM,SAAU,gBAAgB,KAAiB;IAC/C,OAAO,YAAY,WAAW;AAChC;AACM,SAAU,gBAAgB,KAAiB;IAC/C,OAAO;IACP,OAAO,YAAY,WAAW,WAAW,IAAI,CAAC,OAAO,OAAO;AAC9D;AAEM,SAAU,gBAAgB,CAAkB,EAAE,GAAW;IAC7D,OAAO,WAAW,EAAE,QAAQ,CAAC,IAAI,QAAQ,CAAC,MAAM,GAAG;AACrD;AACM,SAAU,gBAAgB,CAAkB,EAAE,GAAW;IAC7D,OAAO,gBAAgB,GAAG,KAAK,OAAO;AACxC;AAEM,SAAU,mBAAmB,CAAkB;IACnD,OAAO,WAAW,oBAAoB;AACxC;AAWM,SAAU,YAAY,KAAa,EAAE,GAAQ,EAAE,cAAuB;IAC1E,IAAI;IACJ,IAAI,OAAO,QAAQ,UACjB,IAAI;QACF,MAAM,WAAW;IACnB,EAAE,OAAO,GAAG;QACV,MAAM,IAAI,MAAM,CAAA,EAAG,MAAK,gCAAA,EAAmC,IAAG,UAAA,EAAa,EAAC,CAAE;IAChF;SACK,IAAI,QAAQ,MACjB,mEAAmE;IACnE,sEAAsE;IACtE,MAAM,WAAW,IAAI,CAAC;SAEtB,MAAM,IAAI,MAAM,CAAA,EAAG,MAAK,iCAAA,CAAmC;IAE7D,MAAM,MAAM,IAAI,MAAM;IACtB,IAAI,OAAO,mBAAmB,YAAY,QAAQ,gBAChD,MAAM,IAAI,MAAM,CAAA,EAAG,MAAK,UAAA,EAAa,eAAc,YAAA,EAAe,IAAG,CAAE;IACzE,OAAO;AACT;AAKM,SAAU,YAAY,GAAG,MAAoB;IACjD,IAAI,MAAM;IACV,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QACtC,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,OAAO;QACP,OAAO,EAAE,MAAM;IACjB;IACA,MAAM,MAAM,IAAI,WAAW;IAC3B,IAAK,IAAI,IAAI,GAAG,MAAM,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;QAC/C,MAAM,IAAI,MAAM,CAAC,EAAE;QACnB,IAAI,GAAG,CAAC,GAAG;QACX,OAAO,EAAE,MAAM;IACjB;IACA,OAAO;AACT;AAGM,SAAU,WAAW,CAAa,EAAE,CAAa;IACrD,IAAI,EAAE,MAAM,KAAK,EAAE,MAAM,EAAE,OAAO;IAClC,IAAI,OAAO;IACX,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACtD,OAAO,SAAS;AAClB;AASM,SAAU,YAAY,GAAW;IACrC,IAAI,OAAO,QAAQ,UAAU,MAAM,IAAI,MAAM,CAAA,iCAAA,EAAoC,OAAO,IAAG,CAAE;IAC7F,OAAO,IAAI,WAAW,IAAI,cAAc,MAAM,CAAC,OAAO,4BAA4B;AACpF;AAQM,SAAU,OAAO,CAAS;IAC9B,IAAI;IACJ,IAAK,MAAM,GAAG,IAAI,KAAK,MAAM,KAAK,OAAO;IACzC,OAAO;AACT;AAOM,SAAU,OAAO,CAAS,EAAE,GAAW;IAC3C,OAAO,AAAC,KAAK,OAAO,OAAQ;AAC9B;AAKM,SAAU,OAAO,CAAS,EAAE,GAAW,EAAE,KAAc;IAC3D,OAAO,IAAK,AAAC,CAAA,QAAQ,MAAM,GAAA,KAAQ,OAAO;AAC5C;AAMO,MAAM,UAAU,CAAC,IAAc,AAAC,CAAA,OAAO,OAAO,IAAI,EAAC,IAAK;AAE/D,OAAO;AAEP,MAAM,MAAM,CAAC,OAAe,IAAI,WAAW,OAAO,qBAAqB;AACvE,MAAM,OAAO,CAAC,MAAa,WAAW,IAAI,CAAC,MAAM,mBAAmB;AAS9D,SAAU,eACd,OAAe,EACf,QAAgB,EAChB,MAAkE;IAElE,IAAI,OAAO,YAAY,YAAY,UAAU,GAAG,MAAM,IAAI,MAAM;IAChE,IAAI,OAAO,aAAa,YAAY,WAAW,GAAG,MAAM,IAAI,MAAM;IAClE,IAAI,OAAO,WAAW,YAAY,MAAM,IAAI,MAAM;IAClD,gDAAgD;IAChD,IAAI,IAAI,IAAI,UAAU,qEAAqE;IAC3F,IAAI,IAAI,IAAI,UAAU,qEAAqE;IAC3F,IAAI,IAAI,GAAG,gDAAgD;IAC3D,MAAM,QAAQ;QACZ,EAAE,IAAI,CAAC;QACP,EAAE,IAAI,CAAC;QACP,IAAI;IACN;IACA,MAAM,IAAI,CAAC,GAAG,IAAoB,OAAO,GAAG,MAAM,IAAI,wBAAwB;IAC9E,MAAM,SAAS,CAAC,OAAO,KAAK;QAC1B,yCAAyC;QACzC,IAAI,EAAE,KAAK;YAAC;SAAK,GAAG,OAAO,mCAAmC;QAC9D,IAAI,KAAK,mBAAmB;QAC5B,IAAI,KAAK,MAAM,KAAK,GAAG;QACvB,IAAI,EAAE,KAAK;YAAC;SAAK,GAAG,OAAO,mCAAmC;QAC9D,IAAI,KAAK,mBAAmB;IAC9B;IACA,MAAM,MAAM;QACV,gCAAgC;QAChC,IAAI,OAAO,MAAM,MAAM,IAAI,MAAM;QACjC,IAAI,MAAM;QACV,MAAM,MAAoB,EAAE;QAC5B,MAAO,MAAM,SAAU;YACrB,IAAI;YACJ,MAAM,KAAK,EAAE,KAAK;YAClB,IAAI,IAAI,CAAC;YACT,OAAO,EAAE,MAAM;QACjB;QACA,OAAO,eAAe;IACxB;IACA,MAAM,WAAW,CAAC,MAAkB;QAClC;QACA,OAAO,OAAO,YAAY;QAC1B,IAAI,MAAqB,WAAW,uCAAuC;QAC3E,MAAO,CAAE,CAAA,MAAM,KAAK,MAAK,EAAI;QAC7B;QACA,OAAO;IACT;IACA,OAAO;AACT;AAEA,+BAA+B;AAE/B,MAAM,eAAe;IACnB,QAAQ,CAAC,MAAa,OAAO,QAAQ;IACrC,UAAU,CAAC,MAAa,OAAO,QAAQ;IACvC,SAAS,CAAC,MAAa,OAAO,QAAQ;IACtC,QAAQ,CAAC,MAAa,OAAO,QAAQ;IACrC,oBAAoB,CAAC,MAAa,OAAO,QAAQ,YAAY,QAAQ;IACrE,eAAe,CAAC,MAAa,OAAO,aAAa,CAAC;IAClD,OAAO,CAAC,MAAa,MAAM,OAAO,CAAC;IACnC,OAAO,CAAC,KAAU,SAAiB,OAAe,EAAE,CAAC,OAAO,CAAC;IAC7D,MAAM,CAAC,MAAa,OAAO,QAAQ,cAAc,OAAO,aAAa,CAAC,IAAI,SAAS;AAC3E;AAKJ,SAAU,eACd,MAAS,EACT,UAAqB,EACrB,gBAA2B,CAAA,CAAE;IAE7B,MAAM,aAAa,CAAC,WAAoB,MAAiB;QACvD,MAAM,WAAW,YAAY,CAAC,KAAK;QACnC,IAAI,OAAO,aAAa,YACtB,MAAM,IAAI,MAAM,CAAA,mBAAA,EAAsB,KAAI,oBAAA,CAAsB;QAElE,MAAM,MAAM,MAAM,CAAC,UAAiC;QACpD,IAAI,cAAc,QAAQ,WAAW;QACrC,IAAI,CAAC,SAAS,KAAK,SACjB,MAAM,IAAI,MACR,CAAA,cAAA,EAAiB,OAAO,WAAU,CAAA,EAAI,IAAG,EAAA,EAAK,OAAO,IAAG,YAAA,EAAe,KAAI,CAAE;IAGnF;IACA,KAAK,MAAM,CAAC,WAAW,KAAK,IAAI,OAAO,OAAO,CAAC,YAAa,WAAW,WAAW,MAAO;IACzF,KAAK,MAAM,CAAC,WAAW,KAAK,IAAI,OAAO,OAAO,CAAC,eAAgB,WAAW,WAAW,MAAO;IAC5F,OAAO;AACT;;;AEtTA,oEAAA,GACA,0BAA0B;;;AA0B1B,6DAA6D;AAC7D,mGAAmG;AACnG,yDAAyD;AACzD,4DAA4D;AAC5D,+EAA+E;AAC/E,oGAAoG;AACpG,oGAAoG;AACpG,qCAAqC;AACrC,kGAAkG;AAClG,gGAAgG;AAChG,8CAA8C;AAC9C,0CAAgB;AA+IhB,mDAAgB;AAnLhB;AACA;AACA,MAAM,MAAM,OAAO;AACnB,MAAM,MAAM,OAAO;AAiCb,SAAU,KAAyB,CAAsB,EAAE,IAAY;IAC3E,MAAM,kBAAkB,CAAC,WAAoB;QAC3C,MAAM,MAAM,KAAK,MAAM;QACvB,OAAO,YAAY,MAAM;IAC3B;IACA,MAAM,OAAO,CAAC;QACZ,MAAM,UAAU,KAAK,IAAI,CAAC,OAAO,KAAK,GAAG,cAAc;QACvD,MAAM,aAAa,KAAM,CAAA,IAAI,CAAA,GAAI,0BAA0B;QAC3D,OAAO;YAAE;YAAS;QAAU;IAC9B;IACA,OAAO;QACL;QACA,uCAAuC;QACvC,cAAa,GAAM,EAAE,CAAS;YAC5B,IAAI,IAAI,EAAE,IAAI;YACd,IAAI,IAAO;YACX,MAAO,IAAI,IAAK;gBACd,IAAI,IAAI,KAAK,IAAI,EAAE,GAAG,CAAC;gBACvB,IAAI,EAAE,MAAM;gBACZ,MAAM;YACR;YACA,OAAO;QACT;QAEA;;;;;;;;;SASG,GACH,kBAAiB,GAAM,EAAE,CAAS;YAChC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,KAAK;YACrC,MAAM,SAAc,EAAE;YACtB,IAAI,IAAO;YACX,IAAI,OAAO;YACX,IAAK,IAAI,SAAS,GAAG,SAAS,SAAS,SAAU;gBAC/C,OAAO;gBACP,OAAO,IAAI,CAAC;gBACZ,2BAA2B;gBAC3B,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,IAAK;oBACnC,OAAO,KAAK,GAAG,CAAC;oBAChB,OAAO,IAAI,CAAC;gBACd;gBACA,IAAI,KAAK,MAAM;YACjB;YACA,OAAO;QACT;QAEA;;;;;;SAMG,GACH,MAAK,CAAS,EAAE,WAAgB,EAAE,CAAS;YACzC,gGAAgG;YAChG,4EAA4E;YAC5E,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG,KAAK;YAErC,IAAI,IAAI,EAAE,IAAI;YACd,IAAI,IAAI,EAAE,IAAI;YAEd,MAAM,OAAO,OAAO,KAAK,IAAI,IAAI,+CAA+C;YAChF,MAAM,YAAY,KAAK;YACvB,MAAM,UAAU,OAAO;YAEvB,IAAK,IAAI,SAAS,GAAG,SAAS,SAAS,SAAU;gBAC/C,MAAM,SAAS,SAAS;gBACxB,kBAAkB;gBAClB,IAAI,QAAQ,OAAO,IAAI;gBAEvB,0BAA0B;gBAC1B,MAAM;gBAEN,2DAA2D;gBAC3D,mBAAmB;gBACnB,IAAI,QAAQ,YAAY;oBACtB,SAAS;oBACT,KAAK;gBACP;gBAEA,6FAA6F;gBAC7F,qFAAqF;gBACrF,0EAA0E;gBAC1E,+EAA+E;gBAC/E,2EAA2E;gBAE3E,kCAAkC;gBAClC,+CAA+C;gBAC/C,MAAM,UAAU;gBAChB,MAAM,UAAU,SAAS,KAAK,GAAG,CAAC,SAAS,GAAG,0BAA0B;gBACxE,MAAM,QAAQ,SAAS,MAAM;gBAC7B,MAAM,QAAQ,QAAQ;gBACtB,IAAI,UAAU,GACZ,sDAAsD;gBACtD,IAAI,EAAE,GAAG,CAAC,gBAAgB,OAAO,WAAW,CAAC,QAAQ;qBAErD,IAAI,EAAE,GAAG,CAAC,gBAAgB,OAAO,WAAW,CAAC,QAAQ;YAEzD;YACA,wFAAwF;YACxF,yEAAyE;YACzE,mFAAmF;YACnF,wEAAwE;YACxE,4DAA4D;YAC5D,OAAO;gBAAE;gBAAG;YAAC;QACf;QAEA,YAAW,CAAI,EAAE,cAA2B,EAAE,CAAS,EAAE,SAAoB;YAC3E,aAAa;YACb,MAAM,IAAY,EAAE,YAAY,IAAI;YACpC,yDAAyD;YACzD,IAAI,OAAO,eAAe,GAAG,CAAC;YAC9B,IAAI,CAAC,MAAM;gBACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG;gBAChC,IAAI,MAAM,GACR,eAAe,GAAG,CAAC,GAAG,UAAU;YAEpC;YACA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM;QAC5B;IACD;AACH;AAgBM,SAAU,cAAqB,KAAyB;IAC5D,CAAA,GAAA,wBAAa,AAAb,EAAc,MAAM,EAAE;IACtB,CAAA,GAAA,uBAAc,AAAd,EACE,OACA;QACE,GAAG;QACH,GAAG;QACH,IAAI;QACJ,IAAI;IACL,GACD;QACE,YAAY;QACZ,aAAa;IACd;IAEH,eAAe;IACf,OAAO,OAAO,MAAM,CAAC;QACnB,GAAG,CAAA,GAAA,kBAAO,AAAP,EAAQ,MAAM,CAAC,EAAE,MAAM,UAAU,CAAC;QACrC,GAAG,KAAK;QACH,GAAG,MAAM,EAAE,CAAC,KAAK;IACd;AACZ;;;AE1MA,oEAAA;;AAgDA,4IAA4I;AAC5I,0CAA0C;AAC1C,gDAAgB;AAjDhB;AACA;AAEA,MAAM,MAAM,OAAO;AACnB,MAAM,MAAM,OAAO;AAwBnB,SAAS,aAAa,KAAgB;IACpC,CAAA,GAAA,uBAAc,AAAd,EACE,OACA;QACE,GAAG;IACJ,GACD;QACE,gBAAgB;QAChB,aAAa;QACb,mBAAmB;QACnB,QAAQ;QACR,YAAY;QACZ,IAAI;IACL;IAEH,eAAe;IACf,OAAO,OAAO,MAAM,CAAC;QAAE,GAAG,KAAK;IAAA;AACjC;AAIM,SAAU,WAAW,QAAmB;IAC5C,MAAM,QAAQ,aAAa;IAC3B,MAAM,EAAE,CAAC,EAAE,GAAG;IACd,MAAM,OAAO,CAAC,IAAc,CAAA,GAAA,cAAG,AAAH,EAAI,GAAG;IACnC,MAAM,iBAAiB,MAAM,cAAc;IAC3C,MAAM,kBAAkB,KAAK,IAAI,CAAC,iBAAiB;IACnD,MAAM,WAAW,MAAM,WAAW;IAClC,MAAM,oBAAoB,MAAM,iBAAiB,IAAK,CAAA,CAAC,QAAsB,KAAA;IAC7E,MAAM,aAAa,MAAM,UAAU,IAAK,CAAA,CAAC,IAAc,CAAA,GAAA,cAAG,AAAH,EAAI,GAAG,IAAI,OAAO,IAAI,EAAC;IAE9E,kDAAkD;IAClD;;;;;;;;IAQE,GACF,SAAS,MAAM,IAAY,EAAE,GAAW,EAAE,GAAW;QACnD,MAAM,QAAQ,KAAK,OAAQ,CAAA,MAAM,GAAA;QACjC,MAAM,KAAK,MAAM;QACjB,MAAM,KAAK,MAAM;QACjB,OAAO;YAAC;YAAK;SAAI;IACnB;IAEA,oBAAoB;IACpB,SAAS,mBAAmB,CAAS;QACnC,IAAI,OAAO,MAAM,YAAY,OAAO,KAAK,IAAI,GAAG,OAAO;QACvD,MAAM,IAAI,MAAM;IAClB;IAEA,gBAAgB;IAChB,sEAAsE;IACtE,MAAM,MAAM,AAAC,CAAA,MAAM,CAAC,GAAG,OAAO,EAAC,IAAK,OAAO;IAC3C;;;;;KAKG,GACH,SAAS,iBAAiB,MAAc,EAAE,MAAc;QACtD,MAAM,IAAI,mBAAmB;QAC7B,kFAAkF;QAClF,mDAAmD;QACnD,MAAM,IAAI,mBAAmB;QAC7B,MAAM,MAAM;QACZ,IAAI,MAAM;QACV,IAAI,MAAM;QACV,IAAI,MAAM;QACV,IAAI,MAAM;QACV,IAAI,OAAO;QACX,IAAI;QACJ,IAAK,IAAI,IAAI,OAAO,iBAAiB,IAAI,KAAK,KAAK,IAAK;YACtD,MAAM,MAAM,AAAC,KAAK,IAAK;YACvB,QAAQ;YACR,KAAK,MAAM,MAAM,KAAK;YACtB,MAAM,EAAE,CAAC,EAAE;YACX,MAAM,EAAE,CAAC,EAAE;YACX,KAAK,MAAM,MAAM,KAAK;YACtB,MAAM,EAAE,CAAC,EAAE;YACX,MAAM,EAAE,CAAC,EAAE;YACX,OAAO;YAEP,MAAM,IAAI,MAAM;YAChB,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,IAAI,MAAM;YAChB,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,IAAI,KAAK;YACf,MAAM,IAAI,MAAM;YAChB,MAAM,IAAI,MAAM;YAChB,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,KAAK,KAAK,IAAI;YACpB,MAAM,OAAO,KAAK;YAClB,MAAM,QAAQ,KAAK;YACnB,MAAM,KAAK,OAAO;YAClB,MAAM,KAAK,MAAM,KAAK,QAAQ;YAC9B,MAAM,KAAK,KAAK;YAChB,MAAM,KAAK,IAAK,CAAA,KAAK,KAAK,MAAM,EAAC;QACnC;QACA,qCAAqC;QACrC,KAAK,MAAM,MAAM,KAAK;QACtB,MAAM,EAAE,CAAC,EAAE;QACX,MAAM,EAAE,CAAC,EAAE;QACX,qCAAqC;QACrC,KAAK,MAAM,MAAM,KAAK;QACtB,MAAM,EAAE,CAAC,EAAE;QACX,MAAM,EAAE,CAAC,EAAE;QACX,cAAc;QACd,MAAM,KAAK,WAAW;QACtB,6BAA6B;QAC7B,OAAO,KAAK,MAAM;IACpB;IAEA,SAAS,kBAAkB,CAAS;QAClC,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,KAAK,IAAI;IAClC;IAEA,SAAS,kBAAkB,IAAS;QAClC,qEAAqE;QACrE,wDAAwD;QACxD,MAAM,IAAI,CAAA,GAAA,oBAAW,AAAX,EAAY,gBAAgB,MAAM;QAC5C,IAAI,aAAa,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,cAAc;QACjD,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB;IACzB;IACA,SAAS,aAAa,CAAM;QAC1B,MAAM,QAAQ,CAAA,GAAA,oBAAW,AAAX,EAAY,UAAU;QACpC,MAAM,MAAM,MAAM,MAAM;QACxB,IAAI,QAAQ,mBAAmB,QAAQ,UACrC,MAAM,IAAI,MAAM,CAAA,SAAA,EAAY,gBAAe,IAAA,EAAO,SAAQ,YAAA,EAAe,IAAG,CAAE;QAChF,OAAO,CAAA,GAAA,wBAAe,AAAf,EAAgB,kBAAkB;IAC3C;IACA,SAAS,WAAW,MAAW,EAAE,CAAM;QACrC,MAAM,SAAS,kBAAkB;QACjC,MAAM,UAAU,aAAa;QAC7B,MAAM,KAAK,iBAAiB,QAAQ;QACpC,kCAAkC;QAClC,sCAAsC;QACtC,IAAI,OAAO,KAAK,MAAM,IAAI,MAAM;QAChC,OAAO,kBAAkB;IAC3B;IACA,kFAAkF;IAClF,MAAM,UAAU,kBAAkB,MAAM,EAAE;IAC1C,SAAS,eAAe,MAAW;QACjC,OAAO,WAAW,QAAQ;IAC5B;IAEA,OAAO;QACL;QACA;QACA,iBAAiB,CAAC,YAAiB,YAAmB,WAAW,YAAY;QAC7E,cAAc,CAAC,aAAgC,eAAe;QAC9D,OAAO;YAAE,kBAAkB,IAAM,MAAM,WAAY,CAAC,MAAM,WAAW;QAAC;QACtE,SAAS;IACV;AACH;;;;;AEtIA,oGAAoG;AACpG,uDAAuD;AACvD,wDAAgB;AA4BhB,uFAAuF;AACvF,4DAA4D;AAC5D,iEAAiE;AACjE,kEAAkE;AAClE,uDAAuD;AACvD,wDAAgB;AA6BhB;;;;;;;CAOG,GACH,mDAAgB;AAuChB,gDAAgB;AA8BhB,kDAAgB;AA/LhB;AAEA;AAoBA,6FAA6F;AAC7F,MAAM,QAAQ,CAAA,GAAA,wBAAe,AAAf;AAEd,4CAA4C;AAC5C,SAAS,MAAM,KAAa,EAAE,MAAc;IAC1C,IAAI,QAAQ,KAAK,SAAS,KAAM,IAAI,QAClC,MAAM,IAAI,MAAM,CAAA,sBAAA,EAAyB,MAAK,QAAA,EAAW,OAAM,CAAE;IAEnE,MAAM,MAAM,MAAM,IAAI,CAAC;QAAE;IAAM,GAAI,IAAI,CAAC;IACxC,IAAK,IAAI,IAAI,SAAS,GAAG,KAAK,GAAG,IAAK;QACpC,GAAG,CAAC,EAAE,GAAG,QAAQ;QACjB,WAAW;IACb;IACA,OAAO,IAAI,WAAW;AACxB;AAEA,SAAS,OAAO,CAAa,EAAE,CAAa;IAC1C,MAAM,MAAM,IAAI,WAAW,EAAE,MAAM;IACnC,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAC5B,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAEtB,OAAO;AACT;AAEA,SAAS,KAAK,IAAa;IACzB,IAAI,CAAC,OAAO,aAAa,CAAC,OAAO,MAAM,IAAI,MAAM;AACnD;AAIM,SAAU,mBACd,GAAe,EACf,GAAe,EACf,UAAkB,EAClB,CAAQ;IAER,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,KAAK;IACL,uDAAuD;IACvD,IAAI,IAAI,MAAM,GAAG,KAAK,MAAM,EAAE,CAAA,GAAA,oBAAW,AAAX,EAAY,CAAA,GAAA,oBAAW,AAAX,EAAY,sBAAsB;IAC5E,MAAM,EAAE,WAAW,UAAU,EAAE,UAAU,UAAU,EAAE,GAAG;IACxD,MAAM,MAAM,KAAK,IAAI,CAAC,aAAa;IACnC,IAAI,MAAM,KAAK,MAAM,IAAI,MAAM;IAC/B,MAAM,YAAY,CAAA,GAAA,oBAAW,AAAX,EAAY,KAAK,MAAM,IAAI,MAAM,EAAE;IACrD,MAAM,QAAQ,MAAM,GAAG;IACvB,MAAM,YAAY,MAAM,YAAY,IAAI,mBAAmB;IAC3D,MAAM,IAAI,IAAI,MAAkB;IAChC,MAAM,MAAM,EAAE,CAAA,GAAA,oBAAW,AAAX,EAAY,OAAO,KAAK,WAAW,MAAM,GAAG,IAAI;IAC9D,CAAC,CAAC,EAAE,GAAG,EAAE,CAAA,GAAA,oBAAW,AAAX,EAAY,KAAK,MAAM,GAAG,IAAI;IACvC,IAAK,IAAI,IAAI,GAAG,KAAK,KAAK,IAAK;QAC7B,MAAM,OAAO;YAAC,OAAO,KAAK,CAAC,CAAC,IAAI,EAAE;YAAG,MAAM,IAAI,GAAG;YAAI;SAAU;QAChE,CAAC,CAAC,EAAE,GAAG,EAAE,CAAA,GAAA,oBAAW,AAAX,KAAe;IAC1B;IACA,MAAM,sBAAsB,CAAA,GAAA,oBAAW,AAAX,KAAe;IAC3C,OAAO,oBAAoB,KAAK,CAAC,GAAG;AACtC;AAOM,SAAU,mBACd,GAAe,EACf,GAAe,EACf,UAAkB,EAClB,CAAS,EACT,CAAQ;IAER,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,KAAK;IACL,uDAAuD;IACvD,oFAAoF;IACpF,IAAI,IAAI,MAAM,GAAG,KAAK;QACpB,MAAM,QAAQ,KAAK,IAAI,CAAC,AAAC,IAAI,IAAK;QAClC,MAAM,EAAE,MAAM,CAAC;YAAE;QAAK,GAAI,MAAM,CAAC,CAAA,GAAA,oBAAW,AAAX,EAAY,sBAAsB,MAAM,CAAC,KAAK,MAAM;IACvF;IACA,IAAI,aAAa,SAAS,IAAI,MAAM,GAAG,KACrC,MAAM,IAAI,MAAM;IAClB,OACE,EAAE,MAAM,CAAC;QAAE,OAAO;IAAU,GACzB,MAAM,CAAC,KACP,MAAM,CAAC,MAAM,YAAY,GAC1B,2CAA2C;KAC1C,MAAM,CAAC,KACP,MAAM,CAAC,MAAM,IAAI,MAAM,EAAE,IACzB,MAAM;AAEb;AAUM,SAAU,cAAc,GAAe,EAAE,KAAa,EAAE,OAAa;IACzE,CAAA,GAAA,uBAAc,AAAd,EAAe,SAAS;QACtB,KAAK;QACL,GAAG;QACH,GAAG;QACH,GAAG;QACH,MAAM;IACP;IACD,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,IAAI,EAAE,GAAG;IAC7C,CAAA,GAAA,eAAM,AAAN,EAAO;IACP,KAAK;IACL,MAAM,MAAM,OAAO,SAAS,WAAW,CAAA,GAAA,oBAAW,AAAX,EAAY,QAAQ;IAC3D,MAAM,QAAQ,EAAE,QAAQ,CAAC,GAAG,MAAM;IAClC,MAAM,IAAI,KAAK,IAAI,CAAC,AAAC,CAAA,QAAQ,CAAA,IAAK,IAAI,uCAAuC;IAC7E,MAAM,eAAe,QAAQ,IAAI;IACjC,IAAI,KAAK,sBAAsB;IAC/B,IAAI,WAAW,OACb,MAAM,mBAAmB,KAAK,KAAK,cAAc;SAC5C,IAAI,WAAW,OACpB,MAAM,mBAAmB,KAAK,KAAK,cAAc,GAAG;SAC/C,IAAI,WAAW,kBACpB,0BAA0B;IAC1B,MAAM;SAEN,MAAM,IAAI,MAAM;IAElB,MAAM,IAAI,IAAI,MAAM;IACpB,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,IAAK;QAC9B,MAAM,IAAI,IAAI,MAAM;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YAC1B,MAAM,aAAa,IAAK,CAAA,IAAI,IAAI,CAAA;YAChC,MAAM,KAAK,IAAI,QAAQ,CAAC,YAAY,aAAa;YACjD,CAAC,CAAC,EAAE,GAAG,CAAA,GAAA,cAAG,AAAH,EAAI,MAAM,KAAK;QACxB;QACA,CAAC,CAAC,EAAE,GAAG;IACT;IACA,OAAO;AACT;AAEM,SAAU,WAAmC,KAAQ,EAAE,GAAyB;IACpF,6BAA6B;IAC7B,MAAM,QAAQ,IAAI,GAAG,CAAC,CAAC,IAAM,MAAM,IAAI,CAAC,GAAG,OAAO;IAClD,OAAO,CAAC,GAAM;QACZ,MAAM,CAAC,MAAM,MAAM,MAAM,KAAK,GAAG,MAAM,GAAG,CAAC,CAAC,MAC1C,IAAI,MAAM,CAAC,CAAC,KAAK,IAAM,MAAM,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,IAAI;QAEtD,IAAI,MAAM,GAAG,CAAC,MAAM,OAAO,cAAc;QACzC,IAAI,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG,CAAC,MAAM,QAAQ,oBAAoB;QAC7D,OAAO;YAAE;YAAG;QAAC;IACf;AACF;AAmBM,SAAU,aACd,KAA6B,EAC7B,UAAyB,EACzB,GAA0C;IAE1C,IAAI,OAAO,eAAe,YAAY,MAAM,IAAI,MAAM;IACtD,OAAO;QACL,yCAAyC;QACzC,sEAAsE;QACtE,aAAY,GAAe,EAAE,OAAsB;YACjD,MAAM,IAAI,cAAc,KAAK,GAAG;gBAAE,GAAG,GAAG;gBAAE,KAAK,IAAI,GAAG;gBAAE,GAAG,OAAO;YAAA;YAClE,MAAM,KAAK,MAAM,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE;YAC3C,MAAM,KAAK,MAAM,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE;YAC3C,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,aAAa;YAClC,EAAE,cAAc;YAChB,OAAO;QACT;QAEA,yCAAyC;QACzC,wEAAwE;QACxE,eAAc,GAAe,EAAE,OAAsB;YACnD,MAAM,IAAI,cAAc,KAAK,GAAG;gBAAE,GAAG,GAAG;gBAAE,KAAK,IAAI,SAAS;gBAAE,GAAG,OAAO;YAAA;YACxE,MAAM,IAAI,MAAM,UAAU,CAAC,WAAW,CAAC,CAAC,EAAE,GAAG,aAAa;YAC1D,EAAE,cAAc;YAChB,OAAO;QACT;IACD;AACH;;;AC5NC,CAAA,SAAU,OAAM,EAAE,OAAO;IACxB;IAEA,QAAQ;IACR,SAAS,OAAQ,GAAG,EAAE,GAAG;QACvB,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM,OAAO;IACnC;IAEA,uEAAuE;IACvE,oBAAoB;IACpB,SAAS,SAAU,IAAI,EAAE,SAAS;QAChC,KAAK,MAAM,GAAG;QACd,IAAI,WAAW,YAAa;QAC5B,SAAS,SAAS,GAAG,UAAU,SAAS;QACxC,KAAK,SAAS,GAAG,IAAI;QACrB,KAAK,SAAS,CAAC,WAAW,GAAG;IAC/B;IAEA,KAAK;IAEL,SAAS,GAAI,MAAM,EAAE,IAAI,EAAE,MAAM;QAC/B,IAAI,GAAG,IAAI,CAAC,SACV,OAAO;QAGT,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QAEd,oBAAoB;QACpB,IAAI,CAAC,GAAG,GAAG;QAEX,IAAI,WAAW,MAAM;YACnB,IAAI,SAAS,QAAQ,SAAS,MAAM;gBAClC,SAAS;gBACT,OAAO;YACT;YAEA,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,IAAI,UAAU;QAChD;IACF;IACA,IAAI,OAAO,YAAW,UACpB,QAAO,OAAO,GAAG;SAEjB,QAAQ,EAAE,GAAG;IAGf,GAAG,EAAE,GAAG;IACR,GAAG,QAAQ,GAAG;IAEd,IAAI;IACJ,IAAI;QACF,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,MAAM,KAAK,aAC5D,SAAS,OAAO,MAAM;aAEtB,SAAS,QAAQ,oBAAU,MAAM;IAErC,EAAE,OAAO,GAAG,CACZ;IAEA,GAAG,IAAI,GAAG,SAAS,KAAM,GAAG;QAC1B,IAAI,eAAe,IACjB,OAAO;QAGT,OAAO,QAAQ,QAAQ,OAAO,QAAQ,YACpC,IAAI,WAAW,CAAC,QAAQ,KAAK,GAAG,QAAQ,IAAI,MAAM,OAAO,CAAC,IAAI,KAAK;IACvE;IAEA,GAAG,GAAG,GAAG,SAAS,IAAK,IAAI,EAAE,KAAK;QAChC,IAAI,KAAK,GAAG,CAAC,SAAS,GAAG,OAAO;QAChC,OAAO;IACT;IAEA,GAAG,GAAG,GAAG,SAAS,IAAK,IAAI,EAAE,KAAK;QAChC,IAAI,KAAK,GAAG,CAAC,SAAS,GAAG,OAAO;QAChC,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,KAAM,MAAM,EAAE,IAAI,EAAE,MAAM;QACtD,IAAI,OAAO,WAAW,UACpB,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,MAAM;QAGxC,IAAI,OAAO,WAAW,UACpB,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,MAAM;QAGvC,IAAI,SAAS,OACX,OAAO;QAET,OAAO,SAAU,CAAA,OAAO,CAAA,KAAM,QAAQ,KAAK,QAAQ;QAEnD,SAAS,OAAO,QAAQ,GAAG,OAAO,CAAC,QAAQ;QAC3C,IAAI,QAAQ;QACZ,IAAI,MAAM,CAAC,EAAE,KAAK,KAAK;YACrB;YACA,IAAI,CAAC,QAAQ,GAAG;QAClB;QAEA,IAAI,QAAQ,OAAO,MAAM;YACvB,IAAI,SAAS,IACX,IAAI,CAAC,SAAS,CAAC,QAAQ,OAAO;iBACzB;gBACL,IAAI,CAAC,UAAU,CAAC,QAAQ,MAAM;gBAC9B,IAAI,WAAW,MACb,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM;YAE1C;;IAEJ;IAEA,GAAG,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,MAAM,EAAE,IAAI,EAAE,MAAM;QACnE,IAAI,SAAS,GAAG;YACd,IAAI,CAAC,QAAQ,GAAG;YAChB,SAAS,CAAC;QACZ;QACA,IAAI,SAAS,WAAW;YACtB,IAAI,CAAC,KAAK,GAAG;gBAAC,SAAS;aAAU;YACjC,IAAI,CAAC,MAAM,GAAG;QAChB,OAAO,IAAI,SAAS,kBAAkB;YACpC,IAAI,CAAC,KAAK,GAAG;gBACX,SAAS;gBACR,SAAS,YAAa;aACxB;YACD,IAAI,CAAC,MAAM,GAAG;QAChB,OAAO;YACL,OAAO,SAAS,mBAAmB,kBAAkB;YACrD,IAAI,CAAC,KAAK,GAAG;gBACX,SAAS;gBACR,SAAS,YAAa;gBACvB;aACD;YACD,IAAI,CAAC,MAAM,GAAG;QAChB;QAEA,IAAI,WAAW,MAAM;QAErB,oBAAoB;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,IAAI,MAAM;IACxC;IAEA,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,MAAM,EAAE,IAAI,EAAE,MAAM;QACjE,uBAAuB;QACvB,OAAO,OAAO,OAAO,MAAM,KAAK;QAChC,IAAI,OAAO,MAAM,IAAI,GAAG;YACtB,IAAI,CAAC,KAAK,GAAG;gBAAC;aAAE;YAChB,IAAI,CAAC,MAAM,GAAG;YACd,OAAO,IAAI;QACb;QAEA,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,OAAO,MAAM,GAAG;QACxC,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM;QAClC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;QAGlB,IAAI,GAAG;QACP,IAAI,MAAM;QACV,IAAI,WAAW,MACb,IAAK,IAAI,OAAO,MAAM,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,KAAK,EAAG;YACjD,IAAI,MAAM,CAAC,EAAE,GAAI,MAAM,CAAC,IAAI,EAAE,IAAI,IAAM,MAAM,CAAC,IAAI,EAAE,IAAI;YACzD,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,AAAC,KAAK,MAAO;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,AAAC,MAAO,KAAK,MAAQ;YACzC,OAAO;YACP,IAAI,OAAO,IAAI;gBACb,OAAO;gBACP;YACF;QACF;aACK,IAAI,WAAW,MACpB,IAAK,IAAI,GAAG,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,KAAK,EAAG;YAC5C,IAAI,MAAM,CAAC,EAAE,GAAI,MAAM,CAAC,IAAI,EAAE,IAAI,IAAM,MAAM,CAAC,IAAI,EAAE,IAAI;YACzD,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,AAAC,KAAK,MAAO;YAC9B,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,GAAG,AAAC,MAAO,KAAK,MAAQ;YACzC,OAAO;YACP,IAAI,OAAO,IAAI;gBACb,OAAO;gBACP;YACF;QACF;QAEF,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,SAAS,cAAe,MAAM,EAAE,KAAK;QACnC,IAAI,IAAI,OAAO,UAAU,CAAC;QAC1B,YAAY;QACZ,IAAI,KAAK,MAAM,KAAK,IAClB,OAAO,IAAI;aAEN,IAAI,KAAK,MAAM,KAAK,IACzB,OAAO,IAAI;aAEN,IAAI,KAAK,MAAM,KAAK,KACzB,OAAO,IAAI;aAEX,OAAO,OAAO,0BAA0B;IAE5C;IAEA,SAAS,aAAc,MAAM,EAAE,UAAU,EAAE,KAAK;QAC9C,IAAI,IAAI,cAAc,QAAQ;QAC9B,IAAI,QAAQ,KAAK,YACf,KAAK,cAAc,QAAQ,QAAQ,MAAM;QAE3C,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,MAAM,EAAE,KAAK,EAAE,MAAM;QAChE,iEAAiE;QACjE,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,AAAC,CAAA,OAAO,MAAM,GAAG,KAAI,IAAK;QAClD,IAAI,CAAC,KAAK,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM;QAClC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;QAGlB,iBAAiB;QACjB,IAAI,MAAM;QACV,IAAI,IAAI;QAER,IAAI;QACJ,IAAI,WAAW,MACb,IAAK,IAAI,OAAO,MAAM,GAAG,GAAG,KAAK,OAAO,KAAK,EAAG;YAC9C,IAAI,aAAa,QAAQ,OAAO,MAAM;YACtC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI;YACrB,IAAI,OAAO,IAAI;gBACb,OAAO;gBACP,KAAK;gBACL,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,MAAM;YACzB,OACE,OAAO;QAEX;aACK;YACL,IAAI,cAAc,OAAO,MAAM,GAAG;YAClC,IAAK,IAAI,cAAc,MAAM,IAAI,QAAQ,IAAI,OAAO,IAAI,OAAO,MAAM,EAAE,KAAK,EAAG;gBAC7E,IAAI,aAAa,QAAQ,OAAO,MAAM;gBACtC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,IAAI;gBACrB,IAAI,OAAO,IAAI;oBACb,OAAO;oBACP,KAAK;oBACL,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,MAAM;gBACzB,OACE,OAAO;YAEX;QACF;QAEA,IAAI,CAAC,MAAM;IACb;IAEA,SAAS,UAAW,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG;QACtC,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,MAAM,KAAK,GAAG,CAAC,IAAI,MAAM,EAAE;QAC/B,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,IAAK;YAChC,IAAI,IAAI,IAAI,UAAU,CAAC,KAAK;YAE5B,KAAK;YAEL,MAAM;YACN,IAAI,KAAK,IACP,IAAI,IAAI,KAAK;iBAGR,IAAI,KAAK,IACd,IAAI,IAAI,KAAK;iBAIb,IAAI;YAEN,OAAO,KAAK,KAAK,IAAI,KAAK;YAC1B,KAAK;QACP;QACA,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,MAAM,EAAE,IAAI,EAAE,KAAK;QAChE,qBAAqB;QACrB,IAAI,CAAC,KAAK,GAAG;YAAC;SAAE;QAChB,IAAI,CAAC,MAAM,GAAG;QAEd,8BAA8B;QAC9B,IAAK,IAAI,UAAU,GAAG,UAAU,GAAG,WAAW,WAAW,WAAW,KAClE;QAEF;QACA,UAAU,AAAC,UAAU,OAAQ;QAE7B,IAAI,QAAQ,OAAO,MAAM,GAAG;QAC5B,IAAI,MAAM,QAAQ;QAClB,IAAI,MAAM,KAAK,GAAG,CAAC,OAAO,QAAQ,OAAO;QAEzC,IAAI,OAAO;QACX,IAAK,IAAI,IAAI,OAAO,IAAI,KAAK,KAAK,QAAS;YACzC,OAAO,UAAU,QAAQ,GAAG,IAAI,SAAS;YAEzC,IAAI,CAAC,KAAK,CAAC;YACX,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,WACzB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;iBAEjB,IAAI,CAAC,MAAM,CAAC;QAEhB;QAEA,IAAI,QAAQ,GAAG;YACb,IAAI,MAAM;YACV,OAAO,UAAU,QAAQ,GAAG,OAAO,MAAM,EAAE;YAE3C,IAAK,IAAI,GAAG,IAAI,KAAK,IACnB,OAAO;YAGT,IAAI,CAAC,KAAK,CAAC;YACX,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,OAAO,WACzB,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI;iBAEjB,IAAI,CAAC,MAAM,CAAC;QAEhB;QAEA,IAAI,CAAC,MAAM;IACb;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,IAAI;QACrC,KAAK,KAAK,GAAG,IAAI,MAAM,IAAI,CAAC,MAAM;QAClC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAC/B,KAAK,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE;QAE/B,KAAK,MAAM,GAAG,IAAI,CAAC,MAAM;QACzB,KAAK,QAAQ,GAAG,IAAI,CAAC,QAAQ;QAC7B,KAAK,GAAG,GAAG,IAAI,CAAC,GAAG;IACrB;IAEA,SAAS,KAAM,IAAI,EAAE,GAAG;QACtB,KAAK,KAAK,GAAG,IAAI,KAAK;QACtB,KAAK,MAAM,GAAG,IAAI,MAAM;QACxB,KAAK,QAAQ,GAAG,IAAI,QAAQ;QAC5B,KAAK,GAAG,GAAG,IAAI,GAAG;IACpB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,IAAI;QACvC,KAAK,MAAM,IAAI;IACjB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS;QAC5B,IAAI,IAAI,IAAI,GAAG;QACf,IAAI,CAAC,IAAI,CAAC;QACV,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,IAAI;QAC3C,MAAO,IAAI,CAAC,MAAM,GAAG,KACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;QAE9B,OAAO,IAAI;IACb;IAEA,iCAAiC;IACjC,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,MAAO,IAAI,CAAC,MAAM,GAAG,KAAK,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE,KAAK,EACxD,IAAI,CAAC,MAAM;QAEb,OAAO,IAAI,CAAC,SAAS;IACvB;IAEA,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS;QAChC,SAAS;QACT,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,GACzC,IAAI,CAAC,QAAQ,GAAG;QAElB,OAAO,IAAI;IACb;IAEA,+DAA+D;IAC/D,oHAAoH;IACpH,IAAI,OAAO,WAAW,eAAe,OAAO,OAAO,GAAG,KAAK,YACzD,IAAI;QACF,GAAG,SAAS,CAAC,OAAO,GAAG,CAAC,8BAA8B,GAAG;IAC3D,EAAE,OAAO,GAAG;QACV,GAAG,SAAS,CAAC,OAAO,GAAG;IACzB;SAEA,GAAG,SAAS,CAAC,OAAO,GAAG;IAGzB,SAAS;QACP,OAAO,AAAC,CAAA,IAAI,CAAC,GAAG,GAAG,YAAY,OAAM,IAAK,IAAI,CAAC,QAAQ,CAAC,MAAM;IAChE;IAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4BA,GAEA,IAAI,QAAQ;QACV;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACD;IAED,IAAI,aAAa;QACf;QAAG;QACH;QAAI;QAAI;QAAI;QAAI;QAAI;QAAG;QACvB;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAClB;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAClB;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;QAClB;QAAG;QAAG;QAAG;QAAG;QAAG;QAAG;KACnB;IAED,IAAI,aAAa;QACf;QAAG;QACH;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAC5D;QAAU;QAAU;QAAU;QAAU;QAAU;QAAS;QAC3D;QAAU;QAAU;QAAU;QAAU;QAAU;QAAS;QAC3D;QAAS;QAAS;QAAS;QAAU;QAAU;QAAU;QACzD;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;KAC7D;IAED,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,IAAI,EAAE,OAAO;QACtD,OAAO,QAAQ;QACf,UAAU,UAAU,KAAK;QAEzB,IAAI;QACJ,IAAI,SAAS,MAAM,SAAS,OAAO;YACjC,MAAM;YACN,IAAI,MAAM;YACV,IAAI,QAAQ;YACZ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;gBACpC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE;gBACrB,IAAI,OAAO,AAAC,CAAA,AAAC,CAAA,AAAC,KAAK,MAAO,KAAI,IAAK,QAAO,EAAG,QAAQ,CAAC;gBACtD,QAAQ,AAAC,MAAO,KAAK,MAAQ;gBAC7B,OAAO;gBACP,IAAI,OAAO,IAAI;oBACb,OAAO;oBACP;gBACF;gBACA,IAAI,UAAU,KAAK,MAAM,IAAI,CAAC,MAAM,GAAG,GACrC,MAAM,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,GAAG,OAAO;qBAEtC,MAAM,OAAO;YAEjB;YACA,IAAI,UAAU,GACZ,MAAM,MAAM,QAAQ,CAAC,MAAM;YAE7B,MAAO,IAAI,MAAM,GAAG,YAAY,EAC9B,MAAM,MAAM;YAEd,IAAI,IAAI,CAAC,QAAQ,KAAK,GACpB,MAAM,MAAM;YAEd,OAAO;QACT;QAEA,IAAI,SAAU,CAAA,OAAO,CAAA,KAAM,QAAQ,KAAK,QAAQ,IAAI;YAClD,uEAAuE;YACvE,IAAI,YAAY,UAAU,CAAC,KAAK;YAChC,6CAA6C;YAC7C,IAAI,YAAY,UAAU,CAAC,KAAK;YAChC,MAAM;YACN,IAAI,IAAI,IAAI,CAAC,KAAK;YAClB,EAAE,QAAQ,GAAG;YACb,MAAO,CAAC,EAAE,MAAM,GAAI;gBAClB,IAAI,IAAI,EAAE,KAAK,CAAC,WAAW,QAAQ,CAAC;gBACpC,IAAI,EAAE,KAAK,CAAC;gBAEZ,IAAI,CAAC,EAAE,MAAM,IACX,MAAM,KAAK,CAAC,YAAY,EAAE,MAAM,CAAC,GAAG,IAAI;qBAExC,MAAM,IAAI;YAEd;YACA,IAAI,IAAI,CAAC,MAAM,IACb,MAAM,MAAM;YAEd,MAAO,IAAI,MAAM,GAAG,YAAY,EAC9B,MAAM,MAAM;YAEd,IAAI,IAAI,CAAC,QAAQ,KAAK,GACpB,MAAM,MAAM;YAEd,OAAO;QACT;QAEA,OAAO,OAAO;IAChB;IAEA,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS;QAC/B,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,EAAE;QACvB,IAAI,IAAI,CAAC,MAAM,KAAK,GAClB,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;aAClB,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,IAAI,CAAC,KAAK,CAAC,EAAE,KAAK,MAChD,0DAA0D;QAC1D,OAAO,mBAAoB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;aACtC,IAAI,IAAI,CAAC,MAAM,GAAG,GACvB,OAAO,OAAO;QAEhB,OAAO,AAAC,IAAI,CAAC,QAAQ,KAAK,IAAK,CAAC,MAAM;IACxC;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS;QAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,IAAI;IAC3B;IAEA,IAAI,QACF,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,MAAM,EAAE,MAAM;QACvD,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,QAAQ;IAC1C;IAGF,GAAG,SAAS,CAAC,OAAO,GAAG,SAAS,QAAS,MAAM,EAAE,MAAM;QACrD,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,QAAQ;IACzC;IAEA,IAAI,WAAW,SAAS,SAAU,SAAS,EAAE,IAAI;QAC/C,IAAI,UAAU,WAAW,EACvB,OAAO,UAAU,WAAW,CAAC;QAE/B,OAAO,IAAI,UAAU;IACvB;IAEA,GAAG,SAAS,CAAC,WAAW,GAAG,SAAS,YAAa,SAAS,EAAE,MAAM,EAAE,MAAM;QACxE,IAAI,CAAC,MAAM;QAEX,IAAI,aAAa,IAAI,CAAC,UAAU;QAChC,IAAI,YAAY,UAAU,KAAK,GAAG,CAAC,GAAG;QACtC,OAAO,cAAc,WAAW;QAChC,OAAO,YAAY,GAAG;QAEtB,IAAI,MAAM,SAAS,WAAW;QAC9B,IAAI,UAAU,WAAW,OAAO,OAAO;QACvC,IAAI,CAAC,iBAAiB,QAAQ,CAAC,KAAK;QACpC,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,cAAc,GAAG,SAAS,eAAgB,GAAG,EAAE,UAAU;QACpE,IAAI,WAAW;QACf,IAAI,QAAQ;QAEZ,IAAK,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YAC/C,IAAI,OAAO,AAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,QAAS;YAEtC,GAAG,CAAC,WAAW,GAAG,OAAO;YACzB,IAAI,WAAW,IAAI,MAAM,EACvB,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,IAAK;YAElC,IAAI,WAAW,IAAI,MAAM,EACvB,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,KAAM;YAGnC,IAAI,UAAU,GAAG;gBACf,IAAI,WAAW,IAAI,MAAM,EACvB,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,KAAM;gBAEnC,QAAQ;gBACR,QAAQ;YACV,OAAO;gBACL,QAAQ,SAAS;gBACjB,SAAS;YACX;QACF;QAEA,IAAI,WAAW,IAAI,MAAM,EAAE;YACzB,GAAG,CAAC,WAAW,GAAG;YAElB,MAAO,WAAW,IAAI,MAAM,CAC1B,GAAG,CAAC,WAAW,GAAG;QAEtB;IACF;IAEA,GAAG,SAAS,CAAC,cAAc,GAAG,SAAS,eAAgB,GAAG,EAAE,UAAU;QACpE,IAAI,WAAW,IAAI,MAAM,GAAG;QAC5B,IAAI,QAAQ;QAEZ,IAAK,IAAI,IAAI,GAAG,QAAQ,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YAC/C,IAAI,OAAO,AAAC,IAAI,CAAC,KAAK,CAAC,EAAE,IAAI,QAAS;YAEtC,GAAG,CAAC,WAAW,GAAG,OAAO;YACzB,IAAI,YAAY,GACd,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,IAAK;YAElC,IAAI,YAAY,GACd,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,KAAM;YAGnC,IAAI,UAAU,GAAG;gBACf,IAAI,YAAY,GACd,GAAG,CAAC,WAAW,GAAG,AAAC,QAAQ,KAAM;gBAEnC,QAAQ;gBACR,QAAQ;YACV,OAAO;gBACL,QAAQ,SAAS;gBACjB,SAAS;YACX;QACF;QAEA,IAAI,YAAY,GAAG;YACjB,GAAG,CAAC,WAAW,GAAG;YAElB,MAAO,YAAY,EACjB,GAAG,CAAC,WAAW,GAAG;QAEtB;IACF;IAEA,IAAI,KAAK,KAAK,EACZ,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,CAAC;QAC9C,OAAO,KAAK,KAAK,KAAK,CAAC;IACzB;SAEA,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS,WAAY,CAAC;QAC9C,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,KAAK,QAAQ;YACf,KAAK;YACL,OAAO;QACT;QACA,IAAI,KAAK,MAAM;YACb,KAAK;YACL,OAAO;QACT;QACA,IAAI,KAAK,KAAK;YACZ,KAAK;YACL,OAAO;QACT;QACA,IAAI,KAAK,MAAM;YACb,KAAK;YACL,OAAO;QACT;QACA,OAAO,IAAI;IACb;IAGF,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS,UAAW,CAAC;QAC5C,YAAY;QACZ,IAAI,MAAM,GAAG,OAAO;QAEpB,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI,AAAC,CAAA,IAAI,MAAK,MAAO,GAAG;YACtB,KAAK;YACL,OAAO;QACT;QACA,IAAI,AAAC,CAAA,IAAI,IAAG,MAAO,GAAG;YACpB,KAAK;YACL,OAAO;QACT;QACA,IAAI,AAAC,CAAA,IAAI,GAAE,MAAO,GAAG;YACnB,KAAK;YACL,OAAO;QACT;QACA,IAAI,AAAC,CAAA,IAAI,GAAE,MAAO,GAAG;YACnB,KAAK;YACL,OAAO;QACT;QACA,IAAI,AAAC,CAAA,IAAI,GAAE,MAAO,GAChB;QAEF,OAAO;IACT;IAEA,qCAAqC;IACrC,GAAG,SAAS,CAAC,SAAS,GAAG,SAAS;QAChC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,EAAE;QACnC,IAAI,KAAK,IAAI,CAAC,UAAU,CAAC;QACzB,OAAO,AAAC,CAAA,IAAI,CAAC,MAAM,GAAG,CAAA,IAAK,KAAK;IAClC;IAEA,SAAS,WAAY,GAAG;QACtB,IAAI,IAAI,IAAI,MAAM,IAAI,SAAS;QAE/B,IAAK,IAAI,MAAM,GAAG,MAAM,EAAE,MAAM,EAAE,MAAO;YACvC,IAAI,MAAM,AAAC,MAAM,KAAM;YACvB,IAAI,OAAO,MAAM;YAEjB,CAAC,CAAC,IAAI,GAAG,AAAC,IAAI,KAAK,CAAC,IAAI,KAAK,OAAQ;QACvC;QAEA,OAAO;IACT;IAEA,+BAA+B;IAC/B,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS;QAC/B,IAAI,IAAI,CAAC,MAAM,IAAI,OAAO;QAE1B,IAAI,IAAI;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,EAAE,IAAK;YACpC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;YACpC,KAAK;YACL,IAAI,MAAM,IAAI;QAChB;QACA,OAAO;IACT;IAEA,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS;QACjC,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,KAAK;IACtC;IAEA,GAAG,SAAS,CAAC,MAAM,GAAG,SAAS,OAAQ,KAAK;QAC1C,IAAI,IAAI,CAAC,QAAQ,KAAK,GACpB,OAAO,IAAI,CAAC,GAAG,GAAG,KAAK,CAAC,OAAO,KAAK,CAAC;QAEvC,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,GAAG,SAAS,CAAC,QAAQ,GAAG,SAAS,SAAU,KAAK;QAC9C,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,IACrB,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,KAAK,CAAC,GAAG,IAAI;QAEvC,OAAO,IAAI,CAAC,KAAK;IACnB;IAEA,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS;QAC5B,OAAO,IAAI,CAAC,QAAQ,KAAK;IAC3B;IAEA,kCAAkC;IAClC,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS;QAC1B,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI;IAC1B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS;QAC3B,IAAI,CAAC,IAAI,CAAC,MAAM,IACd,IAAI,CAAC,QAAQ,IAAI;QAGnB,OAAO,IAAI;IACb;IAEA,gCAAgC;IAChC,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,MAAO,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAC7B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG;QAG9B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAC9B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE;QAG9C,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,AAAD,MAAO;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC;IACnB;IAEA,uBAAuB;IACvB,GAAG,SAAS,CAAC,EAAE,GAAG,SAAS,GAAI,GAAG;QAChC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,GAAG,CAAC;QACtD,OAAO,IAAI,KAAK,GAAG,GAAG,CAAC,IAAI;IAC7B;IAEA,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACvD,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI;IAC9B;IAEA,iCAAiC;IACjC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,4BAA4B;QAC5B,IAAI;QACJ,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAC1B,IAAI;aAEJ,IAAI,IAAI;QAGV,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAC5B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI,KAAK,CAAC,EAAE;QAG9C,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM;QAEtB,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,AAAD,MAAO;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB;IAEA,wBAAwB;IACxB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACvD,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI;IAC9B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxD,OAAO,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI;IAC/B;IAEA,iCAAiC;IACjC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,GAAG;QACtC,sBAAsB;QACtB,IAAI;QACJ,IAAI;QACJ,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE;YAC5B,IAAI,IAAI;YACR,IAAI;QACN,OAAO;YACL,IAAI;YACJ,IAAI,IAAI;QACV;QAEA,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAC5B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;QAGzC,IAAI,IAAI,KAAK,GACX,MAAO,IAAI,EAAE,MAAM,EAAE,IACnB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;QAI9B,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM;QAEtB,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,OAAO,AAAC,CAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,QAAQ,AAAD,MAAO;QAC1C,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB;IAEA,wBAAwB;IACxB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QACvD,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI;IAC9B;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACxD,OAAO,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI;IAC/B;IAEA,uCAAuC;IACvC,GAAG,SAAS,CAAC,KAAK,GAAG,SAAS,MAAO,KAAK;QACxC,OAAO,OAAO,UAAU,YAAY,SAAS;QAE7C,IAAI,cAAc,KAAK,IAAI,CAAC,QAAQ,MAAM;QAC1C,IAAI,WAAW,QAAQ;QAEvB,wCAAwC;QACxC,IAAI,CAAC,OAAO,CAAC;QAEb,IAAI,WAAW,GACb;QAGF,wBAAwB;QACxB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAC/B,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;QAGnC,qBAAqB;QACrB,IAAI,WAAW,GACb,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAI,aAAc,KAAK;QAGvD,4BAA4B;QAC5B,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,KAAK;QACtC,OAAO,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC5B;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG,EAAE,GAAG;QACzC,OAAO,OAAO,QAAQ,YAAY,OAAO;QAEzC,IAAI,MAAM,AAAC,MAAM,KAAM;QACvB,IAAI,OAAO,MAAM;QAEjB,IAAI,CAAC,OAAO,CAAC,MAAM;QAEnB,IAAI,KACF,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAI,KAAK;aAE1C,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,CAAE,CAAA,KAAK,IAAG;QAGhD,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,+BAA+B;IAC/B,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,IAAI;QAEJ,sBAAsB;QACtB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;YAC7C,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,IAAI,CAAC,IAAI,CAAC;YACd,IAAI,CAAC,QAAQ,IAAI;YACjB,OAAO,IAAI,CAAC,SAAS;QAEvB,sBAAsB;QACtB,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,IAAI,QAAQ,KAAK,GAAG;YACpD,IAAI,QAAQ,GAAG;YACf,IAAI,IAAI,CAAC,IAAI,CAAC;YACd,IAAI,QAAQ,GAAG;YACf,OAAO,EAAE,SAAS;QACpB;QAEA,sBAAsB;QACtB,IAAI,GAAG;QACP,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE;YAC5B,IAAI,IAAI;YACR,IAAI;QACN,OAAO;YACL,IAAI;YACJ,IAAI,IAAI;QACV;QAEA,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;YACjC,IAAI,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAM,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YAC1C,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;YACpB,QAAQ,MAAM;QAChB;QACA,MAAO,UAAU,KAAK,IAAI,EAAE,MAAM,EAAE,IAAK;YACvC,IAAI,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YACvB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;YACpB,QAAQ,MAAM;QAChB;QAEA,IAAI,CAAC,MAAM,GAAG,EAAE,MAAM;QACtB,IAAI,UAAU,GAAG;YACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG;YAC1B,IAAI,CAAC,MAAM;QACb,6BAA6B;QAC7B,OAAO,IAAI,MAAM,IAAI,EACnB,MAAO,IAAI,EAAE,MAAM,EAAE,IACnB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;QAI9B,OAAO,IAAI;IACb;IAEA,sBAAsB;IACtB,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,IAAI;QACJ,IAAI,IAAI,QAAQ,KAAK,KAAK,IAAI,CAAC,QAAQ,KAAK,GAAG;YAC7C,IAAI,QAAQ,GAAG;YACf,MAAM,IAAI,CAAC,GAAG,CAAC;YACf,IAAI,QAAQ,IAAI;YAChB,OAAO;QACT,OAAO,IAAI,IAAI,QAAQ,KAAK,KAAK,IAAI,CAAC,QAAQ,KAAK,GAAG;YACpD,IAAI,CAAC,QAAQ,GAAG;YAChB,MAAM,IAAI,GAAG,CAAC,IAAI;YAClB,IAAI,CAAC,QAAQ,GAAG;YAChB,OAAO;QACT;QAEA,IAAI,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,EAAE,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAEvD,OAAO,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI;IAC9B;IAEA,sCAAsC;IACtC,GAAG,SAAS,CAAC,IAAI,GAAG,SAAS,KAAM,GAAG;QACpC,6BAA6B;QAC7B,IAAI,IAAI,QAAQ,KAAK,GAAG;YACtB,IAAI,QAAQ,GAAG;YACf,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;YAClB,IAAI,QAAQ,GAAG;YACf,OAAO,EAAE,SAAS;QAEpB,8BAA8B;QAC9B,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,GAAG;YAC9B,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,IAAI,CAAC;YACV,IAAI,CAAC,QAAQ,GAAG;YAChB,OAAO,IAAI,CAAC,SAAS;QACvB;QAEA,0CAA0C;QAC1C,IAAI,MAAM,IAAI,CAAC,GAAG,CAAC;QAEnB,yBAAyB;QACzB,IAAI,QAAQ,GAAG;YACb,IAAI,CAAC,QAAQ,GAAG;YAChB,IAAI,CAAC,MAAM,GAAG;YACd,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG;YAChB,OAAO,IAAI;QACb;QAEA,QAAQ;QACR,IAAI,GAAG;QACP,IAAI,MAAM,GAAG;YACX,IAAI,IAAI;YACR,IAAI;QACN,OAAO;YACL,IAAI;YACJ,IAAI,IAAI;QACV;QAEA,IAAI,QAAQ;QACZ,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;YACjC,IAAI,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAM,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YAC1C,QAAQ,KAAK;YACb,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;QACtB;QACA,MAAO,UAAU,KAAK,IAAI,EAAE,MAAM,EAAE,IAAK;YACvC,IAAI,AAAC,CAAA,EAAE,KAAK,CAAC,EAAE,GAAG,CAAA,IAAK;YACvB,QAAQ,KAAK;YACb,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,IAAI;QACtB;QAEA,yBAAyB;QACzB,IAAI,UAAU,KAAK,IAAI,EAAE,MAAM,IAAI,MAAM,IAAI,EAC3C,MAAO,IAAI,EAAE,MAAM,EAAE,IACnB,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE;QAI9B,IAAI,CAAC,MAAM,GAAG,KAAK,GAAG,CAAC,IAAI,CAAC,MAAM,EAAE;QAEpC,IAAI,MAAM,IAAI,EACZ,IAAI,CAAC,QAAQ,GAAG;QAGlB,OAAO,IAAI,CAAC,MAAM;IACpB;IAEA,6BAA6B;IAC7B,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,IAAK,GAAG;QAClC,OAAO,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;IAC3B;IAEA,SAAS,WAAY,IAAI,EAAE,GAAG,EAAE,GAAG;QACjC,IAAI,QAAQ,GAAG,IAAI,QAAQ,GAAG,KAAK,QAAQ;QAC3C,IAAI,MAAM,AAAC,KAAK,MAAM,GAAG,IAAI,MAAM,GAAI;QACvC,IAAI,MAAM,GAAG;QACb,MAAM,AAAC,MAAM,IAAK;QAElB,wEAAwE;QACxE,IAAI,IAAI,KAAK,KAAK,CAAC,EAAE,GAAG;QACxB,IAAI,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;QACvB,IAAI,IAAI,IAAI;QAEZ,IAAI,KAAK,IAAI;QACb,IAAI,QAAQ,AAAC,IAAI,YAAa;QAC9B,IAAI,KAAK,CAAC,EAAE,GAAG;QAEf,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,mEAAmE;YACnE,yCAAyC;YACzC,IAAI,SAAS,UAAU;YACvB,IAAI,QAAQ,QAAQ;YACpB,IAAI,OAAO,KAAK,GAAG,CAAC,GAAG,IAAI,MAAM,GAAG;YACpC,IAAK,IAAI,IAAI,KAAK,GAAG,CAAC,GAAG,IAAI,KAAK,MAAM,GAAG,IAAI,KAAK,MAAM,IAAK;gBAC7D,IAAI,IAAI,AAAC,IAAI,IAAK;gBAClB,IAAI,KAAK,KAAK,CAAC,EAAE,GAAG;gBACpB,IAAI,IAAI,KAAK,CAAC,EAAE,GAAG;gBACnB,IAAI,IAAI,IAAI;gBACZ,UAAU,AAAC,IAAI,YAAa;gBAC5B,QAAQ,IAAI;YACd;YACA,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ;YACvB,QAAQ,SAAS;QACnB;QACA,IAAI,UAAU,GACZ,IAAI,KAAK,CAAC,EAAE,GAAG,QAAQ;aAEvB,IAAI,MAAM;QAGZ,OAAO,IAAI,MAAM;IACnB;IAEA,0EAA0E;IAC1E,+EAA+E;IAC/E,4CAA4C;IAC5C,IAAI,cAAc,SAAS,YAAa,IAAI,EAAE,GAAG,EAAE,GAAG;QACpD,IAAI,IAAI,KAAK,KAAK;QAClB,IAAI,IAAI,IAAI,KAAK;QACjB,IAAI,IAAI,IAAI,KAAK;QACjB,IAAI,IAAI;QACR,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QACjB,IAAI,KAAK,CAAC,CAAC,EAAE,GAAG;QAChB,IAAI,MAAM,KAAK;QACf,IAAI,MAAM,OAAO;QAEjB,IAAI,QAAQ,GAAG,KAAK,QAAQ,GAAG,IAAI,QAAQ;QAC3C,IAAI,MAAM,GAAG;QACb,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,IAAI,KAAK,AAAE,CAAA,AAAC,IAAI,KAAM,CAAA,IAAM,CAAA,AAAC,CAAA,MAAM,MAAK,KAAM,EAAC,IAAM;QACrD,IAAI,AAAE,CAAA,AAAC,KAAM,CAAA,QAAQ,EAAC,IAAM,CAAA,IAAM,CAAA,OAAO,EAAC,IAAM;QAChD,MAAM;QACN,SAAS,GACT,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,MAAM,KAAK,IAAI,CAAC,KAAK;QACrB,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,KAAK,IAAI,CAAC,KAAK;QACpB,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;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KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK,OAAQ;QAClC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,MAAM,AAAC,MAAM,KAAK,IAAI,CAAC,KAAK,OAAQ;QACpC,KAAK,AAAC,KAAK,KAAK,IAAI,CAAC,KAAK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IAAI,QAAQ,YAAY,QAAQ,SAC9B,OAAO;QAET,+DAA+D;QAC/D,IAAI,OAAO;QACX,kCAAkC;QAClC,IAAI,QAAQ,YAAY,QAAQ,SAAS;YACvC,QAAQ;YACR,SAAS;QACX,OAEK,IAAI,QAAQ,YAAY,QAAQ,SAAS;YAC5C,QAAQ;YACR,SAAS;QACX,OAEK,IAAI,QAAQ,YAAY,SAAS,WAAW;YAC/C,QAAQ;YACR,SAAS;QACX;QAEA,2DAA2D;QAC3D,kCAAkC;QAClC,IAAI,QAAQ;YAAE,CAAA,cAAe,IAAI,KAAK,IAAK;SAAO;QAElD,uDAAuD;QACvD,MAAO,QAAQ,EAAG;YAEhB,kDAAkD;YAClD,IAAI,OAAO,cAAe,IAAK,CAAA,QAAQ,CAAA;YAEvC,2CAA2C;YAC3C,MAAM,IAAI,CAAC,OAAQ,OAAO;YAE1B,4BAA4B;YAC5B,SAAS;QACX;QAEA,mCAAmC;QACnC,OAAO;IACT;AACF;AAEA,QAAQ,WAAW,GAAG;AACtB,QAAQ,WAAW,GAAG;;;AEjoBtB;;;;;;;;;;;;;;;;;;;;;CAqBG,GAEH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA2GG,GAEH;A,O,c,C,S,c;I,O;A;A,Q,G,G,Q,E,G,Q,M,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,I,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,Q,E,G,Q,M,G,Q,M,G,Q,Q,G,Q,I,G,Q,O,G,Q,I,G,Q,O,G,Q,Q,G,Q,Y,G,Q,a,G,Q,K,G,Q,wB,G,Q,kB,G,Q,S,G,Q,Q,G,Q,Q,G,Q,M,G,Q,O,G,Q,K,G,Q,W,G,Q,S,G,Q,Y,G,Q,U,G,Q,K,G,Q,G,G,Q,M,G,Q,I,G,Q,Y,G,Q,W,G,Q,c,G,Q,qB,G,Q,gB,G,Q,M,G,Q,kB,G,Q,e,G,K;A,Q,Q,G,Q,I,G,Q,I,G,Q,I,G,Q,wB,G,Q,K,G,Q,G,G,Q,I,G,Q,M,G,Q,K,G,Q,G,G,Q,K,G,Q,G,G,Q,M,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,K,G,Q,I,G,Q,G,G,Q,G,G,Q,G,G,Q,G,G,K;AAEA,MAAA,WAAA,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AC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI;QAChC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,GAAG;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,EAAE,EAAE,IAAI;QAChC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,IAAI;QACpC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,GAAG;QACnC,IAAI,MAAM,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,GAAG,EAAE,IAAI;QACrC,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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-4c503020227742a8.js","src/index.ts","node_modules/@metaplex-foundation/umi-bundle-defaults/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-bundle-defaults/src/index.ts","node_modules/@metaplex-foundation/umi/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-options/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-options/dist/esm/common.mjs","node_modules/@metaplex-foundation/umi-options/src/common.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/@metaplex-foundation/umi-options/dist/esm/unwrapOption.mjs","node_modules/@metaplex-foundation/umi-options/src/unwrapOption.ts","node_modules/@metaplex-foundation/umi-public-keys/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-public-keys/dist/esm/common.mjs","node_modules/@metaplex-foundation/umi-public-keys/src/common.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/base10.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/base10.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/baseX.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/baseX.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/errors.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/base16.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/base16.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/base58.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/base58.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/base64.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/base64.ts","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/bytes.mjs","node_modules/@metaplex-foundation/umi-serializers-core/src/bytes.ts","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-serializers-core/src/errors.ts","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/fixSerializer.mjs","node_modules/@metaplex-foundation/umi-serializers-core/src/fixSerializer.ts","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/mapSerializer.mjs","node_modules/@metaplex-foundation/umi-serializers-core/src/mapSerializer.ts","node_modules/@metaplex-foundation/umi-serializers-core/dist/esm/reverseSerializer.mjs","node_modules/@metaplex-foundation/umi-serializers-core/src/reverseSerializer.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/baseXReslice.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/baseXReslice.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/nullCharacters.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/nullCharacters.ts","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/esm/utf8.mjs","node_modules/@metaplex-foundation/umi-serializers-encodings/src/utf8.ts","node_modules/@metaplex-foundation/umi-public-keys/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-public-keys/src/errors.ts","node_modules/@metaplex-foundation/umi/dist/esm/serializersInternal.mjs","node_modules/@metaplex-foundation/umi/src/serializersInternal.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/common.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/common.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/errors.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/f32.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/f32.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/utils.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/utils.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/f64.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/f64.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/i8.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/i8.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/i16.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/i16.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/i32.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/i32.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/i64.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/i64.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/i128.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/i128.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/u8.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/u8.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/u16.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/u16.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/u32.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/u32.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/u64.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/u64.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/u128.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/u128.ts","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/esm/shortU16.mjs","node_modules/@metaplex-foundation/umi-serializers-numbers/src/shortU16.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/array.mjs","node_modules/@metaplex-foundation/umi-serializers/src/array.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-serializers/src/errors.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/utils.mjs","node_modules/@metaplex-foundation/umi-serializers/src/utils.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/sumSerializerSizes.mjs","node_modules/@metaplex-foundation/umi-serializers/src/sumSerializerSizes.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/bitArray.mjs","node_modules/@metaplex-foundation/umi-serializers/src/bitArray.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/bool.mjs","node_modules/@metaplex-foundation/umi-serializers/src/bool.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/bytes.mjs","node_modules/@metaplex-foundation/umi-serializers/src/bytes.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/dataEnum.mjs","node_modules/@metaplex-foundation/umi-serializers/src/dataEnum.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/maxSerializerSizes.mjs","node_modules/@metaplex-foundation/umi-serializers/src/maxSerializerSizes.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/map.mjs","node_modules/@metaplex-foundation/umi-serializers/src/map.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/nullable.mjs","node_modules/@metaplex-foundation/umi-serializers/src/nullable.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/option.mjs","node_modules/@metaplex-foundation/umi-serializers/src/option.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/publicKey.mjs","node_modules/@metaplex-foundation/umi-serializers/src/publicKey.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/scalarEnum.mjs","node_modules/@metaplex-foundation/umi-serializers/src/scalarEnum.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/set.mjs","node_modules/@metaplex-foundation/umi-serializers/src/set.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/string.mjs","node_modules/@metaplex-foundation/umi-serializers/src/string.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/struct.mjs","node_modules/@metaplex-foundation/umi-serializers/src/struct.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/tuple.mjs","node_modules/@metaplex-foundation/umi-serializers/src/tuple.ts","node_modules/@metaplex-foundation/umi-serializers/dist/esm/unit.mjs","node_modules/@metaplex-foundation/umi-serializers/src/unit.ts","node_modules/@metaplex-foundation/umi/dist/esm/Account.mjs","node_modules/@metaplex-foundation/umi/src/Account.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/UnexpectedAccountError.mjs","node_modules/@metaplex-foundation/umi/src/errors/UnexpectedAccountError.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/SdkError.mjs","node_modules/@metaplex-foundation/umi/src/errors/SdkError.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/UmiError.mjs","node_modules/@metaplex-foundation/umi/src/errors/UmiError.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/AccountNotFoundError.mjs","node_modules/@metaplex-foundation/umi/src/errors/AccountNotFoundError.ts","node_modules/@metaplex-foundation/umi/dist/esm/Amount.mjs","node_modules/@metaplex-foundation/umi/src/Amount.ts","node_modules/@metaplex-foundation/umi/dist/esm/BigInt.mjs","node_modules/@metaplex-foundation/umi/src/BigInt.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/UnexpectedAmountError.mjs","node_modules/@metaplex-foundation/umi/src/errors/UnexpectedAmountError.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/AmountMismatchError.mjs","node_modules/@metaplex-foundation/umi/src/errors/AmountMismatchError.ts","node_modules/@metaplex-foundation/umi/dist/esm/Cluster.mjs","node_modules/@metaplex-foundation/umi/src/Cluster.ts","node_modules/@metaplex-foundation/umi/dist/esm/Context.mjs","node_modules/@metaplex-foundation/umi/src/Context.ts","node_modules/@metaplex-foundation/umi/dist/esm/DownloaderInterface.mjs","node_modules/@metaplex-foundation/umi/src/DownloaderInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/InterfaceImplementationMissingError.mjs","node_modules/@metaplex-foundation/umi/src/errors/InterfaceImplementationMissingError.ts","node_modules/@metaplex-foundation/umi/dist/esm/EddsaInterface.mjs","node_modules/@metaplex-foundation/umi/src/EddsaInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/HttpInterface.mjs","node_modules/@metaplex-foundation/umi/src/HttpInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/ProgramRepositoryInterface.mjs","node_modules/@metaplex-foundation/umi/src/ProgramRepositoryInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/RpcInterface.mjs","node_modules/@metaplex-foundation/umi/src/RpcInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/SerializerInterface.mjs","node_modules/@metaplex-foundation/umi/src/SerializerInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/Signer.mjs","node_modules/@metaplex-foundation/umi/src/Signer.ts","node_modules/@metaplex-foundation/umi/dist/esm/utils/arrays.mjs","node_modules/@metaplex-foundation/umi/src/utils/arrays.ts","node_modules/@metaplex-foundation/umi/dist/esm/TransactionFactoryInterface.mjs","node_modules/@metaplex-foundation/umi/src/TransactionFactoryInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/UploaderInterface.mjs","node_modules/@metaplex-foundation/umi/src/UploaderInterface.ts","node_modules/@metaplex-foundation/umi/dist/esm/DateTime.mjs","node_modules/@metaplex-foundation/umi/src/DateTime.ts","node_modules/@metaplex-foundation/umi/dist/esm/GenericFile.mjs","node_modules/@metaplex-foundation/umi/src/GenericFile.ts","node_modules/@metaplex-foundation/umi/dist/esm/utils/randomStrings.mjs","node_modules/@metaplex-foundation/umi/src/utils/randomStrings.ts","node_modules/@metaplex-foundation/umi/dist/esm/HttpRequest.mjs","node_modules/@metaplex-foundation/umi/src/HttpRequest.ts","node_modules/@metaplex-foundation/umi/dist/esm/Umi.mjs","node_modules/@metaplex-foundation/umi/src/Umi.ts","node_modules/@metaplex-foundation/umi/dist/esm/errors/ProgramError.mjs","node_modules/@metaplex-foundation/umi/src/errors/ProgramError.ts","node_modules/@metaplex-foundation/umi-bundle-defaults/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-bundle-defaults/src/plugin.ts","node_modules/@metaplex-foundation/umi-downloader-http/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-downloader-http/dist/esm/createHttpDownloader.mjs","node_modules/@metaplex-foundation/umi-downloader-http/src/createHttpDownloader.ts","node_modules/@metaplex-foundation/umi-downloader-http/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-downloader-http/src/plugin.ts","node_modules/@metaplex-foundation/umi-eddsa-web3js/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-eddsa-web3js/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-eddsa-web3js/src/plugin.ts","node_modules/@metaplex-foundation/umi-eddsa-web3js/dist/esm/createWeb3JsEddsa.mjs","node_modules/@metaplex-foundation/umi-eddsa-web3js/src/createWeb3JsEddsa.ts","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/esm/Instruction.mjs","node_modules/@metaplex-foundation/umi-web3js-adapters/src/Instruction.ts","node_modules/@solana/web3.js/lib/index.browser.esm.js","node_modules/@solana/web3.js/src/utils/ed25519.ts","node_modules/@solana/web3.js/src/utils/to-buffer.ts","node_modules/@solana/web3.js/src/utils/borsh-schema.ts","node_modules/@solana/web3.js/src/publickey.ts","node_modules/@solana/web3.js/src/account.ts","node_modules/@solana/web3.js/src/bpf-loader-deprecated.ts","node_modules/@solana/web3.js/src/transaction/constants.ts","node_modules/@solana/web3.js/src/transaction/expiry-custom-errors.ts","node_modules/@solana/web3.js/src/message/account-keys.ts","node_modules/@solana/web3.js/src/layout.ts","node_modules/@solana/web3.js/src/utils/shortvec-encoding.ts","node_modules/@solana/web3.js/src/utils/assert.ts","node_modules/@solana/web3.js/src/message/compiled-keys.ts","node_modules/@solana/web3.js/src/utils/guarded-array-utils.ts","node_modules/@solana/web3.js/src/message/legacy.ts","node_modules/@solana/web3.js/src/message/v0.ts","node_modules/@solana/web3.js/src/message/versioned.ts","node_modules/@solana/web3.js/src/transaction/legacy.ts","node_modules/@solana/web3.js/src/transaction/message.ts","node_modules/@solana/web3.js/src/transaction/versioned.ts","node_modules/@solana/web3.js/src/timing.ts","node_modules/@solana/web3.js/src/sysvar.ts","node_modules/@solana/web3.js/src/errors.ts","node_modules/@solana/web3.js/src/utils/send-and-confirm-transaction.ts","node_modules/@solana/web3.js/src/utils/sleep.ts","node_modules/@solana/web3.js/src/instruction.ts","node_modules/@solana/web3.js/src/fee-calculator.ts","node_modules/@solana/web3.js/src/nonce-account.ts","node_modules/@solana/web3.js/src/utils/bigint.ts","node_modules/@solana/web3.js/src/programs/system.ts","node_modules/@solana/web3.js/src/loader.ts","node_modules/@solana/web3.js/src/bpf-loader.ts","node_modules/node_modules/.pnpm/fast-stable-stringify@1.0.0/node_modules/fast-stable-stringify/index.js","node_modules/@solana/web3.js/src/epoch-schedule.ts","node_modules/@solana/web3.js/src/__forks__/browser/fetch-impl.ts","node_modules/@solana/web3.js/src/rpc-websocket.ts","node_modules/@solana/web3.js/src/account-data.ts","node_modules/@solana/web3.js/src/programs/address-lookup-table/state.ts","node_modules/@solana/web3.js/src/utils/makeWebsocketUrl.ts","node_modules/@solana/web3.js/src/connection.ts","node_modules/@solana/web3.js/src/keypair.ts","node_modules/@solana/web3.js/src/programs/address-lookup-table/index.ts","node_modules/@solana/web3.js/src/programs/compute-budget.ts","node_modules/@solana/web3.js/src/programs/ed25519.ts","node_modules/@solana/web3.js/src/utils/secp256k1.ts","node_modules/@solana/web3.js/src/programs/secp256k1.ts","node_modules/@solana/web3.js/src/programs/stake.ts","node_modules/@solana/web3.js/src/programs/vote.ts","node_modules/@solana/web3.js/src/validator-info.ts","node_modules/@solana/web3.js/src/vote-account.ts","node_modules/@solana/web3.js/src/utils/cluster.ts","node_modules/@solana/web3.js/src/utils/send-and-confirm-raw-transaction.ts","node_modules/@solana/web3.js/src/index.ts","node_modules/buffer/index.js","node_modules/base64-js/index.js","node_modules/ieee754/index.js","node_modules/@noble/curves/esm/ed25519.js","node_modules/@noble/curves/src/ed25519.ts","node_modules/@noble/hashes/esm/sha512.js","node_modules/@noble/hashes/src/sha512.ts","node_modules/@noble/hashes/esm/_md.js","node_modules/@noble/hashes/src/_md.ts","node_modules/@noble/hashes/esm/_assert.js","node_modules/@noble/hashes/src/_assert.ts","node_modules/@noble/hashes/esm/utils.js","node_modules/@noble/hashes/src/utils.ts","node_modules/@noble/hashes/esm/crypto.js","node_modules/@noble/hashes/src/crypto.ts","node_modules/@noble/hashes/esm/_u64.js","node_modules/@noble/hashes/src/_u64.ts","node_modules/@noble/curves/esm/abstract/edwards.js","node_modules/@noble/curves/src/abstract/edwards.ts","node_modules/@noble/curves/esm/abstract/modular.js","node_modules/@noble/curves/src/abstract/modular.ts","node_modules/@noble/curves/esm/abstract/utils.js","node_modules/@noble/curves/src/abstract/utils.ts","node_modules/@noble/curves/esm/abstract/curve.js","node_modules/@noble/curves/src/abstract/curve.ts","node_modules/@noble/curves/esm/abstract/montgomery.js","node_modules/@noble/curves/src/abstract/montgomery.ts","node_modules/@noble/curves/esm/abstract/hash-to-curve.js","node_modules/@noble/curves/src/abstract/hash-to-curve.ts","node_modules/bn.js/lib/bn.js","node_modules/@parcel/node-resolver-core/lib/_empty.js","node_modules/bs58/index.js","node_modules/base-x/src/index.js","node_modules/safe-buffer/index.js","node_modules/@noble/hashes/esm/sha256.js","node_modules/@noble/hashes/src/sha256.ts","node_modules/borsh/lib/index.js","node_modules/text-encoding-utf-8/lib/encoding.lib.js","node_modules/@solana/buffer-layout/lib/Layout.js","node_modules/@solana/buffer-layout/src/Layout.ts","node_modules/bigint-buffer/dist/browser.js","node_modules/superstruct/dist/index.mjs","node_modules/superstruct/src/error.ts","node_modules/superstruct/src/utils.ts","node_modules/superstruct/src/struct.ts","node_modules/superstruct/src/structs/utilities.ts","node_modules/superstruct/src/structs/types.ts","node_modules/superstruct/src/structs/coercions.ts","node_modules/superstruct/src/structs/refinements.ts","node_modules/jayson/lib/client/browser/index.js","node_modules/uuid/dist/esm-browser/index.js","node_modules/uuid/dist/esm-browser/v1.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/uuid/dist/esm-browser/v3.js","node_modules/uuid/dist/esm-browser/v35.js","node_modules/uuid/dist/esm-browser/parse.js","node_modules/uuid/dist/esm-browser/md5.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/v5.js","node_modules/uuid/dist/esm-browser/sha1.js","node_modules/uuid/dist/esm-browser/nil.js","node_modules/uuid/dist/esm-browser/version.js","node_modules/jayson/lib/generateRequest.js","node_modules/rpc-websockets/dist/lib/client.cjs","node_modules/eventemitter3/index.js","node_modules/rpc-websockets/dist/lib/utils.cjs","node_modules/rpc-websockets/dist/lib/client/websocket.browser.cjs","node_modules/@noble/hashes/esm/sha3.js","node_modules/@noble/hashes/src/sha3.ts","node_modules/@noble/curves/esm/secp256k1.js","node_modules/@noble/curves/src/secp256k1.ts","node_modules/@noble/curves/esm/abstract/weierstrass.js","node_modules/@noble/curves/src/abstract/weierstrass.ts","node_modules/@noble/curves/esm/_shortw_utils.js","node_modules/@noble/curves/src/_shortw_utils.ts","node_modules/@noble/hashes/esm/hmac.js","node_modules/@noble/hashes/src/hmac.ts","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/esm/PublicKey.mjs","node_modules/@metaplex-foundation/umi-web3js-adapters/src/PublicKey.ts","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/esm/Keypair.mjs","node_modules/@metaplex-foundation/umi-web3js-adapters/src/Keypair.ts","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/esm/TransactionMessage.mjs","node_modules/@metaplex-foundation/umi-web3js-adapters/src/TransactionMessage.ts","node_modules/@metaplex-foundation/umi-http-fetch/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-http-fetch/dist/esm/createFetchHttp.mjs","node_modules/@metaplex-foundation/umi-http-fetch/src/createFetchHttp.ts","node_modules/node-fetch/browser.js","node_modules/@metaplex-foundation/umi-http-fetch/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-http-fetch/src/plugin.ts","node_modules/@metaplex-foundation/umi-program-repository/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-program-repository/dist/esm/createDefaultProgramRepository.mjs","node_modules/@metaplex-foundation/umi-program-repository/src/createDefaultProgramRepository.ts","node_modules/@metaplex-foundation/umi-program-repository/dist/esm/errors.mjs","node_modules/@metaplex-foundation/umi-program-repository/src/errors.ts","node_modules/@metaplex-foundation/umi-program-repository/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-program-repository/src/plugin.ts","node_modules/@metaplex-foundation/umi-rpc-web3js/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-rpc-web3js/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-rpc-web3js/src/plugin.ts","node_modules/@metaplex-foundation/umi-rpc-web3js/dist/esm/createWeb3JsRpc.mjs","node_modules/@metaplex-foundation/umi-rpc-web3js/src/createWeb3JsRpc.ts","node_modules/@metaplex-foundation/umi/dist/esm/serializers.mjs","node_modules/@metaplex-foundation/umi-rpc-chunk-get-accounts/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-rpc-chunk-get-accounts/dist/esm/createChunkGetAccountsRpc.mjs","node_modules/@metaplex-foundation/umi-rpc-chunk-get-accounts/src/createChunkGetAccountsRpc.ts","node_modules/@metaplex-foundation/umi-rpc-chunk-get-accounts/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-rpc-chunk-get-accounts/src/plugin.ts","node_modules/@metaplex-foundation/umi-serializer-data-view/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-serializer-data-view/dist/esm/createDataViewSerializer.mjs","node_modules/@metaplex-foundation/umi-serializer-data-view/src/createDataViewSerializer.ts","node_modules/@metaplex-foundation/umi-serializer-data-view/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-serializer-data-view/src/plugin.ts","node_modules/@metaplex-foundation/umi-transaction-factory-web3js/dist/esm/index.mjs","node_modules/@metaplex-foundation/umi-transaction-factory-web3js/dist/esm/plugin.mjs","node_modules/@metaplex-foundation/umi-transaction-factory-web3js/src/plugin.ts","node_modules/@metaplex-foundation/umi-transaction-factory-web3js/dist/esm/createWeb3JsTransactionFactory.mjs","node_modules/@metaplex-foundation/umi-transaction-factory-web3js/src/createWeb3JsTransactionFactory.ts","node_modules/gspl-directory/dist/index.js","node_modules/gspl-directory/dist/client/index.js","node_modules/gspl-directory/dist/client/accounts/index.js","node_modules/gspl-directory/dist/client/accounts/govBoardingConfig.js","node_modules/@metaplex-foundation/umi/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-options/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-options/dist/cjs/common.cjs","node_modules/@metaplex-foundation/umi-options/dist/cjs/unwrapOption.cjs","node_modules/@metaplex-foundation/umi-options/dist/cjs/unwrapOptionRecursively.cjs","node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/common.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/base10.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/baseX.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/errors.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/base16.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/base58.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/base64.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/bytes.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/errors.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/fixSerializer.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/mapSerializer.cjs","node_modules/@metaplex-foundation/umi-serializers-core/dist/cjs/reverseSerializer.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/baseXReslice.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/nullCharacters.cjs","node_modules/@metaplex-foundation/umi-serializers-encodings/dist/cjs/utf8.cjs","node_modules/@metaplex-foundation/umi-public-keys/dist/cjs/errors.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/serializersInternal.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/common.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/errors.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/f32.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/utils.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/f64.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/i8.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/i16.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/i32.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/i64.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/i128.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/u8.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/u16.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/u32.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/u64.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/u128.cjs","node_modules/@metaplex-foundation/umi-serializers-numbers/dist/cjs/shortU16.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/array.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/errors.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/utils.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/sumSerializerSizes.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/bitArray.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/bool.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/bytes.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/dataEnum.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/maxSerializerSizes.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/map.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/nullable.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/option.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/publicKey.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/scalarEnum.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/set.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/string.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/struct.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/tuple.cjs","node_modules/@metaplex-foundation/umi-serializers/dist/cjs/unit.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Account.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/UnexpectedAccountError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/SdkError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/UmiError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/AccountNotFoundError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Amount.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/BigInt.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/UnexpectedAmountError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/AmountMismatchError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Cluster.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Context.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/DownloaderInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/InterfaceImplementationMissingError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/EddsaInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/HttpInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/ProgramRepositoryInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/RpcInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/SerializerInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Signer.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/utils/arrays.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/TransactionFactoryInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/UploaderInterface.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/DateTime.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/GenericFile.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/utils/randomStrings.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/GpaBuilder.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/HttpRequest.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Keypair.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Transaction.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Program.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/SignerPlugins.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/TransactionBuilder.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/TransactionBuilderGroup.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/Umi.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/InvalidBaseStringError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/errors/ProgramError.cjs","node_modules/@metaplex-foundation/umi/dist/cjs/serializers.cjs","node_modules/gspl-directory/dist/client/accounts/governanceEntry.js","node_modules/gspl-directory/dist/client/types/index.js","node_modules/gspl-directory/dist/client/types/dAOType.js","node_modules/gspl-directory/dist/client/types/parentLink.js","node_modules/gspl-directory/dist/client/types/parentLinks.js","node_modules/gspl-directory/dist/client/types/requestStatus.js","node_modules/gspl-directory/dist/client/types/verifierType.js","node_modules/gspl-directory/dist/client/errors/index.js","node_modules/gspl-directory/dist/client/errors/govBoarding.js","node_modules/gspl-directory/dist/client/instructions/index.js","node_modules/gspl-directory/dist/client/instructions/createConfig.js","node_modules/gspl-directory/dist/client/shared/index.js","node_modules/gspl-directory/dist/client/instructions/createEntry.js","node_modules/gspl-directory/dist/client/instructions/setChildStatus.js","node_modules/gspl-directory/dist/client/instructions/setEntryStatus.js","node_modules/gspl-directory/dist/client/instructions/setEntryUri.js","node_modules/gspl-directory/dist/client/instructions/updateVerifier.js","node_modules/gspl-directory/dist/client/instructions/updateAdmin.js","node_modules/gspl-directory/dist/client/programs/index.js","node_modules/gspl-directory/dist/client/programs/govBoarding.js","node_modules/gspl-directory/dist/query/index.js","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/index.cjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/Instruction.cjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/PublicKey.cjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/Keypair.cjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/Transaction.cjs","node_modules/@metaplex-foundation/umi-web3js-adapters/dist/cjs/TransactionMessage.cjs"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"5c1b77e3b71e74eb\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import {createUmi} from \"@metaplex-foundation/umi-bundle-defaults\";\nimport {getChildren, getEntryAddressFromName, getRealmAddressFromName, getRealms, RequestStatus} from \"gspl-directory\";\nimport {publicKey, unwrapOption} from \"@metaplex-foundation/umi\";\n\nconst CONFIG = publicKey(\"GrVTaSRsanVMK7dP4YZnxTV6oWLcsFDV1w6MHGvWnWCS\");\n\n(async () => {\n    const umi = createUmi(\"ADD YOUR RPC HERE!\")\n    const entries = await getRealms(umi, CONFIG, RequestStatus.Approved);\n    console.log(\"Entries\", entries);\n    console.log(entries.length);\n})();\n",null,"import { Umi, createUmi as baseCreateUmi } from '@metaplex-foundation/umi';\nimport type { ChunkGetAccountsRpcOptions } from '@metaplex-foundation/umi-rpc-chunk-get-accounts';\nimport type { Web3JsRpcOptions } from '@metaplex-foundation/umi-rpc-web3js';\nimport type { Connection as Web3JsConnection } from '@solana/web3.js';\nimport { defaultPlugins } from './plugin';\n\nexport function createUmi(\n  endpoint: string,\n  rpcOptions?: Web3JsRpcOptions & ChunkGetAccountsRpcOptions\n): Umi;\nexport function createUmi(\n  connection: Web3JsConnection,\n  rpcOptions?: ChunkGetAccountsRpcOptions\n): Umi;\nexport function createUmi(\n  endpointOrConnection: string | Web3JsConnection,\n  rpcOptions?: Web3JsRpcOptions & ChunkGetAccountsRpcOptions\n): Umi {\n  return baseCreateUmi().use(\n    typeof endpointOrConnection === 'string'\n      ? defaultPlugins(endpointOrConnection, rpcOptions)\n      : defaultPlugins(endpointOrConnection, rpcOptions)\n  );\n}\n\nexport * from './plugin';\n",null,null,null,"/**\n * Defines a type `T` that can also be `null`.\n * @category Utils — Options\n */\nexport type Nullable<T> = T | null;\n\n/**\n * An implementation of the Rust Option type in JavaScript.\n * It can be one of the following:\n * - <code>{@link Some}<T></code>: Meaning there is a value of type T.\n * - <code>{@link None}</code>: Meaning there is no value.\n *\n * @category Utils — Options\n */\nexport type Option<T> = Some<T> | None;\n\n/**\n * Defines a looser type that can be used when serializing an {@link Option}.\n * This allows us to pass null or the Option value directly whilst still\n * supporting the Option type for use-cases that need more type safety.\n *\n * @category Utils — Options\n */\nexport type OptionOrNullable<T> = Option<T> | Nullable<T>;\n\n/**\n * Represents an option of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport type Some<T> = { __option: 'Some'; value: T };\n\n/**\n * Represents an option of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport type None = { __option: 'None' };\n\n/**\n * Creates a new {@link Option} of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport const some = <T>(value: T): Option<T> => ({ __option: 'Some', value });\n\n/**\n * Creates a new {@link Option} of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nexport const none = <T>(): Option<T> => ({ __option: 'None' });\n\n/**\n * Whether the given data is an {@link Option}.\n * @category Utils — Options\n */\nexport const isOption = <T = unknown>(input: any): input is Option<T> =>\n  input &&\n  typeof input === 'object' &&\n  '__option' in input &&\n  ((input.__option === 'Some' && 'value' in input) ||\n    input.__option === 'None');\n\n/**\n * Whether the given {@link Option} is a {@link Some}.\n * @category Utils — Options\n */\nexport const isSome = <T>(option: Option<T>): option is Some<T> =>\n  option.__option === 'Some';\n\n/**\n * Whether the given {@link Option} is a {@link None}.\n * @category Utils — Options\n */\nexport const isNone = <T>(option: Option<T>): option is None =>\n  option.__option === 'None';\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (\n      key === 'default' ||\n      key === '__esModule' ||\n      Object.prototype.hasOwnProperty.call(dest, key)\n    ) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n",null,"import { Nullable, Option, isSome, none, some } from './common';\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a fallback value that defaults to `null`.\n *\n * @category Utils — Options\n */\nexport function unwrapOption<T>(option: Option<T>): Nullable<T>;\nexport function unwrapOption<T, U>(option: Option<T>, fallback: () => U): T | U;\nexport function unwrapOption<T, U = null>(\n  option: Option<T>,\n  fallback?: () => U\n): T | U {\n  if (isSome(option)) return option.value;\n  return fallback ? fallback() : (null as U);\n}\n\n/**\n * Wraps a nullable value into an {@link Option}.\n *\n * @category Utils — Options\n */\nexport const wrapNullable = <T>(nullable: Nullable<T>): Option<T> =>\n  nullable !== null ? some(nullable) : none<T>();\n\n/**\n * Unwraps the value of an {@link Option} of type `T`.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns `null`.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nexport const unwrapSome = <T>(option: Option<T>): Nullable<T> =>\n  isSome(option) ? option.value : null;\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a custom fallback value.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns the return value of the provided fallback callback.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nexport const unwrapSomeOrElse = <T, U>(\n  option: Option<T>,\n  fallback: () => U\n): T | U => (isSome(option) ? option.value : fallback());\n",null,null,"import { base58 } from '@metaplex-foundation/umi-serializers-encodings';\nimport { InvalidPublicKeyError } from './errors';\n\n/**\n * The amount of bytes in a public key.\n * @category Signers and PublicKeys\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Defines a public key as a base58 string.\n * @category Signers and PublicKeys\n */\nexport type PublicKey<TAddress extends string = string> = TAddress & {\n  readonly __publicKey: unique symbol;\n};\n\n/**\n * Defines a Program-Derived Address.\n *\n * It is a public key with the bump number that was used\n * to ensure the address is not on the ed25519 curve.\n *\n * @category Signers and PublicKeys\n */\nexport type Pda<\n  TAddress extends string = string,\n  TBump extends number = number\n> = [PublicKey<TAddress>, TBump] & { readonly __pda: unique symbol };\n\n/**\n * A Uint8Array that represents a public key.\n * @category Signers and PublicKeys\n */\nexport type PublicKeyBytes = Uint8Array & {\n  readonly __publicKeyBytes: unique symbol;\n};\n\n/**\n * Defines an object that has a public key.\n * @category Signers and PublicKeys\n */\nexport type HasPublicKey<TAddress extends string = string> = {\n  readonly publicKey: PublicKey<TAddress>;\n};\n\n/**\n * Defines an object that can be converted to a base58 public key.\n * @category Signers and PublicKeys\n */\nexport type LegacyWeb3JsPublicKey<TAddress extends string = string> = {\n  toBase58: () => TAddress;\n};\n\n/**\n * Defines all the possible inputs for creating a public key.\n * @category Signers and PublicKeys\n */\nexport type PublicKeyInput<TAddress extends string = string> =\n  | TAddress\n  | Uint8Array\n  | [TAddress, number]\n  | { publicKey: TAddress }\n  | LegacyWeb3JsPublicKey<TAddress>;\n\n/**\n * Defines all the possible safe inputs for creating a public key.\n * That is, they have already been validated to be or\n * to contain a valid public key.\n * @category Signers and PublicKeys\n */\nexport type SafePublicKeyInput<TAddress extends string = string> =\n  | PublicKey<TAddress>\n  | PublicKeyBytes\n  | Pda<TAddress>\n  | HasPublicKey<TAddress>\n  | LegacyWeb3JsPublicKey<TAddress>;\n\n/**\n * Creates a new public key from the given input.\n * @category Signers and PublicKeys\n */\nexport function publicKey<TAddress extends string>(\n  input: PublicKeyInput<TAddress>,\n  assertValidPublicKey?: true\n): PublicKey<TAddress>;\nexport function publicKey<TAddress extends string>(\n  input: SafePublicKeyInput<TAddress>,\n  assertValidPublicKey: false\n): PublicKey<TAddress>;\nexport function publicKey<TAddress extends string>(\n  input: PublicKeyInput<TAddress> | SafePublicKeyInput<TAddress>,\n  assertValidPublicKey: boolean = true\n): PublicKey<TAddress> {\n  const key = ((): string => {\n    if (typeof input === 'string') {\n      return input;\n    }\n    // HasPublicKey.\n    if (typeof input === 'object' && 'publicKey' in input) {\n      return input.publicKey;\n    }\n    // LegacyWeb3JsPublicKey.\n    if (typeof input === 'object' && 'toBase58' in input) {\n      return input.toBase58();\n    }\n    // Pda.\n    if (Array.isArray(input)) {\n      return input[0];\n    }\n    // PublicKeyBytes.\n    return base58.deserialize(input)[0];\n  })();\n\n  if (assertValidPublicKey) {\n    assertPublicKey(key);\n  }\n\n  return key as PublicKey<TAddress>;\n}\n\n/**\n * Creates the default public key which is composed of all zero bytes.\n * @category Signers and PublicKeys\n */\nexport const defaultPublicKey = () =>\n  '11111111111111111111111111111111' as PublicKey<'11111111111111111111111111111111'>;\n\n/**\n * Whether the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nexport const isPublicKey = <TAddress extends string>(\n  value: TAddress\n): value is PublicKey<TAddress> => {\n  try {\n    assertPublicKey(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Whether the given value is a valid program-derived address.\n * @category Signers and PublicKeys\n */\nexport const isPda = <TAddress extends string, TBump extends number>(\n  value: [TAddress, TBump]\n): value is Pda<TAddress, TBump> =>\n  Array.isArray(value) &&\n  value.length === 2 &&\n  typeof value[1] === 'number' &&\n  isPublicKey(value[0]);\n\n/**\n * Ensures the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nexport function assertPublicKey<TAddress extends string>(\n  value: TAddress\n): asserts value is PublicKey<TAddress> {\n  // Check value type.\n  if (typeof value !== 'string') {\n    throw new InvalidPublicKeyError(value, 'Public keys must be strings.');\n  }\n\n  // Check base58 encoding and byte length.\n  publicKeyBytes(value);\n}\n\n/**\n * Deduplicates the given array of public keys.\n * @category Signers and PublicKeys\n */\nexport const uniquePublicKeys = (publicKeys: PublicKey[]): PublicKey[] => [\n  ...new Set(publicKeys),\n];\n\n/**\n * Converts the given public key to a Uint8Array.\n * Throws an error if the public key is an invalid base58 string.\n * @category Signers and PublicKeys\n */\nexport const publicKeyBytes = (value: string): PublicKeyBytes => {\n  // Check string length to avoid unnecessary base58 encoding.\n  if (value.length < 32 || value.length > 44) {\n    throw new InvalidPublicKeyError(\n      value,\n      'Public keys must be between 32 and 44 characters.'\n    );\n  }\n\n  // Check base58 encoding.\n  let bytes: Uint8Array;\n  try {\n    bytes = base58.serialize(value);\n  } catch (error) {\n    throw new InvalidPublicKeyError(\n      value,\n      'Public keys must be base58 encoded.'\n    );\n  }\n\n  // Check byte length.\n  if (bytes.length !== PUBLIC_KEY_LENGTH) {\n    throw new InvalidPublicKeyError(\n      value,\n      `Public keys must be ${PUBLIC_KEY_LENGTH} bytes.`\n    );\n  }\n\n  return bytes as PublicKeyBytes;\n};\n\n/**\n * Converts the given public key to a base58 string.\n * @category Signers and PublicKeys\n * @deprecated Public keys are now represented directly as base58 strings.\n */\nexport const base58PublicKey = (key: PublicKeyInput): string => publicKey(key);\n\n/**\n * Whether the given public keys are the same.\n * @category Signers and PublicKeys\n * @deprecated Use `left === right` instead now that public keys are base58 strings.\n */\nexport const samePublicKey = (\n  left: PublicKeyInput,\n  right: PublicKeyInput\n): boolean => publicKey(left) === publicKey(right);\n",null,null,"import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { baseX } from './baseX';\n\n/**\n * A string serializer that uses base10 encoding.\n * @category Serializers\n */\nexport const base10: Serializer<string> = baseX('0123456789');\n",null,"import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that requires a custom alphabet and uses\n * the length of that alphabet as the base. It then divides\n * the input by the base as many times as necessary to get\n * the output. It also supports leading zeroes by using the\n * first character of the alphabet as the zero character.\n *\n * This can be used to create serializers such as base10 or base58.\n *\n * @category Serializers\n */\nexport const baseX = (alphabet: string): Serializer<string> => {\n  const base = alphabet.length;\n  const baseBigInt = BigInt(base);\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value: string): Uint8Array {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n\n      // Handle leading zeroes.\n      const chars = [...value];\n      let trailIndex = chars.findIndex((c) => c !== alphabet[0]);\n      trailIndex = trailIndex === -1 ? chars.length : trailIndex;\n      const leadingZeroes = Array(trailIndex).fill(0);\n      if (trailIndex === chars.length) return Uint8Array.from(leadingZeroes);\n\n      // From baseX to base10.\n      const tailChars = chars.slice(trailIndex);\n      let base10Number = 0n;\n      let baseXPower = 1n;\n      for (let i = tailChars.length - 1; i >= 0; i -= 1) {\n        base10Number += baseXPower * BigInt(alphabet.indexOf(tailChars[i]));\n        baseXPower *= baseBigInt;\n      }\n\n      // From base10 to bytes.\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      return Uint8Array.from(leadingZeroes.concat(tailBytes));\n    },\n    deserialize(buffer, offset = 0): [string, number] {\n      if (buffer.length === 0) return ['', 0];\n\n      // Handle leading zeroes.\n      const bytes = buffer.slice(offset);\n      let trailIndex = bytes.findIndex((n) => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet[0].repeat(trailIndex);\n      if (trailIndex === bytes.length) return [leadingZeroes, buffer.length];\n\n      // From bytes to base10.\n      let base10Number = bytes\n        .slice(trailIndex)\n        .reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n\n      // From base10 to baseX.\n      const tailChars = [];\n      while (base10Number > 0n) {\n        tailChars.unshift(alphabet[Number(base10Number % baseBigInt)]);\n        base10Number /= baseBigInt;\n      }\n\n      return [leadingZeroes + tailChars.join(''), buffer.length];\n    },\n  };\n};\n",null,"/** @category Errors */\nexport class InvalidBaseStringError extends Error {\n  readonly name: string = 'InvalidBaseStringError';\n\n  readonly cause?: Error;\n\n  constructor(value: string, base: number, cause?: Error) {\n    const message = `Expected a string of base ${base}, got [${value}].`;\n    super(message);\n    this.cause = cause;\n  }\n}\n",null,"import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that uses base16 encoding.\n * @category Serializers\n */\nexport const base16: Serializer<string> = {\n  description: 'base16',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value: string) {\n    const lowercaseValue = value.toLowerCase();\n    if (!lowercaseValue.match(/^[0123456789abcdef]*$/)) {\n      throw new InvalidBaseStringError(value, 16);\n    }\n    const matches = lowercaseValue.match(/.{1,2}/g);\n    return Uint8Array.from(\n      matches ? matches.map((byte: string) => parseInt(byte, 16)) : []\n    );\n  },\n  deserialize(buffer, offset = 0) {\n    const value = buffer\n      .slice(offset)\n      .reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n    return [value, buffer.length];\n  },\n};\n",null,"import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { baseX } from './baseX';\n\n/**\n * A string serializer that uses base58 encoding.\n * @category Serializers\n */\nexport const base58: Serializer<string> = baseX(\n  '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n);\n",null,"import {\n  mapSerializer,\n  type Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { baseXReslice } from './baseXReslice';\n\n/**\n * A string serializer that uses base64 encoding.\n * @category Serializers\n */\nexport const base64: Serializer<string> = mapSerializer(\n  baseXReslice(\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n    6\n  ),\n  (value) => value.replace(/=/g, ''),\n  (value) => value.padEnd(Math.ceil(value.length / 4) * 4, '=')\n);\n",null,null,"/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * @category Utils\n */\nexport const mergeBytes = (bytesArr: Uint8Array[]): Uint8Array => {\n  const totalLength = bytesArr.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  bytesArr.forEach((arr) => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n * @category Utils\n */\nexport const padBytes = (bytes: Uint8Array, length: number): Uint8Array => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n * @category Utils\n */\nexport const fixBytes = (bytes: Uint8Array, length: number): Uint8Array =>\n  padBytes(bytes.slice(0, length), length);\n",null,"/** @category Errors */\nexport class DeserializingEmptyBufferError extends Error {\n  readonly name: string = 'DeserializingEmptyBufferError';\n\n  constructor(serializer: string) {\n    super(`Serializer [${serializer}] cannot deserialize empty buffers.`);\n  }\n}\n\n/** @category Errors */\nexport class NotEnoughBytesError extends Error {\n  readonly name: string = 'NotEnoughBytesError';\n\n  constructor(\n    serializer: string,\n    expected: bigint | number,\n    actual: bigint | number\n  ) {\n    super(\n      `Serializer [${serializer}] expected ${expected} bytes, got ${actual}.`\n    );\n  }\n}\n\n/** @category Errors */\nexport class ExpectedFixedSizeSerializerError extends Error {\n  readonly name: string = 'ExpectedFixedSizeSerializerError';\n\n  constructor(message?: string) {\n    message ??= 'Expected a fixed-size serializer, got a variable-size one.';\n    super(message);\n  }\n}\n",null,"import { fixBytes } from './bytes';\nimport { Serializer } from './common';\nimport { NotEnoughBytesError } from './errors';\n\n/**\n * Creates a fixed-size serializer from a given serializer.\n *\n * @param serializer - The serializer to wrap into a fixed-size serializer.\n * @param fixedBytes - The fixed number of bytes to read.\n * @param description - A custom description for the serializer.\n *\n * @category Serializers\n */\nexport function fixSerializer<T, U extends T = T>(\n  serializer: Serializer<T, U>,\n  fixedBytes: number,\n  description?: string\n): Serializer<T, U> {\n  return {\n    description:\n      description ?? `fixed(${fixedBytes}, ${serializer.description})`,\n    fixedSize: fixedBytes,\n    maxSize: fixedBytes,\n    serialize: (value: T) => fixBytes(serializer.serialize(value), fixedBytes),\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      // Slice the buffer to the fixed size.\n      buffer = buffer.slice(offset, offset + fixedBytes);\n      // Ensure we have enough bytes.\n      if (buffer.length < fixedBytes) {\n        throw new NotEnoughBytesError(\n          'fixSerializer',\n          fixedBytes,\n          buffer.length\n        );\n      }\n      // If the nested serializer is fixed-size, pad and truncate the buffer accordingly.\n      if (serializer.fixedSize !== null) {\n        buffer = fixBytes(buffer, serializer.fixedSize);\n      }\n      // Deserialize the value using the nested serializer.\n      const [value] = serializer.deserialize(buffer, 0);\n      return [value, offset + fixedBytes];\n    },\n  };\n}\n",null,"import { Serializer } from './common';\n\n/**\n * Converts a serializer A to a serializer B by mapping their values.\n * @category Serializers\n */\nexport function mapSerializer<NewFrom, OldFrom, To extends NewFrom & OldFrom>(\n  serializer: Serializer<OldFrom, To>,\n  unmap: (value: NewFrom) => OldFrom\n): Serializer<NewFrom, To>;\nexport function mapSerializer<\n  NewFrom,\n  OldFrom,\n  NewTo extends NewFrom = NewFrom,\n  OldTo extends OldFrom = OldFrom\n>(\n  serializer: Serializer<OldFrom, OldTo>,\n  unmap: (value: NewFrom) => OldFrom,\n  map: (value: OldTo, buffer: Uint8Array, offset: number) => NewTo\n): Serializer<NewFrom, NewTo>;\nexport function mapSerializer<\n  NewFrom,\n  OldFrom,\n  NewTo extends NewFrom = NewFrom,\n  OldTo extends OldFrom = OldFrom\n>(\n  serializer: Serializer<OldFrom, OldTo>,\n  unmap: (value: NewFrom) => OldFrom,\n  map?: (value: OldTo, buffer: Uint8Array, offset: number) => NewTo\n): Serializer<NewFrom, NewTo> {\n  return {\n    description: serializer.description,\n    fixedSize: serializer.fixedSize,\n    maxSize: serializer.maxSize,\n    serialize: (value: NewFrom) => serializer.serialize(unmap(value)),\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      const [value, length] = serializer.deserialize(buffer, offset);\n      return map\n        ? [map(value, buffer, offset), length]\n        : [value as any, length];\n    },\n  };\n}\n",null,"import { mergeBytes } from './bytes';\nimport { Serializer } from './common';\nimport { ExpectedFixedSizeSerializerError } from './errors';\n\n/**\n * Reverses the bytes of a fixed-size serializer.\n * @category Serializers\n */\nexport function reverseSerializer<T, U extends T = T>(\n  serializer: Serializer<T, U>\n): Serializer<T, U> {\n  if (serializer.fixedSize === null) {\n    throw new ExpectedFixedSizeSerializerError(\n      'Cannot reverse a serializer of variable size.'\n    );\n  }\n  return {\n    ...serializer,\n    serialize: (value: T) => serializer.serialize(value).reverse(),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const fixedSize = serializer.fixedSize as number;\n      const newBytes = mergeBytes([\n        bytes.slice(0, offset),\n        bytes.slice(offset, offset + fixedSize).reverse(),\n        bytes.slice(offset + fixedSize),\n      ]);\n      return serializer.deserialize(newBytes, offset);\n    },\n  };\n}\n",null,"/* eslint-disable no-restricted-syntax */\n/* eslint-disable no-bitwise */\nimport type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { InvalidBaseStringError } from './errors';\n\n/**\n * A string serializer that reslices bytes into custom chunks\n * of bits that are then mapped to a custom alphabet.\n *\n * This can be used to create serializers whose alphabet\n * is a power of 2 such as base16 or base64.\n *\n * @category Serializers\n */\nexport const baseXReslice = (\n  alphabet: string,\n  bits: number\n): Serializer<string> => {\n  const base = alphabet.length;\n  const reslice = (\n    input: number[],\n    inputBits: number,\n    outputBits: number,\n    useRemainder: boolean\n  ): number[] => {\n    const output = [];\n    let accumulator = 0;\n    let bitsInAccumulator = 0;\n    const mask = (1 << outputBits) - 1;\n    for (const value of input) {\n      accumulator = (accumulator << inputBits) | value;\n      bitsInAccumulator += inputBits;\n      while (bitsInAccumulator >= outputBits) {\n        bitsInAccumulator -= outputBits;\n        output.push((accumulator >> bitsInAccumulator) & mask);\n      }\n    }\n    if (useRemainder && bitsInAccumulator > 0) {\n      output.push((accumulator << (outputBits - bitsInAccumulator)) & mask);\n    }\n    return output;\n  };\n\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value: string): Uint8Array {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n      const charIndices = [...value].map((c) => alphabet.indexOf(c));\n      const bytes = reslice(charIndices, bits, 8, false);\n      return Uint8Array.from(bytes);\n    },\n    deserialize(buffer, offset = 0): [string, number] {\n      if (buffer.length === 0) return ['', 0];\n      const bytes = [...buffer.slice(offset)];\n      const charIndices = reslice(bytes, 8, bits, true);\n      return [charIndices.map((i) => alphabet[i]).join(''), buffer.length];\n    },\n  };\n};\n",null,"/**\n * Removes null characters from a string.\n * @category Utils\n */\nexport const removeNullCharacters = (value: string) =>\n  // eslint-disable-next-line no-control-regex\n  value.replace(/\\u0000/g, '');\n\n/**\n * Pads a string with null characters at the end.\n * @category Utils\n */\nexport const padNullCharacters = (value: string, chars: number) =>\n  value.padEnd(chars, '\\u0000');\n",null,"import type { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { removeNullCharacters } from './nullCharacters';\n\n/**\n * A string serializer that uses UTF-8 encoding\n * using the native `TextEncoder` API.\n * @category Serializers\n */\nexport const utf8: Serializer<string> = {\n  description: 'utf8',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value: string) {\n    return new TextEncoder().encode(value);\n  },\n  deserialize(buffer, offset = 0) {\n    const value = new TextDecoder().decode(buffer.slice(offset));\n    return [removeNullCharacters(value), buffer.length];\n  },\n};\n",null,"/** @category Errors */\nexport class InvalidPublicKeyError extends Error {\n  readonly name: string = 'InvalidPublicKeyError';\n\n  readonly invalidPublicKey: string;\n\n  constructor(invalidPublicKey: string, reason?: string) {\n    reason = reason ? `. ${reason}` : '';\n    super(`The provided public key is invalid: ${invalidPublicKey}${reason}`);\n    this.invalidPublicKey = invalidPublicKey;\n  }\n}\n",null,"import {\n  Serializer as _Serializer,\n  NumberSerializer as _NumberSerializer,\n  WrapInSerializer as _WrapInSerializer,\n  mapSerializer as _mapSerializer,\n  fixSerializer as _fixSerializer,\n  reverseSerializer as _reverseSerializer,\n  mergeBytes as _mergeBytes,\n  padBytes as _padBytes,\n  fixBytes as _fixBytes,\n  utf8 as _utf8,\n  baseX as _baseX,\n  base10 as _base10,\n  base58 as _base58,\n  base64 as _base64,\n  base16 as _base16,\n  bitArray as _bitArray,\n  removeNullCharacters as _removeNullCharacters,\n  padNullCharacters as _padNullCharacters,\n  StructToSerializerTuple as _StructToSerializerTuple,\n  DataEnumToSerializerTuple as _DataEnumToSerializerTuple,\n  Endian as _Endian,\n  ArrayLikeSerializerSize as _ArrayLikeSerializerSize,\n  BaseSerializerOptions as _BaseSerializerOptions,\n  TupleSerializerOptions as _TupleSerializerOptions,\n  ArraySerializerOptions as _ArraySerializerOptions,\n  MapSerializerOptions as _MapSerializerOptions,\n  SetSerializerOptions as _SetSerializerOptions,\n  OptionSerializerOptions as _OptionSerializerOptions,\n  NullableSerializerOptions as _NullableSerializerOptions,\n  StructSerializerOptions as _StructSerializerOptions,\n  ScalarEnumSerializerOptions as _ScalarEnumSerializerOptions,\n  DataEnumSerializerOptions as _DataEnumSerializerOptions,\n  StringSerializerOptions as _StringSerializerOptions,\n  BoolSerializerOptions as _BoolSerializerOptions,\n  UnitSerializerOptions as _UnitSerializerOptions,\n  SingleByteNumberSerializerOptions as _SingleByteNumberSerializerOptions,\n  NumberSerializerOptions as _NumberSerializerOptions,\n  BytesSerializerOptions as _BytesSerializerOptions,\n  PublicKeySerializerOptions as _PublicKeySerializerOptions,\n  ScalarEnum as _ScalarEnum,\n  DataEnum as _DataEnum,\n  GetDataEnumKind as _GetDataEnumKind,\n  GetDataEnumKindContent as _GetDataEnumKindContent,\n} from '@metaplex-foundation/umi-serializers';\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type Serializer<From, To extends From = From> = _Serializer<From, To>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NumberSerializer = _NumberSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type WrapInSerializer<From, To extends From = From> = _WrapInSerializer<\n  From,\n  To\n>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const mapSerializer = _mapSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const fixSerializer = _fixSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const reverseSerializer = _reverseSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const mergeBytes = _mergeBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const padBytes = _padBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const fixBytes = _fixBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const utf8 = _utf8;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const baseX = _baseX;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base10 = _base10;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base58 = _base58;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base64 = _base64;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const base16 = _base16;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const bitArray = _bitArray;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const removeNullCharacters = _removeNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const padNullCharacters = _padNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StructToSerializerTuple<\n  T extends object,\n  U extends T\n> = _StructToSerializerTuple<T, U>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnumToSerializerTuple<\n  T extends _DataEnum,\n  U extends T\n> = _DataEnumToSerializerTuple<T, U>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport const Endian = _Endian;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ArrayLikeSerializerSize = _ArrayLikeSerializerSize;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BaseSerializerOptions = _BaseSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type TupleSerializerOptions = _TupleSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ArraySerializerOptions = _ArraySerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type MapSerializerOptions = _MapSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type SetSerializerOptions = _SetSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type OptionSerializerOptions = _OptionSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NullableSerializerOptions = _NullableSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StructSerializerOptions = _StructSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type EnumSerializerOptions = _ScalarEnumSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnumSerializerOptions = _DataEnumSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type StringSerializerOptions = _StringSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BoolSerializerOptions = _BoolSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type UnitSerializerOptions = _UnitSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type SingleByteNumberSerializerOptions =\n  _SingleByteNumberSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type NumberSerializerOptions = _NumberSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type BytesSerializerOptions = _BytesSerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type PublicKeySerializerOptions = _PublicKeySerializerOptions;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type ScalarEnum<T> = _ScalarEnum<T>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type DataEnum = _DataEnum;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type GetDataEnumKind<\n  T extends _DataEnum,\n  K extends T['__kind']\n> = _GetDataEnumKind<T, K>;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nexport type GetDataEnumKindContent<\n  T extends _DataEnum,\n  K extends T['__kind']\n> = _GetDataEnumKindContent<T, K>;\n",null,null,null,"import {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines a serializer for numbers and bigints.\n * @category Serializers\n */\nexport type NumberSerializer =\n  | Serializer<number>\n  | Serializer<number | bigint, bigint>;\n\n/**\n * Defines the options for u8 and i8 serializers.\n * @category Serializers\n */\nexport type SingleByteNumberSerializerOptions = BaseSerializerOptions;\n\n/**\n * Defines the options for number serializers that use more than one byte.\n * @category Serializers\n */\nexport type NumberSerializerOptions = BaseSerializerOptions & {\n  /**\n   * Whether the serializer should use little-endian or big-endian encoding.\n   * @defaultValue `Endian.Little`\n   */\n  endian?: Endian;\n};\n\n/**\n * Defines the endianness of a number serializer.\n * @category Serializers\n */\nexport enum Endian {\n  Little = 'le',\n  Big = 'be',\n}\n",null,"/** @category Errors */\nexport class NumberOutOfRangeError extends RangeError {\n  readonly name: string = 'NumberOutOfRangeError';\n\n  constructor(\n    serializer: string,\n    min: number | bigint,\n    max: number | bigint,\n    actual: number | bigint\n  ) {\n    super(\n      `Serializer [${serializer}] expected number to be between ${min} and ${max}, got ${actual}.`\n    );\n  }\n}\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const f32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'f32',\n    size: 4,\n    set: (view, value, le) => view.setFloat32(0, Number(value), le),\n    get: (view, le) => view.getFloat32(0, le),\n    options,\n  });\n",null,"import {\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  Endian,\n  NumberSerializer,\n  NumberSerializerOptions,\n  SingleByteNumberSerializerOptions,\n} from './common';\nimport { NumberOutOfRangeError } from './errors';\n\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => number;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): Serializer<number>;\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => bigint;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): Serializer<number | bigint, bigint>;\nexport function numberFactory(input: {\n  name: string;\n  size: number;\n  range?: [number | bigint, number | bigint];\n  set: (view: DataView, value: number | bigint, littleEndian?: boolean) => void;\n  get: (view: DataView, littleEndian?: boolean) => number | bigint;\n  options: SingleByteNumberSerializerOptions | NumberSerializerOptions;\n}): NumberSerializer {\n  let littleEndian: boolean | undefined;\n  let defaultDescription: string = input.name;\n\n  if (input.size > 1) {\n    littleEndian =\n      !('endian' in input.options) || input.options.endian === Endian.Little;\n    defaultDescription += littleEndian ? '(le)' : '(be)';\n  }\n\n  return {\n    description: input.options.description ?? defaultDescription,\n    fixedSize: input.size,\n    maxSize: input.size,\n    serialize(value: number | bigint): Uint8Array {\n      if (input.range) {\n        assertRange(input.name, input.range[0], input.range[1], value);\n      }\n      const buffer = new ArrayBuffer(input.size);\n      input.set(new DataView(buffer), value, littleEndian);\n      return new Uint8Array(buffer);\n    },\n    deserialize(bytes, offset = 0): [number | bigint, number] {\n      const slice = bytes.slice(offset, offset + input.size);\n      assertEnoughBytes('i8', slice, input.size);\n      const view = toDataView(slice);\n      return [input.get(view, littleEndian), offset + input.size];\n    },\n  } as NumberSerializer;\n}\n\n/**\n * Helper function to ensure that the array buffer is converted properly from a uint8array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n * @param {Uint8Array} array Uint8array that's being converted into an array buffer\n * @returns {ArrayBuffer} An array buffer that's necessary to construct a data view\n */\nexport const toArrayBuffer = (array: Uint8Array): ArrayBuffer =>\n  array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\n\nexport const toDataView = (array: Uint8Array): DataView =>\n  new DataView(toArrayBuffer(array));\n\nexport const assertRange = (\n  serializer: string,\n  min: number | bigint,\n  max: number | bigint,\n  value: number | bigint\n) => {\n  if (value < min || value > max) {\n    throw new NumberOutOfRangeError(serializer, min, max, value);\n  }\n};\n\nexport const assertEnoughBytes = (\n  serializer: string,\n  bytes: Uint8Array,\n  expected: number\n) => {\n  if (bytes.length === 0) {\n    throw new DeserializingEmptyBufferError(serializer);\n  }\n  if (bytes.length < expected) {\n    throw new NotEnoughBytesError(serializer, expected, bytes.length);\n  }\n};\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const f64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'f64',\n    size: 8,\n    set: (view, value, le) => view.setFloat64(0, Number(value), le),\n    get: (view, le) => view.getFloat64(0, le),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { SingleByteNumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i8 = (\n  options: SingleByteNumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i8',\n    size: 1,\n    range: [-Number('0x7f') - 1, Number('0x7f')],\n    set: (view, value) => view.setInt8(0, Number(value)),\n    get: (view) => view.getInt8(0),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i16 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i16',\n    size: 2,\n    range: [-Number('0x7fff') - 1, Number('0x7fff')],\n    set: (view, value, le) => view.setInt16(0, Number(value), le),\n    get: (view, le) => view.getInt16(0, le),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'i32',\n    size: 4,\n    range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n    set: (view, value, le) => view.setInt32(0, Number(value), le),\n    get: (view, le) => view.getInt32(0, le),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'i64',\n    size: 8,\n    range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n    set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n    get: (view, le) => view.getBigInt64(0, le),\n    options,\n  });\n",null,"/* eslint-disable no-bitwise */\nimport { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const i128 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'i128',\n    size: 16,\n    range: [\n      -BigInt('0x7fffffffffffffffffffffffffffffff') - 1n,\n      BigInt('0x7fffffffffffffffffffffffffffffff'),\n    ],\n    set: (view, value, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const rightMask = 0xffffffffffffffffn;\n      view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n      view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n    },\n    get: (view, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const left = view.getBigInt64(leftOffset, le);\n      const right = view.getBigUint64(rightOffset, le);\n      return (left << 64n) + right;\n    },\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { SingleByteNumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u8 = (\n  options: SingleByteNumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u8',\n    size: 1,\n    range: [0, Number('0xff')],\n    set: (view, value) => view.setUint8(0, Number(value)),\n    get: (view) => view.getUint8(0),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u16 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u16',\n    size: 2,\n    range: [0, Number('0xffff')],\n    set: (view, value, le) => view.setUint16(0, Number(value), le),\n    get: (view, le) => view.getUint16(0, le),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u32 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number> =>\n  numberFactory({\n    name: 'u32',\n    size: 4,\n    range: [0, Number('0xffffffff')],\n    set: (view, value, le) => view.setUint32(0, Number(value), le),\n    get: (view, le) => view.getUint32(0, le),\n    options,\n  });\n",null,"import { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u64 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'u64',\n    size: 8,\n    range: [0, BigInt('0xffffffffffffffff')],\n    set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n    get: (view, le) => view.getBigUint64(0, le),\n    options,\n  });\n",null,"/* eslint-disable no-bitwise */\nimport { Serializer } from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializerOptions } from './common';\nimport { numberFactory } from './utils';\n\nexport const u128 = (\n  options: NumberSerializerOptions = {}\n): Serializer<number | bigint, bigint> =>\n  numberFactory({\n    name: 'u128',\n    size: 16,\n    range: [0, BigInt('0xffffffffffffffffffffffffffffffff')],\n    set: (view, value, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const rightMask = 0xffffffffffffffffn;\n      view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n      view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n    },\n    get: (view, le) => {\n      const leftOffset = le ? 8 : 0;\n      const rightOffset = le ? 0 : 8;\n      const left = view.getBigUint64(leftOffset, le);\n      const right = view.getBigUint64(rightOffset, le);\n      return (left << 64n) + right;\n    },\n    options,\n  });\n",null,"/* eslint-disable no-bitwise */\nimport {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { assertRange } from './utils';\n\n/**\n * Defines the options for the shortU16 serializer.\n * @category Serializers\n */\nexport type ShortU16SerializerOptions = BaseSerializerOptions;\n\n/**\n * Same as u16, but serialized with 1 to 3 bytes.\n *\n * If the value is above 0x7f, the top bit is set and the remaining\n * value is stored in the next bytes. Each byte follows the same\n * pattern until the 3rd byte. The 3rd byte, if needed, uses\n * all 8 bits to store the last byte of the original value.\n *\n * @category Serializers\n */\nexport const shortU16 = (\n  options: ShortU16SerializerOptions = {}\n): Serializer<number> => ({\n  description: options.description ?? 'shortU16',\n  fixedSize: null,\n  maxSize: 3,\n  serialize: (value: number): Uint8Array => {\n    assertRange('shortU16', 0, 65535, value);\n    const bytes = [0];\n    for (let ii = 0; ; ii += 1) {\n      // Shift the bits of the value over such that the next 7 bits are at the right edge.\n      const alignedValue = value >> (ii * 7);\n      if (alignedValue === 0) {\n        // No more bits to consume.\n        break;\n      }\n      // Extract those 7 bits using a mask.\n      const nextSevenBits = 0b1111111 & alignedValue;\n      bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        // Set the continuation bit of the previous slice.\n        bytes[ii - 1] |= 0b10000000;\n      }\n    }\n    return new Uint8Array(bytes);\n  },\n  deserialize: (bytes: Uint8Array, offset = 0): [number, number] => {\n    let value = 0;\n    let byteCount = 0;\n    while (\n      ++byteCount // eslint-disable-line no-plusplus\n    ) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 0b1111111 & currentByte;\n      // Insert the next group of seven bits into the correct slot of the output value.\n      value |= nextSevenBits << (byteIndex * 7);\n      if ((currentByte & 0b10000000) === 0) {\n        // This byte does not have its continuation bit set. We're done.\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  },\n});\n",null,"import {\n  BaseSerializerOptions,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for array serializers.\n * @category Serializers\n */\nexport type ArraySerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the array.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for an array of items.\n *\n * @param item - The serializer to use for the array's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function array<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: ArraySerializerOptions = {}\n): Serializer<T[], U[]> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `array(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (value: T[]) => {\n      if (typeof size === 'number' && value.length !== size) {\n        throw new InvalidNumberOfItemsError('array', size, value.length);\n      }\n      return mergeBytes([\n        getSizePrefix(size, value.length),\n        ...value.map((v) => item.serialize(v)),\n      ]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const values: U[] = [];\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [values, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          values.push(value);\n          offset = newOffset;\n        }\n        return [values, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        values.push(value);\n        offset = newOffset;\n      }\n      return [values, offset];\n    },\n  };\n}\n",null,"/** @category Errors */\nexport class InvalidNumberOfItemsError extends Error {\n  readonly name = 'InvalidNumberOfItemsError';\n\n  constructor(\n    serializer: string,\n    expected: number | bigint,\n    actual: number | bigint\n  ) {\n    super(`Expected [${serializer}] to have ${expected} items, got ${actual}.`);\n  }\n}\n\n/** @category Errors */\nexport class InvalidArrayLikeRemainderSizeError extends Error {\n  readonly name = 'InvalidArrayLikeRemainderSizeError';\n\n  constructor(remainderSize: number | bigint, itemSize: number | bigint) {\n    super(\n      `The remainder of the buffer (${remainderSize} bytes) cannot be split into chunks of ${itemSize} bytes. ` +\n        `Serializers of \"remainder\" size must have a remainder that is a multiple of its item size. ` +\n        `In other words, ${remainderSize} modulo ${itemSize} should be equal to zero.`\n    );\n  }\n}\n\n/** @category Errors */\nexport class UnrecognizedArrayLikeSerializerSizeError extends Error {\n  readonly name = 'UnrecognizedArrayLikeSerializerSizeError';\n\n  constructor(size: never) {\n    super(`Unrecognized array-like serializer size: ${JSON.stringify(size)}`);\n  }\n}\n\n/** @category Errors */\nexport class InvalidDataEnumVariantError extends Error {\n  readonly name = 'InvalidDataEnumVariantError';\n\n  constructor(invalidVariant: string, validVariants: string[]) {\n    super(\n      `Invalid data enum variant. ` +\n        `Expected one of [${validVariants.join(', ')}], ` +\n        `got \"${invalidVariant}\".`\n    );\n  }\n}\n\n/** @category Errors */\nexport class InvalidScalarEnumVariantError extends Error {\n  readonly name = 'InvalidScalarEnumVariantError';\n\n  constructor(\n    invalidVariant: string | number | bigint,\n    validVariants: string[],\n    min: number | bigint,\n    max: number | bigint\n  ) {\n    super(\n      `Invalid scalar enum variant. ` +\n        `Expected one of [${validVariants.join(', ')}] ` +\n        `or a number between ${min} and ${max}, ` +\n        `got \"${invalidVariant}\".`\n    );\n  }\n}\n\n/** @category Errors */\nexport class EnumDiscriminatorOutOfRangeError extends RangeError {\n  readonly name = 'EnumDiscriminatorOutOfRangeError';\n\n  constructor(\n    discriminator: number | bigint,\n    min: number | bigint,\n    max: number | bigint\n  ) {\n    super(\n      `Enum discriminator out of range. ` +\n        `Expected a number between ${min} and ${max}, got ${discriminator}.`\n    );\n  }\n}\n",null,"import type { NumberSerializer } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { UnrecognizedArrayLikeSerializerSizeError } from './errors';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\nexport function getResolvedSize(\n  size: number | NumberSerializer,\n  bytes: Uint8Array,\n  offset: number\n): [number | bigint, number] {\n  if (typeof size === 'number') {\n    return [size, offset];\n  }\n\n  if (typeof size === 'object') {\n    return size.deserialize(bytes, offset);\n  }\n\n  throw new UnrecognizedArrayLikeSerializerSizeError(size);\n}\n\nexport function getSizeDescription(\n  size: ArrayLikeSerializerSize | string\n): string {\n  return typeof size === 'object' ? size.description : `${size}`;\n}\n\nexport function getSizeFromChildren(\n  size: ArrayLikeSerializerSize,\n  childrenSizes: (number | null)[]\n): number | null {\n  if (typeof size !== 'number') return null;\n  if (size === 0) return 0;\n  const childrenSize = sumSerializerSizes(childrenSizes);\n  return childrenSize === null ? null : childrenSize * size;\n}\n\nexport function getSizePrefix(\n  size: ArrayLikeSerializerSize,\n  realSize: number\n): Uint8Array {\n  return typeof size === 'object' ? size.serialize(realSize) : new Uint8Array();\n}\n",null,"export function sumSerializerSizes(sizes: (number | null)[]): number | null {\n  return sizes.reduce(\n    (all, size) => (all === null || size === null ? null : all + size),\n    0 as number | null\n  );\n}\n",null,"/* eslint-disable no-bitwise */\nimport {\n  BaseSerializerOptions,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for bitArray serializers.\n * @category Serializers\n */\nexport type BitArraySerializerOptions = BaseSerializerOptions & {\n  /**\n   * Whether to read the bits in reverse order.\n   * @defaultValue `false`\n   */\n  backward?: boolean;\n};\n\n/**\n * An array of boolean serializer that\n * converts booleans to bits and vice versa.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport const bitArray = (\n  size: number,\n  options: BitArraySerializerOptions | boolean = {}\n): Serializer<boolean[]> => {\n  const parsedOptions: BitArraySerializerOptions =\n    typeof options === 'boolean' ? { backward: options } : options;\n  const backward = parsedOptions.backward ?? false;\n  const backwardSuffix = backward ? '; backward' : '';\n  return {\n    description:\n      parsedOptions.description ?? `bitArray(${size}${backwardSuffix})`,\n    fixedSize: size,\n    maxSize: size,\n    serialize(value: boolean[]) {\n      const bytes: number[] = [];\n\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytes.unshift(byte);\n        } else {\n          bytes.push(byte);\n        }\n      }\n\n      return new Uint8Array(bytes);\n    },\n    deserialize(bytes, offset = 0) {\n      const booleans: boolean[] = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      if (slice.length !== size) {\n        throw new NotEnoughBytesError('bitArray', size, slice.length);\n      }\n\n      slice.forEach((byte) => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 0b1000_0000));\n            byte <<= 1;\n          }\n        }\n      });\n\n      return [booleans, offset + size];\n    },\n  };\n};\n",null,"import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\n\n/**\n * Defines the options for boolean serializers.\n * @category Serializers\n */\nexport type BoolSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The number serializer to delegate to.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a boolean serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function bool(options: BoolSerializerOptions = {}): Serializer<boolean> {\n  const size = options.size ?? u8();\n  if (size.fixedSize === null) {\n    throw new ExpectedFixedSizeSerializerError(\n      'Serializer [bool] requires a fixed size.'\n    );\n  }\n  return {\n    description: options.description ?? `bool(${size.description})`,\n    fixedSize: size.fixedSize,\n    maxSize: size.fixedSize,\n    serialize: (value: boolean) => size.serialize(value ? 1 : 0),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('bool');\n      }\n      const [value, vOffset] = size.deserialize(bytes, offset);\n      return [value === 1, vOffset];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n  fixSerializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { NumberSerializer } from '@metaplex-foundation/umi-serializers-numbers';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for bytes serializers.\n * @category Serializers\n */\nexport type BytesSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the buffer. It can be one of the following:\n   * - a {@link NumberSerializer} that prefixes the buffer with its size.\n   * - a fixed number of bytes.\n   * - or `'variable'` to use the rest of the buffer.\n   * @defaultValue `'variable'`\n   */\n  size?: NumberSerializer | number | 'variable';\n};\n\n/**\n * Creates a serializer that passes the buffer as-is.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function bytes(\n  options: BytesSerializerOptions = {}\n): Serializer<Uint8Array> {\n  const size = options.size ?? 'variable';\n  const description =\n    options.description ?? `bytes(${getSizeDescription(size)})`;\n\n  const byteSerializer: Serializer<Uint8Array> = {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: Uint8Array) => new Uint8Array(value),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    },\n  };\n\n  if (size === 'variable') {\n    return byteSerializer;\n  }\n\n  if (typeof size === 'number') {\n    return fixSerializer(byteSerializer, size, description);\n  }\n\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: Uint8Array) => {\n      const contentBytes = byteSerializer.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('bytes');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new NotEnoughBytesError('bytes', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = byteSerializer.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport {\n  EnumDiscriminatorOutOfRangeError,\n  InvalidDataEnumVariantError,\n} from './errors';\nimport { maxSerializerSizes } from './maxSerializerSizes';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\n/**\n * Defines a data enum using discriminated union types.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * ```\n *\n * @category Serializers\n */\nexport type DataEnum = { __kind: string };\n\n/**\n * Extracts a variant from a data enum.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKind<WebPageEvent, 'click'>;\n * // -> { __kind: 'click', x: number, y: number }\n * ```\n *\n * @category Serializers\n */\nexport type GetDataEnumKind<\n  T extends DataEnum,\n  K extends T['__kind']\n> = Extract<T, { __kind: K }>;\n\n/**\n * Extracts a variant from a data enum without its discriminator.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * type ClickEvent = GetDataEnumKindContent<WebPageEvent, 'click'>;\n * // -> { x: number, y: number }\n * ```\n *\n * @category Serializers\n */\nexport type GetDataEnumKindContent<\n  T extends DataEnum,\n  K extends T['__kind']\n> = Omit<Extract<T, { __kind: K }>, '__kind'>;\n\n/**\n * Get the name and serializer of each variant in a data enum.\n * @category Serializers\n */\nexport type DataEnumToSerializerTuple<T extends DataEnum, U extends T> = Array<\n  T extends any\n    ? [\n        T['__kind'],\n        keyof Omit<T, '__kind'> extends never\n          ? Serializer<Omit<T, '__kind'>, Omit<U, '__kind'>> | Serializer<void>\n          : Serializer<Omit<T, '__kind'>, Omit<U, '__kind'>>\n      ]\n    : never\n>;\n\n/**\n * Defines the options for data enum serializers.\n * @category Serializers\n */\nexport type DataEnumSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the enum discriminator prefixing the variant.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a data enum serializer.\n *\n * @param variants - The variant serializers of the data enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function dataEnum<T extends DataEnum, U extends T = T>(\n  variants: DataEnumToSerializerTuple<T, U>,\n  options: DataEnumSerializerOptions = {}\n): Serializer<T, U> {\n  const prefix = options.size ?? u8();\n  const fieldDescriptions = variants\n    .map(\n      ([name, serializer]) =>\n        `${String(name)}${serializer ? `: ${serializer.description}` : ''}`\n    )\n    .join(', ');\n  const allVariantHaveTheSameFixedSize = variants.every(\n    (one, i, all) => one[1].fixedSize === all[0][1].fixedSize\n  );\n  const fixedVariantSize = allVariantHaveTheSameFixedSize\n    ? variants[0][1].fixedSize\n    : null;\n  const maxVariantSize = maxSerializerSizes(\n    variants.map(([, field]) => field.maxSize)\n  );\n  return {\n    description:\n      options.description ??\n      `dataEnum(${fieldDescriptions}; ${prefix.description})`,\n    fixedSize:\n      variants.length === 0\n        ? prefix.fixedSize\n        : sumSerializerSizes([prefix.fixedSize, fixedVariantSize]),\n    maxSize:\n      variants.length === 0\n        ? prefix.maxSize\n        : sumSerializerSizes([prefix.maxSize, maxVariantSize]),\n    serialize: (variant: T) => {\n      const discriminator = variants.findIndex(\n        ([key]) => variant.__kind === key\n      );\n      if (discriminator < 0) {\n        throw new InvalidDataEnumVariantError(\n          variant.__kind,\n          variants.map(([key]) => key)\n        );\n      }\n      const variantPrefix = prefix.serialize(discriminator);\n      const variantSerializer = variants[discriminator][1];\n      const variantBytes = variantSerializer.serialize(variant as any);\n      return mergeBytes([variantPrefix, variantBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('dataEnum');\n      }\n      const [discriminator, dOffset] = prefix.deserialize(bytes, offset);\n      offset = dOffset;\n      const variantField = variants[Number(discriminator)] ?? null;\n      if (!variantField) {\n        throw new EnumDiscriminatorOutOfRangeError(\n          discriminator,\n          0,\n          variants.length - 1\n        );\n      }\n      const [variant, vOffset] = variantField[1].deserialize(bytes, offset);\n      offset = vOffset;\n      return [{ __kind: variantField[0], ...(variant ?? {}) } as U, offset];\n    },\n  };\n}\n",null,"export function maxSerializerSizes(sizes: (number | null)[]): number | null {\n  return sizes.reduce(\n    (all, size) => (all === null || size === null ? null : Math.max(all, size)),\n    0 as number | null\n  );\n}\n",null,"import {\n  BaseSerializerOptions,\n  mergeBytes,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for `Map` serializers.\n * @category Serializers\n */\nexport type MapSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the map.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for a map.\n *\n * @param key - The serializer to use for the map's keys.\n * @param value - The serializer to use for the map's values.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function map<TK, TV, UK extends TK = TK, UV extends TV = TV>(\n  key: Serializer<TK, UK>,\n  value: Serializer<TV, UV>,\n  options: MapSerializerOptions = {}\n): Serializer<Map<TK, TV>, Map<UK, UV>> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `map(${key.description}, ${value.description}; ${getSizeDescription(\n        size\n      )})`,\n    fixedSize: getSizeFromChildren(size, [key.fixedSize, value.fixedSize]),\n    maxSize: getSizeFromChildren(size, [key.maxSize, value.maxSize]),\n    serialize: (map: Map<TK, TV>) => {\n      if (typeof size === 'number' && map.size !== size) {\n        throw new InvalidNumberOfItemsError('map', size, map.size);\n      }\n      const itemBytes = Array.from(map, ([k, v]) =>\n        mergeBytes([key.serialize(k), value.serialize(v)])\n      );\n      return mergeBytes([getSizePrefix(size, map.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const map: Map<UK, UV> = new Map();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [map, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n          offset = kOffset;\n          const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n          offset = vOffset;\n          map.set(deserializedKey, deserializedValue);\n        }\n        return [map, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n        offset = kOffset;\n        const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n        offset = vOffset;\n        map.set(deserializedKey, deserializedValue);\n      }\n      return [map, offset];\n    },\n  };\n}\n",null,"import { Nullable } from '@metaplex-foundation/umi-options';\nimport {\n  BaseSerializerOptions,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for `Nullable` serializers.\n * @category Serializers\n */\nexport type NullableSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the boolean prefix.\n   * @defaultValue `u8()`\n   */\n  prefix?: NumberSerializer;\n  /**\n   * Whether the item serializer should be of fixed size.\n   *\n   * When this is true, a `null` value will skip the bytes that would\n   * have been used for the item. Note that this will only work if the\n   * item serializer is of fixed size.\n   * @defaultValue `false`\n   */\n  fixed?: boolean;\n};\n\n/**\n * Creates a serializer for an optional value using `null` as the `None` value.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function nullable<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: NullableSerializerOptions = {}\n): Serializer<Nullable<T>, Nullable<U>> {\n  const prefix = options.prefix ?? u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new ExpectedFixedSizeSerializerError(\n        'Fixed nullables can only be used with fixed-size serializers'\n      );\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description:\n      options.description ??\n      `nullable(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: (option: Nullable<T>) => {\n      const prefixByte = prefix.serialize(Number(option !== null));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize as number;\n        const itemBytes =\n          option !== null\n            ? item.serialize(option).slice(0, itemFixedSize)\n            : new Uint8Array(itemFixedSize).fill(0);\n        return mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes =\n        option !== null ? item.serialize(option) : new Uint8Array();\n      return mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [null, offset];\n      }\n      const fixedOffset =\n        offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [null, fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [value, fixed ? fixedOffset : offset];\n    },\n  };\n}\n",null,"import {\n  Option,\n  OptionOrNullable,\n  isOption,\n  isSome,\n  none,\n  some,\n  wrapNullable,\n} from '@metaplex-foundation/umi-options';\nimport {\n  BaseSerializerOptions,\n  ExpectedFixedSizeSerializerError,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for `Option` serializers.\n * @category Serializers\n */\nexport type OptionSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the boolean prefix.\n   * @defaultValue `u8()`\n   */\n  prefix?: NumberSerializer;\n  /**\n   * Whether the item serializer should be of fixed size.\n   *\n   * When this is true, a `None` value will skip the bytes that would\n   * have been used for the item. Note that this will only work if the\n   * item serializer is of fixed size.\n   * @defaultValue `false`\n   */\n  fixed?: boolean;\n};\n\n/**\n * Creates a serializer for an optional value using the {@link Option} type.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function option<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: OptionSerializerOptions = {}\n): Serializer<OptionOrNullable<T>, Option<U>> {\n  const prefix = options.prefix ?? u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new ExpectedFixedSizeSerializerError(\n        'Fixed options can only be used with fixed-size serializers'\n      );\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description:\n      options.description ?? `option(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: (optionOrNullable: OptionOrNullable<T>) => {\n      const option = isOption<T>(optionOrNullable)\n        ? optionOrNullable\n        : wrapNullable(optionOrNullable);\n\n      const prefixByte = prefix.serialize(Number(isSome(option)));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize as number;\n        const itemBytes = isSome(option)\n          ? item.serialize(option.value).slice(0, itemFixedSize)\n          : new Uint8Array(itemFixedSize).fill(0);\n        return mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes = isSome(option)\n        ? item.serialize(option.value)\n        : new Uint8Array();\n      return mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [none(), offset];\n      }\n      const fixedOffset =\n        offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [none(), fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [some(value), fixed ? fixedOffset : offset];\n    },\n  };\n}\n",null,"import {\n  PUBLIC_KEY_LENGTH,\n  PublicKey,\n  PublicKeyInput,\n  publicKeyBytes,\n  publicKey as toPublicKey,\n} from '@metaplex-foundation/umi-public-keys';\nimport {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for `PublicKey` serializers.\n * @category Serializers\n */\nexport type PublicKeySerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for base58 encoded public keys.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function publicKey(\n  options: PublicKeySerializerOptions = {}\n): Serializer<PublicKeyInput, PublicKey> {\n  return {\n    description: options.description ?? 'publicKey',\n    fixedSize: 32,\n    maxSize: 32,\n    serialize: (value: PublicKeyInput) => publicKeyBytes(toPublicKey(value)),\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const pubkeyBytes = bytes.slice(offset, offset + 32);\n      if (pubkeyBytes.length === 0) {\n        throw new DeserializingEmptyBufferError('publicKey');\n      }\n      if (pubkeyBytes.length < PUBLIC_KEY_LENGTH) {\n        throw new NotEnoughBytesError(\n          'publicKey',\n          PUBLIC_KEY_LENGTH,\n          pubkeyBytes.length\n        );\n      }\n      return [toPublicKey(pubkeyBytes), offset + 32];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport {\n  NumberSerializer,\n  u8,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport {\n  EnumDiscriminatorOutOfRangeError,\n  InvalidScalarEnumVariantError,\n} from './errors';\n\n/**\n * Defines a scalar enum as a type from its constructor.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionType = ScalarEnum<Direction>;\n * ```\n *\n * @category Serializers\n */\nexport type ScalarEnum<T> =\n  | { [key: number | string]: string | number | T }\n  | number\n  | T;\n\n/**\n * Defines the options for scalar enum serializers.\n * @category Serializers\n */\nexport type ScalarEnumSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The serializer to use for the enum discriminator.\n   * @defaultValue `u8()`\n   */\n  size?: NumberSerializer;\n};\n\n/**\n * Creates a scalar enum serializer.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function scalarEnum<T>(\n  constructor: ScalarEnum<T> & {},\n  options: ScalarEnumSerializerOptions = {}\n): Serializer<T> {\n  const prefix = options.size ?? u8();\n  const enumKeys = Object.keys(constructor);\n  const enumValues = Object.values(constructor);\n  const isNumericEnum = enumValues.some((v) => typeof v === 'number');\n  const valueDescriptions = enumValues\n    .filter((v) => typeof v === 'string')\n    .join(', ');\n  const minRange = 0;\n  const maxRange = isNumericEnum\n    ? enumValues.length / 2 - 1\n    : enumValues.length - 1;\n  const stringValues: string[] = isNumericEnum\n    ? [...enumKeys]\n    : [...new Set([...enumKeys, ...enumValues])];\n  function assertValidVariant(variant: number | string): void {\n    const isInvalidNumber =\n      typeof variant === 'number' && (variant < minRange || variant > maxRange);\n    const isInvalidString =\n      typeof variant === 'string' && !stringValues.includes(variant);\n    if (isInvalidNumber || isInvalidString) {\n      throw new InvalidScalarEnumVariantError(\n        variant,\n        stringValues,\n        minRange,\n        maxRange\n      );\n    }\n  }\n  return {\n    description:\n      options.description ??\n      `enum(${valueDescriptions}; ${prefix.description})`,\n    fixedSize: prefix.fixedSize,\n    maxSize: prefix.maxSize,\n    serialize: (value: T) => {\n      assertValidVariant(value as string | number);\n      if (typeof value === 'number') return prefix.serialize(value);\n      const valueIndex = enumValues.indexOf(value);\n      if (valueIndex >= 0) return prefix.serialize(valueIndex);\n      return prefix.serialize(enumKeys.indexOf(value as string));\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('enum');\n      }\n      const [value, newOffset] = prefix.deserialize(bytes, offset);\n      const valueAsNumber = Number(value);\n      offset = newOffset;\n      if (valueAsNumber < minRange || valueAsNumber > maxRange) {\n        throw new EnumDiscriminatorOutOfRangeError(\n          valueAsNumber,\n          minRange,\n          maxRange\n        );\n      }\n      return [\n        (isNumericEnum ? valueAsNumber : enumValues[valueAsNumber]) as T,\n        offset,\n      ];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  mergeBytes,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { u32 } from '@metaplex-foundation/umi-serializers-numbers';\nimport { ArrayLikeSerializerSize } from './arrayLikeSerializerSize';\nimport { InvalidNumberOfItemsError } from './errors';\nimport {\n  getResolvedSize,\n  getSizeDescription,\n  getSizeFromChildren,\n  getSizePrefix,\n} from './utils';\n\n/**\n * Defines the options for `Set` serializers.\n * @category Serializers\n */\nexport type SetSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the set.\n   * @defaultValue `u32()`\n   */\n  size?: ArrayLikeSerializerSize;\n};\n\n/**\n * Creates a serializer for a set.\n *\n * @param item - The serializer to use for the set's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function set<T, U extends T = T>(\n  item: Serializer<T, U>,\n  options: SetSerializerOptions = {}\n): Serializer<Set<T>, Set<U>> {\n  const size = options.size ?? u32();\n  return {\n    description:\n      options.description ??\n      `set(${item.description}; ${getSizeDescription(size)})`,\n    fixedSize: getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: getSizeFromChildren(size, [item.maxSize]),\n    serialize: (set: Set<T>) => {\n      if (typeof size === 'number' && set.size !== size) {\n        throw new InvalidNumberOfItemsError('set', size, set.size);\n      }\n      const itemBytes = Array.from(set, (value) => item.serialize(value));\n      return mergeBytes([getSizePrefix(size, set.size), ...itemBytes]);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const set: Set<U> = new Set();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [set, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          set.add(value);\n          offset = newOffset;\n        }\n        return [set, offset];\n      }\n      const [resolvedSize, newOffset] = getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        set.add(value);\n        offset = newOffset;\n      }\n      return [set, offset];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  DeserializingEmptyBufferError,\n  NotEnoughBytesError,\n  Serializer,\n  fixSerializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { utf8 } from '@metaplex-foundation/umi-serializers-encodings';\nimport {\n  NumberSerializer,\n  u32,\n} from '@metaplex-foundation/umi-serializers-numbers';\nimport { getSizeDescription } from './utils';\n\n/**\n * Defines the options for string serializers.\n * @category Serializers\n */\nexport type StringSerializerOptions = BaseSerializerOptions & {\n  /**\n   * The size of the string. It can be one of the following:\n   * - a {@link NumberSerializer} that prefixes the string with its size.\n   * - a fixed number of bytes.\n   * - or `'variable'` to use the rest of the buffer.\n   * @defaultValue `u32()`\n   */\n  size?: NumberSerializer | number | 'variable';\n  /**\n   * The string serializer to use for encoding and decoding the content.\n   * @defaultValue `utf8`\n   */\n  encoding?: Serializer<string>;\n};\n\n/**\n * Creates a string serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function string(\n  options: StringSerializerOptions = {}\n): Serializer<string> {\n  const size = options.size ?? u32();\n  const encoding = options.encoding ?? utf8;\n  const description =\n    options.description ??\n    `string(${encoding.description}; ${getSizeDescription(size)})`;\n\n  if (size === 'variable') {\n    return { ...encoding, description };\n  }\n\n  if (typeof size === 'number') {\n    return fixSerializer(encoding, size, description);\n  }\n\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: (value: string) => {\n      const contentBytes = encoding.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer: Uint8Array, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new DeserializingEmptyBufferError('string');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new NotEnoughBytesError('string', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = encoding.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  Serializer,\n  mergeBytes,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { sumSerializerSizes } from './sumSerializerSizes';\n\n/**\n * Get the name and serializer of each field in a struct.\n * @category Serializers\n */\nexport type StructToSerializerTuple<T extends object, U extends T> = Array<\n  {\n    [K in keyof T]: [K, Serializer<T[K], U[K]>];\n  }[keyof T]\n>;\n\n/**\n * Defines the options for struct serializers.\n * @category Serializers\n */\nexport type StructSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for a custom object.\n *\n * @param fields - The name and serializer of each field.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function struct<T extends object, U extends T = T>(\n  fields: StructToSerializerTuple<T, U>,\n  options: StructSerializerOptions = {}\n): Serializer<T, U> {\n  const fieldDescriptions = fields\n    .map(([name, serializer]) => `${String(name)}: ${serializer.description}`)\n    .join(', ');\n  return {\n    description: options.description ?? `struct(${fieldDescriptions})`,\n    fixedSize: sumSerializerSizes(fields.map(([, field]) => field.fixedSize)),\n    maxSize: sumSerializerSizes(fields.map(([, field]) => field.maxSize)),\n    serialize: (struct: T) => {\n      const fieldBytes = fields.map(([key, serializer]) =>\n        serializer.serialize(struct[key])\n      );\n      return mergeBytes(fieldBytes);\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const struct: Partial<U> = {};\n      fields.forEach(([key, serializer]) => {\n        const [value, newOffset] = serializer.deserialize(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct as U, offset];\n    },\n  };\n}\n",null,"import {\n  WrapInSerializer,\n  Serializer,\n  mergeBytes,\n  BaseSerializerOptions,\n} from '@metaplex-foundation/umi-serializers-core';\nimport { sumSerializerSizes } from './sumSerializerSizes';\nimport { InvalidNumberOfItemsError } from './errors';\n\n/**\n * Defines the options for tuple serializers.\n * @category Serializers\n */\nexport type TupleSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a serializer for a tuple-like array.\n *\n * @param items - The serializers to use for each item in the tuple.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nexport function tuple<T extends any[], U extends T = T>(\n  items: WrapInSerializer<[...T], [...U]>,\n  options: TupleSerializerOptions = {}\n): Serializer<T, U> {\n  const itemDescriptions = items.map((item) => item.description).join(', ');\n  return {\n    description: options.description ?? `tuple(${itemDescriptions})`,\n    fixedSize: sumSerializerSizes(items.map((item) => item.fixedSize)),\n    maxSize: sumSerializerSizes(items.map((item) => item.maxSize)),\n    serialize: (value: T) => {\n      if (value.length !== items.length) {\n        throw new InvalidNumberOfItemsError(\n          'tuple',\n          items.length,\n          value.length\n        );\n      }\n      return mergeBytes(\n        items.map((item, index) => item.serialize(value[index]))\n      );\n    },\n    deserialize: (bytes: Uint8Array, offset = 0) => {\n      const values = [] as any as U;\n      items.forEach((serializer) => {\n        const [newValue, newOffset] = serializer.deserialize(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    },\n  };\n}\n",null,"import {\n  BaseSerializerOptions,\n  Serializer,\n} from '@metaplex-foundation/umi-serializers-core';\n\n/**\n * Defines the options for unit serializers.\n * @category Serializers\n */\nexport type UnitSerializerOptions = BaseSerializerOptions;\n\n/**\n * Creates a void serializer.\n *\n * @param options - A set of options for the serializer.\n */\nexport function unit(options: UnitSerializerOptions = {}): Serializer<void> {\n  return {\n    description: options.description ?? 'unit',\n    fixedSize: 0,\n    maxSize: 0,\n    serialize: () => new Uint8Array(),\n    deserialize: (_bytes: Uint8Array, offset = 0) => [undefined, offset],\n  };\n}\n",null,"import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { Serializer } from '@metaplex-foundation/umi-serializers';\nimport type { SolAmount } from './Amount';\nimport { AccountNotFoundError, UnexpectedAccountError } from './errors';\n\n/**\n * The size of an account header in bytes.\n * @category Accounts\n */\nexport const ACCOUNT_HEADER_SIZE = 128;\n\n/**\n * Describes the header of an account.\n * @category Accounts\n */\nexport type AccountHeader = {\n  executable: boolean;\n  owner: PublicKey;\n  lamports: SolAmount;\n  rentEpoch?: bigint;\n};\n\n/**\n * Describes a raw account that has not been deserialized.\n * @category Accounts\n */\nexport type RpcAccount = AccountHeader & {\n  publicKey: PublicKey;\n  data: Uint8Array;\n};\n\n/**\n * Describes a raw account that may or may not exist.\n * @category Accounts\n */\nexport type MaybeRpcAccount =\n  | ({ exists: true } & RpcAccount)\n  | { exists: false; publicKey: PublicKey };\n\n/**\n * Describes a deserialized account.\n * @category Accounts\n */\nexport type Account<T extends object> = T & {\n  publicKey: PublicKey;\n  header: AccountHeader;\n};\n\n/**\n * Given an account data serializer,\n * returns a deserialized account from a raw account.\n * @category Accounts\n */\nexport function deserializeAccount<From extends object, To extends From = From>(\n  rawAccount: RpcAccount,\n  dataSerializer: Serializer<From, To>\n): Account<To> {\n  const { data, publicKey, ...rest } = rawAccount;\n  try {\n    const [parsedData] = dataSerializer.deserialize(data);\n    return { publicKey, header: rest, ...parsedData };\n  } catch (error: any) {\n    throw new UnexpectedAccountError(\n      publicKey,\n      dataSerializer.description,\n      error\n    );\n  }\n}\n\n/**\n * Ensures an account that may or may not exist actually exists.\n * @category Accounts\n */\nexport function assertAccountExists(\n  account: MaybeRpcAccount,\n  name?: string,\n  solution?: string\n): asserts account is MaybeRpcAccount & { exists: true } {\n  if (!account.exists) {\n    throw new AccountNotFoundError(account.publicKey, name, solution);\n  }\n}\n",null,"import { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class UnexpectedAccountError extends SdkError {\n  readonly name: string = 'UnexpectedAccountError';\n\n  constructor(publicKey: PublicKey, expectedType: string, cause?: Error) {\n    const message =\n      `The account at the provided address [${publicKey}] ` +\n      `is not of the expected type [${expectedType}].`;\n    super(message, cause);\n  }\n}\n",null,"import { UmiError } from './UmiError';\n\n/** @category Errors */\nexport class SdkError extends UmiError {\n  readonly name: string = 'SdkError';\n\n  constructor(message: string, cause?: Error) {\n    super(message, 'sdk', undefined, cause);\n  }\n}\n",null,"/** @category Errors */\nexport class UmiError extends Error {\n  readonly name: string = 'UmiError';\n\n  readonly source: UmiErrorSource;\n\n  readonly sourceDetails?: string;\n\n  readonly cause?: Error;\n\n  constructor(\n    message: string,\n    source: UmiErrorSource,\n    sourceDetails?: string,\n    cause?: Error\n  ) {\n    super(message);\n    this.source = source;\n    this.sourceDetails = sourceDetails;\n    this.cause = cause;\n    this.message = `${this.message}\\n\\nSource: ${this.getFullSource()}${\n      this.cause ? `\\n\\nCaused By: ${this.cause}` : ''\n    }\\n`;\n  }\n\n  getCapitalizedSource(): string {\n    if (this.source === 'sdk' || this.source === 'rpc') {\n      return this.source.toUpperCase();\n    }\n\n    return this.source[0].toUpperCase() + this.source.slice(1);\n  }\n\n  getFullSource(): string {\n    const capitalizedSource = this.getCapitalizedSource();\n    const sourceDetails = this.sourceDetails ? ` > ${this.sourceDetails}` : '';\n\n    return capitalizedSource + sourceDetails;\n  }\n\n  toString() {\n    return `[${this.name}] ${this.message}`;\n  }\n}\n\n/** @category Errors */\nexport type UmiErrorSource = 'sdk' | 'network' | 'rpc' | 'plugin' | 'program';\n",null,"import { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class AccountNotFoundError extends SdkError {\n  readonly name: string = 'AccountNotFoundError';\n\n  constructor(publicKey: PublicKey, accountType?: string, solution?: string) {\n    const message = `${\n      accountType\n        ? `The account of type [${accountType}] was not found`\n        : 'No account was found'\n    } at the provided address [${publicKey}].${solution ? ` ${solution}` : ''}`;\n    super(message);\n  }\n}\n",null,"import {\n  NumberSerializer,\n  Serializer,\n  mapSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { BigIntInput, createBigInt } from './BigInt';\nimport { AmountMismatchError, UnexpectedAmountError } from './errors';\n\n/**\n * The identifier of an amount.\n * @category Utils — Amounts\n */\nexport type AmountIdentifier = 'SOL' | 'USD' | '%' | 'splToken' | string;\n\n/**\n * The number of decimals in an amount represented using the lowest possible unit.\n * @category Utils — Amounts\n */\nexport type AmountDecimals = number;\n\n/**\n * Describes an amount of any type or currency using the lowest possible unit.\n * It uses a BigInt to represent the basis points of the amount, a decimal number\n * to know how to interpret the basis points, and an identifier to know what\n * type of amount we are dealing with.\n *\n * Custom type parameters can be used to represent specific types of amounts.\n * For example:\n * - Amount<'SOL', 9> represents an amount of SOL in lamports.\n * - Amount<'USD', 2> represents an amount of USD in cents.\n * - Amount<'%', 2> represents a percentage with 2 decimals.\n *\n * @category Utils — Amounts\n */\nexport type Amount<\n  I extends AmountIdentifier = AmountIdentifier,\n  D extends AmountDecimals = AmountDecimals\n> = {\n  /** The amount in its lower possible unit such that it does not contain decimals. */\n  basisPoints: bigint;\n  /** The identifier of the amount. */\n  identifier: I;\n  /** The number of decimals in the amount. */\n  decimals: D;\n};\n\n/**\n * An amount of SOL represented using the lowest possible unit — i.e. lamports.\n * @category Utils — Amounts\n */\nexport type SolAmount = Amount<'SOL', 9>;\n\n/**\n * An amount of US dollars represented using the lowest possible unit — i.e. cents.\n * @category Utils — Amounts\n */\nexport type UsdAmount = Amount<'USD', 2>;\n\n/**\n * An percentage represented in basis points using a given number of decimals.\n * @category Utils — Amounts\n */\nexport type PercentAmount<D extends AmountDecimals> = Amount<'%', D>;\n\n/**\n * Creates an amount from the provided basis points, identifier, and decimals.\n * @category Utils — Amounts\n */\nexport const createAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  basisPoints: BigIntInput,\n  identifier: I,\n  decimals: D\n): Amount<I, D> => ({\n  basisPoints: createBigInt(basisPoints),\n  identifier,\n  decimals,\n});\n\n/**\n * Creates an amount from a decimal value which will be converted to the lowest\n * possible unit using the provided decimals.\n * @category Utils — Amounts\n */\nexport const createAmountFromDecimals = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  decimalAmount: number,\n  identifier: I,\n  decimals: D\n): Amount<I, D> => {\n  const exponentAmount = createAmount(\n    BigInt(10) ** BigInt(decimals ?? 0),\n    identifier,\n    decimals\n  );\n\n  return multiplyAmount(exponentAmount, decimalAmount);\n};\n\n/**\n * Creates a percentage amount from the provided decimal value.\n * @category Utils — Amounts\n */\nexport const percentAmount = <D extends AmountDecimals>(\n  percent: number,\n  decimals: D = 2 as D\n): Amount<'%', D> => createAmountFromDecimals(percent, '%', decimals);\n\n/**\n * Creates an amount of SPL tokens from the provided decimal value.\n * @category Utils — Amounts\n */\nexport const tokenAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  tokens: number,\n  identifier?: I,\n  decimals?: D\n): Amount<I, D> =>\n  createAmountFromDecimals(\n    tokens,\n    (identifier ?? 'splToken') as I,\n    (decimals ?? 0) as D\n  );\n\n/**\n * Creates a {@link SolAmount} from the provided lamports.\n * @category Utils — Amounts\n */\nexport const lamports = (lamports: BigIntInput): SolAmount =>\n  createAmount(lamports, 'SOL', 9);\n\n/**\n * Creates a {@link SolAmount} from the provided decimal value in SOL.\n * @category Utils — Amounts\n */\nexport const sol = (sol: number): SolAmount =>\n  createAmountFromDecimals(sol, 'SOL', 9);\n\n/**\n * Creates a {@link UsdAmount} from the provided decimal value in USD.\n * @category Utils — Amounts\n */\nexport const usd = (usd: number): UsdAmount =>\n  createAmountFromDecimals(usd, 'USD', 2);\n\n/**\n * Determines whether a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nexport const isAmount = <I extends AmountIdentifier, D extends AmountDecimals>(\n  amount: Amount,\n  identifier: I,\n  decimals: D\n): amount is Amount<I, D> =>\n  amount.identifier === identifier && amount.decimals === decimals;\n\n/**\n * Determines whether a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nexport const isSolAmount = (amount: Amount): amount is SolAmount =>\n  isAmount(amount, 'SOL', 9);\n\n/**\n * Determines whether two amounts are of the same type.\n * @category Utils — Amounts\n */\nexport const sameAmounts = (left: Amount, right: Amount): boolean =>\n  isAmount(left, right.identifier, right.decimals);\n\n/**\n * Ensures that a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nexport function assertAmount<\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(amount: Amount, identifier: I, decimals: D): asserts amount is Amount<I, D> {\n  if (!isAmount(amount, identifier, decimals)) {\n    throw new UnexpectedAmountError(amount, identifier, decimals);\n  }\n}\n\n/**\n * Ensures that a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nexport function assertSolAmount(actual: Amount): asserts actual is SolAmount {\n  assertAmount(actual, 'SOL', 9);\n}\n\n/**\n * Ensures that two amounts are of the same type.\n * @category Utils — Amounts\n */\nexport function assertSameAmounts(\n  left: Amount,\n  right: Amount,\n  operation?: string\n) {\n  if (!sameAmounts(left, right)) {\n    throw new AmountMismatchError(left, right, operation);\n  }\n}\n\n/**\n * Adds two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const addAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): Amount<I, D> => {\n  assertSameAmounts(left, right, 'add');\n\n  return {\n    ...left,\n    basisPoints: left.basisPoints + right.basisPoints,\n  };\n};\n\n/**\n * Subtracts two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const subtractAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): Amount<I, D> => {\n  assertSameAmounts(left, right, 'subtract');\n\n  return {\n    ...left,\n    basisPoints: left.basisPoints - right.basisPoints,\n  };\n};\n\n/**\n * Multiplies an amount by a given multiplier.\n * @category Utils — Amounts\n */\nexport const multiplyAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  multiplier: number | bigint\n): Amount<I, D> => {\n  if (typeof multiplier === 'bigint') {\n    return { ...left, basisPoints: left.basisPoints * multiplier };\n  }\n\n  const [units, decimals] = multiplier.toString().split('.');\n  const multiplierBasisPoints = BigInt(units + (decimals ?? ''));\n  const multiplierExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n\n  return {\n    ...left,\n    basisPoints:\n      (left.basisPoints * multiplierBasisPoints) / multiplierExponents,\n  };\n};\n\n/**\n * Divides an amount by a given divisor.\n * @category Utils — Amounts\n */\nexport const divideAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  divisor: number | bigint\n): Amount<I, D> => {\n  if (typeof divisor === 'bigint') {\n    return { ...left, basisPoints: left.basisPoints / divisor };\n  }\n\n  const [units, decimals] = divisor.toString().split('.');\n  const divisorBasisPoints = BigInt(units + (decimals ?? ''));\n  const divisorExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n\n  return {\n    ...left,\n    basisPoints: (left.basisPoints * divisorExponents) / divisorBasisPoints,\n  };\n};\n\n/**\n * Returns the absolute value of an amount.\n * @category Utils — Amounts\n */\nexport const absoluteAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  value: Amount<I, D>\n): Amount<I, D> => {\n  const x = value.basisPoints;\n  return { ...value, basisPoints: x < 0 ? -x : x };\n};\n\n/**\n * Compares two amounts of the same type.\n * @category Utils — Amounts\n */\nexport const compareAmounts = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): -1 | 0 | 1 => {\n  assertSameAmounts(left, right, 'compare');\n  if (left.basisPoints > right.basisPoints) return 1;\n  if (left.basisPoints < right.basisPoints) return -1;\n  return 0;\n};\n\n/**\n * Determines whether two amounts are equal.\n * An optional tolerance can be provided to allow for small differences.\n * When using {@link SolAmount}, this is usually due to transaction or small storage fees.\n * @category Utils — Amounts\n */\nexport const isEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>,\n  tolerance?: Amount<I, D>\n): boolean => {\n  tolerance = tolerance ?? createAmount(0, left.identifier, left.decimals);\n  assertSameAmounts(left, right, 'isEqualToAmount');\n  assertSameAmounts(left, tolerance, 'isEqualToAmount');\n\n  const delta = absoluteAmount(subtractAmounts(left, right));\n\n  return isLessThanOrEqualToAmount(delta, tolerance);\n};\n\n/**\n * Whether the left amount is less than the right amount.\n * @category Utils — Amounts\n */\nexport const isLessThanAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) < 0;\n\n/**\n * Whether the left amount is less than or equal to the right amount.\n * @category Utils — Amounts\n */\nexport const isLessThanOrEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) <= 0;\n\n/**\n * Whether the left amount is greater than the right amount.\n * @category Utils — Amounts\n */\nexport const isGreaterThanAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) > 0;\n\n/**\n * Whether the left amount is greater than or equal to the right amount.\n * @category Utils — Amounts\n */\nexport const isGreaterThanOrEqualToAmount = <\n  I extends AmountIdentifier,\n  D extends AmountDecimals\n>(\n  left: Amount<I, D>,\n  right: Amount<I, D>\n): boolean => compareAmounts(left, right) >= 0;\n\n/**\n * Whether the amount is zero.\n * @category Utils — Amounts\n */\nexport const isZeroAmount = (value: Amount): boolean =>\n  value.basisPoints === BigInt(0);\n\n/**\n * Whether the amount is positive.\n * @category Utils — Amounts\n */\nexport const isPositiveAmount = (value: Amount): boolean =>\n  value.basisPoints >= BigInt(0);\n\n/**\n * Whether the amount is negative.\n * @category Utils — Amounts\n */\nexport const isNegativeAmount = (value: Amount): boolean =>\n  value.basisPoints < BigInt(0);\n\n/**\n * Converts an amount to a string by using the amount's decimals.\n * @category Utils — Amounts\n */\nexport const amountToString = (value: Amount, maxDecimals?: number): string => {\n  let text = value.basisPoints.toString();\n  if (value.decimals === 0) {\n    return text;\n  }\n\n  const sign = text.startsWith('-') ? '-' : '';\n  text = text.replace('-', '');\n  text = text.padStart(value.decimals + 1, '0');\n  const units = text.slice(0, -value.decimals);\n  let decimals = text.slice(-value.decimals);\n\n  if (maxDecimals !== undefined) {\n    decimals = decimals.slice(0, maxDecimals);\n  }\n\n  return `${sign + units}.${decimals}`;\n};\n\n/**\n * Converts an amount to a number by using the amount's decimals.\n * Note that this may throw an error if the amount is too large to fit in a JavaScript number.\n * @category Utils — Amounts\n */\nexport const amountToNumber = (value: Amount): number =>\n  parseFloat(amountToString(value));\n\n/**\n * Displays an amount as a string by using the amount's decimals and identifier.\n * @category Utils — Amounts\n */\nexport const displayAmount = (value: Amount, maxDecimals?: number): string => {\n  const amountAsString = amountToString(value, maxDecimals);\n\n  switch (value.identifier) {\n    case '%':\n      return `${amountAsString}%`;\n    case 'splToken':\n      return /^1(\\.0+)?$/.test(amountAsString)\n        ? `${amountAsString} Token`\n        : `${amountAsString} Tokens`;\n    default:\n      if (value.identifier.startsWith('splToken.')) {\n        const [, identifier] = value.identifier.split('.');\n        return `${identifier} ${amountAsString}`;\n      }\n      return `${value.identifier} ${amountAsString}`;\n  }\n};\n\n/**\n * Converts a number serializer into an amount serializer\n * by providing an amount identifier and decimals.\n * @category Utils — Amounts\n */\nexport const mapAmountSerializer = <\n  I extends AmountIdentifier = AmountIdentifier,\n  D extends AmountDecimals = AmountDecimals\n>(\n  serializer: NumberSerializer,\n  identifier: I,\n  decimals: D\n): Serializer<Amount<I, D>> =>\n  mapSerializer(\n    serializer as Serializer<number | bigint>,\n    (value: Amount<I, D>): number | bigint =>\n      value.basisPoints > Number.MAX_SAFE_INTEGER\n        ? value.basisPoints\n        : Number(value.basisPoints),\n    (value: number | bigint): Amount<I, D> =>\n      createAmount(value, identifier, decimals)\n  );\n",null,"/**\n * Defines all the types that can be used to create\n * a BigInt via the <code>{@link createBigInt}</code> function.\n * @category Utils — Amounts\n */\nexport type BigIntInput = number | string | boolean | bigint | Uint8Array;\n\n/**\n * Creates a BigInt from a number, string, boolean, or Uint8Array.\n * @category Utils — Amounts\n */\nexport const createBigInt = (input: BigIntInput): bigint => {\n  input = typeof input === 'object' ? input.toString() : input;\n  return BigInt(input);\n};\n",null,"import type { Amount, AmountDecimals, AmountIdentifier } from '../Amount';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class UnexpectedAmountError extends SdkError {\n  readonly name: string = 'UnexpectedAmountError';\n\n  readonly amount: Amount;\n\n  readonly expectedIdentifier: AmountIdentifier;\n\n  readonly expectedDecimals: AmountDecimals;\n\n  constructor(\n    amount: Amount,\n    expectedIdentifier: AmountIdentifier,\n    expectedDecimals: AmountDecimals\n  ) {\n    const message =\n      `Expected amount of type [${expectedIdentifier} with ${expectedDecimals} decimals] ` +\n      `but got [${amount.identifier} with ${amount.decimals} decimals]. ` +\n      `Ensure the provided Amount is of the expected type.`;\n    super(message);\n    this.amount = amount;\n    this.expectedIdentifier = expectedIdentifier;\n    this.expectedDecimals = expectedDecimals;\n  }\n}\n",null,"import type { Amount } from '../Amount';\nimport { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class AmountMismatchError extends SdkError {\n  readonly name: string = 'AmountMismatchError';\n\n  readonly left: Amount;\n\n  readonly right: Amount;\n\n  readonly operation?: string;\n\n  constructor(left: Amount, right: Amount, operation?: string) {\n    const wrappedOperation = operation ? ` [${operation}]` : '';\n    const message =\n      `The SDK tried to execute an operation${wrappedOperation} on two amounts of different types: ` +\n      `[${left.identifier} with ${left.decimals} decimals] and ` +\n      `[${right.identifier} with ${right.decimals} decimals]. ` +\n      `Provide both amounts in the same type to perform this operation.`;\n    super(message);\n    this.left = left;\n    this.right = right;\n    this.operation = operation;\n  }\n}\n",null,"/**\n * Defines the available Solana clusters.\n * @category Utils — Cluster\n */\nexport type Cluster =\n  | 'mainnet-beta'\n  | 'devnet'\n  | 'testnet'\n  | 'localnet'\n  | 'custom';\n\n/**\n * Helper type to helps the end-user selecting a cluster.\n * They can either provide a specific cluster or use the\n * special values 'current' or '*' to select the current\n * cluster or all clusters respectively.\n * @category Utils — Cluster\n */\nexport type ClusterFilter = Cluster | 'current' | '*';\n\nconst MAINNET_BETA_DOMAINS = [\n  'api.mainnet-beta.solana.com',\n  'ssc-dao.genesysgo.net',\n];\nconst DEVNET_DOMAINS = [\n  'api.devnet.solana.com',\n  'psytrbhymqlkfrhudd.dev.genesysgo.net',\n];\nconst TESTNET_DOMAINS = ['api.testnet.solana.com'];\nconst LOCALNET_DOMAINS = ['localhost', '127.0.0.1'];\n\n/**\n * Helper method that tries its best to resolve a cluster from a given endpoint.\n * @category Utils — Cluster\n */\nexport const resolveClusterFromEndpoint = (endpoint: string): Cluster => {\n  const domain = new URL(endpoint).hostname;\n  if (MAINNET_BETA_DOMAINS.includes(domain)) return 'mainnet-beta';\n  if (DEVNET_DOMAINS.includes(domain)) return 'devnet';\n  if (TESTNET_DOMAINS.includes(domain)) return 'testnet';\n  if (LOCALNET_DOMAINS.includes(domain)) return 'localnet';\n  if (endpoint.includes('mainnet')) return 'mainnet-beta';\n  if (endpoint.includes('devnet')) return 'devnet';\n  if (endpoint.includes('testnet')) return 'testnet';\n  if (endpoint.includes('local')) return 'localnet';\n  return 'custom';\n};\n",null,"import {\n  DownloaderInterface,\n  createNullDownloader,\n} from './DownloaderInterface';\nimport { EddsaInterface, createNullEddsa } from './EddsaInterface';\nimport { HttpInterface, createNullHttp } from './HttpInterface';\nimport {\n  createNullProgramRepository,\n  ProgramRepositoryInterface,\n} from './ProgramRepositoryInterface';\nimport { createNullRpc, RpcInterface } from './RpcInterface';\nimport {\n  createNullSerializer,\n  SerializerInterface,\n} from './SerializerInterface';\nimport { createNullSigner, Signer } from './Signer';\nimport {\n  createNullTransactionFactory,\n  TransactionFactoryInterface,\n} from './TransactionFactoryInterface';\nimport { createNullUploader, UploaderInterface } from './UploaderInterface';\n\n/**\n * A Umi context object that uses all of the interfaces provided by Umi.\n * Once created, the end-user can pass this object to any function that\n * requires some or all of these interfaces.\n *\n * @category Context and Interfaces\n */\nexport interface Context {\n  /** An interface for downloading files from URIs. */\n  downloader: DownloaderInterface;\n  /** An interface for managing public and private keys. */\n  eddsa: EddsaInterface;\n  /** An interface for sending HTTP requests. */\n  http: HttpInterface;\n  /** The signer using your app. */\n  identity: Signer;\n  /** The signer paying for things, usually the same as the `identity`. */\n  payer: Signer;\n  /** An interface for registering and retrieving programs. */\n  programs: ProgramRepositoryInterface;\n  /** An interface for sending RPC requests. */\n  rpc: RpcInterface;\n  /**\n   * An interface for serializing various types.\n   * @deprecated This interface is deprecated.\n   * You can now directly use `@metaplex-foundation/umi/serializers` instead.\n   */\n  serializer: SerializerInterface;\n  /** An interface for managing transactions. */\n  transactions: TransactionFactoryInterface;\n  /** An interface for uploading files and getting their URIs. */\n  uploader: UploaderInterface;\n}\n\n/**\n * A helper method that creates a Umi context object using only\n * Null implementations of the interfaces. This can be useful to\n * create a full Umi context object when only a few of the interfaces\n * are needed.\n *\n * @category Context and Interfaces\n */\nexport const createNullContext = (): Context => ({\n  downloader: createNullDownloader(),\n  eddsa: createNullEddsa(),\n  http: createNullHttp(),\n  identity: createNullSigner(),\n  payer: createNullSigner(),\n  programs: createNullProgramRepository(),\n  rpc: createNullRpc(),\n  serializer: createNullSerializer(),\n  transactions: createNullTransactionFactory(),\n  uploader: createNullUploader(),\n});\n",null,"import { InterfaceImplementationMissingError } from './errors';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { GenericFile } from './GenericFile';\n\n/**\n * Defines the interface for a downloader.\n * It allows us to fetch files from given URIs.\n *\n * @category Context and Interfaces\n */\nexport interface DownloaderInterface {\n  /** Downloads multiple files from a list of URIs. */\n  download: (\n    uris: string[],\n    options?: DownloaderOptions\n  ) => Promise<GenericFile[]>;\n\n  /** Downloads and parses a JSON file from a given URI. */\n  downloadJson: <T>(uri: string, options?: DownloaderOptions) => Promise<T>;\n}\n\n/**\n * Defines the options that can be passed when downloading files. *\n * @category Storage\n */\nexport type DownloaderOptions = {\n  /** An abort signal to cancel the download. */\n  signal?: GenericAbortSignal;\n};\n\n/**\n * An implementation of the {@link DownloaderInterface} that throws an error when called.\n * @category Storage\n */\nexport function createNullDownloader(): DownloaderInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'DownloaderInterface',\n      'downloader'\n    );\n  };\n  return { download: errorHandler, downloadJson: errorHandler };\n}\n",null,"import { SdkError } from './SdkError';\n\n/** @category Errors */\nexport class InterfaceImplementationMissingError extends SdkError {\n  readonly name: string = 'InterfaceImplementationMissingError';\n\n  constructor(interfaceName: string, contextVariable: string) {\n    const interfaceBasename = interfaceName.replace(/Interface$/, '');\n    const message =\n      `Tried using ${interfaceName} but no implementation of that interface was found. ` +\n      `Make sure an implementation is registered, ` +\n      `e.g. via \"context.${contextVariable} = new My${interfaceBasename}();\".`;\n    super(message);\n  }\n}\n",null,"import type { Pda, PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport { InterfaceImplementationMissingError } from './errors';\nimport type { Keypair } from './Keypair';\n\n/**\n * Defines the interface for the EdDSA cryptography algorithm.\n * It allows us to create, find and use public keys and keypairs.\n *\n * @category Context and Interfaces\n */\nexport interface EddsaInterface {\n  /** Generates a new keypair. */\n  generateKeypair: () => Keypair;\n  /** Restores a keypair from a secret key. */\n  createKeypairFromSecretKey: (secretKey: Uint8Array) => Keypair;\n  /** Restores a keypair from a seed. */\n  createKeypairFromSeed: (seed: Uint8Array) => Keypair;\n  /** Whether the given public key is on the EdDSA elliptic curve. */\n  isOnCurve: (publicKey: PublicKey) => boolean;\n  /** Finds a Program-Derived Address from the given programId and seeds. */\n  findPda: (programId: PublicKey, seeds: Uint8Array[]) => Pda;\n  /** Signs a message with the given keypair. */\n  sign: (message: Uint8Array, keypair: Keypair) => Uint8Array;\n  /** Verifies a signature for a message with the given public key. */\n  verify: (\n    message: Uint8Array,\n    signature: Uint8Array,\n    publicKey: PublicKey\n  ) => boolean;\n}\n\n/**\n * An implementation of the {@link EddsaInterface} that throws an error when called.\n * @category Signers and PublicKeys\n */\nexport function createNullEddsa(): EddsaInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('EddsaInterface', 'eddsa');\n  };\n  return {\n    generateKeypair: errorHandler,\n    createKeypairFromSecretKey: errorHandler,\n    createKeypairFromSeed: errorHandler,\n    isOnCurve: errorHandler,\n    findPda: errorHandler,\n    sign: errorHandler,\n    verify: errorHandler,\n  };\n}\n",null,"import { InterfaceImplementationMissingError } from './errors';\nimport { HttpRequest } from './HttpRequest';\nimport { HttpResponse } from './HttpResponse';\n\n/**\n * Defines the interface for an HTTP client.\n *\n * @category Context and Interfaces\n */\nexport interface HttpInterface {\n  /** Sends a HTTP request and returns its response. */\n  send: <ResponseData, RequestData = any>(\n    request: HttpRequest<RequestData>\n  ) => Promise<HttpResponse<ResponseData>>;\n}\n\n/**\n * An implementation of the {@link HttpInterface} that throws an error when called.\n * @category Http\n */\nexport function createNullHttp(): HttpInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('HttpInterface', 'http');\n  };\n  return { send: errorHandler };\n}\n",null,"import type {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport type { ClusterFilter } from './Cluster';\nimport type { ErrorWithLogs, Program } from './Program';\nimport type { Transaction } from './Transaction';\nimport { InterfaceImplementationMissingError, ProgramError } from './errors';\n\n/**\n * Defines the interface for a program repository.\n * It allows us to register and retrieve programs when needed.\n *\n * @category Context and Interfaces\n */\nexport interface ProgramRepositoryInterface {\n  /**\n   * Whether a given program is registered in the repository.\n   *\n   * @param identifier The name or public key of the program to check.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  has(identifier: string | PublicKey, clusterFilter?: ClusterFilter): boolean;\n\n  /**\n   * Gets a program from the repository.\n   * Throws an error if the program is not found.\n   *\n   * @param identifier The name or public key of the program to retrieve.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   * @typeParam T - The type of the program to retrieve. Defaults to `Program`.\n   */\n  get<T extends Program = Program>(\n    identifier: string | PublicKey,\n    clusterFilter?: ClusterFilter\n  ): T;\n\n  /**\n   * Gets the public key of a program from the repository,\n   * with an optional fallback public key.\n   *\n   * Throws an error if the program is not found and no fallback is provided.\n   *\n   * @param identifier The name or public key of the program to retrieve.\n   * @param fallback The fallback public key to use if the program is not found.\n   * Defaults to not using a fallback public key.\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  getPublicKey(\n    identifier: string | PublicKey,\n    fallback?: PublicKeyInput,\n    clusterFilter?: ClusterFilter\n  ): PublicKey;\n\n  /**\n   * Gets all programs from the repository matching the given cluster filter.\n   * Defaults to getting all programs from the current cluster.\n   *\n   * @param clusterFilter The cluster filter to apply. Defaults to `\"current\"`.\n   */\n  all(clusterFilter?: ClusterFilter): Program[];\n\n  /**\n   * Registers a new program in the repository.\n   *\n   * @param program The program to register.\n   * @param overrides Whether to register and prioritize\n   * the given program even if a program with the same\n   * public key already exists. Defaults to `true`.\n   */\n  add(program: Program, overrides?: boolean): void;\n\n  /**\n   * Creates a binding between a name and a program identifier.\n   * This can be used to create redirections or aliases when resolving programs.\n   *\n   * @param abstract The name of the binding.\n   * @param concrete The identifier this binding should resolve to.\n   */\n  bind(abstract: string, concrete: string | PublicKey): void;\n\n  /**\n   * Removes a binding using its name.\n   *\n   * @param abstract The name of the binding to remove.\n   */\n  unbind(abstract: string): void;\n\n  /**\n   * Creates a cloned instance of the repository.\n   *\n   * @returns A new repository instance with the same programs and bindings.\n   */\n  clone(): ProgramRepositoryInterface;\n\n  /**\n   * Resolves a custom program error from a transaction error.\n   *\n   * @param error The raw error to resolve containing the program logs.\n   * @param transaction The transaction that caused the error.\n   * @returns The resolved program error, or `null` if the error cannot be resolved.\n   */\n  resolveError(\n    error: ErrorWithLogs,\n    transaction: Transaction\n  ): ProgramError | null;\n}\n\n/**\n * An implementation of the {@link ProgramRepositoryInterface} that throws an error when called.\n * @category Programs\n */\nexport function createNullProgramRepository(): ProgramRepositoryInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'ProgramRepositoryInterface',\n      'programs'\n    );\n  };\n  return {\n    has: errorHandler,\n    get: errorHandler,\n    getPublicKey: errorHandler,\n    all: errorHandler,\n    add: errorHandler,\n    bind: errorHandler,\n    unbind: errorHandler,\n    clone: errorHandler,\n    resolveError: errorHandler,\n  };\n}\n",null,"import type { PublicKey } from '@metaplex-foundation/umi-public-keys';\nimport type { MaybeRpcAccount, RpcAccount } from './Account';\nimport { SolAmount } from './Amount';\nimport type { Cluster } from './Cluster';\nimport { DateTime } from './DateTime';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type {\n  Blockhash,\n  BlockhashWithExpiryBlockHeight,\n  Transaction,\n  TransactionError,\n  TransactionSignature,\n  TransactionStatus,\n  TransactionWithMeta,\n} from './Transaction';\nimport { InterfaceImplementationMissingError } from './errors';\n\n/**\n * Defines the interface for an RPC client.\n * It allows us to interact with the Solana blockchain.\n *\n * @category Context and Interfaces\n */\nexport interface RpcInterface {\n  /** The RPC endpoint used by the client. */\n  getEndpoint(): string;\n\n  /** The Solana cluster of the RPC being used. */\n  getCluster(): Cluster;\n\n  /**\n   * Fetch a raw account at the given address.\n   *\n   * @param publicKey The public key of the account to fetch.\n   * @param options The options to use when fetching the account.\n   * @returns A raw account that may or may not exist.\n   */\n  getAccount(\n    publicKey: PublicKey,\n    options?: RpcGetAccountOptions\n  ): Promise<MaybeRpcAccount>;\n\n  /**\n   * Fetch multiple raw accounts at the given addresses.\n   *\n   * @param publicKey The public keys of the accounts to fetch.\n   * @param options The options to use when fetching multiple accounts.\n   * @returns An array of raw accounts that may or may not exist.\n   */\n  getAccounts(\n    publicKeys: PublicKey[],\n    options?: RpcGetAccountsOptions\n  ): Promise<MaybeRpcAccount[]>;\n\n  /**\n   * Fetch multiple raw accounts from a program.\n   *\n   * @param programId The public key of the program to fetch accounts from.\n   * @param options The options to use when fetching program accounts.\n   * @returns An array of raw accounts.\n   */\n  getProgramAccounts(\n    programId: PublicKey,\n    options?: RpcGetProgramAccountsOptions\n  ): Promise<RpcAccount[]>;\n\n  /**\n   * Fetch the estimated production time of a block.\n   *\n   * @param slot The slot to get the estimated production time for.\n   * @param options The options to use when getting the block time of a slot.\n   * @returns The estimated production time of the block in Unix time.\n   */\n  getBlockTime(\n    slot: number,\n    options?: RpcGetBlockTimeOptions\n  ): Promise<DateTime | null>;\n\n  /**\n   * Fetch the balance of an account.\n   *\n   * @param publicKey The public key of the account.\n   * @param options The options to use when fetching an account's balance.\n   * @returns An amount of SOL.\n   */\n  getBalance(\n    publicKey: PublicKey,\n    options?: RpcGetBalanceOptions\n  ): Promise<SolAmount>;\n\n  /**\n   * Get the amount of rent-exempt SOL required to create an account of the given size.\n   *\n   * @param bytes The size of the account in bytes.\n   * @param options The options to use when fetching the rent exempt amount.\n   * @returns An amount of SOL.\n   */\n  getRent(bytes: number, options?: RpcGetRentOptions): Promise<SolAmount>;\n\n  /**\n   * Fetch the recent slot.\n   *\n   * @param options The options to use when fetching the recent slot.\n   * @returns The recent slot.\n   */\n  getSlot(options?: RpcGetSlotOptions): Promise<number>;\n\n  /**\n   * Fetch the latest blockhash.\n   *\n   * @param options The options to use when fetching the latest blockhash.\n   * @returns The latest blockhash and its block height.\n   */\n  getLatestBlockhash(\n    options?: RpcGetLatestBlockhashOptions\n  ): Promise<BlockhashWithExpiryBlockHeight>;\n\n  /**\n   * Fetch a transaction by its signature.\n   *\n   * @param signature The signature of the transaction to fetch.\n   * @param options The options to use when fetching transactions.\n   * @returns A transaction with its metadata or `null` if the transaction was not found.\n   */\n  getTransaction(\n    signature: TransactionSignature,\n    options?: RpcGetTransactionOptions\n  ): Promise<TransactionWithMeta | null>;\n\n  /**\n   * Fetch transaction commitments from an array of signatures.\n   *\n   * @param signatures The signatures of all transactions we want to fetch commitments for.\n   * @param options The options to use when fetching transaction commitments.\n   * @returns An array of transaction statuses in the same order as the signatures.\n   * If a transaction was not found, `null` will be returned instead.\n   */\n  getSignatureStatuses(\n    signatures: TransactionSignature[],\n    options?: RpcGetSignatureStatusesOptions\n  ): Promise<Array<TransactionStatus | null>>;\n\n  /**\n   * Whether or not an account at a given address exists.\n   *\n   * @param publicKey The public key of the account.\n   * @param options The options to use when checking if an account exists.\n   * @returns `true` if the account exists, `false` otherwise.\n   */\n  accountExists(\n    publicKey: PublicKey,\n    options?: RpcAccountExistsOptions\n  ): Promise<boolean>;\n\n  /**\n   * Send and confirm an airdrop transaction to the given address.\n   *\n   * @param publicKey The public key of the account to airdrop to.\n   * @param amount The amount of SOL to airdrop.\n   * @param options The options to use when airdropping SOL.\n   */\n  airdrop(\n    publicKey: PublicKey,\n    amount: SolAmount,\n    options?: RpcAirdropOptions\n  ): Promise<void>;\n\n  /**\n   * Send a custom RPC request to the node.\n   *\n   * @param method The method to call.\n   * @param params The parameters to pass to the method.\n   * @param options The options to use when sending a custom RPC request.\n   * @returns The generic result of the RPC call.\n   */\n  call<R, P extends any[] = any[]>(\n    method: string,\n    params?: [...P],\n    options?: RpcCallOptions\n  ): Promise<R>;\n\n  /**\n   * Send a transaction to the blockchain.\n   *\n   * @param transaction The transaction to send.\n   * @param options The options to use when sending a transaction.\n   * @returns The signature of the sent transaction.\n   */\n  sendTransaction(\n    transaction: Transaction,\n    options?: RpcSendTransactionOptions\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Confirm a sent transaction.\n   *\n   * @param signature The signature of the transaction to confirm.\n   * @param options The options to use when confirming a transaction.\n   * @returns The RPC response of the transaction confirmation.\n   */\n  confirmTransaction(\n    signature: TransactionSignature,\n    options: RpcConfirmTransactionOptions\n  ): Promise<RpcConfirmTransactionResult>;\n}\n\n/**\n * The various commitment levels when fetching data from the blockchain.\n * @category Rpc\n */\nexport type Commitment = 'processed' | 'confirmed' | 'finalized';\n\n/**\n * An object to request a slice of data starting\n * at `offset` and ending at `offset + length`.\n * @category Rpc\n */\nexport type RpcDataSlice = { offset: number; length: number };\n\n/**\n * Defines a filter to use when fetching program accounts.\n * @category Rpc\n */\nexport type RpcDataFilter = RpcDataFilterSize | RpcDataFilterMemcmp;\n\n/**\n * Defines a filter that selects accounts by size.\n * @category Rpc\n */\nexport type RpcDataFilterSize = { dataSize: number };\n\n/**\n * Defines a filter that selects accounts by comparing\n * the given bytes at the given offset.\n * @category Rpc\n */\nexport type RpcDataFilterMemcmp = {\n  memcmp: { offset: number; bytes: Uint8Array };\n};\n\n/**\n * Defines an RPC result that wraps the returned value\n * and provides the slot number as context.\n * @category Rpc\n */\nexport type RpcResultWithContext<Value> = {\n  context: { slot: number };\n  value: Value;\n};\n\n/**\n * Defines the common options re-used by all\n * the methods defines in the RPC interface.\n * @category Rpc\n */\nexport type RpcBaseOptions = {\n  /** An explicit RPC request identifier. */\n  id?: string;\n  /** An abort signal to prematurely cancel the request. */\n  signal?: GenericAbortSignal;\n  /** The commitment level to use when fetching data. */\n  commitment?: Commitment;\n  /** The minimum slot to use when fetching data. */\n  minContextSlot?: number;\n};\n\n/**\n * The options to use when fetching an account.\n * @category Rpc\n */\nexport type RpcGetAccountOptions = RpcBaseOptions & {\n  /** Select only a portion of the account's data. */\n  dataSlice?: RpcDataSlice;\n};\n\n/**\n * The options to use when fetching multiple accounts.\n * @category Rpc\n */\nexport type RpcGetAccountsOptions = RpcBaseOptions & {\n  /** For each account, select only a portion of their data. */\n  dataSlice?: RpcDataSlice;\n};\n\n/**\n * The options to use when fetching program accounts.\n * @category Rpc\n */\nexport type RpcGetProgramAccountsOptions = RpcBaseOptions & {\n  /** For each program account, select only a portion of their data. */\n  dataSlice?: RpcDataSlice;\n  /** A set of filters to narrow down the returned program accounts. Max 5 filters. */\n  filters?: RpcDataFilter[];\n};\n\n/**\n * The options to use when getting the block time of a slot.\n * @category Rpc\n */\nexport type RpcGetBlockTimeOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the balance of an account.\n * @category Rpc\n */\nexport type RpcGetBalanceOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the rent exempt amount.\n * @category Rpc\n */\nexport type RpcGetRentOptions = RpcBaseOptions & {\n  /** @defaultValue `false` */\n  includesHeaderBytes?: boolean;\n};\n\n/**\n * The options to use when fetching the recent slot.\n * @category Rpc\n */\nexport type RpcGetSlotOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching the latest blockhash.\n * @category Rpc\n */\nexport type RpcGetLatestBlockhashOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching a transaction.\n * @category Rpc\n */\nexport type RpcGetTransactionOptions = RpcBaseOptions;\n\n/**\n * The options to use when fetching transaction statuses.\n * @category Rpc\n */\nexport type RpcGetSignatureStatusesOptions = RpcBaseOptions & {\n  /**\n   * Enable searching status history, not needed for recent transactions.\n   * @defaultValue `false`\n   */\n  searchTransactionHistory?: boolean;\n};\n\n/**\n * The options to use when checking if an account exists.\n * @category Rpc\n */\nexport type RpcAccountExistsOptions = RpcBaseOptions;\n\n/**\n * The options to use when airdropping SOL.\n * @category Rpc\n */\nexport type RpcAirdropOptions = Partial<RpcConfirmTransactionOptions>;\n\n/**\n * The options to use when sending a custom RPC request.\n * @category Rpc\n */\nexport type RpcCallOptions = RpcBaseOptions & {\n  /**\n   * By default, the RPC client pushes an additional `options`\n   * parameter to the RPC request when a commitment is specified.\n   * This `extra` parameter can be used to add more data to the\n   * `options` parameter.\n   */\n  extra?: object;\n};\n\n/**\n * The options to use when sending a transaction.\n * @category Rpc\n */\nexport type RpcSendTransactionOptions = RpcBaseOptions & {\n  /** Whether to skip the preflight check. */\n  skipPreflight?: boolean;\n  /** The commitment level to use for the preflight check. */\n  preflightCommitment?: Commitment;\n  /** The maximum number of retries to use. */\n  maxRetries?: number;\n};\n\n/**\n * The options to use when confirming a transaction.\n * @category Rpc\n */\nexport type RpcConfirmTransactionOptions = RpcBaseOptions & {\n  /** The confirm strategy to use. */\n  strategy: RpcConfirmTransactionStrategy;\n};\n\n/**\n * Represents all the possible strategies to use when confirming a transaction.\n * @category Rpc\n */\nexport type RpcConfirmTransactionStrategy =\n  | {\n      type: 'blockhash';\n      blockhash: Blockhash;\n      lastValidBlockHeight: number;\n    }\n  | {\n      type: 'durableNonce';\n      minContextSlot: number;\n      nonceAccountPubkey: PublicKey;\n      nonceValue: string;\n    };\n\n/**\n * Defines the result of a transaction confirmation.\n * @category Rpc\n */\nexport type RpcConfirmTransactionResult = RpcResultWithContext<{\n  err: TransactionError | null;\n}>;\n\n/**\n * An implementation of the {@link RpcInterface} that throws an error when called.\n * @category Rpc\n */\nexport function createNullRpc(): RpcInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError('RpcInterface', 'rpc');\n  };\n  return {\n    getEndpoint: errorHandler,\n    getCluster: errorHandler,\n    getAccount: errorHandler,\n    getAccounts: errorHandler,\n    getProgramAccounts: errorHandler,\n    getBlockTime: errorHandler,\n    getBalance: errorHandler,\n    getRent: errorHandler,\n    getSlot: errorHandler,\n    getLatestBlockhash: errorHandler,\n    getTransaction: errorHandler,\n    getSignatureStatuses: errorHandler,\n    accountExists: errorHandler,\n    airdrop: errorHandler,\n    call: errorHandler,\n    sendTransaction: errorHandler,\n    confirmTransaction: errorHandler,\n  };\n}\n",null,"import type { Nullable, Option } from '@metaplex-foundation/umi-options';\nimport type {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport type {\n  ArraySerializerOptions,\n  BoolSerializerOptions,\n  BytesSerializerOptions,\n  DataEnumSerializerOptions,\n  DataEnumToSerializerTuple,\n  MapSerializerOptions,\n  NullableSerializerOptions,\n  NumberSerializerOptions,\n  OptionSerializerOptions,\n  PublicKeySerializerOptions,\n  ScalarEnumSerializerOptions,\n  Serializer,\n  SetSerializerOptions,\n  SingleByteNumberSerializerOptions,\n  StringSerializerOptions,\n  StructSerializerOptions,\n  StructToSerializerTuple,\n  TupleSerializerOptions,\n  UnitSerializerOptions,\n  WrapInSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { DataEnum, ScalarEnum } from './Enums';\nimport { InterfaceImplementationMissingError } from './errors';\n\n/**\n * Defines the interface for a set of serializers\n * that can be used to serialize/deserialize any Serde types.\n *\n * @category Context and Interfaces\n * @deprecated This interface is deprecated.\n * You can now directly use `@metaplex-foundation/umi/serializers` instead.\n */\nexport interface SerializerInterface {\n  /**\n   * Creates a serializer for a tuple-like array.\n   *\n   * @param items - The serializers to use for each item in the tuple.\n   * @param options - A set of options for the serializer.\n   */\n  tuple: <T extends any[], U extends T = T>(\n    items: WrapInSerializer<[...T], [...U]>,\n    options?: TupleSerializerOptions\n  ) => Serializer<T, U>;\n\n  /**\n   * Creates a serializer for an array of items.\n   *\n   * @param item - The serializer to use for the array's items.\n   * @param options - A set of options for the serializer.\n   */\n  array: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: ArraySerializerOptions\n  ) => Serializer<T[], U[]>;\n\n  /**\n   * Creates a serializer for a map.\n   *\n   * @param key - The serializer to use for the map's keys.\n   * @param value - The serializer to use for the map's values.\n   * @param options - A set of options for the serializer.\n   */\n  map: <TK, TV, UK extends TK = TK, UV extends TV = TV>(\n    key: Serializer<TK, UK>,\n    value: Serializer<TV, UV>,\n    options?: MapSerializerOptions\n  ) => Serializer<Map<TK, TV>, Map<UK, UV>>;\n\n  /**\n   * Creates a serializer for a set.\n   *\n   * @param item - The serializer to use for the set's items.\n   * @param options - A set of options for the serializer.\n   */\n  set: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: SetSerializerOptions\n  ) => Serializer<Set<T>, Set<U>>;\n\n  /**\n   * Creates a serializer for an optional value using the {@link Option} type.\n   *\n   * @param item - The serializer to use for the value that may be present.\n   * @param options - A set of options for the serializer.\n   */\n  option: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: OptionSerializerOptions\n  ) => Serializer<Option<T> | Nullable<T>, Option<U>>;\n\n  /**\n   * Creates a serializer for an optional value using `null` as the `None` value.\n   *\n   * @param item - The serializer to use for the value that may be present.\n   * @param options - A set of options for the serializer.\n   */\n  nullable: <T, U extends T = T>(\n    item: Serializer<T, U>,\n    options?: NullableSerializerOptions\n  ) => Serializer<Nullable<T>, Nullable<U>>;\n\n  /**\n   * Creates a serializer for a custom object.\n   *\n   * @param fields - The name and serializer of each field.\n   * @param options - A set of options for the serializer.\n   */\n  struct: <T extends object, U extends T = T>(\n    fields: StructToSerializerTuple<T, U>,\n    options?: StructSerializerOptions\n  ) => Serializer<T, U>;\n\n  /**\n   * Creates a scalar enum serializer.\n   *\n   * @param constructor - The constructor of the scalar enum.\n   * @param options - A set of options for the serializer.\n   */\n  enum<T>(\n    constructor: ScalarEnum<T> & {},\n    options?: ScalarEnumSerializerOptions\n  ): Serializer<T>;\n\n  /**\n   * Creates a data enum serializer.\n   *\n   * @param variants - The variant serializers of the data enum.\n   * @param options - A set of options for the serializer.\n   */\n  dataEnum<T extends DataEnum, U extends T = T>(\n    variants: DataEnumToSerializerTuple<T, U>,\n    options?: DataEnumSerializerOptions\n  ): Serializer<T, U>;\n\n  /**\n   * Creates a string serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  string: (options?: StringSerializerOptions) => Serializer<string>;\n\n  /**\n   * Creates a boolean serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  bool: (options?: BoolSerializerOptions) => Serializer<boolean>;\n\n  /**\n   * Creates a void serializer.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  unit: (options?: UnitSerializerOptions) => Serializer<void>;\n\n  /**\n   * Creates a serializer for 1-byte unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u8: (options?: SingleByteNumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 2-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u16: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 4-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u64: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 16-bytes unsigned integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  u128: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 1-byte signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i8: (options?: SingleByteNumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 2-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i16: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 4-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i64: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 16-bytes signed integers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  i128: (\n    options?: NumberSerializerOptions\n  ) => Serializer<number | bigint, bigint>;\n\n  /**\n   * Creates a serializer for 4-bytes floating point numbers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  f32: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer for 8-bytes floating point numbers.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  f64: (options?: NumberSerializerOptions) => Serializer<number>;\n\n  /**\n   * Creates a serializer that passes the buffer as-is.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  bytes: (options?: BytesSerializerOptions) => Serializer<Uint8Array>;\n\n  /**\n   * Creates a serializer for 32-bytes public keys.\n   *\n   * @param options - A set of options for the serializer.\n   */\n  publicKey: (\n    options?: PublicKeySerializerOptions\n  ) => Serializer<PublicKey | PublicKeyInput, PublicKey>;\n}\n\n/**\n * An implementation of the {@link SerializerInterface} that throws an error when called.\n * @category Serializers\n */\nexport function createNullSerializer(): SerializerInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'SerializerInterface',\n      'serializer'\n    );\n  };\n  return {\n    tuple: errorHandler,\n    array: errorHandler,\n    map: errorHandler,\n    set: errorHandler,\n    option: errorHandler,\n    nullable: errorHandler,\n    struct: errorHandler,\n    enum: errorHandler,\n    dataEnum: errorHandler,\n    string: errorHandler,\n    bool: errorHandler,\n    unit: errorHandler,\n    u8: errorHandler,\n    u16: errorHandler,\n    u32: errorHandler,\n    u64: errorHandler,\n    u128: errorHandler,\n    i8: errorHandler,\n    i16: errorHandler,\n    i32: errorHandler,\n    i64: errorHandler,\n    i128: errorHandler,\n    f32: errorHandler,\n    f64: errorHandler,\n    bytes: errorHandler,\n    publicKey: errorHandler,\n  };\n}\n",null,"import {\n  PublicKey,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi-public-keys';\nimport { Transaction } from './Transaction';\nimport { uniqueBy } from './utils';\n\n/**\n * Defines a public key that can sign transactions and messages.\n * @category Context and Interfaces\n */\nexport interface Signer {\n  /** The public key of the Signer. */\n  readonly publicKey: PublicKey;\n  /** Signs the given message. */\n  readonly signMessage: (message: Uint8Array) => Promise<Uint8Array>;\n  /** Signs the given transaction. */\n  readonly signTransaction: (transaction: Transaction) => Promise<Transaction>;\n  /** Signs all the given transactions at once. */\n  readonly signAllTransactions: (\n    transactions: Transaction[]\n  ) => Promise<Transaction[]>;\n}\n\n/**\n * Signs a transaction using the provided signers.\n * @category Signers and PublicKeys\n */\nexport const signTransaction = async (\n  transaction: Transaction,\n  signers: Signer[]\n): Promise<Transaction> =>\n  signers.reduce(async (promise, signer) => {\n    const unsigned = await promise;\n    return signer.signTransaction(unsigned);\n  }, Promise.resolve(transaction));\n\n/**\n * Signs multiple transactions using the provided signers\n * such that signers that need to sign multiple transactions\n * sign them all at once using the `signAllTransactions` method.\n *\n * @category Signers and PublicKeys\n */\nexport const signAllTransactions = async (\n  transactionsWithSigners: {\n    transaction: Transaction;\n    signers: Signer[];\n  }[]\n): Promise<Transaction[]> => {\n  const transactions = transactionsWithSigners.map((item) => item.transaction);\n  const signersWithTransactions = transactionsWithSigners.reduce(\n    (all, { signers }, index) => {\n      signers.forEach((signer) => {\n        const item = all.find(\n          (item) => item.signer.publicKey === signer.publicKey\n        );\n        if (item) {\n          item.indices.push(index);\n        } else {\n          all.push({ signer, indices: [index] });\n        }\n      });\n      return all;\n    },\n    [] as { signer: Signer; indices: number[] }[]\n  );\n\n  return signersWithTransactions.reduce(\n    async (promise, { signer, indices }) => {\n      const transactions = await promise;\n      if (indices.length === 1) {\n        const unsigned = transactions[indices[0]];\n        transactions[indices[0]] = await signer.signTransaction(unsigned);\n        return transactions;\n      }\n      const unsigned = indices.map((index) => transactions[index]);\n      const signed = await signer.signAllTransactions(unsigned);\n      indices.forEach((index, position) => {\n        transactions[index] = signed[position];\n      });\n      return transactions;\n    },\n    Promise.resolve(transactions)\n  );\n};\n\n/**\n * Whether the provided value is a `Signer`.\n * @category Signers and PublicKeys\n */\nexport const isSigner = (value: PublicKeyInput | Signer): value is Signer =>\n  typeof value === 'object' && 'publicKey' in value && 'signMessage' in value;\n\n/**\n * Deduplicates the provided signers by public key.\n * @category Signers and PublicKeys\n */\nexport const uniqueSigners = (signers: Signer[]): Signer[] =>\n  uniqueBy(signers, (a, b) => a.publicKey === b.publicKey);\n\n/**\n * Creates a `Signer` that, when required to sign, does nothing.\n * This can be useful when libraries require a `Signer` but\n * we don't have one in the current environment. For example,\n * if the transaction will then be signed in a backend server.\n *\n * @category Signers and PublicKeys\n */\nexport const createNoopSigner = (publicKey: PublicKey): Signer => ({\n  publicKey,\n  async signMessage(message: Uint8Array): Promise<Uint8Array> {\n    return message;\n  },\n  async signTransaction(transaction: Transaction): Promise<Transaction> {\n    return transaction;\n  },\n  async signAllTransactions(\n    transactions: Transaction[]\n  ): Promise<Transaction[]> {\n    return transactions;\n  },\n});\n\n/**\n * Creates a `Signer` that, when required to sign, throws an error.\n * @category Signers and PublicKeys\n */\nexport function createNullSigner(): Signer {\n  const error = new Error(\n    'Trying to use a NullSigner. ' +\n      'Did you forget to set a Signer on your Umi instance? ' +\n      'See the `signerIdentity` method for more information.'\n  );\n  const errorHandler = () => {\n    throw error;\n  };\n  return {\n    get publicKey(): PublicKey {\n      throw error;\n    },\n    signMessage: errorHandler,\n    signTransaction: errorHandler,\n    signAllTransactions: errorHandler,\n  };\n}\n",null,"/**\n * Chunks an array into smaller arrays of (at most) the specified size.\n * @category Utils\n */\nexport const chunk = <T>(array: T[], chunkSize: number): T[][] =>\n  array.reduce((chunks, item, index) => {\n    const chunkIndex = Math.floor(index / chunkSize);\n\n    if (!chunks[chunkIndex]) {\n      chunks[chunkIndex] = [];\n    }\n\n    chunks[chunkIndex].push(item);\n\n    return chunks;\n  }, [] as T[][]);\n\n/**\n * Zips two arrays together, using the provided function to map the values.\n * @category Utils\n */\nexport const zipMap = <T, U, V>(\n  left: T[],\n  right: U[],\n  fn: (t: T, u: U | null, i: number) => V\n): V[] => left.map((t: T, index) => fn(t, right?.[index] ?? null, index));\n\n/**\n * Deduplicates an array by the provided function.\n * @category Utils\n */\nexport const uniqueBy = <T>(array: T[], fn: (a: T, b: T) => boolean): T[] =>\n  array.reduce((acc, v) => {\n    if (!acc.some((x) => fn(v, x))) acc.push(v);\n    return acc;\n  }, [] as T[]);\n",null,"import { InterfaceImplementationMissingError } from './errors';\nimport type {\n  SerializedTransaction,\n  SerializedTransactionMessage,\n  Transaction,\n  TransactionInput,\n  TransactionMessage,\n} from './Transaction';\n\n/**\n * Defines the interface for a transaction factory.\n * It allows us to create, serialize and deserialize transactions and their messages.\n *\n * @category Context and Interfaces\n */\nexport interface TransactionFactoryInterface {\n  /** Creates a new transaction from a given input. */\n  create(input: TransactionInput): Transaction;\n  /** Serializes a transaction. */\n  serialize(transaction: Transaction): SerializedTransaction;\n  /** Deserializes a transaction. */\n  deserialize(serializedTransaction: SerializedTransaction): Transaction;\n  /** Serializes a transaction message. */\n  serializeMessage(message: TransactionMessage): SerializedTransactionMessage;\n  /** Deserializes a transaction message. */\n  deserializeMessage(\n    serializedMessage: SerializedTransactionMessage\n  ): TransactionMessage;\n}\n\n/**\n * An implementation of the {@link TransactionFactoryInterface} that throws an error when called.\n * @category Transactions\n */\nexport function createNullTransactionFactory(): TransactionFactoryInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'TransactionFactoryInterface',\n      'transactions'\n    );\n  };\n  return {\n    create: errorHandler,\n    serialize: errorHandler,\n    deserialize: errorHandler,\n    serializeMessage: errorHandler,\n    deserializeMessage: errorHandler,\n  };\n}\n",null,"import type { Amount } from './Amount';\nimport { InterfaceImplementationMissingError } from './errors';\nimport type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { GenericFile } from './GenericFile';\n\n/**\n * Defines the interface for an uploader.\n * It allows us to upload files and get their URIs.\n *\n * @category Context and Interfaces\n */\nexport interface UploaderInterface {\n  /** Uploads multiple files and returns their URIs. */\n  upload: (\n    files: GenericFile[],\n    options?: UploaderUploadOptions\n  ) => Promise<string[]>;\n\n  /** Uploads a JSON object and returns its URI. */\n  uploadJson: <T>(json: T, options?: UploaderUploadOptions) => Promise<string>;\n\n  /** Gets the price to upload a list of files. */\n  getUploadPrice: (\n    files: GenericFile[],\n    options?: UploaderGetUploadPriceOptions\n  ) => Promise<Amount>;\n}\n\n/**\n * The options that can be passed when fetching the upload price.\n * @category Storage\n */\nexport type UploaderGetUploadPriceOptions = {\n  signal?: GenericAbortSignal;\n};\n\n/**\n * The options that can be passed when uploading files.\n * @category Storage\n */\nexport type UploaderUploadOptions = {\n  onProgress?: (percent: number, ...args: any) => void;\n  signal?: GenericAbortSignal;\n};\n\n/**\n * An implementation of the {@link UploaderInterface} that throws an error when called.\n * @category Storage\n */\nexport function createNullUploader(): UploaderInterface {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError(\n      'UploaderInterface',\n      'uploader'\n    );\n  };\n  return {\n    upload: errorHandler,\n    uploadJson: errorHandler,\n    getUploadPrice: errorHandler,\n  };\n}\n",null,"import {\n  NumberSerializer,\n  Serializer,\n  mapSerializer,\n} from '@metaplex-foundation/umi-serializers';\nimport { BigIntInput, createBigInt } from './BigInt';\n\n/**\n * Defines a string that can be parsed into a Date object.\n * For instance, `\"2020-01-01T00:00:00.000Z\"`.\n * @category Utils — DateTime\n */\nexport type DateTimeString = string;\n\n/**\n * Defines all the types that can be used to create a DateTime.\n * @category Utils — DateTime\n */\nexport type DateTimeInput = DateTimeString | BigIntInput | Date;\n\n/**\n * Defines a point in time via a Unix timestamp represented as a BigInt.\n * @category Utils — DateTime\n */\nexport type DateTime = bigint;\n\n/**\n * Creates a {@link DateTime} from a {@link DateTimeInput}.\n * @category Utils — DateTime\n */\nexport const dateTime = (value: DateTimeInput): DateTime => {\n  if (typeof value === 'string' || isDateObject(value)) {\n    const date = new Date(value);\n    const timestamp = Math.floor(date.getTime() / 1000);\n    return createBigInt(timestamp);\n  }\n\n  return createBigInt(value);\n};\n\n/**\n * Helper function to get the current time as a {@link DateTime}.\n * @category Utils — DateTime\n */\nexport const now = (): DateTime => dateTime(new Date(Date.now()));\n\n/**\n * Whether the given value is a Date object.\n * @category Utils — DateTime\n */\nconst isDateObject = (value: any): value is Date =>\n  Object.prototype.toString.call(value) === '[object Date]';\n\n/**\n * Formats a {@link DateTime} as a string.\n * @category Utils — DateTime\n */\nexport const formatDateTime = (\n  value: DateTime,\n  locales: Intl.LocalesArgument = 'en-US',\n  options: Intl.DateTimeFormatOptions = {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n  }\n): string => {\n  const date = new Date(Number(value * 1000n));\n\n  return date.toLocaleDateString(locales, options);\n};\n\n/**\n * Converts a number serializer into a DateTime serializer.\n * @category Utils — DateTime\n */\nexport const mapDateTimeSerializer = (\n  serializer: NumberSerializer\n): Serializer<DateTimeInput, DateTime> =>\n  mapSerializer(\n    serializer as Serializer<number | bigint>,\n    (value: DateTimeInput): number | bigint => {\n      const date = dateTime(value);\n      return date > Number.MAX_SAFE_INTEGER ? date : Number(date);\n    },\n    (value: number | bigint): DateTime => dateTime(value)\n  );\n",null,"import { utf8 } from '@metaplex-foundation/umi-serializers';\nimport { generateRandomString } from './utils';\n\n/**\n * A generic definition of a File represented as a buffer with\n * extra metadata such as a file name, content type, and tags.\n *\n * @category Storage\n */\nexport type GenericFile = {\n  readonly buffer: Uint8Array;\n  readonly fileName: string;\n  readonly displayName: string;\n  readonly uniqueName: string;\n  readonly contentType: string | null;\n  readonly extension: string | null;\n  readonly tags: GenericFileTag[];\n};\n\n/**\n * Represent a custom tag that can be attached to a file.\n * @category Storage\n */\nexport type GenericFileTag = { name: string; value: string };\n\n/**\n * Alias for the native File interface from the browser.\n * @category Storage\n */\nexport type BrowserFile = File;\n\n/**\n * Represents the options that can be provided when creating a {@link GenericFile}.\n * @category Storage\n */\nexport type GenericFileOptions = {\n  displayName?: string;\n  uniqueName?: string;\n  contentType?: string;\n  extension?: string;\n  tags?: { name: string; value: string }[];\n};\n\n/**\n * Creates a new {@link GenericFile} from a buffer and a file name.\n * @category Storage\n */\nexport const createGenericFile = (\n  content: string | Uint8Array,\n  fileName: string,\n  options: GenericFileOptions = {}\n): GenericFile => ({\n  buffer: typeof content === 'string' ? utf8.serialize(content) : content,\n  fileName,\n  displayName: options.displayName ?? fileName,\n  uniqueName: options.uniqueName ?? generateRandomString(),\n  contentType: options.contentType ?? null,\n  extension: options.extension ?? getExtension(fileName),\n  tags: options.tags ?? [],\n});\n\n/**\n * Creates a new {@link GenericFile} from a {@link BrowserFile}.\n * @category Storage\n */\nexport const createGenericFileFromBrowserFile = async (\n  browserFile: BrowserFile,\n  options: GenericFileOptions = {}\n): Promise<GenericFile> =>\n  createGenericFile(\n    new Uint8Array(await browserFile.arrayBuffer()),\n    browserFile.name,\n    options\n  );\n\n/**\n * Creates a new {@link GenericFile} from a JSON object.\n * @category Storage\n */\nexport const createGenericFileFromJson = <T>(\n  json: T,\n  fileName = 'inline.json',\n  options: GenericFileOptions = {}\n): GenericFile =>\n  createGenericFile(JSON.stringify(json), fileName, {\n    contentType: 'application/json',\n    ...options,\n  });\n\n/**\n * Creates a new {@link BrowserFile} from a {@link GenericFile}.\n * @category Storage\n */\nexport const createBrowserFileFromGenericFile = (\n  file: GenericFile\n): BrowserFile => new File([file.buffer as BlobPart], file.fileName);\n\n/**\n * Returns the content of a {@link GenericFile} as a parsed JSON object.\n * @category Storage\n */\nexport const parseJsonFromGenericFile = <T>(file: GenericFile): T =>\n  JSON.parse(new TextDecoder().decode(file.buffer));\n\n/**\n * Returns the total size of a list of {@link GenericFile} in bytes.\n * @category Storage\n */\nexport const getBytesFromGenericFiles = (...files: GenericFile[]): number =>\n  files.reduce((acc, file) => acc + file.buffer.byteLength, 0);\n\n/**\n * Whether the given value is a {@link GenericFile}.\n * @category Storage\n */\nexport const isGenericFile = (file: any): file is GenericFile =>\n  file != null &&\n  typeof file === 'object' &&\n  'buffer' in file &&\n  'fileName' in file &&\n  'displayName' in file &&\n  'uniqueName' in file &&\n  'contentType' in file &&\n  'extension' in file &&\n  'tags' in file;\n\n/**\n * Returns the extension of a file name.\n * @category Storage\n */\nconst getExtension = (fileName: string): string | null => {\n  const lastDotIndex = fileName.lastIndexOf('.');\n\n  return lastDotIndex < 0 ? null : fileName.slice(lastDotIndex + 1);\n};\n",null,"/**\n * Generate a random string of the given length.\n * Warning: This is not a cryptographically secure random string generator.\n * @category Utils\n */\nexport const generateRandomString = (\n  length = 20,\n  alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n) => {\n  let result = '';\n  const alphabetLength = alphabet.length;\n  for (let i = 0; i < length; i += 1) {\n    result += alphabet.charAt(Math.floor(Math.random() * alphabetLength));\n  }\n\n  return result;\n};\n",null,"import type { GenericAbortSignal } from './GenericAbortSignal';\nimport type { HttpHeaderValue, HttpRequestHeaders } from './HttpHeaders';\n\n/** Defines a number in milliseconds. */\ntype Milliseconds = number;\n\n/**\n * Defines a HTTP Request with custom data.\n * @category Http\n */\nexport type HttpRequest<D = any> = {\n  method: HttpMethod;\n  url: string;\n  data: D;\n  headers: HttpRequestHeaders;\n  maxRedirects?: number;\n  timeout?: Milliseconds;\n  signal?: GenericAbortSignal;\n};\n\n/**\n * Creates a new {@link HttpRequestBuilder} instance.\n * @category Http\n */\nexport const request = () =>\n  new HttpRequestBuilder<undefined>({\n    method: 'get',\n    data: undefined,\n    headers: {},\n    url: '',\n  });\n\n/**\n * A builder for constructing {@link HttpRequest} instances.\n * @category Http\n */\nexport class HttpRequestBuilder<D> implements HttpRequest<D> {\n  protected readonly request: HttpRequest<D>;\n\n  constructor(request: HttpRequest<D>) {\n    this.request = request;\n  }\n\n  asJson() {\n    return this.contentType('application/json');\n  }\n\n  asMultipart() {\n    return this.contentType('multipart/form-data');\n  }\n\n  asForm() {\n    return this.contentType('application/x-www-form-urlencoded');\n  }\n\n  accept(contentType: string) {\n    return this.withHeader('accept', contentType);\n  }\n\n  contentType(contentType: string) {\n    return this.withHeader('content-type', contentType);\n  }\n\n  userAgent(userAgent: string) {\n    return this.withHeader('user-agent', userAgent);\n  }\n\n  withToken(token: string, type: string = 'Bearer') {\n    return this.withHeader('authorization', `${type} ${token}`);\n  }\n\n  withHeader(key: string, value: HttpHeaderValue) {\n    return this.withHeaders({ [key]: value });\n  }\n\n  withHeaders(headers: HttpRequestHeaders) {\n    return new HttpRequestBuilder<D>({\n      ...this.request,\n      headers: { ...this.request.headers, ...headers },\n    });\n  }\n\n  dontFollowRedirects() {\n    return this.followRedirects(0);\n  }\n\n  followRedirects(maxRedirects?: number) {\n    return new HttpRequestBuilder<D>({ ...this.request, maxRedirects });\n  }\n\n  withoutTimeout() {\n    return this.withTimeout(0);\n  }\n\n  withTimeout(timeout?: Milliseconds) {\n    return new HttpRequestBuilder<D>({ ...this.request, timeout });\n  }\n\n  withAbortSignal(signal?: GenericAbortSignal) {\n    return new HttpRequestBuilder<D>({ ...this.request, signal });\n  }\n\n  withEndpoint(method: HttpMethod, url: string) {\n    return new HttpRequestBuilder<D>({ ...this.request, method, url });\n  }\n\n  withParams(\n    params: string | URLSearchParams | string[][] | Record<string, string>\n  ) {\n    const url = new URL(this.request.url);\n    const newSearch = new URLSearchParams(params);\n    const search = new URLSearchParams(url.searchParams);\n    [...newSearch.entries()].forEach(([key, val]) => {\n      search.append(key, val);\n    });\n    url.search = search.toString();\n    return new HttpRequestBuilder<D>({ ...this.request, url: url.toString() });\n  }\n\n  withData<T>(data: T) {\n    return new HttpRequestBuilder<T>({ ...this.request, data });\n  }\n\n  get(url: string) {\n    return this.withEndpoint('get', url);\n  }\n\n  post(url: string) {\n    return this.withEndpoint('post', url);\n  }\n\n  put(url: string) {\n    return this.withEndpoint('put', url);\n  }\n\n  patch(url: string) {\n    return this.withEndpoint('patch', url);\n  }\n\n  delete(url: string) {\n    return this.withEndpoint('delete', url);\n  }\n\n  get method(): HttpMethod {\n    return this.request.method;\n  }\n\n  get url(): string {\n    return this.request.url;\n  }\n\n  get data(): D {\n    return this.request.data;\n  }\n\n  get headers(): HttpRequestHeaders {\n    return this.request.headers;\n  }\n\n  get maxRedirects(): number | undefined {\n    return this.request.maxRedirects;\n  }\n\n  get timeout(): Milliseconds | undefined {\n    return this.request.timeout;\n  }\n\n  get signal(): GenericAbortSignal | undefined {\n    return this.request.signal;\n  }\n}\n\n/**\n * Defines a HTTP method as a string.\n * @category Http\n */\nexport type HttpMethod =\n  | 'get'\n  | 'GET'\n  | 'delete'\n  | 'DELETE'\n  | 'head'\n  | 'HEAD'\n  | 'options'\n  | 'OPTIONS'\n  | 'post'\n  | 'POST'\n  | 'put'\n  | 'PUT'\n  | 'patch'\n  | 'PATCH'\n  | 'purge'\n  | 'PURGE'\n  | 'link'\n  | 'LINK'\n  | 'unlink'\n  | 'UNLINK';\n",null,"import { Context, createNullContext } from './Context';\nimport type { UmiPlugin } from './UmiPlugin';\n\n/**\n * A Umi context object that uses all of the interfaces provided by Umi.\n * Once created, the end-user can pass this object to any function that\n * requires some or all of these interfaces.\n *\n * It implements the {@link Context} interface and adds a `use` method\n * that allows plugins to be installed.\n *\n * @category Context and Interfaces\n */\nexport interface Umi extends Context {\n  /** Installs a Umi plugin. */\n  use(plugin: UmiPlugin): Umi;\n}\n\n/**\n * Creates a Umi instance using only Null implementations of the interfaces.\n * The `use` method can then be used to install plugins and replace the\n * Null implementations with real implementations.\n *\n * @category Context and Interfaces\n */\nexport const createUmi = (): Umi => ({\n  ...createNullContext(),\n  use(plugin: UmiPlugin) {\n    plugin.install(this);\n    return this;\n  },\n});\n",null,"import type { Program } from '../Program';\nimport { UmiError } from './UmiError';\n\n/** @category Errors */\nexport type UnderlyingProgramError = Error & { code?: number; logs?: string[] };\n\n/** @category Errors */\nexport class ProgramError extends UmiError {\n  readonly name: string = 'ProgramError';\n\n  readonly program: Program;\n\n  readonly logs?: string[];\n\n  constructor(\n    message: string,\n    program: Program,\n    cause?: UnderlyingProgramError\n  ) {\n    super(message, 'program', `${program.name} [${program.publicKey}]`, cause);\n    this.program = program;\n    this.logs = cause?.logs;\n    if (this.logs) {\n      this.message += `\\nProgram Logs:\\n${this.logs\n        .map((log) => `| ${log}`)\n        .join('\\n')}\\n`;\n    }\n  }\n}\n",null,"import type { UmiPlugin } from '@metaplex-foundation/umi';\nimport { httpDownloader } from '@metaplex-foundation/umi-downloader-http';\nimport { web3JsEddsa } from '@metaplex-foundation/umi-eddsa-web3js';\nimport { fetchHttp } from '@metaplex-foundation/umi-http-fetch';\nimport { defaultProgramRepository } from '@metaplex-foundation/umi-program-repository';\nimport {\n  web3JsRpc,\n  Web3JsRpcOptions,\n} from '@metaplex-foundation/umi-rpc-web3js';\nimport {\n  chunkGetAccountsRpc,\n  ChunkGetAccountsRpcOptions,\n} from '@metaplex-foundation/umi-rpc-chunk-get-accounts';\nimport { dataViewSerializer } from '@metaplex-foundation/umi-serializer-data-view';\nimport { web3JsTransactionFactory } from '@metaplex-foundation/umi-transaction-factory-web3js';\nimport type { Connection as Web3JsConnection } from '@solana/web3.js';\n\nexport function defaultPlugins(\n  endpoint: string,\n  rpcOptions?: Web3JsRpcOptions & ChunkGetAccountsRpcOptions\n): UmiPlugin;\nexport function defaultPlugins(\n  connection: Web3JsConnection,\n  rpcOptions?: ChunkGetAccountsRpcOptions\n): UmiPlugin;\nexport function defaultPlugins(\n  endpointOrConnection: string | Web3JsConnection,\n  rpcOptions?: Web3JsRpcOptions & ChunkGetAccountsRpcOptions\n): UmiPlugin {\n  return {\n    install(umi) {\n      umi.use(dataViewSerializer());\n      umi.use(defaultProgramRepository());\n      umi.use(fetchHttp());\n      umi.use(httpDownloader());\n      umi.use(web3JsEddsa());\n      umi.use(\n        typeof endpointOrConnection === 'string'\n          ? web3JsRpc(endpointOrConnection, rpcOptions)\n          : web3JsRpc(endpointOrConnection)\n      );\n      umi.use(chunkGetAccountsRpc(rpcOptions?.getAccountsChunkSize));\n      umi.use(web3JsTransactionFactory());\n    },\n  };\n}\n",null,null,"import {\n  Context,\n  createGenericFile,\n  DownloaderInterface,\n  DownloaderOptions,\n  GenericFile,\n  request,\n} from '@metaplex-foundation/umi';\n\nexport function createHttpDownloader(\n  context: Pick<Context, 'http'>\n): DownloaderInterface {\n  const downloadOne = async (\n    uri: string,\n    options: DownloaderOptions = {}\n  ): Promise<GenericFile> => {\n    const response = await context.http.send(\n      request().get(uri).withAbortSignal(options.signal)\n    );\n    return createGenericFile(response.body, uri);\n  };\n\n  const download = async (\n    uris: string[],\n    options: DownloaderOptions = {}\n  ): Promise<GenericFile[]> =>\n    Promise.all(uris.map((uri) => downloadOne(uri, options)));\n\n  const downloadJson = async <T>(\n    uri: string,\n    options: DownloaderOptions = {}\n  ): Promise<T> => {\n    const response = await context.http.send<T>(\n      request().get(uri).withAbortSignal(options.signal)\n    );\n    return response.data;\n  };\n\n  return { download, downloadJson };\n}\n",null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createHttpDownloader } from './createHttpDownloader';\n\nexport const httpDownloader = (): UmiPlugin => ({\n  install(umi) {\n    umi.downloader = createHttpDownloader(umi);\n  },\n});\n",null,null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createWeb3JsEddsa } from './createWeb3JsEddsa';\n\nexport const web3JsEddsa = (): UmiPlugin => ({\n  install(umi) {\n    umi.eddsa = createWeb3JsEddsa();\n  },\n});\n",null,"import {\n  EddsaInterface,\n  Keypair,\n  Pda,\n  publicKey,\n  PublicKey,\n  publicKeyBytes,\n  PublicKeyInput,\n} from '@metaplex-foundation/umi';\nimport {\n  fromWeb3JsKeypair,\n  fromWeb3JsPublicKey,\n  toWeb3JsPublicKey,\n} from '@metaplex-foundation/umi-web3js-adapters';\nimport { ed25519 } from '@noble/curves/ed25519';\nimport {\n  Keypair as Web3JsKeypair,\n  PublicKey as Web3JsPublicKey,\n} from '@solana/web3.js';\n\nexport function createWeb3JsEddsa(): EddsaInterface {\n  const generateKeypair = (): Keypair =>\n    fromWeb3JsKeypair(Web3JsKeypair.generate());\n\n  const createKeypairFromSecretKey = (secretKey: Uint8Array): Keypair =>\n    fromWeb3JsKeypair(Web3JsKeypair.fromSecretKey(secretKey));\n\n  const createKeypairFromSeed = (seed: Uint8Array): Keypair =>\n    fromWeb3JsKeypair(Web3JsKeypair.fromSeed(seed));\n\n  const isOnCurve = (input: PublicKeyInput): boolean =>\n    Web3JsPublicKey.isOnCurve(toWeb3JsPublicKey(publicKey(input)));\n\n  const findPda = (programId: PublicKeyInput, seeds: Uint8Array[]): Pda => {\n    const [key, bump] = Web3JsPublicKey.findProgramAddressSync(\n      seeds,\n      toWeb3JsPublicKey(publicKey(programId))\n    );\n    return [fromWeb3JsPublicKey(key), bump] as Pda;\n  };\n\n  const sign = (message: Uint8Array, keypair: Keypair): Uint8Array =>\n    ed25519.sign(message, keypair.secretKey.slice(0, 32));\n\n  const verify = (\n    message: Uint8Array,\n    signature: Uint8Array,\n    publicKey: PublicKey\n  ): boolean => ed25519.verify(signature, message, publicKeyBytes(publicKey));\n\n  return {\n    generateKeypair,\n    createKeypairFromSecretKey,\n    createKeypairFromSeed,\n    isOnCurve,\n    findPda,\n    sign,\n    verify,\n  };\n}\n",null,null,"import { Instruction } from '@metaplex-foundation/umi';\nimport { TransactionInstruction as Web3JsTransactionInstruction } from '@solana/web3.js';\nimport { Buffer } from 'buffer';\nimport { fromWeb3JsPublicKey, toWeb3JsPublicKey } from './PublicKey';\n\nexport function fromWeb3JsInstruction(\n  instruction: Web3JsTransactionInstruction\n): Instruction {\n  return {\n    keys: instruction.keys.map((accountMeta) => ({\n      ...accountMeta,\n      pubkey: fromWeb3JsPublicKey(accountMeta.pubkey),\n    })),\n    programId: fromWeb3JsPublicKey(instruction.programId),\n    data: new Uint8Array(instruction.data),\n  };\n}\n\nexport function toWeb3JsInstruction(\n  instruction: Instruction\n): Web3JsTransactionInstruction {\n  return new Web3JsTransactionInstruction({\n    keys: instruction.keys.map((accountMeta) => ({\n      ...accountMeta,\n      pubkey: toWeb3JsPublicKey(accountMeta.pubkey),\n    })),\n    programId: toWeb3JsPublicKey(instruction.programId),\n    data: Buffer.from(instruction.data),\n  });\n}\n",null,"import {ed25519} from '@noble/curves/ed25519';\n\n/**\n * A 64 byte secret key, the first 32 bytes of which is the\n * private scalar and the last 32 bytes is the public key.\n * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n */\ntype Ed25519SecretKey = Uint8Array;\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Ed25519SecretKey;\n}\n\nexport const generatePrivateKey = ed25519.utils.randomPrivateKey;\nexport const generateKeypair = (): Ed25519Keypair => {\n  const privateScalar = ed25519.utils.randomPrivateKey();\n  const publicKey = getPublicKey(privateScalar);\n  const secretKey = new Uint8Array(64);\n  secretKey.set(privateScalar);\n  secretKey.set(publicKey, 32);\n  return {\n    publicKey,\n    secretKey,\n  };\n};\nexport const getPublicKey = ed25519.getPublicKey;\nexport function isOnCurve(publicKey: Uint8Array): boolean {\n  try {\n    ed25519.ExtendedPoint.fromHex(publicKey);\n    return true;\n  } catch {\n    return false;\n  }\n}\nexport const sign = (\n  message: Parameters<typeof ed25519.sign>[0],\n  secretKey: Ed25519SecretKey,\n) => ed25519.sign(message, secretKey.slice(0, 32));\nexport const verify = ed25519.verify;\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport {sha256} from '@noble/hashes/sha256';\n\nimport {isOnCurve} from './utils/ed25519';\nimport {Struct, SOLANA_SCHEMA} from './utils/borsh-schema';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Size of public key in bytes\n */\nexport const PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n// local counter used by PublicKey.unique()\nlet uniquePublicKeyCounter = 1;\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != PUBLIC_KEY_LENGTH) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > PUBLIC_KEY_LENGTH) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Returns a unique PublicKey for tests and benchmarks using a counter\n   */\n  static unique(): PublicKey {\n    const key = new PublicKey(uniquePublicKeyCounter);\n    uniquePublicKeyCounter += 1;\n    return new PublicKey(key.toBuffer());\n  }\n\n  /**\n   * Default public key value. The base58-encoded string representation is all ones (as seen below)\n   * The underlying BN number is 32 bytes that are all zeros\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key in big endian\n   */\n  toBytes(): Uint8Array {\n    const buf = this.toBuffer();\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n  }\n\n  /**\n   * Return the Buffer representation of the public key in big endian\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === PUBLIC_KEY_LENGTH) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  get [Symbol.toStringTag](): string {\n    return `PublicKey(${this.toString()})`;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static createProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): PublicKey {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    const publicKeyBytes = sha256(buffer);\n    if (isOnCurve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Async version of createProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link createProgramAddressSync} instead\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    return this.createProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static findProgramAddressSync(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): [PublicKey, number] {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = this.createProgramAddressSync(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Async version of findProgramAddressSync\n   * For backwards compatibility\n   *\n   * @deprecated Use {@link findProgramAddressSync} instead\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    return this.findProgramAddressSync(seeds, programId);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkeyData: PublicKeyInitData): boolean {\n    const pubkey = new PublicKey(pubkeyData);\n    return isOnCurve(pubkey.toBytes());\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n","import {Buffer} from 'buffer';\n\nimport {generatePrivateKey, getPublicKey} from './utils/ed25519';\nimport {toBuffer} from './utils/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  private _publicKey: Buffer;\n  /** @internal */\n  private _secretKey: Buffer;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Uint8Array | Array<number>) {\n    if (secretKey) {\n      const secretKeyBuffer = toBuffer(secretKey);\n      if (secretKey.length !== 64) {\n        throw new Error('bad secret key size');\n      }\n      this._publicKey = secretKeyBuffer.slice(32, 64);\n      this._secretKey = secretKeyBuffer.slice(0, 32);\n    } else {\n      this._secretKey = toBuffer(generatePrivateKey());\n      this._publicKey = toBuffer(getPublicKey(this._secretKey));\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account. The first 32 bytes\n   * is the private scalar and the last 32 bytes is the public key.\n   * Read more: https://blog.mozilla.org/warner/2011/11/29/ed25519-keys/\n   */\n  get secretKey(): Buffer {\n    return Buffer.concat([this._secretKey, this._publicKey], 64);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nexport const VERSION_PREFIX_MASK = 0x7f;\n\nexport const SIGNATURE_LENGTH_IN_BYTES = 64;\n","export class TransactionExpiredBlockheightExceededError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: block height exceeded.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(\n  TransactionExpiredBlockheightExceededError.prototype,\n  'name',\n  {\n    value: 'TransactionExpiredBlockheightExceededError',\n  },\n);\n\nexport class TransactionExpiredTimeoutError extends Error {\n  signature: string;\n\n  constructor(signature: string, timeoutSeconds: number) {\n    super(\n      `Transaction was not confirmed in ${timeoutSeconds.toFixed(\n        2,\n      )} seconds. It is ` +\n        'unknown if it succeeded or failed. Check signature ' +\n        `${signature} using the Solana Explorer or CLI tools.`,\n    );\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredTimeoutError.prototype, 'name', {\n  value: 'TransactionExpiredTimeoutError',\n});\n\nexport class TransactionExpiredNonceInvalidError extends Error {\n  signature: string;\n\n  constructor(signature: string) {\n    super(`Signature ${signature} has expired: the nonce is no longer valid.`);\n    this.signature = signature;\n  }\n}\n\nObject.defineProperty(TransactionExpiredNonceInvalidError.prototype, 'name', {\n  value: 'TransactionExpiredNonceInvalidError',\n});\n","import {LoadedAddresses} from '../connection';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {MessageCompiledInstruction} from './index';\n\nexport type AccountKeysFromLookups = LoadedAddresses;\n\nexport class MessageAccountKeys {\n  staticAccountKeys: Array<PublicKey>;\n  accountKeysFromLookups?: AccountKeysFromLookups;\n\n  constructor(\n    staticAccountKeys: Array<PublicKey>,\n    accountKeysFromLookups?: AccountKeysFromLookups,\n  ) {\n    this.staticAccountKeys = staticAccountKeys;\n    this.accountKeysFromLookups = accountKeysFromLookups;\n  }\n\n  keySegments(): Array<Array<PublicKey>> {\n    const keySegments = [this.staticAccountKeys];\n    if (this.accountKeysFromLookups) {\n      keySegments.push(this.accountKeysFromLookups.writable);\n      keySegments.push(this.accountKeysFromLookups.readonly);\n    }\n    return keySegments;\n  }\n\n  get(index: number): PublicKey | undefined {\n    for (const keySegment of this.keySegments()) {\n      if (index < keySegment.length) {\n        return keySegment[index];\n      } else {\n        index -= keySegment.length;\n      }\n    }\n    return;\n  }\n\n  get length(): number {\n    return this.keySegments().flat().length;\n  }\n\n  compileInstructions(\n    instructions: Array<TransactionInstruction>,\n  ): Array<MessageCompiledInstruction> {\n    // Bail early if any account indexes would overflow a u8\n    const U8_MAX = 255;\n    if (this.length > U8_MAX + 1) {\n      throw new Error('Account index overflow encountered during compilation');\n    }\n\n    const keyIndexMap = new Map();\n    this.keySegments()\n      .flat()\n      .forEach((key, index) => {\n        keyIndexMap.set(key.toBase58(), index);\n      });\n\n    const findKeyIndex = (key: PublicKey) => {\n      const keyIndex = keyIndexMap.get(key.toBase58());\n      if (keyIndex === undefined)\n        throw new Error(\n          'Encountered an unknown instruction account key during compilation',\n        );\n      return keyIndex;\n    };\n\n    return instructions.map((instruction): MessageCompiledInstruction => {\n      return {\n        programIdIndex: findKeyIndex(instruction.programId),\n        accountKeyIndexes: instruction.keys.map(meta =>\n          findKeyIndex(meta.pubkey),\n        ),\n        data: instruction.data,\n      };\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {VoteAuthorizeWithSeedArgs} from './programs/vote';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a signature\n */\nexport const signature = (property: string = 'signature') => {\n  return BufferLayout.blob(64, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteAuthorizeWithSeedArgs object\n */\nexport const voteAuthorizeWithSeedArgs = (\n  property: string = 'voteAuthorizeWithSeedArgs',\n) => {\n  return BufferLayout.struct<VoteAuthorizeWithSeedArgs>(\n    [\n      BufferLayout.u32('voteAuthorizationType'),\n      publicKey('currentAuthorityDerivedKeyOwnerPubkey'),\n      rustString('currentAuthorityDerivedKeySeed'),\n      publicKey('newAuthorized'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  const getItemAlloc = (item: any): number => {\n    if (item.span >= 0) {\n      return item.span;\n    } else if (typeof item.alloc === 'function') {\n      return item.alloc(fields[item.property]);\n    } else if ('count' in item && 'elementLayout' in item) {\n      const field = fields[item.property];\n      if (Array.isArray(field)) {\n        return field.length * getItemAlloc(item.elementLayout);\n      }\n    } else if ('fields' in item) {\n      // This is a `Structure` whose size needs to be recursively measured.\n      return getAlloc({layout: item}, fields[item.property]);\n    }\n    // Couldn't determine allocated size of layout\n    return 0;\n  };\n\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    alloc += getItemAlloc(item);\n  });\n\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import {MessageHeader, MessageAddressTableLookup} from './index';\nimport {AccountKeysFromLookups} from './account-keys';\nimport {AddressLookupTableAccount} from '../programs';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {PublicKey} from '../publickey';\n\nexport type CompiledKeyMeta = {\n  isSigner: boolean;\n  isWritable: boolean;\n  isInvoked: boolean;\n};\n\ntype KeyMetaMap = Map<string, CompiledKeyMeta>;\n\nexport class CompiledKeys {\n  payer: PublicKey;\n  keyMetaMap: KeyMetaMap;\n\n  constructor(payer: PublicKey, keyMetaMap: KeyMetaMap) {\n    this.payer = payer;\n    this.keyMetaMap = keyMetaMap;\n  }\n\n  static compile(\n    instructions: Array<TransactionInstruction>,\n    payer: PublicKey,\n  ): CompiledKeys {\n    const keyMetaMap: KeyMetaMap = new Map();\n    const getOrInsertDefault = (pubkey: PublicKey): CompiledKeyMeta => {\n      const address = pubkey.toBase58();\n      let keyMeta = keyMetaMap.get(address);\n      if (keyMeta === undefined) {\n        keyMeta = {\n          isSigner: false,\n          isWritable: false,\n          isInvoked: false,\n        };\n        keyMetaMap.set(address, keyMeta);\n      }\n      return keyMeta;\n    };\n\n    const payerKeyMeta = getOrInsertDefault(payer);\n    payerKeyMeta.isSigner = true;\n    payerKeyMeta.isWritable = true;\n\n    for (const ix of instructions) {\n      getOrInsertDefault(ix.programId).isInvoked = true;\n      for (const accountMeta of ix.keys) {\n        const keyMeta = getOrInsertDefault(accountMeta.pubkey);\n        keyMeta.isSigner ||= accountMeta.isSigner;\n        keyMeta.isWritable ||= accountMeta.isWritable;\n      }\n    }\n\n    return new CompiledKeys(payer, keyMetaMap);\n  }\n\n  getMessageComponents(): [MessageHeader, Array<PublicKey>] {\n    const mapEntries = [...this.keyMetaMap.entries()];\n    assert(mapEntries.length <= 256, 'Max static account keys length exceeded');\n\n    const writableSigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && meta.isWritable,\n    );\n    const readonlySigners = mapEntries.filter(\n      ([, meta]) => meta.isSigner && !meta.isWritable,\n    );\n    const writableNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && meta.isWritable,\n    );\n    const readonlyNonSigners = mapEntries.filter(\n      ([, meta]) => !meta.isSigner && !meta.isWritable,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: writableSigners.length + readonlySigners.length,\n      numReadonlySignedAccounts: readonlySigners.length,\n      numReadonlyUnsignedAccounts: readonlyNonSigners.length,\n    };\n\n    // sanity checks\n    {\n      assert(\n        writableSigners.length > 0,\n        'Expected at least one writable signer key',\n      );\n      const [payerAddress] = writableSigners[0];\n      assert(\n        payerAddress === this.payer.toBase58(),\n        'Expected first writable signer key to be the fee payer',\n      );\n    }\n\n    const staticAccountKeys = [\n      ...writableSigners.map(([address]) => new PublicKey(address)),\n      ...readonlySigners.map(([address]) => new PublicKey(address)),\n      ...writableNonSigners.map(([address]) => new PublicKey(address)),\n      ...readonlyNonSigners.map(([address]) => new PublicKey(address)),\n    ];\n\n    return [header, staticAccountKeys];\n  }\n\n  extractTableLookup(\n    lookupTable: AddressLookupTableAccount,\n  ): [MessageAddressTableLookup, AccountKeysFromLookups] | undefined {\n    const [writableIndexes, drainedWritableKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && keyMeta.isWritable,\n      );\n    const [readonlyIndexes, drainedReadonlyKeys] =\n      this.drainKeysFoundInLookupTable(\n        lookupTable.state.addresses,\n        keyMeta =>\n          !keyMeta.isSigner && !keyMeta.isInvoked && !keyMeta.isWritable,\n      );\n\n    // Don't extract lookup if no keys were found\n    if (writableIndexes.length === 0 && readonlyIndexes.length === 0) {\n      return;\n    }\n\n    return [\n      {\n        accountKey: lookupTable.key,\n        writableIndexes,\n        readonlyIndexes,\n      },\n      {\n        writable: drainedWritableKeys,\n        readonly: drainedReadonlyKeys,\n      },\n    ];\n  }\n\n  /** @internal */\n  private drainKeysFoundInLookupTable(\n    lookupTableEntries: Array<PublicKey>,\n    keyMetaFilter: (keyMeta: CompiledKeyMeta) => boolean,\n  ): [Array<number>, Array<PublicKey>] {\n    const lookupTableIndexes = new Array();\n    const drainedKeys = new Array();\n\n    for (const [address, keyMeta] of this.keyMetaMap.entries()) {\n      if (keyMetaFilter(keyMeta)) {\n        const key = new PublicKey(address);\n        const lookupTableIndex = lookupTableEntries.findIndex(entry =>\n          entry.equals(key),\n        );\n        if (lookupTableIndex >= 0) {\n          assert(lookupTableIndex < 256, 'Max lookup table index exceeded');\n          lookupTableIndexes.push(lookupTableIndex);\n          drainedKeys.push(key);\n          this.keyMetaMap.delete(address);\n        }\n      }\n    }\n\n    return [lookupTableIndexes, drainedKeys];\n  }\n}\n","const END_OF_BUFFER_ERROR_MESSAGE = 'Reached end of buffer unexpectedly';\n\n/**\n * Delegates to `Array#shift`, but throws if the array is zero-length.\n */\nexport function guardedShift<T>(byteArray: T[]): T {\n  if (byteArray.length === 0) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.shift() as T;\n}\n\n/**\n * Delegates to `Array#splice`, but throws if the section being spliced out extends past the end of\n * the array.\n */\nexport function guardedSplice<T>(\n  byteArray: T[],\n  ...args:\n    | [start: number, deleteCount?: number]\n    | [start: number, deleteCount: number, ...items: T[]]\n): T[] {\n  const [start] = args;\n  if (\n    args.length === 2 // Implies that `deleteCount` was supplied\n      ? start + (args[1] ?? 0) > byteArray.length\n      : start >= byteArray.length\n  ) {\n    throw new Error(END_OF_BUFFER_ERROR_MESSAGE);\n  }\n  return byteArray.splice(\n    ...(args as Parameters<typeof Array.prototype.splice>),\n  );\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport type {Blockhash} from '../blockhash';\nimport * as Layout from '../layout';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {TransactionInstruction} from '../transaction';\nimport {CompiledKeys} from './compiled-keys';\nimport {MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[] | PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nexport type CompileLegacyArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  get version(): 'legacy' {\n    return 'legacy';\n  }\n\n  get staticAccountKeys(): Array<PublicKey> {\n    return this.accountKeys;\n  }\n\n  get compiledInstructions(): Array<MessageCompiledInstruction> {\n    return this.instructions.map(\n      (ix): MessageCompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      }),\n    );\n  }\n\n  get addressTableLookups(): Array<MessageAddressTableLookup> {\n    return [];\n  }\n\n  getAccountKeys(): MessageAccountKeys {\n    return new MessageAccountKeys(this.staticAccountKeys);\n  }\n\n  static compile(args: CompileLegacyArgs): Message {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(staticAccountKeys);\n    const instructions = accountKeys.compileInstructions(args.instructions).map(\n      (ix: MessageCompiledInstruction): CompiledInstruction => ({\n        programIdIndex: ix.programIdIndex,\n        accounts: ix.accountKeyIndexes,\n        data: bs58.encode(ix.data),\n      }),\n    );\n    return new Message({\n      header,\n      accountKeys: staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      instructions,\n    });\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = this.accountKeys.length - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = guardedShift(byteArray);\n    if (\n      numRequiredSignatures !==\n      (numRequiredSignatures & VERSION_PREFIX_MASK)\n    ) {\n      throw new Error(\n        'Versioned messages must be deserialized with VersionedMessage.deserialize()',\n      );\n    }\n\n    const numReadonlySignedAccounts = guardedShift(byteArray);\n    const numReadonlyUnsignedAccounts = guardedShift(byteArray);\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n      accountKeys.push(new PublicKey(Buffer.from(account)));\n    }\n\n    const recentBlockhash = guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = guardedSplice(byteArray, 0, accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = guardedSplice(byteArray, 0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","import bs58 from 'bs58';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../layout';\nimport {Blockhash} from '../blockhash';\nimport {\n  MessageHeader,\n  MessageAddressTableLookup,\n  MessageCompiledInstruction,\n} from './index';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport assert from '../utils/assert';\nimport {PACKET_DATA_SIZE, VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {TransactionInstruction} from '../transaction';\nimport {AddressLookupTableAccount} from '../programs';\nimport {CompiledKeys} from './compiled-keys';\nimport {AccountKeysFromLookups, MessageAccountKeys} from './account-keys';\nimport {guardedShift, guardedSplice} from '../utils/guarded-array-utils';\n\n/**\n * Message constructor arguments\n */\nexport type MessageV0Args = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** The static account keys used by this transaction */\n  staticAccountKeys: PublicKey[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  compiledInstructions: MessageCompiledInstruction[];\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  addressTableLookups: MessageAddressTableLookup[];\n};\n\nexport type CompileV0Args = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n  addressLookupTableAccounts?: Array<AddressLookupTableAccount>;\n};\n\nexport type GetAccountKeysArgs =\n  | {\n      accountKeysFromLookups?: AccountKeysFromLookups | null;\n    }\n  | {\n      addressLookupTableAccounts?: AddressLookupTableAccount[] | null;\n    };\n\nexport class MessageV0 {\n  header: MessageHeader;\n  staticAccountKeys: Array<PublicKey>;\n  recentBlockhash: Blockhash;\n  compiledInstructions: Array<MessageCompiledInstruction>;\n  addressTableLookups: Array<MessageAddressTableLookup>;\n\n  constructor(args: MessageV0Args) {\n    this.header = args.header;\n    this.staticAccountKeys = args.staticAccountKeys;\n    this.recentBlockhash = args.recentBlockhash;\n    this.compiledInstructions = args.compiledInstructions;\n    this.addressTableLookups = args.addressTableLookups;\n  }\n\n  get version(): 0 {\n    return 0;\n  }\n\n  get numAccountKeysFromLookups(): number {\n    let count = 0;\n    for (const lookup of this.addressTableLookups) {\n      count += lookup.readonlyIndexes.length + lookup.writableIndexes.length;\n    }\n    return count;\n  }\n\n  getAccountKeys(args?: GetAccountKeysArgs): MessageAccountKeys {\n    let accountKeysFromLookups: AccountKeysFromLookups | undefined;\n    if (\n      args &&\n      'accountKeysFromLookups' in args &&\n      args.accountKeysFromLookups\n    ) {\n      if (\n        this.numAccountKeysFromLookups !=\n        args.accountKeysFromLookups.writable.length +\n          args.accountKeysFromLookups.readonly.length\n      ) {\n        throw new Error(\n          'Failed to get account keys because of a mismatch in the number of account keys from lookups',\n        );\n      }\n      accountKeysFromLookups = args.accountKeysFromLookups;\n    } else if (\n      args &&\n      'addressLookupTableAccounts' in args &&\n      args.addressLookupTableAccounts\n    ) {\n      accountKeysFromLookups = this.resolveAddressTableLookups(\n        args.addressLookupTableAccounts,\n      );\n    } else if (this.addressTableLookups.length > 0) {\n      throw new Error(\n        'Failed to get account keys because address table lookups were not resolved',\n      );\n    }\n    return new MessageAccountKeys(\n      this.staticAccountKeys,\n      accountKeysFromLookups,\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    const numSignedAccounts = this.header.numRequiredSignatures;\n    const numStaticAccountKeys = this.staticAccountKeys.length;\n    if (index >= numStaticAccountKeys) {\n      const lookupAccountKeysIndex = index - numStaticAccountKeys;\n      const numWritableLookupAccountKeys = this.addressTableLookups.reduce(\n        (count, lookup) => count + lookup.writableIndexes.length,\n        0,\n      );\n      return lookupAccountKeysIndex < numWritableLookupAccountKeys;\n    } else if (index >= this.header.numRequiredSignatures) {\n      const unsignedAccountIndex = index - numSignedAccounts;\n      const numUnsignedAccounts = numStaticAccountKeys - numSignedAccounts;\n      const numWritableUnsignedAccounts =\n        numUnsignedAccounts - this.header.numReadonlyUnsignedAccounts;\n      return unsignedAccountIndex < numWritableUnsignedAccounts;\n    } else {\n      const numWritableSignedAccounts =\n        numSignedAccounts - this.header.numReadonlySignedAccounts;\n      return index < numWritableSignedAccounts;\n    }\n  }\n\n  resolveAddressTableLookups(\n    addressLookupTableAccounts: AddressLookupTableAccount[],\n  ): AccountKeysFromLookups {\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: [],\n      readonly: [],\n    };\n\n    for (const tableLookup of this.addressTableLookups) {\n      const tableAccount = addressLookupTableAccounts.find(account =>\n        account.key.equals(tableLookup.accountKey),\n      );\n      if (!tableAccount) {\n        throw new Error(\n          `Failed to find address lookup table account for table key ${tableLookup.accountKey.toBase58()}`,\n        );\n      }\n\n      for (const index of tableLookup.writableIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.writable.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n\n      for (const index of tableLookup.readonlyIndexes) {\n        if (index < tableAccount.state.addresses.length) {\n          accountKeysFromLookups.readonly.push(\n            tableAccount.state.addresses[index],\n          );\n        } else {\n          throw new Error(\n            `Failed to find address for index ${index} in address lookup table ${tableLookup.accountKey.toBase58()}`,\n          );\n        }\n      }\n    }\n\n    return accountKeysFromLookups;\n  }\n\n  static compile(args: CompileV0Args): MessageV0 {\n    const compiledKeys = CompiledKeys.compile(args.instructions, args.payerKey);\n\n    const addressTableLookups = new Array<MessageAddressTableLookup>();\n    const accountKeysFromLookups: AccountKeysFromLookups = {\n      writable: new Array(),\n      readonly: new Array(),\n    };\n    const lookupTableAccounts = args.addressLookupTableAccounts || [];\n    for (const lookupTable of lookupTableAccounts) {\n      const extractResult = compiledKeys.extractTableLookup(lookupTable);\n      if (extractResult !== undefined) {\n        const [addressTableLookup, {writable, readonly}] = extractResult;\n        addressTableLookups.push(addressTableLookup);\n        accountKeysFromLookups.writable.push(...writable);\n        accountKeysFromLookups.readonly.push(...readonly);\n      }\n    }\n\n    const [header, staticAccountKeys] = compiledKeys.getMessageComponents();\n    const accountKeys = new MessageAccountKeys(\n      staticAccountKeys,\n      accountKeysFromLookups,\n    );\n    const compiledInstructions = accountKeys.compileInstructions(\n      args.instructions,\n    );\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash: args.recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n\n  serialize(): Uint8Array {\n    const encodedStaticAccountKeysLength = Array<number>();\n    shortvec.encodeLength(\n      encodedStaticAccountKeysLength,\n      this.staticAccountKeys.length,\n    );\n\n    const serializedInstructions = this.serializeInstructions();\n    const encodedInstructionsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedInstructionsLength,\n      this.compiledInstructions.length,\n    );\n\n    const serializedAddressTableLookups = this.serializeAddressTableLookups();\n    const encodedAddressTableLookupsLength = Array<number>();\n    shortvec.encodeLength(\n      encodedAddressTableLookupsLength,\n      this.addressTableLookups.length,\n    );\n\n    const messageLayout = BufferLayout.struct<{\n      prefix: number;\n      header: MessageHeader;\n      staticAccountKeysLength: Uint8Array;\n      staticAccountKeys: Array<Uint8Array>;\n      recentBlockhash: Uint8Array;\n      instructionsLength: Uint8Array;\n      serializedInstructions: Uint8Array;\n      addressTableLookupsLength: Uint8Array;\n      serializedAddressTableLookups: Uint8Array;\n    }>([\n      BufferLayout.u8('prefix'),\n      BufferLayout.struct<MessageHeader>(\n        [\n          BufferLayout.u8('numRequiredSignatures'),\n          BufferLayout.u8('numReadonlySignedAccounts'),\n          BufferLayout.u8('numReadonlyUnsignedAccounts'),\n        ],\n        'header',\n      ),\n      BufferLayout.blob(\n        encodedStaticAccountKeysLength.length,\n        'staticAccountKeysLength',\n      ),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        this.staticAccountKeys.length,\n        'staticAccountKeys',\n      ),\n      Layout.publicKey('recentBlockhash'),\n      BufferLayout.blob(encodedInstructionsLength.length, 'instructionsLength'),\n      BufferLayout.blob(\n        serializedInstructions.length,\n        'serializedInstructions',\n      ),\n      BufferLayout.blob(\n        encodedAddressTableLookupsLength.length,\n        'addressTableLookupsLength',\n      ),\n      BufferLayout.blob(\n        serializedAddressTableLookups.length,\n        'serializedAddressTableLookups',\n      ),\n    ]);\n\n    const serializedMessage = new Uint8Array(PACKET_DATA_SIZE);\n    const MESSAGE_VERSION_0_PREFIX = 1 << 7;\n    const serializedMessageLength = messageLayout.encode(\n      {\n        prefix: MESSAGE_VERSION_0_PREFIX,\n        header: this.header,\n        staticAccountKeysLength: new Uint8Array(encodedStaticAccountKeysLength),\n        staticAccountKeys: this.staticAccountKeys.map(key => key.toBytes()),\n        recentBlockhash: bs58.decode(this.recentBlockhash),\n        instructionsLength: new Uint8Array(encodedInstructionsLength),\n        serializedInstructions,\n        addressTableLookupsLength: new Uint8Array(\n          encodedAddressTableLookupsLength,\n        ),\n        serializedAddressTableLookups,\n      },\n      serializedMessage,\n    );\n    return serializedMessage.slice(0, serializedMessageLength);\n  }\n\n  private serializeInstructions(): Uint8Array {\n    let serializedLength = 0;\n    const serializedInstructions = new Uint8Array(PACKET_DATA_SIZE);\n    for (const instruction of this.compiledInstructions) {\n      const encodedAccountKeyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedAccountKeyIndexesLength,\n        instruction.accountKeyIndexes.length,\n      );\n\n      const encodedDataLength = Array<number>();\n      shortvec.encodeLength(encodedDataLength, instruction.data.length);\n\n      const instructionLayout = BufferLayout.struct<{\n        programIdIndex: number;\n        encodedAccountKeyIndexesLength: Uint8Array;\n        accountKeyIndexes: number[];\n        encodedDataLength: Uint8Array;\n        data: Uint8Array;\n      }>([\n        BufferLayout.u8('programIdIndex'),\n        BufferLayout.blob(\n          encodedAccountKeyIndexesLength.length,\n          'encodedAccountKeyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          instruction.accountKeyIndexes.length,\n          'accountKeyIndexes',\n        ),\n        BufferLayout.blob(encodedDataLength.length, 'encodedDataLength'),\n        BufferLayout.blob(instruction.data.length, 'data'),\n      ]);\n\n      serializedLength += instructionLayout.encode(\n        {\n          programIdIndex: instruction.programIdIndex,\n          encodedAccountKeyIndexesLength: new Uint8Array(\n            encodedAccountKeyIndexesLength,\n          ),\n          accountKeyIndexes: instruction.accountKeyIndexes,\n          encodedDataLength: new Uint8Array(encodedDataLength),\n          data: instruction.data,\n        },\n        serializedInstructions,\n        serializedLength,\n      );\n    }\n\n    return serializedInstructions.slice(0, serializedLength);\n  }\n\n  private serializeAddressTableLookups(): Uint8Array {\n    let serializedLength = 0;\n    const serializedAddressTableLookups = new Uint8Array(PACKET_DATA_SIZE);\n    for (const lookup of this.addressTableLookups) {\n      const encodedWritableIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedWritableIndexesLength,\n        lookup.writableIndexes.length,\n      );\n\n      const encodedReadonlyIndexesLength = Array<number>();\n      shortvec.encodeLength(\n        encodedReadonlyIndexesLength,\n        lookup.readonlyIndexes.length,\n      );\n\n      const addressTableLookupLayout = BufferLayout.struct<{\n        accountKey: Uint8Array;\n        encodedWritableIndexesLength: Uint8Array;\n        writableIndexes: number[];\n        encodedReadonlyIndexesLength: Uint8Array;\n        readonlyIndexes: number[];\n      }>([\n        Layout.publicKey('accountKey'),\n        BufferLayout.blob(\n          encodedWritableIndexesLength.length,\n          'encodedWritableIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.writableIndexes.length,\n          'writableIndexes',\n        ),\n        BufferLayout.blob(\n          encodedReadonlyIndexesLength.length,\n          'encodedReadonlyIndexesLength',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8(),\n          lookup.readonlyIndexes.length,\n          'readonlyIndexes',\n        ),\n      ]);\n\n      serializedLength += addressTableLookupLayout.encode(\n        {\n          accountKey: lookup.accountKey.toBytes(),\n          encodedWritableIndexesLength: new Uint8Array(\n            encodedWritableIndexesLength,\n          ),\n          writableIndexes: lookup.writableIndexes,\n          encodedReadonlyIndexesLength: new Uint8Array(\n            encodedReadonlyIndexesLength,\n          ),\n          readonlyIndexes: lookup.readonlyIndexes,\n        },\n        serializedAddressTableLookups,\n        serializedLength,\n      );\n    }\n\n    return serializedAddressTableLookups.slice(0, serializedLength);\n  }\n\n  static deserialize(serializedMessage: Uint8Array): MessageV0 {\n    let byteArray = [...serializedMessage];\n\n    const prefix = guardedShift(byteArray);\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n    assert(\n      prefix !== maskedPrefix,\n      `Expected versioned message but received legacy message`,\n    );\n\n    const version = maskedPrefix;\n    assert(\n      version === 0,\n      `Expected versioned message with version 0 but found version ${version}`,\n    );\n\n    const header: MessageHeader = {\n      numRequiredSignatures: guardedShift(byteArray),\n      numReadonlySignedAccounts: guardedShift(byteArray),\n      numReadonlyUnsignedAccounts: guardedShift(byteArray),\n    };\n\n    const staticAccountKeys = [];\n    const staticAccountKeysLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < staticAccountKeysLength; i++) {\n      staticAccountKeys.push(\n        new PublicKey(guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH)),\n      );\n    }\n\n    const recentBlockhash = bs58.encode(\n      guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n    );\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    const compiledInstructions: MessageCompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = guardedShift(byteArray);\n      const accountKeyIndexesLength = shortvec.decodeLength(byteArray);\n      const accountKeyIndexes = guardedSplice(\n        byteArray,\n        0,\n        accountKeyIndexesLength,\n      );\n      const dataLength = shortvec.decodeLength(byteArray);\n      const data = new Uint8Array(guardedSplice(byteArray, 0, dataLength));\n      compiledInstructions.push({\n        programIdIndex,\n        accountKeyIndexes,\n        data,\n      });\n    }\n\n    const addressTableLookupsCount = shortvec.decodeLength(byteArray);\n    const addressTableLookups: MessageAddressTableLookup[] = [];\n    for (let i = 0; i < addressTableLookupsCount; i++) {\n      const accountKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const writableIndexesLength = shortvec.decodeLength(byteArray);\n      const writableIndexes = guardedSplice(\n        byteArray,\n        0,\n        writableIndexesLength,\n      );\n      const readonlyIndexesLength = shortvec.decodeLength(byteArray);\n      const readonlyIndexes = guardedSplice(\n        byteArray,\n        0,\n        readonlyIndexesLength,\n      );\n      addressTableLookups.push({\n        accountKey,\n        writableIndexes,\n        readonlyIndexes,\n      });\n    }\n\n    return new MessageV0({\n      header,\n      staticAccountKeys,\n      recentBlockhash,\n      compiledInstructions,\n      addressTableLookups,\n    });\n  }\n}\n","import {VERSION_PREFIX_MASK} from '../transaction/constants';\nimport {Message} from './legacy';\nimport {MessageV0} from './v0';\n\nexport type VersionedMessage = Message | MessageV0;\n// eslint-disable-next-line no-redeclare\nexport const VersionedMessage = {\n  deserializeMessageVersion(serializedMessage: Uint8Array): 'legacy' | number {\n    const prefix = serializedMessage[0];\n    const maskedPrefix = prefix & VERSION_PREFIX_MASK;\n\n    // if the highest bit of the prefix is not set, the message is not versioned\n    if (maskedPrefix === prefix) {\n      return 'legacy';\n    }\n\n    // the lower 7 bits of the prefix indicate the message version\n    return maskedPrefix;\n  },\n\n  deserialize: (serializedMessage: Uint8Array): VersionedMessage => {\n    const version =\n      VersionedMessage.deserializeMessageVersion(serializedMessage);\n    if (version === 'legacy') {\n      return Message.from(serializedMessage);\n    }\n\n    if (version === 0) {\n      return MessageV0.deserialize(serializedMessage);\n    } else {\n      throw new Error(\n        `Transaction message version ${version} deserialization is not supported`,\n      );\n    }\n  },\n};\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {PACKET_DATA_SIZE, SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport {Connection} from '../connection';\nimport {Message} from '../message';\nimport {PublicKey} from '../publickey';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport {toBuffer} from '../utils/to-buffer';\nimport invariant from '../utils/assert';\nimport type {Signer} from '../keypair';\nimport type {Blockhash} from '../blockhash';\nimport type {CompiledInstruction} from '../message';\nimport {sign, verify} from '../utils/ed25519';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\n/** @internal */\ntype MessageSignednessErrors = {\n  invalid?: PublicKey[];\n  missing?: PublicKey[];\n};\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\nexport const enum TransactionStatus {\n  BLOCKHEIGHT_EXCEEDED,\n  PROCESSED,\n  TIMED_OUT,\n  NONCE_INVALID,\n}\n\n/**\n * Default (empty) signature\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(SIGNATURE_LENGTH_IN_BYTES).fill(0);\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * @internal\n */\nexport interface TransactionInstructionJSON {\n  keys: {\n    pubkey: string;\n    isSigner: boolean;\n    isWritable: boolean;\n  }[];\n  programId: string;\n  data: number[];\n}\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionInstructionJSON {\n    return {\n      keys: this.keys.map(({pubkey, isSigner, isWritable}) => ({\n        pubkey: pubkey.toJSON(),\n        isSigner,\n        isWritable,\n      })),\n      programId: this.programId.toJSON(),\n      data: [...this.data],\n    };\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n */\nexport type TransactionCtorFields_DEPRECATED = {\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash;\n};\n\n// For backward compatibility; an unfortunate consequence of being\n// forced to over-export types by the documentation generator.\n// See https://github.com/solana-labs/solana/pull/25820\nexport type TransactionCtorFields = TransactionCtorFields_DEPRECATED;\n\n/**\n * Blockhash-based transactions have a lifetime that are defined by\n * the blockhash they include. Any transaction whose blockhash is\n * too old will be rejected.\n */\nexport type TransactionBlockhashCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n  /** A recent blockhash */\n  blockhash: Blockhash;\n  /** the last block chain can advance to before tx is declared expired */\n  lastValidBlockHeight: number;\n};\n\n/**\n * Use these options to construct a durable nonce transaction.\n */\nexport type TransactionNonceCtor = {\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  minContextSlot: number;\n  nonceInfo: NonceInformation;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * @internal\n */\nexport interface TransactionJSON {\n  recentBlockhash: string | null;\n  feePayer: string | null;\n  nonceInfo: {\n    nonce: string;\n    nonceInstruction: TransactionInstructionJSON;\n  } | null;\n  instructions: TransactionInstructionJSON[];\n  signers: string[];\n}\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   *\n   * @returns {Buffer | null} Buffer of payer's signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * the last block chain can advance to before tx is declared expired\n   * */\n  lastValidBlockHeight?: number;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * If this is a nonce transaction this represents the minimum slot from which\n   * to evaluate if the nonce has advanced when attempting to confirm the\n   * transaction. This protects against a case where the transaction confirmation\n   * logic loads the nonce account from an old slot and assumes the mismatch in\n   * nonce value implies that the nonce has been advanced.\n   */\n  minNonceContextSlot?: number;\n\n  /**\n   * @internal\n   */\n  _message?: Message;\n\n  /**\n   * @internal\n   */\n  _json?: TransactionJSON;\n\n  // Construct a transaction with a blockhash and lastValidBlockHeight\n  constructor(opts?: TransactionBlockhashCtor);\n\n  // Construct a transaction using a durable nonce\n  constructor(opts?: TransactionNonceCtor);\n\n  /**\n   * @deprecated `TransactionCtorFields` has been deprecated and will be removed in a future version.\n   * Please supply a `TransactionBlockhashCtor` instead.\n   */\n  constructor(opts?: TransactionCtorFields_DEPRECATED);\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(\n    opts?:\n      | TransactionBlockhashCtor\n      | TransactionNonceCtor\n      | TransactionCtorFields_DEPRECATED,\n  ) {\n    if (!opts) {\n      return;\n    }\n    if (opts.feePayer) {\n      this.feePayer = opts.feePayer;\n    }\n    if (opts.signatures) {\n      this.signatures = opts.signatures;\n    }\n    if (Object.prototype.hasOwnProperty.call(opts, 'nonceInfo')) {\n      const {minContextSlot, nonceInfo} = opts as TransactionNonceCtor;\n      this.minNonceContextSlot = minContextSlot;\n      this.nonceInfo = nonceInfo;\n    } else if (\n      Object.prototype.hasOwnProperty.call(opts, 'lastValidBlockHeight')\n    ) {\n      const {blockhash, lastValidBlockHeight} =\n        opts as TransactionBlockhashCtor;\n      this.recentBlockhash = blockhash;\n      this.lastValidBlockHeight = lastValidBlockHeight;\n    } else {\n      const {recentBlockhash, nonceInfo} =\n        opts as TransactionCtorFields_DEPRECATED;\n      if (nonceInfo) {\n        this.nonceInfo = nonceInfo;\n      }\n      this.recentBlockhash = recentBlockhash;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  toJSON(): TransactionJSON {\n    return {\n      recentBlockhash: this.recentBlockhash || null,\n      feePayer: this.feePayer ? this.feePayer.toJSON() : null,\n      nonceInfo: this.nonceInfo\n        ? {\n            nonce: this.nonceInfo.nonce,\n            nonceInstruction: this.nonceInfo.nonceInstruction.toJSON(),\n          }\n        : null,\n      instructions: this.instructions.map(instruction => instruction.toJSON()),\n      signers: this.signatures.map(({publicKey}) => {\n        return publicKey.toJSON();\n      }),\n    };\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   *\n   * @param {Array< Transaction | TransactionInstruction | TransactionInstructionCtorFields >} items - Instructions to add to the Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    if (\n      this._message &&\n      JSON.stringify(this.toJSON()) === JSON.stringify(this._json)\n    ) {\n      return this._message;\n    }\n\n    let recentBlockhash;\n    let instructions: TransactionInstruction[];\n    if (this.nonceInfo) {\n      recentBlockhash = this.nonceInfo.nonce;\n      if (this.instructions[0] != this.nonceInfo.nonceInstruction) {\n        instructions = [this.nonceInfo.nonceInstruction, ...this.instructions];\n      } else {\n        instructions = this.instructions;\n      }\n    } else {\n      recentBlockhash = this.recentBlockhash;\n      instructions = this.instructions;\n    }\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < instructions.length; i++) {\n      if (instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n        uniqueMetas[uniqueIndex].isSigner =\n          uniqueMetas[uniqueIndex].isSigner || accountMeta.isSigner;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    uniqueMetas.sort(function (x, y) {\n      if (x.isSigner !== y.isSigner) {\n        // Signers always come before non-signers\n        return x.isSigner ? -1 : 1;\n      }\n      if (x.isWritable !== y.isWritable) {\n        // Writable accounts always come before read-only accounts\n        return x.isWritable ? -1 : 1;\n      }\n      // Otherwise, sort by pubkey, stringwise.\n      const options = {\n        localeMatcher: 'best fit',\n        usage: 'sort',\n        sensitivity: 'variant',\n        ignorePunctuation: false,\n        numeric: false,\n        caseFirst: 'lower',\n      } as Intl.CollatorOptions;\n      return x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58(), 'en', options);\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const compiledInstructions: CompiledInstruction[] = instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    compiledInstructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions: compiledInstructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   *\n   * @param {Connection} connection Connection to RPC Endpoint.\n   *\n   * @returns {Promise<number | null>} The estimated fee for the transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number | null> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   *\n   * @param {Array<Signer>} signers Array of signers that will sign the transaction\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = sign(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * @param {PublicKey} pubkey Public key that will be added to the transaction.\n   * @param {Buffer} signature An externally created signature to add to the transaction.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a Transaction\n   * Optional parameter specifies if we're expecting a fully signed Transaction or a partially signed one.\n   * If no boolean is provided, we expect a fully signed Transaction by default.\n   *\n   * @param {boolean} [requireAllSignatures=true] Require a fully signed Transaction\n   */\n  verifySignatures(requireAllSignatures: boolean = true): boolean {\n    const signatureErrors = this._getMessageSignednessErrors(\n      this.serializeMessage(),\n      requireAllSignatures,\n    );\n    return !signatureErrors;\n  }\n\n  /**\n   * @internal\n   */\n  _getMessageSignednessErrors(\n    message: Uint8Array,\n    requireAllSignatures: boolean,\n  ): MessageSignednessErrors | undefined {\n    const errors: MessageSignednessErrors = {};\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          (errors.missing ||= []).push(publicKey);\n        }\n      } else {\n        if (!verify(signature, message, publicKey.toBytes())) {\n          (errors.invalid ||= []).push(publicKey);\n        }\n      }\n    }\n    return errors.invalid || errors.missing ? errors : undefined;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   *\n   * @param {Buffer} [config] Config of transaction.\n   *\n   * @returns {Buffer} Signature of transaction in wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (verifySignatures) {\n      const sigErrors = this._getMessageSignednessErrors(\n        signData,\n        requireAllSignatures,\n      );\n      if (sigErrors) {\n        let errorMessage = 'Signature verification failed.';\n        if (sigErrors.invalid) {\n          errorMessage += `\\nInvalid signature for public key${\n            sigErrors.invalid.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.invalid.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        if (sigErrors.missing) {\n          errorMessage += `\\nMissing signature for public key${\n            sigErrors.missing.length === 1 ? '' : '(s)'\n          } [\\`${sigErrors.missing.map(p => p.toBase58()).join('`, `')}\\`].`;\n        }\n        throw new Error(errorMessage);\n      }\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   *\n   * @param {Buffer | Uint8Array | Array<number>} buffer Signature of wire Transaction\n   *\n   * @returns {Transaction} Transaction associated with the signature\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   *\n   * @param {Message} message Message of transaction\n   * @param {Array<string>} signatures List of signatures to assign to the transaction\n   *\n   * @returns {Transaction} The populated Transaction\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    transaction._message = message;\n    transaction._json = transaction.toJSON();\n\n    return transaction;\n  }\n}\n","import {AccountKeysFromLookups} from '../message/account-keys';\nimport assert from '../utils/assert';\nimport {toBuffer} from '../utils/to-buffer';\nimport {Blockhash} from '../blockhash';\nimport {Message, MessageV0, VersionedMessage} from '../message';\nimport {PublicKey} from '../publickey';\nimport {AddressLookupTableAccount} from '../programs';\nimport {AccountMeta, TransactionInstruction} from './legacy';\n\nexport type TransactionMessageArgs = {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n};\n\nexport type DecompileArgs =\n  | {\n      accountKeysFromLookups: AccountKeysFromLookups;\n    }\n  | {\n      addressLookupTableAccounts: AddressLookupTableAccount[];\n    };\n\nexport class TransactionMessage {\n  payerKey: PublicKey;\n  instructions: Array<TransactionInstruction>;\n  recentBlockhash: Blockhash;\n\n  constructor(args: TransactionMessageArgs) {\n    this.payerKey = args.payerKey;\n    this.instructions = args.instructions;\n    this.recentBlockhash = args.recentBlockhash;\n  }\n\n  static decompile(\n    message: VersionedMessage,\n    args?: DecompileArgs,\n  ): TransactionMessage {\n    const {header, compiledInstructions, recentBlockhash} = message;\n\n    const {\n      numRequiredSignatures,\n      numReadonlySignedAccounts,\n      numReadonlyUnsignedAccounts,\n    } = header;\n\n    const numWritableSignedAccounts =\n      numRequiredSignatures - numReadonlySignedAccounts;\n    assert(numWritableSignedAccounts > 0, 'Message header is invalid');\n\n    const numWritableUnsignedAccounts =\n      message.staticAccountKeys.length -\n      numRequiredSignatures -\n      numReadonlyUnsignedAccounts;\n    assert(numWritableUnsignedAccounts >= 0, 'Message header is invalid');\n\n    const accountKeys = message.getAccountKeys(args);\n    const payerKey = accountKeys.get(0);\n    if (payerKey === undefined) {\n      throw new Error(\n        'Failed to decompile message because no account keys were found',\n      );\n    }\n\n    const instructions: TransactionInstruction[] = [];\n    for (const compiledIx of compiledInstructions) {\n      const keys: AccountMeta[] = [];\n\n      for (const keyIndex of compiledIx.accountKeyIndexes) {\n        const pubkey = accountKeys.get(keyIndex);\n        if (pubkey === undefined) {\n          throw new Error(\n            `Failed to find key for account key index ${keyIndex}`,\n          );\n        }\n\n        const isSigner = keyIndex < numRequiredSignatures;\n\n        let isWritable;\n        if (isSigner) {\n          isWritable = keyIndex < numWritableSignedAccounts;\n        } else if (keyIndex < accountKeys.staticAccountKeys.length) {\n          isWritable =\n            keyIndex - numRequiredSignatures < numWritableUnsignedAccounts;\n        } else {\n          isWritable =\n            keyIndex - accountKeys.staticAccountKeys.length <\n            // accountKeysFromLookups cannot be undefined because we already found a pubkey for this index above\n            accountKeys.accountKeysFromLookups!.writable.length;\n        }\n\n        keys.push({\n          pubkey,\n          isSigner: keyIndex < header.numRequiredSignatures,\n          isWritable,\n        });\n      }\n\n      const programId = accountKeys.get(compiledIx.programIdIndex);\n      if (programId === undefined) {\n        throw new Error(\n          `Failed to find program id for program id index ${compiledIx.programIdIndex}`,\n        );\n      }\n\n      instructions.push(\n        new TransactionInstruction({\n          programId,\n          data: toBuffer(compiledIx.data),\n          keys,\n        }),\n      );\n    }\n\n    return new TransactionMessage({\n      payerKey,\n      instructions,\n      recentBlockhash,\n    });\n  }\n\n  compileToLegacyMessage(): Message {\n    return Message.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n    });\n  }\n\n  compileToV0Message(\n    addressLookupTableAccounts?: AddressLookupTableAccount[],\n  ): MessageV0 {\n    return MessageV0.compile({\n      payerKey: this.payerKey,\n      recentBlockhash: this.recentBlockhash,\n      instructions: this.instructions,\n      addressLookupTableAccounts,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {Signer} from '../keypair';\nimport assert from '../utils/assert';\nimport {VersionedMessage} from '../message/versioned';\nimport {SIGNATURE_LENGTH_IN_BYTES} from './constants';\nimport * as shortvec from '../utils/shortvec-encoding';\nimport * as Layout from '../layout';\nimport {sign} from '../utils/ed25519';\nimport {PublicKey} from '../publickey';\nimport {guardedSplice} from '../utils/guarded-array-utils';\n\nexport type TransactionVersion = 'legacy' | 0;\n\n/**\n * Versioned transaction class\n */\nexport class VersionedTransaction {\n  signatures: Array<Uint8Array>;\n  message: VersionedMessage;\n\n  get version(): TransactionVersion {\n    return this.message.version;\n  }\n\n  constructor(message: VersionedMessage, signatures?: Array<Uint8Array>) {\n    if (signatures !== undefined) {\n      assert(\n        signatures.length === message.header.numRequiredSignatures,\n        'Expected signatures length to be equal to the number of required signatures',\n      );\n      this.signatures = signatures;\n    } else {\n      const defaultSignatures = [];\n      for (let i = 0; i < message.header.numRequiredSignatures; i++) {\n        defaultSignatures.push(new Uint8Array(SIGNATURE_LENGTH_IN_BYTES));\n      }\n      this.signatures = defaultSignatures;\n    }\n    this.message = message;\n  }\n\n  serialize(): Uint8Array {\n    const serializedMessage = this.message.serialize();\n\n    const encodedSignaturesLength = Array<number>();\n    shortvec.encodeLength(encodedSignaturesLength, this.signatures.length);\n\n    const transactionLayout = BufferLayout.struct<{\n      encodedSignaturesLength: Uint8Array;\n      signatures: Array<Uint8Array>;\n      serializedMessage: Uint8Array;\n    }>([\n      BufferLayout.blob(\n        encodedSignaturesLength.length,\n        'encodedSignaturesLength',\n      ),\n      BufferLayout.seq(\n        Layout.signature(),\n        this.signatures.length,\n        'signatures',\n      ),\n      BufferLayout.blob(serializedMessage.length, 'serializedMessage'),\n    ]);\n\n    const serializedTransaction = new Uint8Array(2048);\n    const serializedTransactionLength = transactionLayout.encode(\n      {\n        encodedSignaturesLength: new Uint8Array(encodedSignaturesLength),\n        signatures: this.signatures,\n        serializedMessage,\n      },\n      serializedTransaction,\n    );\n\n    return serializedTransaction.slice(0, serializedTransactionLength);\n  }\n\n  static deserialize(serializedTransaction: Uint8Array): VersionedTransaction {\n    let byteArray = [...serializedTransaction];\n\n    const signatures = [];\n    const signaturesLength = shortvec.decodeLength(byteArray);\n    for (let i = 0; i < signaturesLength; i++) {\n      signatures.push(\n        new Uint8Array(guardedSplice(byteArray, 0, SIGNATURE_LENGTH_IN_BYTES)),\n      );\n    }\n\n    const message = VersionedMessage.deserialize(new Uint8Array(byteArray));\n    return new VersionedTransaction(message, signatures);\n  }\n\n  sign(signers: Array<Signer>) {\n    const messageData = this.message.serialize();\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    for (const signer of signers) {\n      const signerIndex = signerPubkeys.findIndex(pubkey =>\n        pubkey.equals(signer.publicKey),\n      );\n      assert(\n        signerIndex >= 0,\n        `Cannot sign with non signer key ${signer.publicKey.toBase58()}`,\n      );\n      this.signatures[signerIndex] = sign(messageData, signer.secretKey);\n    }\n  }\n\n  addSignature(publicKey: PublicKey, signature: Uint8Array) {\n    assert(signature.byteLength === 64, 'Signature must be 64 bytes long');\n    const signerPubkeys = this.message.staticAccountKeys.slice(\n      0,\n      this.message.header.numRequiredSignatures,\n    );\n    const signerIndex = signerPubkeys.findIndex(pubkey =>\n      pubkey.equals(publicKey),\n    );\n    assert(\n      signerIndex >= 0,\n      `Can not add signature; \\`${publicKey.toBase58()}\\` is not required to sign this transaction`,\n    );\n    this.signatures[signerIndex] = signature;\n  }\n}\n","// TODO: These constants should be removed in favor of reading them out of a\n// Syscall account\n\n/**\n * @internal\n */\nexport const NUM_TICKS_PER_SECOND = 160;\n\n/**\n * @internal\n */\nexport const DEFAULT_TICKS_PER_SLOT = 64;\n\n/**\n * @internal\n */\nexport const NUM_SLOTS_PER_SECOND =\n  NUM_TICKS_PER_SECOND / DEFAULT_TICKS_PER_SLOT;\n\n/**\n * @internal\n */\nexport const MS_PER_SLOT = 1000 / NUM_SLOTS_PER_SECOND;\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from './connection';\nimport {TransactionSignature} from './transaction';\n\nexport class SendTransactionError extends Error {\n  private signature: TransactionSignature;\n  private transactionMessage: string;\n  private transactionLogs: string[] | Promise<string[]> | undefined;\n\n  constructor({\n    action,\n    signature,\n    transactionMessage,\n    logs,\n  }: {\n    action: 'send' | 'simulate';\n    signature: TransactionSignature;\n    transactionMessage: string;\n    logs?: string[];\n  }) {\n    const maybeLogsOutput = logs\n      ? `Logs: \\n${JSON.stringify(logs.slice(-10), null, 2)}. `\n      : '';\n    const guideText =\n      '\\nCatch the `SendTransactionError` and call `getLogs()` on it for full details.';\n    let message: string;\n    switch (action) {\n      case 'send':\n        message =\n          `Transaction ${signature} resulted in an error. \\n` +\n          `${transactionMessage}. ` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      case 'simulate':\n        message =\n          `Simulation failed. \\nMessage: ${transactionMessage}. \\n` +\n          maybeLogsOutput +\n          guideText;\n        break;\n      default: {\n        message = `Unknown action '${((a: never) => a)(action)}'`;\n      }\n    }\n    super(message);\n\n    this.signature = signature;\n    this.transactionMessage = transactionMessage;\n    this.transactionLogs = logs ? logs : undefined;\n  }\n\n  get transactionError(): {message: string; logs?: string[]} {\n    return {\n      message: this.transactionMessage,\n      logs: Array.isArray(this.transactionLogs)\n        ? this.transactionLogs\n        : undefined,\n    };\n  }\n\n  /* @deprecated Use `await getLogs()` instead */\n  get logs(): string[] | undefined {\n    const cachedLogs = this.transactionLogs;\n    if (\n      cachedLogs != null &&\n      typeof cachedLogs === 'object' &&\n      'then' in cachedLogs\n    ) {\n      return undefined;\n    }\n    return cachedLogs;\n  }\n\n  async getLogs(connection: Connection): Promise<string[]> {\n    if (!Array.isArray(this.transactionLogs)) {\n      this.transactionLogs = new Promise((resolve, reject) => {\n        connection\n          .getTransaction(this.signature)\n          .then(tx => {\n            if (tx && tx.meta && tx.meta.logMessages) {\n              const logs = tx.meta.logMessages;\n              this.transactionLogs = logs;\n              resolve(logs);\n            } else {\n              reject(new Error('Log messages not found'));\n            }\n          })\n          .catch(reject);\n      });\n    }\n    return await this.transactionLogs;\n  }\n}\n\n// Keep in sync with client/src/rpc_custom_errors.rs\n// Typescript `enums` thwart tree-shaking. See https://bargsten.org/jsts/enums/\nexport const SolanaJSONRPCErrorCode = {\n  JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP: -32001,\n  JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE: -32002,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE: -32003,\n  JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE: -32004,\n  JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY: -32005,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE: -32006,\n  JSON_RPC_SERVER_ERROR_SLOT_SKIPPED: -32007,\n  JSON_RPC_SERVER_ERROR_NO_SNAPSHOT: -32008,\n  JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED: -32009,\n  JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX: -32010,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE: -32011,\n  JSON_RPC_SCAN_ERROR: -32012,\n  JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH: -32013,\n  JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET: -32014,\n  JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION: -32015,\n  JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED: -32016,\n} as const;\nexport type SolanaJSONRPCErrorCodeEnum =\n  (typeof SolanaJSONRPCErrorCode)[keyof typeof SolanaJSONRPCErrorCode];\n\nexport class SolanaJSONRPCError extends Error {\n  code: SolanaJSONRPCErrorCodeEnum | unknown;\n  data?: any;\n  constructor(\n    {\n      code,\n      message,\n      data,\n    }: Readonly<{code: unknown; message: string; data?: any}>,\n    customMessage?: string,\n  ) {\n    super(customMessage != null ? `${customMessage}: ${message}` : message);\n    this.code = code;\n    this.data = data;\n    this.name = 'SolanaJSONRPCError';\n  }\n}\n","import {Connection, SignatureResult} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions &\n    Readonly<{\n      // A signal that, when aborted, cancels any outstanding transaction confirmation operations\n      abortSignal?: AbortSignal;\n    }>,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  let status: SignatureResult;\n  if (\n    transaction.recentBlockhash != null &&\n    transaction.lastValidBlockHeight != null\n  ) {\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          signature: signature,\n          blockhash: transaction.recentBlockhash,\n          lastValidBlockHeight: transaction.lastValidBlockHeight,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else if (\n    transaction.minNonceContextSlot != null &&\n    transaction.nonceInfo != null\n  ) {\n    const {nonceInstruction} = transaction.nonceInfo;\n    const nonceAccountPubkey = nonceInstruction.keys[0].pubkey;\n    status = (\n      await connection.confirmTransaction(\n        {\n          abortSignal: options?.abortSignal,\n          minContextSlot: transaction.minNonceContextSlot,\n          nonceAccountPubkey,\n          nonceValue: transaction.nonceInfo.nonce,\n          signature,\n        },\n        options && options.commitment,\n      )\n    ).value;\n  } else {\n    if (options?.abortSignal != null) {\n      console.warn(\n        'sendAndConfirmTransaction(): A transaction with a deprecated confirmation strategy was ' +\n          'supplied along with an `abortSignal`. Only transactions having `lastValidBlockHeight` ' +\n          'or a combination of `nonceInfo` and `minNonceContextSlot` are abortable.',\n      );\n    }\n    status = (\n      await connection.confirmTransaction(\n        signature,\n        options && options.commitment,\n      )\n    ).value;\n  }\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: 'send',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './utils/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\n/**\n * A durable nonce is a 32 byte value encoded as a base58 string.\n */\nexport type DurableNonce = string;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: DurableNonce;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {blob, Layout} from '@solana/buffer-layout';\nimport {toBigIntLE, toBufferLE} from 'bigint-buffer';\n\ninterface EncodeDecode<T> {\n  decode(buffer: Buffer, offset?: number): T;\n  encode(src: T, buffer: Buffer, offset?: number): number;\n}\n\nconst encodeDecode = <T>(layout: Layout<T>): EncodeDecode<T> => {\n  const decode = layout.decode.bind(layout);\n  const encode = layout.encode.bind(layout);\n  return {decode, encode};\n};\n\nconst bigInt =\n  (length: number) =>\n  (property?: string): Layout<bigint> => {\n    const layout = blob(length, property);\n    const {encode, decode} = encodeDecode(layout);\n\n    const bigIntLayout = layout as Layout<unknown> as Layout<bigint>;\n\n    bigIntLayout.decode = (buffer: Buffer, offset: number) => {\n      const src = decode(buffer, offset);\n      return toBigIntLE(Buffer.from(src));\n    };\n\n    bigIntLayout.encode = (bigInt: bigint, buffer: Buffer, offset: number) => {\n      const src = toBufferLE(bigInt, length);\n      return encode(src, buffer, offset);\n    };\n\n    return bigIntLayout;\n  };\n\nexport const u64 = bigInt(8);\n\nexport const u128 = bigInt(16);\n\nexport const u192 = bigInt(24);\n\nexport const u256 = bigInt(32);\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {NONCE_ACCOUNT_LENGTH} from '../nonce-account';\nimport {PublicKey} from '../publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\nimport {u64} from '../utils/bigint';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number | bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/** Decoded transfer system transaction instruction */\nexport type DecodedTransferInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n};\n\n/** Decoded transferWithSeed system transaction instruction */\nexport type DecodedTransferWithSeedInstruction = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: bigint;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(\n    instruction: TransactionInstruction,\n  ): DecodedTransferInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): DecodedTransferWithSeedInstruction {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount'\n  | 'UpgradeNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: bigint;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: bigint;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n  UpgradeNonceAccount: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      u64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        u64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  UpgradeNonceAccount: {\n    index: 12,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['UpgradeNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: BigInt(params.lamports),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: BigInt(params.lamports)});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({\n        pubkey: params.basePubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {MS_PER_SLOT} from './timing';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './utils/send-and-confirm-transaction';\nimport {sleep} from './utils/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './programs/system';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      const deployCommitment = 'processed';\n      const finalizeSignature = await connection.sendTransaction(\n        transaction,\n        [payer, program],\n        {preflightCommitment: deployCommitment},\n      );\n      const {context, value} = await connection.confirmTransaction(\n        {\n          signature: finalizeSignature,\n          lastValidBlockHeight: transaction.lastValidBlockHeight!,\n          blockhash: transaction.recentBlockhash!,\n        },\n        deployCommitment,\n      );\n      if (value.err) {\n        throw new Error(\n          `Transaction ${finalizeSignature} failed (${JSON.stringify(value)})`,\n        );\n      }\n      // We prevent programs from being usable until the slot after their deployment.\n      // See https://github.com/solana-labs/solana/pull/29654\n      while (\n        true // eslint-disable-line no-constant-condition\n      ) {\n        try {\n          const currentSlot = await connection.getSlot({\n            commitment: deployCommitment,\n          });\n          if (currentSlot > context.slot) {\n            break;\n          }\n        } catch {\n          /* empty */\n        }\n        await new Promise(resolve =>\n          setTimeout(resolve, Math.round(MS_PER_SLOT / 2)),\n        );\n      }\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\n/**\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n *\n * @deprecated Deprecated since Solana v1.17.20.\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a SBF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the SBF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var objToString = Object.prototype.toString;\nvar objKeys = Object.keys || function(obj) {\n\t\tvar keys = [];\n\t\tfor (var name in obj) {\n\t\t\tkeys.push(name);\n\t\t}\n\t\treturn keys;\n\t};\n\nfunction stringify(val, isArrayProp) {\n\tvar i, max, str, keys, key, propVal, toStr;\n\tif (val === true) {\n\t\treturn \"true\";\n\t}\n\tif (val === false) {\n\t\treturn \"false\";\n\t}\n\tswitch (typeof val) {\n\t\tcase \"object\":\n\t\t\tif (val === null) {\n\t\t\t\treturn null;\n\t\t\t} else if (val.toJSON && typeof val.toJSON === \"function\") {\n\t\t\t\treturn stringify(val.toJSON(), isArrayProp);\n\t\t\t} else {\n\t\t\t\ttoStr = objToString.call(val);\n\t\t\t\tif (toStr === \"[object Array]\") {\n\t\t\t\t\tstr = '[';\n\t\t\t\t\tmax = val.length - 1;\n\t\t\t\t\tfor(i = 0; i < max; i++) {\n\t\t\t\t\t\tstr += stringify(val[i], true) + ',';\n\t\t\t\t\t}\n\t\t\t\t\tif (max > -1) {\n\t\t\t\t\t\tstr += stringify(val[i], true);\n\t\t\t\t\t}\n\t\t\t\t\treturn str + ']';\n\t\t\t\t} else if (toStr === \"[object Object]\") {\n\t\t\t\t\t// only object is left\n\t\t\t\t\tkeys = objKeys(val).sort();\n\t\t\t\t\tmax = keys.length;\n\t\t\t\t\tstr = \"\";\n\t\t\t\t\ti = 0;\n\t\t\t\t\twhile (i < max) {\n\t\t\t\t\t\tkey = keys[i];\n\t\t\t\t\t\tpropVal = stringify(val[key], false);\n\t\t\t\t\t\tif (propVal !== undefined) {\n\t\t\t\t\t\t\tif (str) {\n\t\t\t\t\t\t\t\tstr += ',';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tstr += JSON.stringify(key) + ':' + propVal;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ti++;\n\t\t\t\t\t}\n\t\t\t\t\treturn '{' + str + '}';\n\t\t\t\t} else {\n\t\t\t\t\treturn JSON.stringify(val);\n\t\t\t\t}\n\t\t\t}\n\t\tcase \"function\":\n\t\tcase \"undefined\":\n\t\t\treturn isArrayProp ? null : undefined;\n\t\tcase \"string\":\n\t\t\treturn JSON.stringify(val);\n\t\tdefault:\n\t\t\treturn isFinite(val) ? val : null;\n\t}\n}\n\nmodule.exports = function(val) {\n\tvar returnVal = stringify(val, false);\n\tif (returnVal !== undefined) {\n\t\treturn ''+ returnVal;\n\t}\n};\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link Connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export const Headers = globalThis.Headers;\nexport const Request = globalThis.Request;\nexport const Response = globalThis.Response;\nexport default globalThis.fetch;\n","import RpcWebSocketCommonClient from 'rpc-websockets/dist/lib/client.cjs';\nimport WebSocketBrowserImpl from 'rpc-websockets/dist/lib/client/websocket.cjs';\nimport {\n  ICommonWebSocket,\n  IWSClientAdditionalOptions,\n  NodeWebSocketType,\n  NodeWebSocketTypeOptions,\n} from 'rpc-websockets/dist/lib/client/client.types.cjs';\n\nimport createRpc from './rpc-websocket-factory';\n\ninterface IHasReadyState {\n  readyState: WebSocket['readyState'];\n}\n\nexport default class RpcWebSocketClient extends RpcWebSocketCommonClient {\n  private underlyingSocket: IHasReadyState | undefined;\n  constructor(\n    address?: string,\n    options?: IWSClientAdditionalOptions & NodeWebSocketTypeOptions,\n    generate_request_id?: (\n      method: string,\n      params: object | Array<any>,\n    ) => number,\n  ) {\n    const webSocketFactory = (url: string) => {\n      const rpc = createRpc(url, {\n        autoconnect: true,\n        max_reconnects: 5,\n        reconnect: true,\n        reconnect_interval: 1000,\n        ...options,\n      });\n      if ('socket' in rpc) {\n        this.underlyingSocket = rpc.socket as ReturnType<\n          typeof WebSocketBrowserImpl\n        >;\n      } else {\n        this.underlyingSocket = rpc as NodeWebSocketType;\n      }\n      return rpc as ICommonWebSocket;\n    };\n    super(webSocketFactory, address, options, generate_request_id);\n  }\n  call(\n    ...args: Parameters<RpcWebSocketCommonClient['call']>\n  ): ReturnType<RpcWebSocketCommonClient['call']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.call(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to call a JSON-RPC method `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n  notify(\n    ...args: Parameters<RpcWebSocketCommonClient['notify']>\n  ): ReturnType<RpcWebSocketCommonClient['notify']> {\n    const readyState = this.underlyingSocket?.readyState;\n    if (readyState === 1 /* WebSocket.OPEN */) {\n      return super.notify(...args);\n    }\n    return Promise.reject(\n      new Error(\n        'Tried to send a JSON-RPC notification `' +\n          args[0] +\n          '` but the socket was not `CONNECTING` or `OPEN` (`readyState` was ' +\n          readyState +\n          ')',\n      ),\n    );\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nexport interface IAccountStateData {\n  readonly typeIndex: number;\n}\n\n/**\n * @internal\n */\nexport type AccountType<TInputData extends IAccountStateData> = {\n  /** The account type index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Decode account data buffer using an AccountType\n * @internal\n */\nexport function decodeData<TAccountStateData extends IAccountStateData>(\n  type: AccountType<TAccountStateData>,\n  data: Uint8Array,\n): TAccountStateData {\n  let decoded: TAccountStateData;\n  try {\n    decoded = type.layout.decode(data);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (decoded.typeIndex !== type.index) {\n    throw new Error(\n      `invalid account data; account type mismatch ${decoded.typeIndex} != ${type.index}`,\n    );\n  }\n\n  return decoded;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport assert from '../../utils/assert';\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport {u64} from '../../utils/bigint';\nimport {decodeData} from '../../account-data';\n\nexport type AddressLookupTableState = {\n  deactivationSlot: bigint;\n  lastExtendedSlot: number;\n  lastExtendedSlotStartIndex: number;\n  authority?: PublicKey;\n  addresses: Array<PublicKey>;\n};\n\nexport type AddressLookupTableAccountArgs = {\n  key: PublicKey;\n  state: AddressLookupTableState;\n};\n\n/// The serialized size of lookup table metadata\nconst LOOKUP_TABLE_META_SIZE = 56;\n\nexport class AddressLookupTableAccount {\n  key: PublicKey;\n  state: AddressLookupTableState;\n\n  constructor(args: AddressLookupTableAccountArgs) {\n    this.key = args.key;\n    this.state = args.state;\n  }\n\n  isActive(): boolean {\n    const U64_MAX = BigInt('0xffffffffffffffff');\n    return this.state.deactivationSlot === U64_MAX;\n  }\n\n  static deserialize(accountData: Uint8Array): AddressLookupTableState {\n    const meta = decodeData(LookupTableMetaLayout, accountData);\n\n    const serializedAddressesLen = accountData.length - LOOKUP_TABLE_META_SIZE;\n    assert(serializedAddressesLen >= 0, 'lookup table is invalid');\n    assert(serializedAddressesLen % 32 === 0, 'lookup table is invalid');\n\n    const numSerializedAddresses = serializedAddressesLen / 32;\n    const {addresses} = BufferLayout.struct<{addresses: Array<Uint8Array>}>([\n      BufferLayout.seq(Layout.publicKey(), numSerializedAddresses, 'addresses'),\n    ]).decode(accountData.slice(LOOKUP_TABLE_META_SIZE));\n\n    return {\n      deactivationSlot: meta.deactivationSlot,\n      lastExtendedSlot: meta.lastExtendedSlot,\n      lastExtendedSlotStartIndex: meta.lastExtendedStartIndex,\n      authority:\n        meta.authority.length !== 0\n          ? new PublicKey(meta.authority[0])\n          : undefined,\n      addresses: addresses.map(address => new PublicKey(address)),\n    };\n  }\n}\n\nconst LookupTableMetaLayout = {\n  index: 1,\n  layout: BufferLayout.struct<{\n    typeIndex: number;\n    deactivationSlot: bigint;\n    lastExtendedSlot: number;\n    lastExtendedStartIndex: number;\n    authority: Array<Uint8Array>;\n  }>([\n    BufferLayout.u32('typeIndex'),\n    u64('deactivationSlot'),\n    BufferLayout.nu64('lastExtendedSlot'),\n    BufferLayout.u8('lastExtendedStartIndex'),\n    BufferLayout.u8(), // option\n    BufferLayout.seq(\n      Layout.publicKey(),\n      BufferLayout.offset(BufferLayout.u8(), -1),\n      'authority',\n    ),\n  ]),\n};\n","const URL_RE = /^[^:]+:\\/\\/([^:[]+|\\[[^\\]]+\\])(:\\d+)?(.*)/i;\n\nexport function makeWebsocketUrl(endpoint: string) {\n  const matches = endpoint.match(URL_RE);\n  if (matches == null) {\n    throw TypeError(`Failed to validate endpoint URL \\`${endpoint}\\``);\n  }\n  const [\n    _, // eslint-disable-line @typescript-eslint/no-unused-vars\n    hostish,\n    portWithColon,\n    rest,\n  ] = matches;\n  const protocol = endpoint.startsWith('https:') ? 'wss:' : 'ws:';\n  const startPort =\n    portWithColon == null ? null : parseInt(portWithColon.slice(1), 10);\n  const websocketPort =\n    // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n    // is explicitly specifying the endpoint port (HTTP-based RPC), assuming\n    // we're directly trying to connect to agave-validator's ws listening port.\n    // When the endpoint omits the port, we're connecting to the protocol\n    // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n    // proxy which manages WebSocket upgrade and backend port redirection.\n    startPort == null ? '' : `:${startPort + 1}`;\n  return `${protocol}//${hostish}${websocketPort}${rest}`;\n}\n","import HttpKeepAliveAgent, {\n  HttpsAgent as HttpsKeepAliveAgent,\n} from 'agentkeepalive';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n// @ts-ignore\nimport fastStableStringify from 'fast-stable-stringify';\nimport type {Agent as NodeHttpAgent} from 'http';\nimport {Agent as NodeHttpsAgent} from 'https';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {JSONRPCError} from 'jayson';\n\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError, SolanaJSONRPCError} from './errors';\nimport fetchImpl from './fetch-impl';\nimport {DurableNonce, NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport RpcWebSocketClient from './rpc-websocket';\nimport {MS_PER_SLOT} from './timing';\nimport {\n  Transaction,\n  TransactionStatus,\n  TransactionVersion,\n  VersionedTransaction,\n} from './transaction';\nimport {Message, MessageHeader, MessageV0, VersionedMessage} from './message';\nimport {AddressLookupTableAccount} from './programs/address-lookup-table/state';\nimport assert from './utils/assert';\nimport {sleep} from './utils/sleep';\nimport {toBuffer} from './utils/to-buffer';\nimport {\n  TransactionExpiredBlockheightExceededError,\n  TransactionExpiredNonceInvalidError,\n  TransactionExpiredTimeoutError,\n} from './transaction/expiry-custom-errors';\nimport {makeWebsocketUrl} from './utils/makeWebsocketUrl';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\n/**\n * HACK.\n * Copied from rpc-websockets/dist/lib/client.\n * Otherwise, `yarn build` fails with:\n * https://gist.github.com/steveluscher/c057eca81d479ef705cdb53162f9971d\n */\ninterface IWSRequestParams {\n  [x: string]: any;\n  [x: number]: any;\n}\n\ntype ClientSubscriptionId = number;\n/** @internal */ type ServerSubscriptionId = number;\n/** @internal */ type SubscriptionConfigHash = string;\n/** @internal */ type SubscriptionDisposeFn = () => Promise<void>;\n/** @internal */ type SubscriptionStateChangeCallback = (\n  nextState: StatefulSubscription['state'],\n) => void;\n/** @internal */ type SubscriptionStateChangeDisposeFn = () => void;\n/**\n * @internal\n * Every subscription contains the args used to open the subscription with\n * the server, and a list of callers interested in notifications.\n */\ntype BaseSubscription<TMethod = SubscriptionConfig['method']> = Readonly<{\n  args: IWSRequestParams;\n  callbacks: Set<Extract<SubscriptionConfig, {method: TMethod}>['callback']>;\n}>;\n/**\n * @internal\n * A subscription may be in various states of connectedness. Only when it is\n * fully connected will it have a server subscription id associated with it.\n * This id can be returned to the server to unsubscribe the client entirely.\n */\ntype StatefulSubscription = Readonly<\n  // New subscriptions that have not yet been\n  // sent to the server start in this state.\n  | {\n      state: 'pending';\n    }\n  // These subscriptions have been sent to the server\n  // and are waiting for the server to acknowledge them.\n  | {\n      state: 'subscribing';\n    }\n  // These subscriptions have been acknowledged by the\n  // server and have been assigned server subscription ids.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'subscribed';\n    }\n  // These subscriptions are intended to be torn down and\n  // are waiting on an acknowledgement from the server.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribing';\n    }\n  // The request to tear down these subscriptions has been\n  // acknowledged by the server. The `serverSubscriptionId`\n  // is the id of the now-dead subscription.\n  | {\n      serverSubscriptionId: ServerSubscriptionId;\n      state: 'unsubscribed';\n    }\n>;\n/**\n * A type that encapsulates a subscription's RPC method\n * names and notification (callback) signature.\n */\ntype SubscriptionConfig = Readonly<\n  | {\n      callback: AccountChangeCallback;\n      method: 'accountSubscribe';\n      unsubscribeMethod: 'accountUnsubscribe';\n    }\n  | {\n      callback: LogsCallback;\n      method: 'logsSubscribe';\n      unsubscribeMethod: 'logsUnsubscribe';\n    }\n  | {\n      callback: ProgramAccountChangeCallback;\n      method: 'programSubscribe';\n      unsubscribeMethod: 'programUnsubscribe';\n    }\n  | {\n      callback: RootChangeCallback;\n      method: 'rootSubscribe';\n      unsubscribeMethod: 'rootUnsubscribe';\n    }\n  | {\n      callback: SignatureSubscriptionCallback;\n      method: 'signatureSubscribe';\n      unsubscribeMethod: 'signatureUnsubscribe';\n    }\n  | {\n      callback: SlotChangeCallback;\n      method: 'slotSubscribe';\n      unsubscribeMethod: 'slotUnsubscribe';\n    }\n  | {\n      callback: SlotUpdateCallback;\n      method: 'slotsUpdatesSubscribe';\n      unsubscribeMethod: 'slotsUpdatesUnsubscribe';\n    }\n>;\n/**\n * @internal\n * Utility type that keeps tagged unions intact while omitting properties.\n */\ntype DistributiveOmit<T, K extends PropertyKey> = T extends unknown\n  ? Omit<T, K>\n  : never;\n/**\n * @internal\n * This type represents a single subscribable 'topic.' It's made up of:\n *\n * - The args used to open the subscription with the server,\n * - The state of the subscription, in terms of its connectedness, and\n * - The set of callbacks to call when the server publishes notifications\n *\n * This record gets indexed by `SubscriptionConfigHash` and is used to\n * set up subscriptions, fan out notifications, and track subscription state.\n */\ntype Subscription = BaseSubscription &\n  StatefulSubscription &\n  DistributiveOmit<SubscriptionConfig, 'callback'>;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => Promise<any>;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => Promise<any[]>;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\nexport type BlockhashWithExpiryBlockHeight = Readonly<{\n  blockhash: Blockhash;\n  lastValidBlockHeight: number;\n}>;\n\n/**\n * A strategy for confirming transactions that uses the last valid\n * block height for a given blockhash to check for transaction expiration.\n */\nexport type BlockheightBasedTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & BlockhashWithExpiryBlockHeight;\n\n/**\n * A strategy for confirming durable nonce transactions.\n */\nexport type DurableNonceTransactionConfirmationStrategy =\n  BaseTransactionConfirmationStrategy & {\n    /**\n     * The lowest slot at which to fetch the nonce value from the\n     * nonce account. This should be no lower than the slot at\n     * which the last-known value of the nonce was fetched.\n     */\n    minContextSlot: number;\n    /**\n     * The account where the current value of the nonce is stored.\n     */\n    nonceAccountPubkey: PublicKey;\n    /**\n     * The nonce value that was used to sign the transaction\n     * for which confirmation is being sought.\n     */\n    nonceValue: DurableNonce;\n  };\n\n/**\n * Properties shared by all transaction confirmation strategies\n */\nexport type BaseTransactionConfirmationStrategy = Readonly<{\n  /** A signal that, when aborted, cancels any outstanding transaction confirmation operations */\n  abortSignal?: AbortSignal;\n  signature: TransactionSignature;\n}>;\n\n/**\n * This type represents all transaction confirmation strategies\n */\nexport type TransactionConfirmationStrategy =\n  | BlockheightBasedTransactionConfirmationStrategy\n  | DurableNonceTransactionConfirmationStrategy;\n\n/* @internal */\nfunction assertEndpointUrl(putativeUrl: string) {\n  if (/^https?:/.test(putativeUrl) === false) {\n    throw new TypeError('Endpoint URL must start with `http:` or `https:`.');\n  }\n  return putativeUrl;\n}\n\n/** @internal */\nfunction extractCommitmentFromConfig<TConfig>(\n  commitmentOrConfig?: Commitment | ({commitment?: Commitment} & TConfig),\n) {\n  let commitment: Commitment | undefined;\n  let config: Omit<TConfig, 'commitment'> | undefined;\n  if (typeof commitmentOrConfig === 'string') {\n    commitment = commitmentOrConfig;\n  } else if (commitmentOrConfig) {\n    const {commitment: specifiedCommitment, ...specifiedConfig} =\n      commitmentOrConfig;\n    commitment = specifiedCommitment;\n    config = specifiedConfig;\n  }\n  return {commitment, config};\n}\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * @internal\n */\nfunction versionedMessageFromResponse(\n  version: TransactionVersion | undefined,\n  response: MessageResponse,\n): VersionedMessage {\n  if (version === 0) {\n    return new MessageV0({\n      header: response.header,\n      staticAccountKeys: response.accountKeys.map(\n        accountKey => new PublicKey(accountKey),\n      ),\n      recentBlockhash: response.recentBlockhash,\n      compiledInstructions: response.instructions.map(ix => ({\n        programIdIndex: ix.programIdIndex,\n        accountKeyIndexes: ix.accounts,\n        data: bs58.decode(ix.data),\n      })),\n      addressTableLookups: response.addressTableLookups!,\n    });\n  } else {\n    return new Message(response);\n  }\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getAccountInfo` query behavior\n */\nexport type GetAccountInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for changing `getBalance` query behavior\n */\nexport type GetBalanceConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getBlock` query behavior\n */\nexport type GetVersionedBlockConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n  /**\n   * Whether to populate the rewards array. If parameter not provided, the default includes rewards.\n   */\n  rewards?: boolean;\n  /**\n   * Level of transaction detail to return, either \"full\", \"accounts\", \"signatures\", or \"none\". If\n   * parameter not provided, the default detail level is \"full\". If \"accounts\" are requested,\n   * transaction details only include signatures and an annotated list of accounts in each\n   * transaction. Transaction metadata is limited to only: fee, err, pre_balances, post_balances,\n   * pre_token_balances, and post_token_balances.\n   */\n  transactionDetails?: 'accounts' | 'full' | 'none' | 'signatures';\n};\n\n/**\n * Configuration object for changing `getStakeMinimumDelegation` query behavior\n */\nexport type GetStakeMinimumDelegationConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n};\n\n/**\n * Configuration object for changing `getBlockHeight` query behavior\n */\nexport type GetBlockHeightConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getEpochInfo` query behavior\n */\nexport type GetEpochInfoConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getInflationReward` query behavior\n */\nexport type GetInflationRewardConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** An epoch for which the reward occurs. If omitted, the previous epoch will be used */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getLatestBlockhash` query behavior\n */\nexport type GetLatestBlockhashConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `isBlockhashValid` query behavior\n */\nexport type IsBlockhashValidConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlot` query behavior\n */\nexport type GetSlotConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getSlotLeader` query behavior\n */\nexport type GetSlotLeaderConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n};\n\n/**\n * Configuration object for changing `getTransaction` query behavior\n */\nexport type GetVersionedTransactionConfig = {\n  /** The level of finality desired */\n  commitment?: Finality;\n  /** The max transaction version to return in responses. If the requested transaction is a higher version, an error will be returned */\n  maxSupportedTransactionVersion?: number;\n};\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n  /** vote account commission when the reward was credited */\n  commission?: number | null;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n        commission: optional(nullable(number())),\n      }),\n    ),\n  ),\n);\n\nexport type RecentPrioritizationFees = {\n  /** slot in which the fee was observed */\n  slot: number;\n  /** the per-compute-unit fee paid by at least one successfully landed transaction, specified in increments of 0.000001 lamports*/\n  prioritizationFee: number;\n};\n\n/**\n * Configuration object for changing `getRecentPrioritizationFees` query behavior\n */\nexport type GetRecentPrioritizationFeesConfig = {\n  /**\n   * If this parameter is provided, the response will reflect a fee to land a transaction locking\n   * all of the provided accounts as writable.\n   */\n  lockedWritableAccounts?: PublicKey[];\n};\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesResult = array(\n  pick({\n    slot: number(),\n    prioritizationFee: number(),\n  }),\n);\n\nexport type InflationRate = {\n  /** total inflation */\n  total: number;\n  /** inflation allocated to validators */\n  validator: number;\n  /** inflation allocated to the foundation */\n  foundation: number;\n  /** epoch for which these values are valid */\n  epoch: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateResult = pick({\n  total: number(),\n  validator: number(),\n  foundation: number(),\n  epoch: number(),\n});\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type TransactionReturnDataEncoding = 'base64';\n\nexport type TransactionReturnData = {\n  programId: string;\n  data: [string, TransactionReturnDataEncoding];\n};\n\nexport type SimulateTransactionConfig = {\n  /** Optional parameter used to enable signature verification before simulation */\n  sigVerify?: boolean;\n  /** Optional parameter used to replace the simulated transaction's recent blockhash with the latest blockhash */\n  replaceRecentBlockhash?: boolean;\n  /** Optional parameter used to set the commitment level when selecting the latest block */\n  commitment?: Commitment;\n  /** Optional parameter used to specify a list of base58-encoded account addresses to return post simulation state for */\n  accounts?: {\n    /** The encoding of the returned account's data */\n    encoding: 'base64';\n    addresses: string[];\n  };\n  /** Optional parameter used to specify the minimum block slot that can be used for simulation */\n  minContextSlot?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n  returnData?: TransactionReturnData | null;\n};\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n    returnData: optional(\n      nullable(\n        pick({\n          programId: string(),\n          data: tuple([string(), literal('base64')]),\n        }),\n      ),\n    ),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Collection of addresses loaded by a transaction using address table lookups\n */\nexport type LoadedAddresses = {\n  writable: Array<PublicKey>;\n  readonly: Array<PublicKey>;\n};\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n  /** The collection of addresses loaded using address lookup tables */\n  loadedAddresses?: LoadedAddresses;\n  /** The compute units consumed after processing the transaction */\n  computeUnitsConsumed?: number;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type VersionedTransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: VersionedMessage;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The transaction version */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed transaction message from the RPC API\n */\ntype MessageResponse = {\n  accountKeys: string[];\n  header: MessageHeader;\n  instructions: CompiledInstruction[];\n  recentBlockhash: string;\n  addressTableLookups?: ParsedAddressTableLookup[];\n};\n\n/**\n * A confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n  /** Indicates if the account key came from the transaction or a lookup table */\n  source?: 'transaction' | 'lookupTable';\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed address table lookup\n */\nexport type ParsedAddressTableLookup = {\n  /** Address lookup table account key */\n  accountKey: PublicKey;\n  /** Parsed instruction info */\n  writableIndexes: number[];\n  /** Parsed instruction info */\n  readonlyIndexes: number[];\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n  /** Address table lookups used to load additional accounts */\n  addressTableLookups?: ParsedAddressTableLookup[] | null;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** The version of the transaction message */\n  version?: TransactionVersion;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type AccountsModeBlockResponse = VersionedAccountsModeBlockResponse;\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type NoneModeBlockResponse = VersionedNoneModeBlockResponse;\n\n/**\n * A block with parsed transactions\n */\nexport type ParsedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The details of the transaction */\n    transaction: ParsedTransaction;\n    /** Metadata produced from the transaction */\n    meta: ParsedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n  /** The number of blocks beneath this block */\n  blockHeight: number | null;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `accounts`\n */\nexport type ParsedAccountsModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<ParsedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        ParsedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A block with parsed transactions where the `transactionDetails` mode is `none`\n */\nexport type ParsedNoneModeBlockResponse = Omit<\n  ParsedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type VersionedBlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: VersionedMessage;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n    /** The transaction version */\n    version?: TransactionVersion;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n    /** Vote account commission when the reward was credited, only present for voting and staking rewards */\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `accounts`\n */\nexport type VersionedAccountsModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n> & {\n  transactions: Array<\n    Omit<VersionedBlockResponse['transactions'][number], 'transaction'> & {\n      transaction: Pick<\n        VersionedBlockResponse['transactions'][number]['transaction'],\n        'signatures'\n      > & {\n        accountKeys: ParsedMessageAccount[];\n      };\n    }\n  >;\n};\n\n/**\n * A processed block fetched from the RPC API where the `transactionDetails` mode is `none`\n */\nexport type VersionedNoneModeBlockResponse = Omit<\n  VersionedBlockResponse,\n  'transactions'\n>;\n\n/**\n * A confirmed block on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0.\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n    commission?: number | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  httpHeaders?: HttpHeaders,\n  customFetch?: FetchFn,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false,\n): RpcClient {\n  const fetch = customFetch ? customFetch : fetchImpl;\n  let agent: NodeHttpAgent | NodeHttpsAgent | undefined;\n  if (process.env.BROWSER) {\n    if (httpAgent != null) {\n      console.warn(\n        'You have supplied an `httpAgent` when creating a `Connection` in a browser environment.' +\n          'It has been ignored; `httpAgent` is only used in Node environments.',\n      );\n    }\n  } else {\n    if (httpAgent == null) {\n      if (process.env.NODE_ENV !== 'test') {\n        const agentOptions = {\n          // One second fewer than the Solana RPC's keepalive timeout.\n          // Read more: https://github.com/solana-labs/solana/issues/27859#issuecomment-1340097889\n          freeSocketTimeout: 19000,\n          keepAlive: true,\n          maxSockets: 25,\n        };\n        if (url.startsWith('https:')) {\n          agent = new HttpsKeepAliveAgent(agentOptions);\n        } else {\n          agent = new HttpKeepAliveAgent(agentOptions);\n        }\n      }\n    } else {\n      if (httpAgent !== false) {\n        const isHttps = url.startsWith('https:');\n        if (isHttps && !(httpAgent instanceof NodeHttpsAgent)) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `https.Agent`. You have, instead, supplied an ' +\n              '`http.Agent` through `httpAgent`.',\n          );\n        } else if (!isHttps && httpAgent instanceof NodeHttpsAgent) {\n          throw new Error(\n            'The endpoint `' +\n              url +\n              '` can only be paired with an `http.Agent`. You have, instead, supplied an ' +\n              '`https.Agent` through `httpAgent`.',\n          );\n        }\n        agent = httpAgent;\n      }\n    }\n  }\n\n  let fetchWithMiddleware: FetchFn | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (info, init) => {\n      const modifiedFetchArgs = await new Promise<Parameters<FetchFn>>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(info, init, (modifiedInfo, modifiedInit) =>\n              resolve([modifiedInfo, modifiedInit]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n        COMMON_HTTP_HEADERS,\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.error(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getInflationRate\" message\n */\nconst GetInflationRateRpcResult = jsonRpcResult(GetInflationRateResult);\n\n/**\n * Expected JSON RPC response for the \"getRecentPrioritizationFees\" message\n */\nconst GetRecentPrioritizationFeesRpcResult = jsonRpcResult(\n  GetRecentPrioritizationFeesResult,\n);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst AddressTableLookupStruct = pick({\n  accountKey: PublicKeyFromString,\n  writableIndexes: array(number()),\n  readonlyIndexes: array(number()),\n});\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n    addressTableLookups: optional(array(AddressTableLookupStruct)),\n  }),\n});\n\nconst AnnotatedAccountKey = pick({\n  pubkey: PublicKeyFromString,\n  signer: boolean(),\n  writable: boolean(),\n  source: optional(union([literal('transaction'), literal('lookupTable')])),\n});\n\nconst ConfirmedTransactionAccountsModeResult = pick({\n  accountKeys: array(AnnotatedAccountKey),\n  signatures: array(string()),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(AnnotatedAccountKey),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n    addressTableLookups: optional(nullable(array(AddressTableLookupStruct))),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\nconst LoadedAddressesResult = pick({\n  writable: array(PublicKeyFromString),\n  readonly: array(PublicKeyFromString),\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  loadedAddresses: optional(LoadedAddressesResult),\n  computeUnitsConsumed: optional(number()),\n});\n\nconst TransactionVersionStruct = union([literal(0), literal('legacy')]);\n\n/** @internal */\nconst RewardsResult = pick({\n  pubkey: string(),\n  lamports: number(),\n  postBalance: nullable(number()),\n  rewardType: nullable(string()),\n  commission: optional(nullable(number())),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `none`\n */\nconst GetNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message when `transactionDetails` is `accounts`\n */\nconst GetAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message\n */\nconst GetParsedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ParsedConfirmedTransactionResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `accounts`\n */\nconst GetParsedAccountsModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionAccountsModeResult,\n          meta: nullable(ParsedConfirmedTransactionMetaResult),\n          version: optional(TransactionVersionStruct),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getBlock\" message  when `transactionDetails` is `none`\n */\nconst GetParsedNoneModeBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(array(RewardsResult)),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: nullable(ConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n      version: optional(TransactionVersionStruct),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"isBlockhashValid\" message\n */\nconst IsBlockhashValidRpcResult = jsonRpcResultAndContext(boolean());\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** wrap the result in an RpcResponse JSON object */\n  withContext?: boolean;\n};\n\nexport type GetProgramAccountsResponse = readonly Readonly<{\n  account: AccountInfo<Buffer>;\n  /** the account Pubkey as base-58 encoded string */\n  pubkey: PublicKey;\n}>[];\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetStakeActivationConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Epoch for which to calculate activation details. If parameter not provided, defaults to current epoch */\n  epoch?: number;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTokenAccountsByOwnerConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getStakeActivation`\n */\nexport type GetTransactionCountConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonce`\n */\nexport type GetNonceConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Configuration object for `getNonceAndContext`\n */\nexport type GetNonceAndContextConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** The minimum slot that the request can be evaluated at */\n  minContextSlot?: number;\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n  /** Cluster confirmation status, if available. Possible values: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {\n  [header: string]: string;\n} & {\n  // Prohibited headers; for internal use only.\n  'solana-client'?: never;\n};\n\n/**\n * The type of the JavaScript `fetch()` API\n */\nexport type FetchFn = typeof fetchImpl;\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  info: Parameters<FetchFn>[0],\n  init: Parameters<FetchFn>[1],\n  fetch: (...a: Parameters<FetchFn>) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /**\n   * An `http.Agent` that will be used to manage socket connections (eg. to implement connection\n   * persistence). Set this to `false` to create a connection that uses no agent. This applies to\n   * Node environments only.\n   */\n  httpAgent?: NodeHttpAgent | NodeHttpsAgent | false;\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional custom fetch function */\n  fetch?: FetchFn;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/** @internal */\nconst COMMON_HTTP_HEADERS = {\n  'solana-client': `js/${process.env.npm_package_version ?? 'UNKNOWN'}`,\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n  /** @internal\n   * A number that we increment every time an active connection closes.\n   * Used to determine whether the same socket connection that was open\n   * when an async operation started is the same one that's active when\n   * its continuation fires.\n   *\n   */ private _rpcWebSocketGeneration: number = 0;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    latestBlockhash: BlockhashWithExpiryBlockHeight | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    latestBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ private _nextClientSubscriptionId: ClientSubscriptionId = 0;\n  /** @internal */ private _subscriptionDisposeFunctionsByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionDisposeFn\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionHashByClientSubscriptionId: {\n    [clientSubscriptionId: ClientSubscriptionId]:\n      | SubscriptionConfigHash\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionStateChangeCallbacksByHash: {\n    [hash: SubscriptionConfigHash]:\n      | Set<SubscriptionStateChangeCallback>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionCallbacksByServerSubscriptionId: {\n    [serverSubscriptionId: ServerSubscriptionId]:\n      | Set<SubscriptionConfig['callback']>\n      | undefined;\n  } = {};\n  /** @internal */ private _subscriptionsByHash: {\n    [hash: SubscriptionConfigHash]: Subscription | undefined;\n  } = {};\n  /**\n   * Special case.\n   * After a signature is processed, RPCs automatically dispose of the\n   * subscription on the server side. We need to track which of these\n   * subscriptions have been disposed in such a way, so that we know\n   * whether the client is dealing with a not-yet-processed signature\n   * (in which case we must tear down the server subscription) or an\n   * already-processed signature (in which case the client can simply\n   * clear out the subscription locally without telling the server).\n   *\n   * NOTE: There is a proposal to eliminate this special case, here:\n   * https://github.com/solana-labs/solana/issues/18892\n   */\n  /** @internal */ private _subscriptionsAutoDisposedByRpc: Set<ServerSubscriptionId> =\n    new Set();\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let wsEndpoint;\n    let httpHeaders;\n    let fetch;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    let httpAgent;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetch = commitmentOrConfig.fetch;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n      httpAgent = commitmentOrConfig.httpAgent;\n    }\n\n    this._rpcEndpoint = assertEndpointUrl(endpoint);\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      endpoint,\n      httpHeaders,\n      fetch,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n      httpAgent,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    /** @internal */\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get balance for ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetBalanceConfig,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get block time for slot ${slot}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get minimum ledger slot',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get first available block',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get token supply');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token account balance',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<GetProgramAccountsResponse>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitmentOrConfig?: Commitment | GetTokenAccountsByOwnerConfig,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get token accounts owned by account ${ownerAddress.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get largest accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get token largest accounts',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'base64',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info about account ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetAccountInfoConfig,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(\n        publicKey,\n        commitmentOrConfig,\n      );\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleParsedAccounts(\n    publicKeys: PublicKey[],\n    rawConfig?: GetMultipleAccountsConfig,\n  ): Promise<\n    RpcResponseAndContext<(AccountInfo<Buffer | ParsedAccountData> | null)[]>\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'jsonParsed', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(ParsedAccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64', config);\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get info for accounts ${keys}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitmentOrConfig?: Commitment | GetMultipleAccountsConfig,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitmentOrConfig,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitmentOrConfig?: Commitment | GetStakeActivationConfig,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get Stake Activation ${publicKey.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment: GetProgramAccountsConfig &\n      Readonly<{withContext: true}>,\n  ): Promise<RpcResponseAndContext<GetProgramAccountsResponse>>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<GetProgramAccountsResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<\n    | GetProgramAccountsResponse\n    | RpcResponseAndContext<GetProgramAccountsResponse>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const {encoding, ...configWithoutEncoding} = config || {};\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      configWithoutEncoding,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const baseSchema = array(KeyedAccountInfoResult);\n    const res =\n      configWithoutEncoding.withContext === true\n        ? create(unsafeRes, jsonRpcResultAndContext(baseSchema))\n        : create(unsafeRes, jsonRpcResult(baseSchema));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const {commitment, config} =\n      extractCommitmentFromConfig(configOrCommitment);\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get accounts owned by program ${programId.toBase58()}`,\n      );\n    }\n    return res.result;\n  }\n\n  confirmTransaction(\n    strategy: TransactionConfirmationStrategy,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  /** @deprecated Instead, call `confirmTransaction` and pass in {@link TransactionConfirmationStrategy} */\n  // eslint-disable-next-line no-dupe-class-members\n  confirmTransaction(\n    strategy: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async confirmTransaction(\n    strategy: TransactionConfirmationStrategy | TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let rawSignature: string;\n\n    if (typeof strategy == 'string') {\n      rawSignature = strategy;\n    } else {\n      const config = strategy as TransactionConfirmationStrategy;\n\n      if (config.abortSignal?.aborted) {\n        return Promise.reject(config.abortSignal.reason);\n      }\n      rawSignature = config.signature;\n    }\n\n    let decodedSignature;\n\n    try {\n      decodedSignature = bs58.decode(rawSignature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + rawSignature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    if (typeof strategy === 'string') {\n      return await this.confirmTransactionUsingLegacyTimeoutStrategy({\n        commitment: commitment || this.commitment,\n        signature: rawSignature,\n      });\n    } else if ('lastValidBlockHeight' in strategy) {\n      return await this.confirmTransactionUsingBlockHeightExceedanceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    } else {\n      return await this.confirmTransactionUsingDurableNonceStrategy({\n        commitment: commitment || this.commitment,\n        strategy,\n      });\n    }\n  }\n\n  private getCancellationPromise(signal?: AbortSignal): Promise<never> {\n    return new Promise<never>((_, reject) => {\n      if (signal == null) {\n        return;\n      }\n      if (signal.aborted) {\n        reject(signal.reason);\n      } else {\n        signal.addEventListener('abort', () => {\n          reject(signal.reason);\n        });\n      }\n    });\n  }\n\n  private getTransactionConfirmationPromise({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }): {\n    abortConfirmation(): void;\n    confirmationPromise: Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>;\n  } {\n    let signatureSubscriptionId: number | undefined;\n    let disposeSignatureSubscriptionStateChangeObserver:\n      | SubscriptionStateChangeDisposeFn\n      | undefined;\n    let done = false;\n    const confirmationPromise = new Promise<{\n      __type: TransactionStatus.PROCESSED;\n      response: RpcResponseAndContext<SignatureResult>;\n    }>((resolve, reject) => {\n      try {\n        signatureSubscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            signatureSubscriptionId = undefined;\n            const response = {\n              context,\n              value: result,\n            };\n            resolve({__type: TransactionStatus.PROCESSED, response});\n          },\n          commitment,\n        );\n        const subscriptionSetupPromise = new Promise<void>(\n          resolveSubscriptionSetup => {\n            if (signatureSubscriptionId == null) {\n              resolveSubscriptionSetup();\n            } else {\n              disposeSignatureSubscriptionStateChangeObserver =\n                this._onSubscriptionStateChange(\n                  signatureSubscriptionId,\n                  nextState => {\n                    if (nextState === 'subscribed') {\n                      resolveSubscriptionSetup();\n                    }\n                  },\n                );\n            }\n          },\n        );\n        (async () => {\n          await subscriptionSetupPromise;\n          if (done) return;\n          const response = await this.getSignatureStatus(signature);\n          if (done) return;\n          if (response == null) {\n            return;\n          }\n          const {context, value} = response;\n          if (value == null) {\n            return;\n          }\n          if (value?.err) {\n            reject(value.err);\n          } else {\n            switch (commitment) {\n              case 'confirmed':\n              case 'single':\n              case 'singleGossip': {\n                if (value.confirmationStatus === 'processed') {\n                  return;\n                }\n                break;\n              }\n              case 'finalized':\n              case 'max':\n              case 'root': {\n                if (\n                  value.confirmationStatus === 'processed' ||\n                  value.confirmationStatus === 'confirmed'\n                ) {\n                  return;\n                }\n                break;\n              }\n              // exhaust enums to ensure full coverage\n              case 'processed':\n              case 'recent':\n            }\n            done = true;\n            resolve({\n              __type: TransactionStatus.PROCESSED,\n              response: {\n                context,\n                value,\n              },\n            });\n          }\n        })();\n      } catch (err) {\n        reject(err);\n      }\n    });\n    const abortConfirmation = () => {\n      if (disposeSignatureSubscriptionStateChangeObserver) {\n        disposeSignatureSubscriptionStateChangeObserver();\n        disposeSignatureSubscriptionStateChangeObserver = undefined;\n      }\n      if (signatureSubscriptionId != null) {\n        this.removeSignatureListener(signatureSubscriptionId);\n        signatureSubscriptionId = undefined;\n      }\n    };\n    return {abortConfirmation, confirmationPromise};\n  }\n\n  private async confirmTransactionUsingBlockHeightExceedanceStrategy({\n    commitment,\n    strategy: {abortSignal, lastValidBlockHeight, signature},\n  }: {\n    commitment?: Commitment;\n    strategy: BlockheightBasedTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.BLOCKHEIGHT_EXCEEDED;\n    }>(resolve => {\n      const checkBlockHeight = async () => {\n        try {\n          const blockHeight = await this.getBlockHeight(commitment);\n          return blockHeight;\n        } catch (_e) {\n          return -1;\n        }\n      };\n      (async () => {\n        let currentBlockHeight = await checkBlockHeight();\n        if (done) return;\n        while (currentBlockHeight <= lastValidBlockHeight) {\n          await sleep(1000);\n          if (done) return;\n          currentBlockHeight = await checkBlockHeight();\n          if (done) return;\n        }\n        resolve({__type: TransactionStatus.BLOCKHEIGHT_EXCEEDED});\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredBlockheightExceededError(signature);\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingDurableNonceStrategy({\n    commitment,\n    strategy: {\n      abortSignal,\n      minContextSlot,\n      nonceAccountPubkey,\n      nonceValue,\n      signature,\n    },\n  }: {\n    commitment?: Commitment;\n    strategy: DurableNonceTransactionConfirmationStrategy;\n  }) {\n    let done: boolean = false;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.NONCE_INVALID;\n      slotInWhichNonceDidAdvance: number | null;\n    }>(resolve => {\n      let currentNonceValue: string | undefined = nonceValue;\n      let lastCheckedSlot: number | null = null;\n      const getCurrentNonceValue = async () => {\n        try {\n          const {context, value: nonceAccount} = await this.getNonceAndContext(\n            nonceAccountPubkey,\n            {\n              commitment,\n              minContextSlot,\n            },\n          );\n          lastCheckedSlot = context.slot;\n          return nonceAccount?.nonce;\n        } catch (e) {\n          // If for whatever reason we can't reach/read the nonce\n          // account, just keep using the last-known value.\n          return currentNonceValue;\n        }\n      };\n      (async () => {\n        currentNonceValue = await getCurrentNonceValue();\n        if (done) return;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          if (nonceValue !== currentNonceValue) {\n            resolve({\n              __type: TransactionStatus.NONCE_INVALID,\n              slotInWhichNonceDidAdvance: lastCheckedSlot,\n            });\n            return;\n          }\n          await sleep(2000);\n          if (done) return;\n          currentNonceValue = await getCurrentNonceValue();\n          if (done) return;\n        }\n      })();\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({commitment, signature});\n    const cancellationPromise = this.getCancellationPromise(abortSignal);\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([\n        cancellationPromise,\n        confirmationPromise,\n        expiryPromise,\n      ]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        // Double check that the transaction is indeed unconfirmed.\n        let signatureStatus:\n          | RpcResponseAndContext<SignatureStatus | null>\n          | null\n          | undefined;\n        while (\n          true // eslint-disable-line no-constant-condition\n        ) {\n          const status = await this.getSignatureStatus(signature);\n          if (status == null) {\n            break;\n          }\n          if (\n            status.context.slot <\n            (outcome.slotInWhichNonceDidAdvance ?? minContextSlot)\n          ) {\n            await sleep(400);\n            continue;\n          }\n          signatureStatus = status;\n          break;\n        }\n        if (signatureStatus?.value) {\n          const commitmentForStatus = commitment || 'finalized';\n          const {confirmationStatus} = signatureStatus.value;\n          switch (commitmentForStatus) {\n            case 'processed':\n            case 'recent':\n              if (\n                confirmationStatus !== 'processed' &&\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'confirmed':\n            case 'single':\n            case 'singleGossip':\n              if (\n                confirmationStatus !== 'confirmed' &&\n                confirmationStatus !== 'finalized'\n              ) {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            case 'finalized':\n            case 'max':\n            case 'root':\n              if (confirmationStatus !== 'finalized') {\n                throw new TransactionExpiredNonceInvalidError(signature);\n              }\n              break;\n            default:\n              // Exhaustive switch.\n              // eslint-disable-next-line @typescript-eslint/no-unused-vars\n              ((_: never) => {})(commitmentForStatus);\n          }\n          result = {\n            context: signatureStatus.context,\n            value: {err: signatureStatus.value.err},\n          };\n        } else {\n          throw new TransactionExpiredNonceInvalidError(signature);\n        }\n      }\n    } finally {\n      done = true;\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  private async confirmTransactionUsingLegacyTimeoutStrategy({\n    commitment,\n    signature,\n  }: {\n    commitment?: Commitment;\n    signature: string;\n  }) {\n    let timeoutId;\n    const expiryPromise = new Promise<{\n      __type: TransactionStatus.TIMED_OUT;\n      timeoutMs: number;\n    }>(resolve => {\n      let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n      switch (commitment) {\n        case 'processed':\n        case 'recent':\n        case 'single':\n        case 'confirmed':\n        case 'singleGossip': {\n          timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n          break;\n        }\n        // exhaust enums to ensure full coverage\n        case 'finalized':\n        case 'max':\n        case 'root':\n      }\n      timeoutId = setTimeout(\n        () => resolve({__type: TransactionStatus.TIMED_OUT, timeoutMs}),\n        timeoutMs,\n      );\n    });\n    const {abortConfirmation, confirmationPromise} =\n      this.getTransactionConfirmationPromise({\n        commitment,\n        signature,\n      });\n    let result: RpcResponseAndContext<SignatureResult>;\n    try {\n      const outcome = await Promise.race([confirmationPromise, expiryPromise]);\n      if (outcome.__type === TransactionStatus.PROCESSED) {\n        result = outcome.response;\n      } else {\n        throw new TransactionExpiredTimeoutError(\n          signature,\n          outcome.timeoutMs / 1000,\n        );\n      }\n    } finally {\n      clearTimeout(timeoutId);\n      abortConfirmation();\n    }\n    return result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get cluster nodes');\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get vote accounts');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(\n    commitmentOrConfig?: Commitment | GetSlotConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(\n    commitmentOrConfig?: Commitment | GetSlotLeaderConfig,\n  ): Promise<string> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leader');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get slot leaders');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get signature status');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(\n    commitmentOrConfig?: Commitment | GetTransactionCountConfig,\n  ): Promise<number> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get transaction count',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitmentOrConfig?: Commitment | GetInflationRewardConfig,\n  ): Promise<(InflationReward | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined /* encoding */,\n      {\n        ...config,\n        epoch: epoch != null ? epoch : config?.epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation reward');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the specific inflation values for the current epoch\n   */\n  async getInflationRate(): Promise<InflationRate> {\n    const unsafeRes = await this._rpcRequest('getInflationRate', []);\n    const res = create(unsafeRes, GetInflationRateRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get inflation rate');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(\n    commitmentOrConfig?: Commitment | GetEpochInfoConfig,\n  ): Promise<EpochInfo> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch info');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get epoch schedule');\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get leader schedule');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(commitment?: Commitment): Promise<\n    RpcResponseAndContext<{\n      blockhash: Blockhash;\n      feeCalculator: FeeCalculator;\n    }>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get recent blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      limit ? [limit] : [],\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent performance samples',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee calculator');\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: VersionedMessage,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number | null>> {\n    const wireMessage = toBuffer(message.serialize()).toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get fee for message');\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of prioritization fees from recent blocks.\n   */\n  async getRecentPrioritizationFees(\n    config?: GetRecentPrioritizationFeesConfig,\n  ): Promise<RecentPrioritizationFees[]> {\n    const accounts = config?.lockedWritableAccounts?.map(key => key.toBase58());\n    const args = accounts?.length ? [accounts] : [];\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPrioritizationFees',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPrioritizationFeesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get recent prioritization fees',\n      );\n    }\n    return res.result;\n  }\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhash(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitmentOrConfig);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<BlockhashWithExpiryBlockHeight>}\n   */\n  async getLatestBlockhashAndContext(\n    commitmentOrConfig?: Commitment | GetLatestBlockhashConfig,\n  ): Promise<RpcResponseAndContext<BlockhashWithExpiryBlockHeight>> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgs(\n      [],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get latest blockhash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns whether a blockhash is still valid or not\n   */\n  async isBlockhashValid(\n    blockhash: Blockhash,\n    rawConfig?: IsBlockhashValidConfig,\n  ): Promise<RpcResponseAndContext<boolean>> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgs(\n      [blockhash],\n      commitment,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('isBlockhashValid', args);\n    const res = create(unsafeRes, IsBlockhashValidRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to determine if the blockhash `' + blockhash + '`is valid',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get version');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get genesis hash');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   *\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  async getBlock(\n    slot: number,\n    rawConfig?: GetBlockConfig,\n  ): Promise<BlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<AccountsModeBlockResponse | null>;\n\n  /**\n   * @deprecated Instead, call `getBlock` using a `GetVersionedBlockConfig` by\n   * setting the `maxSupportedTransactionVersion` property.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetBlockConfig & {transactionDetails: 'none'},\n  ): Promise<NoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<VersionedBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<VersionedAccountsModeBlockResponse | null>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<VersionedNoneModeBlockResponse | null>;\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | VersionedBlockResponse\n    | VersionedAccountsModeBlockResponse\n    | VersionedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          const {result} = res;\n          return result\n            ? {\n                ...result,\n                transactions: result.transactions.map(\n                  ({transaction, meta, version}) => ({\n                    meta,\n                    transaction: {\n                      ...transaction,\n                      message: versionedMessageFromResponse(\n                        version,\n                        transaction.message,\n                      ),\n                    },\n                    version,\n                  }),\n                ),\n              }\n            : null;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(\n        e as JSONRPCError,\n        'failed to get confirmed block',\n      );\n    }\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized block\n   */\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'accounts'},\n  ): Promise<ParsedAccountsModeBlockResponse>;\n\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig: GetVersionedBlockConfig & {transactionDetails: 'none'},\n  ): Promise<ParsedNoneModeBlockResponse>;\n  // eslint-disable-next-line no-dupe-class-members\n  async getParsedBlock(\n    slot: number,\n    rawConfig?: GetVersionedBlockConfig,\n  ): Promise<\n    | ParsedBlockResponse\n    | ParsedAccountsModeBlockResponse\n    | ParsedNoneModeBlockResponse\n    | null\n  > {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    try {\n      switch (config?.transactionDetails) {\n        case 'accounts': {\n          const res = create(unsafeRes, GetParsedAccountsModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        case 'none': {\n          const res = create(unsafeRes, GetParsedNoneModeBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n        default: {\n          const res = create(unsafeRes, GetParsedBlockRpcResult);\n          if ('error' in res) {\n            throw res.error;\n          }\n          return res.result;\n        }\n      }\n    } catch (e) {\n      throw new SolanaJSONRPCError(e as JSONRPCError, 'failed to get block');\n    }\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  getBlockHeight = (() => {\n    const requestPromises: {[hash: string]: Promise<number>} = {};\n    return async (\n      commitmentOrConfig?: Commitment | GetBlockHeightConfig,\n    ): Promise<number> => {\n      const {commitment, config} =\n        extractCommitmentFromConfig(commitmentOrConfig);\n      const args = this._buildArgs(\n        [],\n        commitment,\n        undefined /* encoding */,\n        config,\n      );\n      const requestHash = fastStableStringify(args);\n      requestPromises[requestHash] =\n        requestPromises[requestHash] ??\n        (async () => {\n          try {\n            const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n            const res = create(unsafeRes, jsonRpcResult(number()));\n            if ('error' in res) {\n              throw new SolanaJSONRPCError(\n                res.error,\n                'failed to get block height information',\n              );\n            }\n            return res.result;\n          } finally {\n            delete requestPromises[requestHash];\n          }\n        })();\n      return await requestPromises[requestHash];\n    };\n  })();\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get block production information',\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   *\n   * @deprecated Instead, call `getTransaction` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetTransactionConfig,\n  ): Promise<TransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null>;\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransaction(\n    signature: string,\n    rawConfig?: GetVersionedTransactionConfig,\n  ): Promise<VersionedTransactionResponse | null> {\n    const {commitment, config} = extractCommitmentFromConfig(rawConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      undefined /* encoding */,\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: versionedMessageFromResponse(\n          result.version,\n          result.transaction.message,\n        ),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<ParsedTransactionWithMeta | null> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment as Finality,\n      'jsonParsed',\n      config,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetVersionedTransactionConfig | Finality,\n  ): Promise<(ParsedTransactionWithMeta | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        'jsonParsed',\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link TransactionResponse}.\n   *\n   * @deprecated Instead, call `getTransactions` using a\n   * `GetVersionedTransactionConfig` by setting the\n   * `maxSupportedTransactionVersion` property.\n   */\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig?: GetTransactionConfig | Finality,\n  ): Promise<(TransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]>;\n\n  /**\n   * Fetch transaction details for a batch of confirmed transactions.\n   * Similar to {@link getParsedTransactions} but returns a {@link\n   * VersionedTransactionResponse}.\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async getTransactions(\n    signatures: TransactionSignature[],\n    commitmentOrConfig: GetVersionedTransactionConfig | Finality,\n  ): Promise<(VersionedTransactionResponse | null)[]> {\n    const {commitment, config} =\n      extractCommitmentFromConfig(commitmentOrConfig);\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment as Finality,\n        undefined /* encoding */,\n        config,\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(res.error, 'failed to get transactions');\n      }\n      const result = res.result;\n      if (!result) return result;\n\n      return {\n        ...result,\n        transaction: {\n          ...result.transaction,\n          message: versionedMessageFromResponse(\n            result.version,\n            result.transaction.message,\n          ),\n        },\n      };\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get blocks');\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get confirmed block');\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(res.error, 'failed to get transaction');\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed transaction',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new SolanaJSONRPCError(\n          res.error,\n          'failed to get confirmed transactions',\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get confirmed signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        'failed to get signatures for address',\n      );\n    }\n    return res.result;\n  }\n\n  async getAddressLookupTable(\n    accountKey: PublicKey,\n    config?: GetAccountInfoConfig,\n  ): Promise<RpcResponseAndContext<AddressLookupTableAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      accountKey,\n      config,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = new AddressLookupTableAccount({\n        key: accountKey,\n        state: AddressLookupTableAccount.deserialize(accountInfo.data),\n      });\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceAndContextConfig,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitmentOrConfig,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitmentOrConfig?: Commitment | GetNonceConfig,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitmentOrConfig)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `airdrop to ${to.toBase58()} failed`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _blockhashWithExpiryBlockHeight(\n    disableCache: boolean,\n  ): Promise<BlockhashWithExpiryBlockHeight> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.latestBlockhash !== null && !expired) {\n        return this._blockhashInfo.latestBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<BlockhashWithExpiryBlockHeight> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      const cachedLatestBlockhash = this._blockhashInfo.latestBlockhash;\n      const cachedBlockhash = cachedLatestBlockhash\n        ? cachedLatestBlockhash.blockhash\n        : null;\n      for (let i = 0; i < 50; i++) {\n        const latestBlockhash = await this.getLatestBlockhash('finalized');\n\n        if (cachedBlockhash !== latestBlockhash.blockhash) {\n          this._blockhashInfo = {\n            latestBlockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return latestBlockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * get the stake minimum delegation\n   */\n  async getStakeMinimumDelegation(\n    config?: GetStakeMinimumDelegationConfig,\n  ): Promise<RpcResponseAndContext<number>> {\n    const {commitment, config: configArg} = extractCommitmentFromConfig(config);\n    const args = this._buildArgs([], commitment, 'base64', configArg);\n    const unsafeRes = await this._rpcRequest('getStakeMinimumDelegation', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new SolanaJSONRPCError(\n        res.error,\n        `failed to get stake minimum delegation`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Simulate a transaction\n   *\n   * @deprecated Instead, call {@link simulateTransaction} with {@link\n   * VersionedTransaction} and {@link SimulateTransactionConfig} parameters\n   */\n  simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  simulateTransaction(\n    transaction: VersionedTransaction,\n    config?: SimulateTransactionConfig,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>>;\n\n  /**\n   * Simulate a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async simulateTransaction(\n    transactionOrMessage: VersionedTransaction | Transaction | Message,\n    configOrSigners?: SimulateTransactionConfig | Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    if ('message' in transactionOrMessage) {\n      const versionedTx = transactionOrMessage;\n      const wireTransaction = versionedTx.serialize();\n      const encodedTransaction =\n        Buffer.from(wireTransaction).toString('base64');\n      if (Array.isArray(configOrSigners) || includeAccounts !== undefined) {\n        throw new Error('Invalid arguments');\n      }\n\n      const config: any = configOrSigners || {};\n      config.encoding = 'base64';\n      if (!('commitment' in config)) {\n        config.commitment = this.commitment;\n      }\n\n      const args = [encodedTransaction, config];\n      const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n      const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n      if ('error' in res) {\n        throw new Error('failed to simulate transaction: ' + res.error.message);\n      }\n      return res.result;\n    }\n\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      let originalTx: Transaction = transactionOrMessage;\n      transaction = new Transaction();\n      transaction.feePayer = originalTx.feePayer;\n      transaction.instructions = transactionOrMessage.instructions;\n      transaction.nonceInfo = originalTx.nonceInfo;\n      transaction.signatures = originalTx.signatures;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n      // HACK: this function relies on mutating the populated transaction\n      transaction._message = transaction._json = undefined;\n    }\n\n    if (configOrSigners !== undefined && !Array.isArray(configOrSigners)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = configOrSigners;\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n\n      throw new SendTransactionError({\n        action: 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   *\n   * @deprecated Instead, call {@link sendTransaction} with a {@link\n   * VersionedTransaction}\n   */\n  sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Send a signed transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  sendTransaction(\n    transaction: VersionedTransaction,\n    options?: SendOptions,\n  ): Promise<TransactionSignature>;\n\n  /**\n   * Sign and send a transaction\n   */\n  // eslint-disable-next-line no-dupe-class-members\n  async sendTransaction(\n    transaction: VersionedTransaction | Transaction,\n    signersOrOptions?: Array<Signer> | SendOptions,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if ('version' in transaction) {\n      if (signersOrOptions && Array.isArray(signersOrOptions)) {\n        throw new Error('Invalid arguments');\n      }\n\n      const wireTransaction = transaction.serialize();\n      return await this.sendRawTransaction(wireTransaction, signersOrOptions);\n    }\n\n    if (signersOrOptions === undefined || !Array.isArray(signersOrOptions)) {\n      throw new Error('Invalid arguments');\n    }\n\n    const signers = signersOrOptions;\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        const latestBlockhash =\n          await this._blockhashWithExpiryBlockHeight(disableCache);\n        transaction.lastValidBlockHeight = latestBlockhash.lastValidBlockHeight;\n        transaction.recentBlockhash = latestBlockhash.blockhash;\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      skipPreflight === true\n        ? 'processed' // FIXME Remove when https://github.com/anza-xyz/agave/pull/483 is deployed.\n        : (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries != null) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (options && options.minContextSlot != null) {\n      config.minContextSlot = options.minContextSlot;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs = undefined;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n\n      throw new SendTransactionError({\n        action: skipPreflight ? 'send' : 'simulate',\n        signature: '',\n        transactionMessage: res.error.message,\n        logs: logs,\n      });\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      (async () => {\n        try {\n          await this._rpcWebSocket.notify('ping');\n          // eslint-disable-next-line no-empty\n        } catch {}\n      })();\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    this._rpcWebSocketConnected = false;\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    this._rpcWebSocketConnected = false;\n    this._rpcWebSocketGeneration =\n      (this._rpcWebSocketGeneration + 1) % Number.MAX_SAFE_INTEGER;\n    if (this._rpcWebSocketIdleTimeout) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n    }\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._subscriptionCallbacksByServerSubscriptionId = {};\n    Object.entries(\n      this._subscriptionsByHash as Record<SubscriptionConfigHash, Subscription>,\n    ).forEach(([hash, subscription]) => {\n      this._setSubscription(hash, {\n        ...subscription,\n        state: 'pending',\n      });\n    });\n  }\n\n  /**\n   * @internal\n   */\n  private _setSubscription(\n    hash: SubscriptionConfigHash,\n    nextSubscription: Subscription,\n  ) {\n    const prevState = this._subscriptionsByHash[hash]?.state;\n    this._subscriptionsByHash[hash] = nextSubscription;\n    if (prevState !== nextSubscription.state) {\n      const stateChangeCallbacks =\n        this._subscriptionStateChangeCallbacksByHash[hash];\n      if (stateChangeCallbacks) {\n        stateChangeCallbacks.forEach(cb => {\n          try {\n            cb(nextSubscription.state);\n            // eslint-disable-next-line no-empty\n          } catch {}\n        });\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  private _onSubscriptionStateChange(\n    clientSubscriptionId: ClientSubscriptionId,\n    callback: SubscriptionStateChangeCallback,\n  ): SubscriptionStateChangeDisposeFn {\n    const hash =\n      this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n    if (hash == null) {\n      return () => {};\n    }\n    const stateChangeCallbacks = (this._subscriptionStateChangeCallbacksByHash[\n      hash\n    ] ||= new Set());\n    stateChangeCallbacks.add(callback);\n    return () => {\n      stateChangeCallbacks.delete(callback);\n      if (stateChangeCallbacks.size === 0) {\n        delete this._subscriptionStateChangeCallbacksByHash[hash];\n      }\n    };\n  }\n\n  /**\n   * @internal\n   */\n  async _updateSubscriptions() {\n    if (Object.keys(this._subscriptionsByHash).length === 0) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    const activeWebSocketGeneration = this._rpcWebSocketGeneration;\n    const isCurrentConnectionStillActive = () => {\n      return activeWebSocketGeneration === this._rpcWebSocketGeneration;\n    };\n\n    await Promise.all(\n      // Don't be tempted to change this to `Object.entries`. We call\n      // `_updateSubscriptions` recursively when processing the state,\n      // so it's important that we look up the *current* version of\n      // each subscription, every time we process a hash.\n      Object.keys(this._subscriptionsByHash).map(async hash => {\n        const subscription = this._subscriptionsByHash[hash];\n        if (subscription === undefined) {\n          // This entry has since been deleted. Skip.\n          return;\n        }\n        switch (subscription.state) {\n          case 'pending':\n          case 'unsubscribed':\n            if (subscription.callbacks.size === 0) {\n              /**\n               * You can end up here when:\n               *\n               * - a subscription has recently unsubscribed\n               *   without having new callbacks added to it\n               *   while the unsubscribe was in flight, or\n               * - when a pending subscription has its\n               *   listeners removed before a request was\n               *   sent to the server.\n               *\n               * Being that nobody is interested in this\n               * subscription any longer, delete it.\n               */\n              delete this._subscriptionsByHash[hash];\n              if (subscription.state === 'unsubscribed') {\n                delete this._subscriptionCallbacksByServerSubscriptionId[\n                  subscription.serverSubscriptionId\n                ];\n              }\n              await this._updateSubscriptions();\n              return;\n            }\n            await (async () => {\n              const {args, method} = subscription;\n              try {\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'subscribing',\n                });\n                const serverSubscriptionId: ServerSubscriptionId =\n                  (await this._rpcWebSocket.call(method, args)) as number;\n                this._setSubscription(hash, {\n                  ...subscription,\n                  serverSubscriptionId,\n                  state: 'subscribed',\n                });\n                this._subscriptionCallbacksByServerSubscriptionId[\n                  serverSubscriptionId\n                ] = subscription.callbacks;\n                await this._updateSubscriptions();\n              } catch (e) {\n                if (e instanceof Error) {\n                  console.error(\n                    `${method} error for argument`,\n                    args,\n                    e.message,\n                  );\n                }\n                if (!isCurrentConnectionStillActive()) {\n                  return;\n                }\n                // TODO: Maybe add an 'errored' state or a retry limit?\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'pending',\n                });\n                await this._updateSubscriptions();\n              }\n            })();\n            break;\n          case 'subscribed':\n            if (subscription.callbacks.size === 0) {\n              // By the time we successfully set up a subscription\n              // with the server, the client stopped caring about it.\n              // Tear it down now.\n              await (async () => {\n                const {serverSubscriptionId, unsubscribeMethod} = subscription;\n                if (\n                  this._subscriptionsAutoDisposedByRpc.has(serverSubscriptionId)\n                ) {\n                  /**\n                   * Special case.\n                   * If we're dealing with a subscription that has been auto-\n                   * disposed by the RPC, then we can skip the RPC call to\n                   * tear down the subscription here.\n                   *\n                   * NOTE: There is a proposal to eliminate this special case, here:\n                   * https://github.com/solana-labs/solana/issues/18892\n                   */\n                  this._subscriptionsAutoDisposedByRpc.delete(\n                    serverSubscriptionId,\n                  );\n                } else {\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  this._setSubscription(hash, {\n                    ...subscription,\n                    state: 'unsubscribing',\n                  });\n                  try {\n                    await this._rpcWebSocket.call(unsubscribeMethod, [\n                      serverSubscriptionId,\n                    ]);\n                  } catch (e) {\n                    if (e instanceof Error) {\n                      console.error(`${unsubscribeMethod} error:`, e.message);\n                    }\n                    if (!isCurrentConnectionStillActive()) {\n                      return;\n                    }\n                    // TODO: Maybe add an 'errored' state or a retry limit?\n                    this._setSubscription(hash, {\n                      ...subscription,\n                      state: 'subscribed',\n                    });\n                    await this._updateSubscriptions();\n                    return;\n                  }\n                }\n                this._setSubscription(hash, {\n                  ...subscription,\n                  state: 'unsubscribed',\n                });\n                await this._updateSubscriptions();\n              })();\n            }\n            break;\n          case 'subscribing':\n          case 'unsubscribing':\n            break;\n        }\n      }),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  private _handleServerNotification<\n    TCallback extends SubscriptionConfig['callback'],\n  >(\n    serverSubscriptionId: ServerSubscriptionId,\n    callbackArgs: Parameters<TCallback>,\n  ): void {\n    const callbacks =\n      this._subscriptionCallbacksByServerSubscriptionId[serverSubscriptionId];\n    if (callbacks === undefined) {\n      return;\n    }\n    callbacks.forEach(cb => {\n      try {\n        cb(\n          // I failed to find a way to convince TypeScript that `cb` is of type\n          // `TCallback` which is certainly compatible with `Parameters<TCallback>`.\n          // See https://github.com/microsoft/TypeScript/issues/47615\n          // @ts-ignore\n          ...callbackArgs,\n        );\n      } catch (e) {\n        console.error(e);\n      }\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const {result, subscription} = create(\n      notification,\n      AccountNotificationResult,\n    );\n    this._handleServerNotification<AccountChangeCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  private _makeSubscription(\n    subscriptionConfig: SubscriptionConfig,\n    /**\n     * When preparing `args` for a call to `_makeSubscription`, be sure\n     * to carefully apply a default `commitment` property, if necessary.\n     *\n     * - If the user supplied a `commitment` use that.\n     * - Otherwise, if the `Connection::commitment` is set, use that.\n     * - Otherwise, set it to the RPC server default: `finalized`.\n     *\n     * This is extremely important to ensure that these two fundamentally\n     * identical subscriptions produce the same identifying hash:\n     *\n     * - A subscription made without specifying a commitment.\n     * - A subscription made where the commitment specified is the same\n     *   as the default applied to the subscription above.\n     *\n     * Example; these two subscriptions must produce the same hash:\n     *\n     * - An `accountSubscribe` subscription for `'PUBKEY'`\n     * - An `accountSubscribe` subscription for `'PUBKEY'` with commitment\n     *   `'finalized'`.\n     *\n     * See the 'making a subscription with defaulted params omitted' test\n     * in `connection-subscriptions.ts` for more.\n     */\n    args: IWSRequestParams,\n  ): ClientSubscriptionId {\n    const clientSubscriptionId = this._nextClientSubscriptionId++;\n    const hash = fastStableStringify([subscriptionConfig.method, args]);\n    const existingSubscription = this._subscriptionsByHash[hash];\n    if (existingSubscription === undefined) {\n      this._subscriptionsByHash[hash] = {\n        ...subscriptionConfig,\n        args,\n        callbacks: new Set([subscriptionConfig.callback]),\n        state: 'pending',\n      };\n    } else {\n      existingSubscription.callbacks.add(subscriptionConfig.callback);\n    }\n    this._subscriptionHashByClientSubscriptionId[clientSubscriptionId] = hash;\n    this._subscriptionDisposeFunctionsByClientSubscriptionId[\n      clientSubscriptionId\n    ] = async () => {\n      delete this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n      delete this._subscriptionHashByClientSubscriptionId[clientSubscriptionId];\n      const subscription = this._subscriptionsByHash[hash];\n      assert(\n        subscription !== undefined,\n        `Could not find a \\`Subscription\\` when tearing down client subscription #${clientSubscriptionId}`,\n      );\n      subscription.callbacks.delete(subscriptionConfig.callback);\n      await this._updateSubscriptions();\n    };\n    this._updateSubscriptions();\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64',\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'accountSubscribe',\n        unsubscribeMethod: 'accountUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'account change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      ProgramAccountNotificationResult,\n    );\n    this._handleServerNotification<ProgramAccountChangeCallback>(subscription, [\n      {\n        accountId: result.value.pubkey,\n        accountInfo: result.value.account,\n      },\n      result.context,\n    ]);\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n      'base64' /* encoding */,\n      filters ? {filters: filters} : undefined /* extra */,\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'programSubscribe',\n        unsubscribeMethod: 'programUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'program account change',\n    );\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [typeof filter === 'object' ? {mentions: [filter.toString()]} : filter],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'logsSubscribe',\n        unsubscribeMethod: 'logsUnsubscribe',\n      },\n      args,\n    );\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param clientSubscriptionId client subscription id to deregister.\n   */\n  async removeOnLogsListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(clientSubscriptionId, 'logs');\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const {result, subscription} = create(notification, LogsNotificationResult);\n    this._handleServerNotification<LogsCallback>(subscription, [\n      result.value,\n      result.context,\n    ]);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const {result, subscription} = create(notification, SlotNotificationResult);\n    this._handleServerNotification<SlotChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotSubscribe',\n        unsubscribeMethod: 'slotUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot change',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SlotUpdateNotificationResult,\n    );\n    this._handleServerNotification<SlotUpdateCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'slotsUpdatesSubscribe',\n        unsubscribeMethod: 'slotsUpdatesUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSlotUpdateListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'slot update',\n    );\n  }\n\n  /**\n   * @internal\n   */\n\n  private async _unsubscribeClientSubscription(\n    clientSubscriptionId: ClientSubscriptionId,\n    subscriptionName: string,\n  ) {\n    const dispose =\n      this._subscriptionDisposeFunctionsByClientSubscriptionId[\n        clientSubscriptionId\n      ];\n    if (dispose) {\n      await dispose();\n    } else {\n      console.warn(\n        'Ignored unsubscribe request because an active subscription with id ' +\n          `\\`${clientSubscriptionId}\\` for '${subscriptionName}' events ` +\n          'could not be found.',\n      );\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const {result, subscription} = create(\n      notification,\n      SignatureNotificationResult,\n    );\n    if (result.value !== 'receivedSignature') {\n      /**\n       * Special case.\n       * After a signature is processed, RPCs automatically dispose of the\n       * subscription on the server side. We need to track which of these\n       * subscriptions have been disposed in such a way, so that we know\n       * whether the client is dealing with a not-yet-processed signature\n       * (in which case we must tear down the server subscription) or an\n       * already-processed signature (in which case the client can simply\n       * clear out the subscription locally without telling the server).\n       *\n       * NOTE: There is a proposal to eliminate this special case, here:\n       * https://github.com/solana-labs/solana/issues/18892\n       */\n      this._subscriptionsAutoDisposedByRpc.add(subscription);\n    }\n    this._handleServerNotification<SignatureSubscriptionCallback>(\n      subscription,\n      result.value === 'receivedSignature'\n        ? [{type: 'received'}, result.context]\n        : [{type: 'status', result: result.value}, result.context],\n    );\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): ClientSubscriptionId {\n    const args = this._buildArgs(\n      [signature],\n      commitment || this._commitment || 'finalized', // Apply connection/server default.\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          if (notification.type === 'status') {\n            callback(notification.result, context);\n            // Signatures subscriptions are auto-removed by the RPC service\n            // so no need to explicitly send an unsubscribe message.\n            try {\n              this.removeSignatureListener(clientSubscriptionId);\n              // eslint-disable-next-line no-empty\n            } catch (_err) {\n              // Already removed.\n            }\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): ClientSubscriptionId {\n    const {commitment, ...extra} = {\n      ...options,\n      commitment:\n        (options && options.commitment) || this._commitment || 'finalized', // Apply connection/server default.\n    };\n    const args = this._buildArgs(\n      [signature],\n      commitment,\n      undefined /* encoding */,\n      extra,\n    );\n    const clientSubscriptionId = this._makeSubscription(\n      {\n        callback: (notification, context) => {\n          callback(notification, context);\n          // Signatures subscriptions are auto-removed by the RPC service\n          // so no need to explicitly send an unsubscribe message.\n          try {\n            this.removeSignatureListener(clientSubscriptionId);\n            // eslint-disable-next-line no-empty\n          } catch (_err) {\n            // Already removed.\n          }\n        },\n        method: 'signatureSubscribe',\n        unsubscribeMethod: 'signatureUnsubscribe',\n      },\n      args,\n    );\n    return clientSubscriptionId;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeSignatureListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'signature result',\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const {result, subscription} = create(notification, RootNotificationResult);\n    this._handleServerNotification<RootChangeCallback>(subscription, [result]);\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): ClientSubscriptionId {\n    return this._makeSubscription(\n      {\n        callback,\n        method: 'rootSubscribe',\n        unsubscribeMethod: 'rootUnsubscribe',\n      },\n      [] /* args */,\n    );\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param clientSubscriptionId client subscription id to deregister\n   */\n  async removeRootChangeListener(\n    clientSubscriptionId: ClientSubscriptionId,\n  ): Promise<void> {\n    await this._unsubscribeClientSubscription(\n      clientSubscriptionId,\n      'root change',\n    );\n  }\n}\n","import {generateKeypair, getPublicKey, Ed25519Keypair} from './utils/ed25519';\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param {Ed25519Keypair} keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    this._keypair = keypair ?? generateKeypair();\n  }\n\n  /**\n   * Generate a new random keypair\n   *\n   * @returns {Keypair} Keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(generateKeypair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options skip secret key validation\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    if (secretKey.byteLength !== 64) {\n      throw new Error('bad secret key size');\n    }\n    const publicKey = secretKey.slice(32, 64);\n    if (!options || !options.skipValidation) {\n      const privateScalar = secretKey.slice(0, 32);\n      const computedPublicKey = getPublicKey(privateScalar);\n      for (let ii = 0; ii < 32; ii++) {\n        if (publicKey[ii] !== computedPublicKey[ii]) {\n          throw new Error('provided secretKey is invalid');\n        }\n      }\n    }\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   *\n   * @returns {Keypair} Keypair\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    const publicKey = getPublicKey(seed);\n    const secretKey = new Uint8Array(64);\n    secretKey.set(seed);\n    secretKey.set(publicKey, 32);\n    return new Keypair({publicKey, secretKey});\n  }\n\n  /**\n   * The public key for this keypair\n   *\n   * @returns {PublicKey} PublicKey\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   * @returns {Uint8Array} Secret key in an array of Uint8 bytes\n   */\n  get secretKey(): Uint8Array {\n    return new Uint8Array(this._keypair.secretKey);\n  }\n}\n","import {toBufferLE} from 'bigint-buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from '../../layout';\nimport {PublicKey} from '../../publickey';\nimport * as bigintLayout from '../../utils/bigint';\nimport {SystemProgram} from '../system';\nimport {TransactionInstruction} from '../../transaction';\nimport {decodeData, encodeData, IInstructionInputData} from '../../instruction';\n\nexport * from './state';\n\nexport type CreateLookupTableParams = {\n  /** Account used to derive and control the new address lookup table. */\n  authority: PublicKey;\n  /** Account that will fund the new address lookup table. */\n  payer: PublicKey;\n  /** A recent slot must be used in the derivation path for each initialized table. */\n  recentSlot: bigint | number;\n};\n\nexport type FreezeLookupTableParams = {\n  /** Address lookup table account to freeze. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type ExtendLookupTableParams = {\n  /** Address lookup table account to extend. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Account that will fund the table reallocation.\n   * Not required if the reallocation has already been funded. */\n  payer?: PublicKey;\n  /** List of Public Keys to be added to the lookup table. */\n  addresses: Array<PublicKey>;\n};\n\nexport type DeactivateLookupTableParams = {\n  /** Address lookup table account to deactivate. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n};\n\nexport type CloseLookupTableParams = {\n  /** Address lookup table account to close. */\n  lookupTable: PublicKey;\n  /** Account which is the current authority. */\n  authority: PublicKey;\n  /** Recipient of closed account lamports. */\n  recipient: PublicKey;\n};\n\n/**\n * An enumeration of valid LookupTableInstructionType's\n */\nexport type LookupTableInstructionType =\n  | 'CreateLookupTable'\n  | 'ExtendLookupTable'\n  | 'CloseLookupTable'\n  | 'FreezeLookupTable'\n  | 'DeactivateLookupTable';\n\ntype LookupTableInstructionInputData = {\n  CreateLookupTable: IInstructionInputData &\n    Readonly<{\n      recentSlot: bigint;\n      bumpSeed: number;\n    }>;\n  FreezeLookupTable: IInstructionInputData;\n  ExtendLookupTable: IInstructionInputData &\n    Readonly<{\n      numberOfAddresses: bigint;\n      addresses: Array<Uint8Array>;\n    }>;\n  DeactivateLookupTable: IInstructionInputData;\n  CloseLookupTable: IInstructionInputData;\n};\n\n/**\n * An enumeration of valid address lookup table InstructionType's\n * @internal\n */\nexport const LOOKUP_TABLE_INSTRUCTION_LAYOUTS = Object.freeze({\n  CreateLookupTable: {\n    index: 0,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CreateLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64('recentSlot'),\n      BufferLayout.u8('bumpSeed'),\n    ]),\n  },\n  FreezeLookupTable: {\n    index: 1,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['FreezeLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  ExtendLookupTable: {\n    index: 2,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['ExtendLookupTable']\n    >([\n      BufferLayout.u32('instruction'),\n      bigintLayout.u64(),\n      BufferLayout.seq(\n        Layout.publicKey(),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'addresses',\n      ),\n    ]),\n  },\n  DeactivateLookupTable: {\n    index: 3,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['DeactivateLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n  CloseLookupTable: {\n    index: 4,\n    layout: BufferLayout.struct<\n      LookupTableInstructionInputData['CloseLookupTable']\n    >([BufferLayout.u32('instruction')]),\n  },\n});\n\nexport class AddressLookupTableInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): LookupTableInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const index = instructionTypeLayout.decode(instruction.data);\n\n    let type: LookupTableInstructionType | undefined;\n    for (const [layoutType, layout] of Object.entries(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS,\n    )) {\n      if ((layout as any).index == index) {\n        type = layoutType as LookupTableInstructionType;\n        break;\n      }\n    }\n    if (!type) {\n      throw new Error(\n        'Invalid Instruction. Should be a LookupTable Instruction',\n      );\n    }\n    return type;\n  }\n\n  static decodeCreateLookupTable(\n    instruction: TransactionInstruction,\n  ): CreateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 4);\n\n    const {recentSlot} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable,\n      instruction.data,\n    );\n\n    return {\n      authority: instruction.keys[1].pubkey,\n      payer: instruction.keys[2].pubkey,\n      recentSlot: Number(recentSlot),\n    };\n  }\n\n  static decodeExtendLookupTable(\n    instruction: TransactionInstruction,\n  ): ExtendLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    if (instruction.keys.length < 2) {\n      throw new Error(\n        `invalid instruction; found ${instruction.keys.length} keys, expected at least 2`,\n      );\n    }\n\n    const {addresses} = decodeData(\n      LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable,\n      instruction.data,\n    );\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      payer:\n        instruction.keys.length > 2 ? instruction.keys[2].pubkey : undefined,\n      addresses: addresses.map(buffer => new PublicKey(buffer)),\n    };\n  }\n\n  static decodeCloseLookupTable(\n    instruction: TransactionInstruction,\n  ): CloseLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 3);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n      recipient: instruction.keys[2].pubkey,\n    };\n  }\n\n  static decodeFreezeLookupTable(\n    instruction: TransactionInstruction,\n  ): FreezeLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  static decodeDeactivateLookupTable(\n    instruction: TransactionInstruction,\n  ): DeactivateLookupTableParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeysLength(instruction.keys, 2);\n\n    return {\n      lookupTable: instruction.keys[0].pubkey,\n      authority: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(AddressLookupTableProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not AddressLookupTable Program',\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  static checkKeysLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\nexport class AddressLookupTableProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  static programId: PublicKey = new PublicKey(\n    'AddressLookupTab1e1111111111111111111111111',\n  );\n\n  static createLookupTable(params: CreateLookupTableParams) {\n    const [lookupTableAddress, bumpSeed] = PublicKey.findProgramAddressSync(\n      [params.authority.toBuffer(), toBufferLE(BigInt(params.recentSlot), 8)],\n      this.programId,\n    );\n\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CreateLookupTable;\n    const data = encodeData(type, {\n      recentSlot: BigInt(params.recentSlot),\n      bumpSeed: bumpSeed,\n    });\n\n    const keys = [\n      {\n        pubkey: lookupTableAddress,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.payer,\n        isSigner: true,\n        isWritable: true,\n      },\n      {\n        pubkey: SystemProgram.programId,\n        isSigner: false,\n        isWritable: false,\n      },\n    ];\n\n    return [\n      new TransactionInstruction({\n        programId: this.programId,\n        keys: keys,\n        data: data,\n      }),\n      lookupTableAddress,\n    ] as [TransactionInstruction, PublicKey];\n  }\n\n  static freezeLookupTable(params: FreezeLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.FreezeLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static extendLookupTable(params: ExtendLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.ExtendLookupTable;\n    const data = encodeData(type, {\n      addresses: params.addresses.map(addr => addr.toBytes()),\n    });\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    if (params.payer) {\n      keys.push(\n        {\n          pubkey: params.payer,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n      );\n    }\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static deactivateLookupTable(params: DeactivateLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.DeactivateLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n\n  static closeLookupTable(params: CloseLookupTableParams) {\n    const type = LOOKUP_TABLE_INSTRUCTION_LAYOUTS.CloseLookupTable;\n    const data = encodeData(type);\n\n    const keys = [\n      {\n        pubkey: params.lookupTable,\n        isSigner: false,\n        isWritable: true,\n      },\n      {\n        pubkey: params.authority,\n        isSigner: true,\n        isWritable: false,\n      },\n      {\n        pubkey: params.recipient,\n        isSigner: false,\n        isWritable: true,\n      },\n    ];\n\n    return new TransactionInstruction({\n      programId: this.programId,\n      keys: keys,\n      data: data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport {u64} from '../utils/bigint';\n\n/**\n * Compute Budget Instruction class\n */\nexport class ComputeBudgetInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a compute budget instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): ComputeBudgetInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u8('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: ComputeBudgetInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS,\n    )) {\n      if (layout.index == typeIndex) {\n        type = ixType as ComputeBudgetInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        'Instruction type incorrect; not a ComputeBudgetInstruction',\n      );\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode request units compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestUnits(\n    instruction: TransactionInstruction,\n  ): RequestUnitsParams {\n    this.checkProgramId(instruction.programId);\n    const {units, additionalFee} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits,\n      instruction.data,\n    );\n    return {units, additionalFee};\n  }\n\n  /**\n   * Decode request heap frame compute budget instruction and retrieve the instruction params.\n   */\n  static decodeRequestHeapFrame(\n    instruction: TransactionInstruction,\n  ): RequestHeapFrameParams {\n    this.checkProgramId(instruction.programId);\n    const {bytes} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame,\n      instruction.data,\n    );\n    return {bytes};\n  }\n\n  /**\n   * Decode set compute unit limit compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitLimit(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitLimitParams {\n    this.checkProgramId(instruction.programId);\n    const {units} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit,\n      instruction.data,\n    );\n    return {units};\n  }\n\n  /**\n   * Decode set compute unit price compute budget instruction and retrieve the instruction params.\n   */\n  static decodeSetComputeUnitPrice(\n    instruction: TransactionInstruction,\n  ): SetComputeUnitPriceParams {\n    this.checkProgramId(instruction.programId);\n    const {microLamports} = decodeData(\n      COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice,\n      instruction.data,\n    );\n    return {microLamports};\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(ComputeBudgetProgram.programId)) {\n      throw new Error(\n        'invalid instruction; programId is not ComputeBudgetProgram',\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid ComputeBudgetInstructionType's\n */\nexport type ComputeBudgetInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof ComputeBudgetInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'RequestUnits'\n  | 'RequestHeapFrame'\n  | 'SetComputeUnitLimit'\n  | 'SetComputeUnitPrice';\n\ntype ComputeBudgetInstructionInputData = {\n  RequestUnits: IInstructionInputData & Readonly<RequestUnitsParams>;\n  RequestHeapFrame: IInstructionInputData & Readonly<RequestHeapFrameParams>;\n  SetComputeUnitLimit: IInstructionInputData &\n    Readonly<SetComputeUnitLimitParams>;\n  SetComputeUnitPrice: IInstructionInputData &\n    Readonly<SetComputeUnitPriceParams>;\n};\n\n/**\n * Request units instruction params\n */\nexport interface RequestUnitsParams {\n  /** Units to request for transaction-wide compute */\n  units: number;\n  /** Prioritization fee lamports */\n  additionalFee: number;\n}\n\n/**\n * Request heap frame instruction params\n */\nexport type RequestHeapFrameParams = {\n  /** Requested transaction-wide program heap size in bytes. Must be multiple of 1024. Applies to each program, including CPIs. */\n  bytes: number;\n};\n\n/**\n * Set compute unit limit instruction params\n */\nexport interface SetComputeUnitLimitParams {\n  /** Transaction-wide compute unit limit */\n  units: number;\n}\n\n/**\n * Set compute unit price instruction params\n */\nexport interface SetComputeUnitPriceParams {\n  /** Transaction compute unit price used for prioritization fees */\n  microLamports: number | bigint;\n}\n\n/**\n * An enumeration of valid ComputeBudget InstructionType's\n * @internal\n */\nexport const COMPUTE_BUDGET_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in ComputeBudgetInstructionType]: InstructionType<\n    ComputeBudgetInstructionInputData[Instruction]\n  >;\n}>({\n  RequestUnits: {\n    index: 0,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestUnits']\n    >([\n      BufferLayout.u8('instruction'),\n      BufferLayout.u32('units'),\n      BufferLayout.u32('additionalFee'),\n    ]),\n  },\n  RequestHeapFrame: {\n    index: 1,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['RequestHeapFrame']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('bytes')]),\n  },\n  SetComputeUnitLimit: {\n    index: 2,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitLimit']\n    >([BufferLayout.u8('instruction'), BufferLayout.u32('units')]),\n  },\n  SetComputeUnitPrice: {\n    index: 3,\n    layout: BufferLayout.struct<\n      ComputeBudgetInstructionInputData['SetComputeUnitPrice']\n    >([BufferLayout.u8('instruction'), u64('microLamports')]),\n  },\n});\n\n/**\n * Factory class for transaction instructions to interact with the Compute Budget program\n */\nexport class ComputeBudgetProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Compute Budget program\n   */\n  static programId: PublicKey = new PublicKey(\n    'ComputeBudget111111111111111111111111111111',\n  );\n\n  /**\n   * @deprecated Instead, call {@link setComputeUnitLimit} and/or {@link setComputeUnitPrice}\n   */\n  static requestUnits(params: RequestUnitsParams): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestUnits;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static requestHeapFrame(\n    params: RequestHeapFrameParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.RequestHeapFrame;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitLimit(\n    params: SetComputeUnitLimitParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitLimit;\n    const data = encodeData(type, params);\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  static setComputeUnitPrice(\n    params: SetComputeUnitPriceParams,\n  ): TransactionInstruction {\n    const type = COMPUTE_BUDGET_INSTRUCTION_LAYOUTS.SetComputeUnitPrice;\n    const data = encodeData(type, {\n      microLamports: BigInt(params.microLamports),\n    });\n    return new TransactionInstruction({\n      keys: [],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {Keypair} from '../keypair';\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {sign} from '../utils/ed25519';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = sign(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {secp256k1} from '@noble/curves/secp256k1';\n\nexport const ecdsaSign = (\n  msgHash: Parameters<typeof secp256k1.sign>[0],\n  privKey: Parameters<typeof secp256k1.sign>[1],\n) => {\n  const signature = secp256k1.sign(msgHash, privKey);\n  return [signature.toCompactRawBytes(), signature.recovery!] as const;\n};\nexport const isValidPrivateKey = secp256k1.utils.isValidPrivateKey;\nexport const publicKeyCreate = secp256k1.getPublicKey;\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport {keccak_256} from '@noble/hashes/sha3';\n\nimport {PublicKey} from '../publickey';\nimport {TransactionInstruction} from '../transaction';\nimport assert from '../utils/assert';\nimport {publicKeyCreate, ecdsaSign} from '../utils/secp256k1';\nimport {toBuffer} from '../utils/to-buffer';\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(keccak_256(toBuffer(publicKey))).slice(\n        -ETHEREUM_ADDRESS_BYTES,\n      );\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(\n        privateKey,\n        false /* isCompressed */,\n      ).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(keccak_256(toBuffer(message)));\n      const [signature, recoveryId] = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `StakeStateV2::size_of()`:\n   * https://docs.rs/solana-stake-program/latest/solana_stake_program/stake_state/enum.StakeStateV2.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(\n    params: SplitStakeParams,\n    // Compute the cost of allocating the new stake account in lamports\n    rentExemptReserve: number,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: rentExemptReserve,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(\n    params: SplitStakeWithSeedParams,\n    // If this stake account is new, compute the cost of allocating it in lamports\n    rentExemptReserve?: number,\n  ): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    if (rentExemptReserve && rentExemptReserve > 0) {\n      transaction.add(\n        SystemProgram.transfer({\n          fromPubkey: params.authorizedPubkey,\n          toPubkey: splitStakePubkey,\n          lamports: rentExemptReserve,\n        }),\n      );\n    }\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({\n        pubkey: custodianPubkey,\n        isSigner: true,\n        isWritable: false,\n      });\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from '../instruction';\nimport * as Layout from '../layout';\nimport {PublicKey} from '../publickey';\nimport {SystemProgram} from './system';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from '../sysvar';\nimport {Transaction, TransactionInstruction} from '../transaction';\nimport {toBuffer} from '../utils/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * AuthorizeWithSeed instruction params\n */\nexport type AuthorizeVoteWithSeedParams = {\n  currentAuthorityDerivedKeyBasePubkey: PublicKey;\n  currentAuthorityDerivedKeyOwnerPubkey: PublicKey;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n  votePubkey: PublicKey;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Update validator identity (node pubkey) vote account instruction params.\n */\nexport type UpdateValidatorIdentityParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  nodePubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey,\n        currentAuthorityDerivedKeySeed,\n        newAuthorized,\n        voteAuthorizationType,\n      },\n    } = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    return {\n      currentAuthorityDerivedKeyBasePubkey: instruction.keys[2].pubkey,\n      currentAuthorityDerivedKeyOwnerPubkey: new PublicKey(\n        currentAuthorityDerivedKeyOwnerPubkey,\n      ),\n      currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n      votePubkey: instruction.keys[0].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'InitializeAccount'\n  | 'Withdraw'\n  | 'UpdateValidatorIdentity';\n\n/** @internal */\nexport type VoteAuthorizeWithSeedArgs = Readonly<{\n  currentAuthorityDerivedKeyOwnerPubkey: Uint8Array;\n  currentAuthorityDerivedKeySeed: string;\n  newAuthorized: Uint8Array;\n  voteAuthorizationType: number;\n}>;\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  AuthorizeWithSeed: IInstructionInputData & {\n    voteAuthorizeWithSeedArgs: VoteAuthorizeWithSeedArgs;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n  UpdateValidatorIdentity: IInstructionInputData;\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  UpdateValidatorIdentity: {\n    index: 4,\n    layout: BufferLayout.struct<\n      VoteInstructionInputData['UpdateValidatorIdentity']\n    >([BufferLayout.u32('instruction')]),\n  },\n  AuthorizeWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<VoteInstructionInputData['AuthorizeWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteAuthorizeWithSeedArgs(),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   *\n   * KEEP IN SYNC WITH `VoteState::size_of()` in https://github.com/solana-labs/solana/blob/a474cb24b9238f5edcc982f65c0b37d4a1046f7e/sdk/program/src/vote/state/mod.rs#L340-L342\n   */\n  static space: number = 3762;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account\n   * where the current Voter or Withdrawer authority is a derived key.\n   */\n  static authorizeWithSeed(params: AuthorizeVoteWithSeedParams): Transaction {\n    const {\n      currentAuthorityDerivedKeyBasePubkey,\n      currentAuthorityDerivedKeyOwnerPubkey,\n      currentAuthorityDerivedKeySeed,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n      votePubkey,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      voteAuthorizeWithSeedArgs: {\n        currentAuthorityDerivedKeyOwnerPubkey: toBuffer(\n          currentAuthorityDerivedKeyOwnerPubkey.toBuffer(),\n        ),\n        currentAuthorityDerivedKeySeed: currentAuthorityDerivedKeySeed,\n        newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n        voteAuthorizationType: voteAuthorizationType.index,\n      },\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: currentAuthorityDerivedKeyBasePubkey,\n        isSigner: true,\n        isWritable: false,\n      },\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw safely from a Vote account.\n   *\n   * This function was created as a safeguard for vote accounts running validators, `safeWithdraw`\n   * checks that the withdraw amount will not exceed the specified balance while leaving enough left\n   * to cover rent. If you wish to close the vote account by withdrawing the full amount, call the\n   * `withdraw` method directly.\n   */\n  static safeWithdraw(\n    params: WithdrawFromVoteAccountParams,\n    currentVoteAccountBalance: number,\n    rentExemptMinimum: number,\n  ): Transaction {\n    if (params.lamports > currentVoteAccountBalance - rentExemptMinimum) {\n      throw new Error(\n        'Withdraw will leave vote account with insufficient funds.',\n      );\n    }\n    return VoteProgram.withdraw(params);\n  }\n\n  /**\n   * Generate a transaction to update the validator identity (node pubkey) of a Vote account.\n   */\n  static updateValidatorIdentity(\n    params: UpdateValidatorIdentityParams,\n  ): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, nodePubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.UpdateValidatorIdentity;\n    const data = encodeData(type);\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './utils/shortvec-encoding';\nimport {PublicKey, PUBLIC_KEY_LENGTH} from './publickey';\nimport {guardedShift, guardedSplice} from './utils/guarded-array-utils';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(\n        guardedSplice(byteArray, 0, PUBLIC_KEY_LENGTH),\n      );\n      const isSigner = guardedShift(byteArray) === 1;\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './utils/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n * @param {Cluster} [cluster=\"devnet\"] - The cluster name of the RPC API URL to use. Possible options: 'devnet' | 'testnet' | 'mainnet-beta'\n * @param {boolean} [tls=\"http\"] - Use TLS when connecting to cluster.\n *\n * @returns {string} URL string of the RPC endpoint\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","import type {Buffer} from 'buffer';\n\nimport {\n  BlockheightBasedTransactionConfirmationStrategy,\n  Connection,\n  DurableNonceTransactionConfirmationStrategy,\n  TransactionConfirmationStrategy,\n} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport {SendTransactionError} from '../errors';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {TransactionConfirmationStrategy} confirmationStrategy\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategy: TransactionConfirmationStrategy,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n/**\n * @deprecated Calling `sendAndConfirmRawTransaction()` without a `confirmationStrategy`\n * is no longer supported and will be removed in a future version.\n */\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature>;\n\n// eslint-disable-next-line no-redeclare\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  confirmationStrategyOrConfirmOptions:\n    | TransactionConfirmationStrategy\n    | ConfirmOptions\n    | undefined,\n  maybeConfirmOptions?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  let confirmationStrategy: TransactionConfirmationStrategy | undefined;\n  let options: ConfirmOptions | undefined;\n  if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'lastValidBlockHeight',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as BlockheightBasedTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else if (\n    confirmationStrategyOrConfirmOptions &&\n    Object.prototype.hasOwnProperty.call(\n      confirmationStrategyOrConfirmOptions,\n      'nonceValue',\n    )\n  ) {\n    confirmationStrategy =\n      confirmationStrategyOrConfirmOptions as DurableNonceTransactionConfirmationStrategy;\n    options = maybeConfirmOptions;\n  } else {\n    options = confirmationStrategyOrConfirmOptions as\n      | ConfirmOptions\n      | undefined;\n  }\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    minContextSlot: options.minContextSlot,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const commitment = options && options.commitment;\n  const confirmationPromise = confirmationStrategy\n    ? connection.confirmTransaction(confirmationStrategy, commitment)\n    : connection.confirmTransaction(signature, commitment);\n  const status = (await confirmationPromise).value;\n\n  if (status.err) {\n    if (signature != null) {\n      throw new SendTransactionError({\n        action: sendOptions?.skipPreflight ? 'send' : 'simulate',\n        signature: signature,\n        transactionMessage: `Status: (${JSON.stringify(status)})`,\n      });\n    }\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './errors';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './programs';\nexport * from './publickey';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './sysvar';\nexport * from './utils';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // '0' - '9'\n    if (c >= 48 && c <= 57) {\n      return c - 48;\n    // 'A' - 'F'\n    } else if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    } else {\n      assert(false, 'Invalid character in ' + string);\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this._strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n",null,null,"\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst ResolvedTextDecoder = typeof TextDecoder !== \"function\" ? encoding.TextDecoder : TextDecoder;\nconst textDecoder = new ResolvedTextDecoder(\"utf-8\", { fatal: true });\nfunction baseEncode(value) {\n    if (typeof value === \"string\") {\n        value = Buffer.from(value, \"utf8\");\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + \": \" + this.fieldPath.join(\".\");\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray(\"le\", 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([\n            Buffer.from(this.buf.subarray(0, this.length)),\n            buffer,\n            Buffer.alloc(INITIAL_LENGTH),\n        ]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, \"utf8\");\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if ([\"ERR_BUFFER_OUT_OF_BOUNDS\", \"ERR_OUT_OF_RANGE\"].indexOf(code) >= 0) {\n                    throw new BorshError(\"Reached the end of buffer when deserializing\");\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, \"le\");\n    }\n    readBuffer(len) {\n        if (this.offset + len > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === \"string\") {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === \"number\") {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => {\n                    serializeField(schema, fieldName, item, fieldType[0], writer);\n                });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case \"option\": {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                case \"map\": {\n                    writer.writeU32(value.size);\n                    value.forEach((val, key) => {\n                        serializeField(schema, fieldName, key, fieldType.key, writer);\n                        serializeField(schema, fieldName, val, fieldType.value, writer);\n                    });\n                    break;\n                }\n                default:\n                    throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === \"function\") {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === \"enum\") {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === \"string\") {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === \"number\") {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === \"number\") {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === \"option\") {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        if (fieldType.kind === \"map\") {\n            let map = new Map();\n            const length = reader.readU32();\n            for (let i = 0; i < length; i++) {\n                const key = deserializeField(schema, fieldName, fieldType.key, reader);\n                const val = deserializeField(schema, fieldName, fieldType.value, reader);\n                map.set(key, val);\n            }\n            return map;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === \"function\") {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === \"struct\") {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === \"enum\") {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexports.TextEncoder = TextEncoder;\nexports.TextDecoder = TextDecoder;",null,null,"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nlet converter;\n/**\n * Convert a little-endian buffer into a BigInt.\n * @param buf The little-endian buffer to convert\n * @returns A BigInt with the little-endian representation of buf.\n */\nfunction toBigIntLE(buf) {\n    {\n        const reversed = Buffer.from(buf);\n        reversed.reverse();\n        const hex = reversed.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, false);\n}\nexports.toBigIntLE = toBigIntLE;\n/**\n * Convert a big-endian buffer into a BigInt\n * @param buf The big-endian buffer to convert.\n * @returns A BigInt with the big-endian representation of buf.\n */\nfunction toBigIntBE(buf) {\n    {\n        const hex = buf.toString('hex');\n        if (hex.length === 0) {\n            return BigInt(0);\n        }\n        return BigInt(`0x${hex}`);\n    }\n    return converter.toBigInt(buf, true);\n}\nexports.toBigIntBE = toBigIntBE;\n/**\n * Convert a BigInt to a little-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A little-endian buffer representation of num.\n */\nfunction toBufferLE(num, width) {\n    {\n        const hex = num.toString(16);\n        const buffer = Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n        buffer.reverse();\n        return buffer;\n    }\n    // Allocation is done here, since it is slower using napi in C\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), false);\n}\nexports.toBufferLE = toBufferLE;\n/**\n * Convert a BigInt to a big-endian buffer.\n * @param num   The BigInt to convert.\n * @param width The number of bytes that the resulting buffer should be.\n * @returns A big-endian buffer representation of num.\n */\nfunction toBufferBE(num, width) {\n    {\n        const hex = num.toString(16);\n        return Buffer.from(hex.padStart(width * 2, '0').slice(0, width * 2), 'hex');\n    }\n    return converter.fromBigInt(num, Buffer.allocUnsafe(width), true);\n}\nexports.toBufferBE = toBufferBE;\n",null,null,null,null,null,null,null,null,"'use strict';\n\nconst uuid = require('uuid').v4;\nconst generateRequest = require('../../generateRequest');\n\n/**\n * Constructor for a Jayson Browser Client that does not depend any node.js core libraries\n * @class ClientBrowser\n * @param {Function} callServer Method that calls the server, receives the stringified request and a regular node-style callback\n * @param {Object} [options]\n * @param {Function} [options.reviver] Reviver function for JSON\n * @param {Function} [options.replacer] Replacer function for JSON\n * @param {Number} [options.version=2] JSON-RPC version to use (1|2)\n * @param {Function} [options.generator] Function to use for generating request IDs\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n * @return {ClientBrowser}\n */\nconst ClientBrowser = function(callServer, options) {\n  if(!(this instanceof ClientBrowser)) {\n    return new ClientBrowser(callServer, options);\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  this.options = {\n    reviver: typeof options.reviver !== 'undefined' ? options.reviver : null,\n    replacer: typeof options.replacer !== 'undefined' ? options.replacer : null,\n    generator: typeof options.generator !== 'undefined' ? options.generator : function() { return uuid(); },\n    version: typeof options.version !== 'undefined' ? options.version : 2,\n    notificationIdNull: typeof options.notificationIdNull === 'boolean' ? options.notificationIdNull : false,\n  };\n\n  this.callServer = callServer;\n};\n\nmodule.exports = ClientBrowser;\n\n/**\n *  Creates a request and dispatches it if given a callback.\n *  @param {String|Array} method A batch request if passed an Array, or a method name if passed a String\n *  @param {Array|Object} [params] Parameters for the method\n *  @param {String|Number} [id] Optional id. If undefined an id will be generated. If null it creates a notification request\n *  @param {Function} [callback] Request callback. If specified, executes the request rather than only returning it.\n *  @throws {TypeError} Invalid parameters\n *  @return {Object} JSON-RPC 1.0 or 2.0 compatible request\n */\nClientBrowser.prototype.request = function(method, params, id, callback) {\n  const self = this;\n  let request = null;\n\n  // is this a batch request?\n  const isBatch = Array.isArray(method) && typeof params === 'function';\n\n  if (this.options.version === 1 && isBatch) {\n    throw new TypeError('JSON-RPC 1.0 does not support batching');\n  }\n\n  // is this a raw request?\n  const isRaw = !isBatch && method && typeof method === 'object' && typeof params === 'function';\n\n  if(isBatch || isRaw) {\n    callback = params;\n    request = method;\n  } else {\n    if(typeof id === 'function') {\n      callback = id;\n      // specifically undefined because \"null\" is a notification request\n      id = undefined;\n    }\n\n    const hasCallback = typeof callback === 'function';\n\n    try {\n      request = generateRequest(method, params, id, {\n        generator: this.options.generator,\n        version: this.options.version,\n        notificationIdNull: this.options.notificationIdNull,\n      });\n    } catch(err) {\n      if(hasCallback) {\n        return callback(err);\n      }\n      throw err;\n    }\n\n    // no callback means we should just return a raw request\n    if(!hasCallback) {\n      return request;\n    }\n\n  }\n\n  let message;\n  try {\n    message = JSON.stringify(request, this.options.replacer);\n  } catch(err) {\n    return callback(err);\n  }\n\n  this.callServer(message, function(err, response) {\n    self._parseResponse(err, response, callback);\n  });\n\n  // always return the raw request\n  return request;\n};\n\n/**\n * Parses a response from a server\n * @param {Object} err Error to pass on that is unrelated to the actual response\n * @param {String} responseText JSON-RPC 1.0 or 2.0 response\n * @param {Function} callback Callback that will receive different arguments depending on the amount of parameters\n * @private\n */\nClientBrowser.prototype._parseResponse = function(err, responseText, callback) {\n  if(err) {\n    callback(err);\n    return;\n  }\n\n  if(!responseText) {\n    // empty response text, assume that is correct because it could be a\n    // notification which jayson does not give any body for\n    return callback();\n  }\n\n  let response;\n  try {\n    response = JSON.parse(responseText, this.options.reviver);\n  } catch(err) {\n    return callback(err);\n  }\n\n  if(callback.length === 3) {\n    // if callback length is 3, we split callback arguments on error and response\n\n    // is batch response?\n    if(Array.isArray(response)) {\n\n      // neccesary to split strictly on validity according to spec here\n      const isError = function(res) {\n        return typeof res.error !== 'undefined';\n      };\n\n      const isNotError = function (res) {\n        return !isError(res);\n      };\n\n      return callback(null, response.filter(isError), response.filter(isNotError));\n    \n    } else {\n\n      // split regardless of validity\n      return callback(null, response.error, response.result);\n    \n    }\n  \n  }\n\n  callback(null, response);\n};\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","'use strict';\n\nconst uuid = require('uuid').v4;\n\n/**\n *  Generates a JSON-RPC 1.0 or 2.0 request\n *  @param {String} method Name of method to call\n *  @param {Array|Object} params Array of parameters passed to the method as specified, or an object of parameter names and corresponding value\n *  @param {String|Number|null} [id] Request ID can be a string, number, null for explicit notification or left out for automatic generation\n *  @param {Object} [options]\n *  @param {Number} [options.version=2] JSON-RPC version to use (1 or 2)\n *  @param {Boolean} [options.notificationIdNull=false] When true, version 2 requests will set id to null instead of omitting it\n *  @param {Function} [options.generator] Passed the request, and the options object and is expected to return a request ID\n *  @throws {TypeError} If any of the parameters are invalid\n *  @return {Object} A JSON-RPC 1.0 or 2.0 request\n *  @memberOf Utils\n */\nconst generateRequest = function(method, params, id, options) {\n  if(typeof method !== 'string') {\n    throw new TypeError(method + ' must be a string');\n  }\n\n  options = options || {};\n\n  // check valid version provided\n  const version = typeof options.version === 'number' ? options.version : 2;\n  if (version !== 1 && version !== 2) {\n    throw new TypeError(version + ' must be 1 or 2');\n  }\n\n  const request = {\n    method: method\n  };\n\n  if(version === 2) {\n    request.jsonrpc = '2.0';\n  }\n\n  if(params) {\n    // params given, but invalid?\n    if(typeof params !== 'object' && !Array.isArray(params)) {\n      throw new TypeError(params + ' must be an object, array or omitted');\n    }\n    request.params = params;\n  }\n\n  // if id was left out, generate one (null means explicit notification)\n  if(typeof(id) === 'undefined') {\n    const generator = typeof options.generator === 'function' ? options.generator : function() { return uuid(); };\n    request.id = generator(request, options);\n  } else if (version === 2 && id === null) {\n    // we have a version 2 notification\n    if (options.notificationIdNull) {\n      request.id = null; // id will not be set at all unless option provided\n    }\n  } else {\n    request.id = id;\n  }\n\n  return request;\n};\n\nmodule.exports = generateRequest;\n","/**\n * \"Client\" wraps \"ws\" or a browser-implemented \"WebSocket\" library\n * according to the environment providing JSON RPC 2.0 support on top.\n * @module Client\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// @ts-ignore\nconst eventemitter3_1 = require(\"eventemitter3\");\nconst utils_cjs_1 = require(\"./utils.cjs\");\nclass CommonClient extends eventemitter3_1.EventEmitter {\n    address;\n    rpc_id;\n    queue;\n    options;\n    autoconnect;\n    ready;\n    reconnect;\n    reconnect_timer_id;\n    reconnect_interval;\n    max_reconnects;\n    rest_options;\n    current_reconnects;\n    generate_request_id;\n    socket;\n    webSocketFactory;\n    dataPack;\n    /**\n     * Instantiate a Client class.\n     * @constructor\n     * @param {webSocketFactory} webSocketFactory - factory method for WebSocket\n     * @param {String} address - url to a websocket server\n     * @param {Object} options - ws options object with reconnect parameters\n     * @param {Function} generate_request_id - custom generation request Id\n     * @param {DataPack} dataPack - data pack contains encoder and decoder\n     * @return {CommonClient}\n     */\n    constructor(webSocketFactory, address = \"ws://localhost:8080\", { autoconnect = true, reconnect = true, reconnect_interval = 1000, max_reconnects = 5, ...rest_options } = {}, generate_request_id, dataPack) {\n        super();\n        this.webSocketFactory = webSocketFactory;\n        this.queue = {};\n        this.rpc_id = 0;\n        this.address = address;\n        this.autoconnect = autoconnect;\n        this.ready = false;\n        this.reconnect = reconnect;\n        this.reconnect_timer_id = undefined;\n        this.reconnect_interval = reconnect_interval;\n        this.max_reconnects = max_reconnects;\n        this.rest_options = rest_options;\n        this.current_reconnects = 0;\n        this.generate_request_id = generate_request_id || (() => ++this.rpc_id);\n        if (!dataPack)\n            this.dataPack = new utils_cjs_1.DefaultDataPack();\n        else\n            this.dataPack = dataPack;\n        if (this.autoconnect)\n            this._connect(this.address, {\n                autoconnect: this.autoconnect,\n                reconnect: this.reconnect,\n                reconnect_interval: this.reconnect_interval,\n                max_reconnects: this.max_reconnects,\n                ...this.rest_options\n            });\n    }\n    /**\n     * Connects to a defined server if not connected already.\n     * @method\n     * @return {Undefined}\n     */\n    connect() {\n        if (this.socket)\n            return;\n        this._connect(this.address, {\n            autoconnect: this.autoconnect,\n            reconnect: this.reconnect,\n            reconnect_interval: this.reconnect_interval,\n            max_reconnects: this.max_reconnects,\n            ...this.rest_options\n        });\n    }\n    /**\n     * Calls a registered RPC method on server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object|Array} params - optional method parameters\n     * @param {Number} timeout - RPC reply timeout value\n     * @param {Object} ws_opts - options passed to ws\n     * @return {Promise}\n     */\n    call(method, params, timeout, ws_opts) {\n        if (!ws_opts && \"object\" === typeof timeout) {\n            ws_opts = timeout;\n            timeout = null;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.ready)\n                return reject(new Error(\"socket not ready\"));\n            const rpc_id = this.generate_request_id(method, params);\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params: params || undefined,\n                id: rpc_id\n            };\n            this.socket.send(this.dataPack.encode(message), ws_opts, (error) => {\n                if (error)\n                    return reject(error);\n                this.queue[rpc_id] = { promise: [resolve, reject] };\n                if (timeout) {\n                    this.queue[rpc_id].timeout = setTimeout(() => {\n                        delete this.queue[rpc_id];\n                        reject(new Error(\"reply timeout\"));\n                    }, timeout);\n                }\n            });\n        });\n    }\n    /**\n     * Logins with the other side of the connection.\n     * @method\n     * @param {Object} params - Login credentials object\n     * @return {Promise}\n     */\n    async login(params) {\n        const resp = await this.call(\"rpc.login\", params);\n        if (!resp)\n            throw new Error(\"authentication failed\");\n        return resp;\n    }\n    /**\n     * Fetches a list of client's methods registered on server.\n     * @method\n     * @return {Array}\n     */\n    async listMethods() {\n        return await this.call(\"__listMethods\");\n    }\n    /**\n     * Sends a JSON-RPC 2.0 notification to server.\n     * @method\n     * @param {String} method - RPC method name\n     * @param {Object} params - optional method parameters\n     * @return {Promise}\n     */\n    notify(method, params) {\n        return new Promise((resolve, reject) => {\n            if (!this.ready)\n                return reject(new Error(\"socket not ready\"));\n            const message = {\n                jsonrpc: \"2.0\",\n                method: method,\n                params\n            };\n            this.socket.send(this.dataPack.encode(message), (error) => {\n                if (error)\n                    return reject(error);\n                resolve();\n            });\n        });\n    }\n    /**\n     * Subscribes for a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    async subscribe(event) {\n        if (typeof event === \"string\")\n            event = [event];\n        const result = await this.call(\"rpc.on\", event);\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed subscribing to an event '\" + event + \"' with: \" + result[event]);\n        return result;\n    }\n    /**\n     * Unsubscribes from a defined event.\n     * @method\n     * @param {String|Array} event - event name\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    async unsubscribe(event) {\n        if (typeof event === \"string\")\n            event = [event];\n        const result = await this.call(\"rpc.off\", event);\n        if (typeof event === \"string\" && result[event] !== \"ok\")\n            throw new Error(\"Failed unsubscribing from an event with: \" + result);\n        return result;\n    }\n    /**\n     * Closes a WebSocket connection gracefully.\n     * @method\n     * @param {Number} code - socket close code\n     * @param {String} data - optional data to be sent before closing\n     * @return {Undefined}\n     */\n    close(code, data) {\n        this.socket.close(code || 1000, data);\n    }\n    /**\n     * Enable / disable automatic reconnection.\n     * @method\n     * @param {Boolean} reconnect - enable / disable reconnection\n     * @return {Undefined}\n     */\n    setAutoReconnect(reconnect) {\n        this.reconnect = reconnect;\n    }\n    /**\n     * Set the interval between reconnection attempts.\n     * @method\n     * @param {Number} interval - reconnection interval in milliseconds\n     * @return {Undefined}\n     */\n    setReconnectInterval(interval) {\n        this.reconnect_interval = interval;\n    }\n    /**\n     * Set the maximum number of reconnection attempts.\n     * @method\n     * @param {Number} max_reconnects - maximum reconnection attempts\n     * @return {Undefined}\n     */\n    setMaxReconnects(max_reconnects) {\n        this.max_reconnects = max_reconnects;\n    }\n    /**\n     * Connection/Message handler.\n     * @method\n     * @private\n     * @param {String} address - WebSocket API address\n     * @param {Object} options - ws options object\n     * @return {Undefined}\n     */\n    _connect(address, options) {\n        clearTimeout(this.reconnect_timer_id);\n        this.socket = this.webSocketFactory(address, options);\n        this.socket.addEventListener(\"open\", () => {\n            this.ready = true;\n            this.emit(\"open\");\n            this.current_reconnects = 0;\n        });\n        this.socket.addEventListener(\"message\", ({ data: message }) => {\n            if (message instanceof ArrayBuffer)\n                message = Buffer.from(message).toString();\n            try {\n                message = this.dataPack.decode(message);\n            }\n            catch (error) {\n                return;\n            }\n            // check if any listeners are attached and forward event\n            if (message.notification && this.listeners(message.notification).length) {\n                if (!Object.keys(message.params).length)\n                    return this.emit(message.notification);\n                const args = [message.notification];\n                if (message.params.constructor === Object)\n                    args.push(message.params);\n                else\n                    // using for-loop instead of unshift/spread because performance is better\n                    for (let i = 0; i < message.params.length; i++)\n                        args.push(message.params[i]);\n                // run as microtask so that pending queue messages are resolved first\n                // eslint-disable-next-line prefer-spread\n                return Promise.resolve().then(() => { this.emit.apply(this, args); });\n            }\n            if (!this.queue[message.id]) {\n                // general JSON RPC 2.0 events\n                if (message.method) {\n                    // run as microtask so that pending queue messages are resolved first\n                    return Promise.resolve().then(() => {\n                        this.emit(message.method, message?.params);\n                    });\n                }\n                return;\n            }\n            // reject early since server's response is invalid\n            if (\"error\" in message === \"result\" in message)\n                this.queue[message.id].promise[1](new Error(\"Server response malformed. Response must include either \\\"result\\\"\" +\n                    \" or \\\"error\\\", but not both.\"));\n            if (this.queue[message.id].timeout)\n                clearTimeout(this.queue[message.id].timeout);\n            if (message.error)\n                this.queue[message.id].promise[1](message.error);\n            else\n                this.queue[message.id].promise[0](message.result);\n            delete this.queue[message.id];\n        });\n        this.socket.addEventListener(\"error\", (error) => this.emit(\"error\", error));\n        this.socket.addEventListener(\"close\", ({ code, reason }) => {\n            if (this.ready) // Delay close event until internal state is updated\n                setTimeout(() => this.emit(\"close\", code, reason), 0);\n            this.ready = false;\n            this.socket = undefined;\n            if (code === 1000)\n                return;\n            this.current_reconnects++;\n            if (this.reconnect && ((this.max_reconnects > this.current_reconnects) ||\n                this.max_reconnects === 0))\n                this.reconnect_timer_id = setTimeout(() => this._connect(address, options), this.reconnect_interval);\n        });\n    }\n}\nexports.default = CommonClient;\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createError = exports.DefaultDataPack = void 0;\nconst errors = new Map([\n    [-32000, \"Event not provided\"],\n    [-32600, \"Invalid Request\"],\n    [-32601, \"Method not found\"],\n    [-32602, \"Invalid params\"],\n    [-32603, \"Internal error\"],\n    [-32604, \"Params not found\"],\n    [-32605, \"Method forbidden\"],\n    [-32606, \"Event forbidden\"],\n    [-32700, \"Parse error\"]\n]);\nclass DefaultDataPack {\n    encode(value) {\n        return JSON.stringify(value);\n    }\n    decode(value) {\n        return JSON.parse(value);\n    }\n}\nexports.DefaultDataPack = DefaultDataPack;\n/**\n * Creates a JSON-RPC 2.0-compliant error.\n * @param {Number} code - error code\n * @param {String} details - error details\n * @return {Object}\n */\nfunction createError(code, details) {\n    const error = {\n        code: code,\n        message: errors.get(code) || \"Internal Server Error\"\n    };\n    if (details)\n        error[\"data\"] = details;\n    return error;\n}\nexports.createError = createError;\n","/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass WebSocketBrowserImpl extends eventemitter3_1.EventEmitter {\n    socket;\n    /** Instantiate a WebSocket class\n     * @constructor\n     * @param {String} address - url to a websocket server\n     * @param {(Object)} options - websocket options\n     * @param {(String|Array)} protocols - a list of protocols\n     * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n     */\n    constructor(address, options, protocols) {\n        super();\n        this.socket = new window.WebSocket(address, protocols);\n        this.socket.onopen = () => this.emit(\"open\");\n        this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n        this.socket.onerror = (error) => this.emit(\"error\", error);\n        this.socket.onclose = (event) => {\n            this.emit(\"close\", event.code, event.reason);\n        };\n    }\n    /**\n     * Sends data through a websocket connection\n     * @method\n     * @param {(String|Object)} data - data to be sent via websocket\n     * @param {Object} optionsOrCallback - ws options\n     * @param {Function} callback - a callback called once the data is sent\n     * @return {Undefined}\n     */\n    send(data, optionsOrCallback, callback) {\n        const cb = callback || optionsOrCallback;\n        try {\n            this.socket.send(data);\n            cb();\n        }\n        catch (error) {\n            cb(error);\n        }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    close(code, reason) {\n        this.socket.close(code, reason);\n    }\n    addEventListener(type, listener, options) {\n        this.socket.addEventListener(type, listener, options);\n    }\n}\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction default_1(address, options) {\n    return new WebSocketBrowserImpl(address, options);\n}\nexports.default = default_1;\n",null,null,null,null,null,null,null,null,null,null,null,"import { PublicKey } from '@metaplex-foundation/umi';\nimport { PublicKey as Web3JsPublicKey } from '@solana/web3.js';\n\nexport function fromWeb3JsPublicKey(publicKey: Web3JsPublicKey): PublicKey {\n  return publicKey.toBase58() as PublicKey;\n}\n\nexport function toWeb3JsPublicKey(publicKey: PublicKey): Web3JsPublicKey {\n  return new Web3JsPublicKey(publicKey);\n}\n",null,"import { Keypair, publicKeyBytes } from '@metaplex-foundation/umi';\nimport { Keypair as Web3JsKeypair } from '@solana/web3.js';\nimport { fromWeb3JsPublicKey } from './PublicKey';\n\nexport function fromWeb3JsKeypair(keypair: Web3JsKeypair): Keypair {\n  return {\n    publicKey: fromWeb3JsPublicKey(keypair.publicKey),\n    secretKey: keypair.secretKey,\n  };\n}\n\nexport function toWeb3JsKeypair(keypair: Keypair): Web3JsKeypair {\n  return new Web3JsKeypair({\n    publicKey: publicKeyBytes(keypair.publicKey),\n    secretKey: keypair.secretKey,\n  });\n}\n",null,"import {\n  base58,\n  TransactionInput,\n  TransactionMessage,\n} from '@metaplex-foundation/umi';\nimport {\n  AddressLookupTableAccount as Web3JsAddressLookupTableAccount,\n  Message as Web3JsMessageLegacy,\n  MessageV0 as Web3JsMessageV0,\n} from '@solana/web3.js';\nimport { toWeb3JsInstruction } from './Instruction';\nimport { fromWeb3JsPublicKey, toWeb3JsPublicKey } from './PublicKey';\n\nexport function fromWeb3JsMessage(\n  message: Web3JsMessageLegacy | Web3JsMessageV0\n): TransactionMessage {\n  return {\n    version: message.version,\n    header: message.header,\n    accounts: message.staticAccountKeys.map(fromWeb3JsPublicKey),\n    blockhash: message.recentBlockhash,\n    instructions: message.compiledInstructions.map((instruction) => ({\n      programIndex: instruction.programIdIndex,\n      accountIndexes: instruction.accountKeyIndexes,\n      data: new Uint8Array(instruction.data),\n    })),\n    addressLookupTables: message.addressTableLookups.map((lookup) => ({\n      publicKey: fromWeb3JsPublicKey(lookup.accountKey),\n      writableIndexes: lookup.writableIndexes,\n      readonlyIndexes: lookup.readonlyIndexes,\n    })),\n  };\n}\n\nexport function toWeb3JsMessage(\n  message: TransactionMessage\n): Web3JsMessageLegacy | Web3JsMessageV0 {\n  if (message.version === 'legacy') {\n    return new Web3JsMessageLegacy({\n      header: message.header,\n      accountKeys: message.accounts.map(toWeb3JsPublicKey),\n      recentBlockhash: message.blockhash,\n      instructions: message.instructions.map((instruction) => ({\n        programIdIndex: instruction.programIndex,\n        accounts: instruction.accountIndexes,\n        data: base58.deserialize(instruction.data)[0],\n      })),\n    });\n  }\n\n  return new Web3JsMessageV0({\n    header: message.header,\n    staticAccountKeys: message.accounts.map(toWeb3JsPublicKey),\n    recentBlockhash: message.blockhash,\n    compiledInstructions: message.instructions.map((instruction) => ({\n      programIdIndex: instruction.programIndex,\n      accountKeyIndexes: instruction.accountIndexes,\n      data: instruction.data,\n    })),\n    addressTableLookups: message.addressLookupTables.map((lookup) => ({\n      accountKey: toWeb3JsPublicKey(lookup.publicKey),\n      writableIndexes: lookup.writableIndexes,\n      readonlyIndexes: lookup.readonlyIndexes,\n    })),\n  });\n}\n\nexport function toWeb3JsMessageFromInput(\n  input: TransactionInput\n): Web3JsMessageLegacy | Web3JsMessageV0 {\n  if (input.version === 'legacy') {\n    return Web3JsMessageLegacy.compile({\n      payerKey: toWeb3JsPublicKey(input.payer),\n      instructions: input.instructions.map(toWeb3JsInstruction),\n      recentBlockhash: input.blockhash,\n    });\n  }\n\n  return Web3JsMessageV0.compile({\n    payerKey: toWeb3JsPublicKey(input.payer),\n    instructions: input.instructions.map(toWeb3JsInstruction),\n    recentBlockhash: input.blockhash,\n    addressLookupTableAccounts: input.addressLookupTables?.map(\n      (account) =>\n        new Web3JsAddressLookupTableAccount({\n          key: toWeb3JsPublicKey(account.publicKey),\n          state: {\n            addresses: account.addresses.map(toWeb3JsPublicKey),\n            authority: undefined,\n            deactivationSlot: BigInt(`0x${'ff'.repeat(8)}`),\n            lastExtendedSlot: 0,\n            lastExtendedSlotStartIndex: 0,\n          },\n        })\n    ),\n  });\n}\n",null,null,"import {\n  HttpInterface,\n  HttpRequest,\n  HttpResponse,\n} from '@metaplex-foundation/umi';\nimport fetch, { BodyInit, RequestInit } from 'node-fetch';\n\nexport function createFetchHttp(): HttpInterface {\n  return {\n    send: async <ResponseData, RequestData = any>(\n      request: HttpRequest<RequestData>\n    ): Promise<HttpResponse<ResponseData>> => {\n      const headers = request.headers\n        ? Object.entries(request.headers).reduce(\n            (acc, [name, headers]) => ({\n              ...acc,\n              [name.toLowerCase()]: (Array.isArray(headers)\n                ? headers.join(', ')\n                : headers\n              ).toLowerCase(),\n            }),\n            {} as Record<string, string>\n          )\n        : {};\n\n      const isJsonRequest =\n        headers['content-type']?.includes('application/json') ?? false;\n\n      let body: BodyInit | undefined;\n      if (isJsonRequest && request.data) {\n        body = JSON.stringify(request.data);\n      } else {\n        body = request.data as BodyInit | undefined;\n      }\n\n      const requestInit: RequestInit = {\n        method: request.method,\n        body,\n        headers,\n        follow: request.maxRedirects,\n        signal: request.signal as any,\n        timeout: request.timeout,\n      };\n\n      const response = await fetch(request.url, requestInit);\n      const isJsonResponse =\n        response.headers.get('content-type')?.includes('application/json') ??\n        false;\n\n      const bodyAsText = await response.text();\n      const bodyAsJson = isJsonResponse ? JSON.parse(bodyAsText) : undefined;\n\n      return {\n        data: bodyAsJson ?? bodyAsText,\n        body: bodyAsText,\n        ok: response.ok,\n        status: response.status,\n        statusText: response.statusText,\n        headers: Object.fromEntries(response.headers.entries()),\n      };\n    },\n  };\n}\n","\"use strict\";\n\n// ref: https://github.com/tc39/proposal-global\nvar getGlobal = function () {\n\t// the only reliable means to get the global object is\n\t// `Function('return this')()`\n\t// However, this causes CSP violations in Chrome apps.\n\tif (typeof self !== 'undefined') { return self; }\n\tif (typeof window !== 'undefined') { return window; }\n\tif (typeof global !== 'undefined') { return global; }\n\tthrow new Error('unable to locate global object');\n}\n\nvar globalObject = getGlobal();\n\nmodule.exports = exports = globalObject.fetch;\n\n// Needed for TypeScript and Webpack.\nif (globalObject.fetch) {\n\texports.default = globalObject.fetch.bind(globalObject);\n}\n\nexports.Headers = globalObject.Headers;\nexports.Request = globalObject.Request;\nexports.Response = globalObject.Response;\n",null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createFetchHttp } from './createFetchHttp';\n\nexport const fetchHttp = (): UmiPlugin => ({\n  install(umi) {\n    umi.http = createFetchHttp();\n  },\n});\n",null,null,"import {\n  Cluster,\n  ClusterFilter,\n  Context,\n  ErrorWithLogs,\n  isPublicKey,\n  Program,\n  ProgramError,\n  ProgramRepositoryInterface,\n  publicKey,\n  PublicKey,\n  PublicKeyInput,\n  Transaction,\n} from '@metaplex-foundation/umi';\nimport {\n  ProgramErrorNotRecognizedError,\n  ProgramNotRecognizedError,\n} from './errors';\n\nexport function createDefaultProgramRepository(\n  context: Pick<Context, 'rpc'>,\n  initialPrograms: Program[] = [],\n  initialBindings: Record<string, string | PublicKey> = {}\n): ProgramRepositoryInterface {\n  const programs: Program[] = [...initialPrograms];\n  const bindings: Record<string, string | PublicKey> = { ...initialBindings };\n\n  const has = (\n    identifier: string | PublicKey,\n    clusterFilter: ClusterFilter = 'current'\n  ): boolean => {\n    const programs = all(clusterFilter);\n    const resolvedIdentifier = resolveBinding(identifier);\n    return isPublicKey(resolvedIdentifier)\n      ? programs.some((p) => p.publicKey === resolvedIdentifier)\n      : programs.some((p) => p.name === resolvedIdentifier);\n  };\n\n  const get = <T extends Program = Program>(\n    identifier: string | PublicKey,\n    clusterFilter: ClusterFilter = 'current'\n  ): T => {\n    const cluster = resolveClusterFilter(clusterFilter);\n    const programs = all(clusterFilter);\n    const resolvedIdentifier = resolveBinding(identifier);\n    const program = isPublicKey(resolvedIdentifier)\n      ? programs.find((p) => p.publicKey === resolvedIdentifier)\n      : programs.find((p) => p.name === resolvedIdentifier);\n\n    if (!program) {\n      throw new ProgramNotRecognizedError(resolvedIdentifier, cluster);\n    }\n\n    return program as T;\n  };\n\n  const getPublicKey = (\n    identifier: string | PublicKey,\n    fallback?: PublicKeyInput,\n    clusterFilter?: ClusterFilter\n  ): PublicKey => {\n    try {\n      return get(identifier, clusterFilter).publicKey;\n    } catch (error) {\n      if (fallback === undefined) throw error;\n      return publicKey(fallback);\n    }\n  };\n\n  const all = (clusterFilter: ClusterFilter = 'current'): Program[] => {\n    const cluster = resolveClusterFilter(clusterFilter);\n    return cluster === '*'\n      ? programs\n      : programs.filter((program) => program.isOnCluster(cluster));\n  };\n\n  const add = (program: Program, overrides = true): void => {\n    if (!overrides && has(program.publicKey, '*')) return;\n    programs.unshift(program);\n  };\n\n  const bind = (abstract: string, concrete: string | PublicKey): void => {\n    bindings[abstract] = concrete;\n    resolveBinding(abstract); // Ensures the binding is valid.\n  };\n\n  const unbind = (abstract: string): void => {\n    delete bindings[abstract];\n  };\n\n  const clone = (): ProgramRepositoryInterface =>\n    createDefaultProgramRepository(context, programs, bindings);\n\n  const resolveError = (\n    error: ErrorWithLogs,\n    transaction: Transaction\n  ): ProgramError | null => {\n    // Ensure the error as logs.\n    if (!Array.isArray(error.logs) || error.logs.length === 0) return null;\n    const logs = error.logs.join('\\n');\n\n    // Parse the instruction number.\n    const instructionRegex = /Error processing Instruction (\\d+):/;\n    const instruction = error.message.match(instructionRegex)?.[1] ?? null;\n\n    // Parse the error code.\n    const errorCodeRegex = /Custom program error: (0x[a-f0-9]+)/i;\n    const errorCodeString = logs.match(errorCodeRegex)?.[1] ?? null;\n    const errorCode = errorCodeString ? parseInt(errorCodeString, 16) : null;\n\n    // Ensure we could find an instruction number and an error code.\n    if (instruction === null || errorCode === null) return null;\n\n    // Get the program ID from the instruction in the transaction.\n    const instructionNumber: number = parseInt(instruction, 10);\n    const programIndex: number | null =\n      transaction.message.instructions?.[instructionNumber]?.programIndex ??\n      null;\n    const programId = programIndex\n      ? transaction.message.accounts[programIndex]\n      : null;\n\n    // Ensure we were able to find a program ID for the instruction.\n    if (!programId) return null;\n\n    // Find a registered program if any.\n    let program: Program;\n    try {\n      program = get(programId);\n    } catch (_programNotFoundError) {\n      return null;\n    }\n\n    // Finally, resolve the error.\n    const resolvedError = program.getErrorFromCode(errorCode, error);\n    return resolvedError ?? new ProgramErrorNotRecognizedError(program, error);\n  };\n\n  const resolveClusterFilter = (clusterFilter: ClusterFilter): Cluster | '*' =>\n    clusterFilter === 'current' ? context.rpc.getCluster() : clusterFilter;\n\n  const resolveBinding = (\n    identifier: string | PublicKey,\n    stack: string[] = []\n  ): string | PublicKey => {\n    if (isPublicKey(identifier)) return identifier;\n    if (bindings[identifier] === undefined) return identifier;\n    const stackWithIdentifier = [...stack, identifier];\n    if (stack.includes(identifier)) {\n      throw new Error(\n        `Circular binding detected: ${stackWithIdentifier.join(' -> ')}`\n      );\n    }\n    return resolveBinding(bindings[identifier], stackWithIdentifier);\n  };\n\n  return {\n    has,\n    get,\n    getPublicKey,\n    all,\n    add,\n    bind,\n    unbind,\n    clone,\n    resolveError,\n  };\n}\n",null,"import {\n  Cluster,\n  Program,\n  ProgramError,\n  PublicKey,\n  SdkError,\n  UnderlyingProgramError,\n  isPublicKey,\n} from '@metaplex-foundation/umi';\n\nexport class ProgramNotRecognizedError extends SdkError {\n  readonly name: string = 'ProgramNotRecognizedError';\n\n  readonly identifier: string | PublicKey;\n\n  readonly cluster: Cluster | '*';\n\n  constructor(identifier: string | PublicKey, cluster: Cluster | '*') {\n    const isName = !isPublicKey(identifier);\n    const toString = isName ? identifier : identifier;\n    const clusterString = cluster === '*' ? 'any' : `the [${cluster}]`;\n    const message =\n      `The provided program ${isName ? 'name' : 'address'} [${toString}] ` +\n      `is not recognized in ${clusterString} cluster. ` +\n      'Did you forget to register this program? ' +\n      'If so, you may use \"context.programs.add(myProgram)\" to fix this.';\n    super(message);\n    this.identifier = identifier;\n    this.cluster = cluster;\n  }\n}\n\n/** @category Errors */\nexport class ProgramErrorNotRecognizedError extends ProgramError {\n  readonly name: string = 'ProgramErrorNotRecognizedError';\n\n  constructor(program: Program, cause: UnderlyingProgramError) {\n    const ofCode = cause.code ? ` of code [${cause.code}]` : '';\n    const message =\n      `The program [${program.name}] ` +\n      `at address [${program.publicKey}] ` +\n      `raised an error${ofCode} ` +\n      `that is not recognized by the programs registered on the SDK. ` +\n      `Please check the underlying program error below for more details.`;\n    super(message, program, cause);\n  }\n}\n",null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createDefaultProgramRepository } from './createDefaultProgramRepository';\n\nexport const defaultProgramRepository = (): UmiPlugin => ({\n  install(umi) {\n    umi.programs = createDefaultProgramRepository(umi);\n  },\n});\n",null,null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport type { Connection as Web3JsConnection } from '@solana/web3.js';\nimport { createWeb3JsRpc, Web3JsRpcOptions } from './createWeb3JsRpc';\n\nexport function web3JsRpc(\n  endpoint: string,\n  rpcOptions?: Web3JsRpcOptions\n): UmiPlugin;\nexport function web3JsRpc(connection: Web3JsConnection): UmiPlugin;\nexport function web3JsRpc(\n  endpointOrConnection: string | Web3JsConnection,\n  rpcOptions?: Web3JsRpcOptions\n): UmiPlugin {\n  return {\n    install(umi) {\n      umi.rpc =\n        typeof endpointOrConnection === 'string'\n          ? createWeb3JsRpc(umi, endpointOrConnection, rpcOptions)\n          : createWeb3JsRpc(umi, endpointOrConnection);\n    },\n  };\n}\n",null,"import {\n  ACCOUNT_HEADER_SIZE,\n  BlockhashWithExpiryBlockHeight,\n  Cluster,\n  Commitment,\n  CompiledInstruction,\n  Context,\n  DateTime,\n  ErrorWithLogs,\n  MaybeRpcAccount,\n  ProgramError,\n  PublicKey,\n  RpcAccount,\n  RpcAccountExistsOptions,\n  RpcAirdropOptions,\n  RpcCallOptions,\n  RpcConfirmTransactionOptions,\n  RpcConfirmTransactionResult,\n  RpcDataFilter,\n  RpcGetAccountOptions,\n  RpcGetAccountsOptions,\n  RpcGetBalanceOptions,\n  RpcGetBlockTimeOptions,\n  RpcGetLatestBlockhashOptions,\n  RpcGetProgramAccountsOptions,\n  RpcGetRentOptions,\n  RpcGetSignatureStatusesOptions,\n  RpcGetSlotOptions,\n  RpcGetTransactionOptions,\n  RpcInterface,\n  RpcSendTransactionOptions,\n  SolAmount,\n  Transaction,\n  TransactionMetaInnerInstruction,\n  TransactionMetaTokenBalance,\n  TransactionSignature,\n  TransactionStatus,\n  TransactionWithMeta,\n  createAmount,\n  dateTime,\n  isZeroAmount,\n  lamports,\n  resolveClusterFromEndpoint,\n} from '@metaplex-foundation/umi';\nimport {\n  fromWeb3JsMessage,\n  fromWeb3JsPublicKey,\n  toWeb3JsPublicKey,\n} from '@metaplex-foundation/umi-web3js-adapters';\nimport { base58 } from '@metaplex-foundation/umi/serializers';\nimport {\n  AccountInfo as Web3JsAccountInfo,\n  Connection as Web3JsConnection,\n  ConnectionConfig as Web3JsConnectionConfig,\n  GetProgramAccountsFilter as Web3JsGetProgramAccountsFilter,\n  PublicKey as Web3JsPublicKey,\n  TokenBalance as Web3JsTokenBalance,\n  TransactionConfirmationStrategy as Web3JsTransactionConfirmationStrategy,\n} from '@solana/web3.js';\nimport type { JSONRPCCallbackTypePlain } from 'jayson';\nimport type RpcClient from 'jayson/lib/client/browser';\n\nexport type Web3JsRpcOptions = Commitment | Web3JsConnectionConfig;\n\nexport function createWeb3JsRpc(\n  context: Pick<Context, 'programs' | 'transactions'>,\n  endpoint: string,\n  rpcOptions?: Web3JsRpcOptions\n): RpcInterface & { connection: Web3JsConnection };\nexport function createWeb3JsRpc(\n  context: Pick<Context, 'programs' | 'transactions'>,\n  connection: Web3JsConnection\n): RpcInterface & { connection: Web3JsConnection };\nexport function createWeb3JsRpc(\n  context: Pick<Context, 'programs' | 'transactions'>,\n  endpointOrConnection: string | Web3JsConnection,\n  rpcOptions?: Web3JsRpcOptions\n): RpcInterface & { connection: Web3JsConnection } {\n  let connection: Web3JsConnection | null = null;\n  const getConnection = () => {\n    if (connection) {\n      return connection;\n    }\n    if (typeof endpointOrConnection === 'string') {\n      connection = new Web3JsConnection(endpointOrConnection, rpcOptions);\n    } else {\n      connection = endpointOrConnection;\n    }\n    return connection;\n  };\n\n  const cluster = resolveClusterFromEndpoint(getConnection().rpcEndpoint);\n\n  const getAccount = async (\n    publicKey: PublicKey,\n    options: RpcGetAccountOptions = {}\n  ): Promise<MaybeRpcAccount> => {\n    const account = await getConnection().getAccountInfo(\n      toWeb3JsPublicKey(publicKey),\n      options\n    );\n    return parseMaybeAccount(account, publicKey);\n  };\n\n  const getAccounts = async (\n    publicKeys: PublicKey[],\n    options: RpcGetAccountsOptions = {}\n  ): Promise<MaybeRpcAccount[]> => {\n    const accounts = await getConnection().getMultipleAccountsInfo(\n      publicKeys.map(toWeb3JsPublicKey),\n      options\n    );\n    return accounts.map((account, index) =>\n      parseMaybeAccount(account, publicKeys[index])\n    );\n  };\n\n  const getProgramAccounts = async (\n    programId: PublicKey,\n    options: RpcGetProgramAccountsOptions = {}\n  ): Promise<RpcAccount[]> => {\n    const accounts = await getConnection().getProgramAccounts(\n      toWeb3JsPublicKey(programId),\n      {\n        ...options,\n        filters: options.filters?.map((filter) => parseDataFilter(filter)),\n      }\n    );\n    return accounts.map(({ pubkey, account }) =>\n      parseAccount(account, fromWeb3JsPublicKey(pubkey))\n    );\n  };\n\n  const getBlockTime = async (\n    slot: number,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _options: RpcGetBlockTimeOptions = {}\n  ): Promise<DateTime | null> => {\n    const blockTime = await getConnection().getBlockTime(slot);\n    return blockTime ? dateTime(blockTime) : null;\n  };\n\n  const getBalance = async (\n    publicKey: PublicKey,\n    options: RpcGetBalanceOptions = {}\n  ): Promise<SolAmount> => {\n    const balanceInLamports = await getConnection().getBalance(\n      toWeb3JsPublicKey(publicKey),\n      options\n    );\n    return lamports(balanceInLamports);\n  };\n\n  const getRent = async (\n    bytes: number,\n    options: RpcGetRentOptions = {}\n  ): Promise<SolAmount> => {\n    const rentFor = (bytes: number) =>\n      getConnection().getMinimumBalanceForRentExemption(\n        bytes,\n        options.commitment\n      );\n    if (options.includesHeaderBytes ?? false) {\n      const headerRent = await rentFor(0);\n      const rentPerByte = BigInt(headerRent) / BigInt(ACCOUNT_HEADER_SIZE);\n      return lamports(rentPerByte * BigInt(bytes));\n    }\n    return lamports(await rentFor(bytes));\n  };\n\n  const getLatestBlockhash = async (\n    options: RpcGetLatestBlockhashOptions = {}\n  ): Promise<BlockhashWithExpiryBlockHeight> =>\n    getConnection().getLatestBlockhash(options);\n\n  const getTransaction = async (\n    signature: TransactionSignature,\n    options: RpcGetTransactionOptions = {}\n  ): Promise<TransactionWithMeta | null> => {\n    const response = await getConnection().getTransaction(\n      base58.deserialize(signature)[0],\n      {\n        commitment: options.commitment as 'confirmed' | 'finalized' | undefined,\n        maxSupportedTransactionVersion: 0,\n      }\n    );\n\n    if (!response) {\n      return null;\n    }\n\n    if (!response.meta) {\n      // TODO: Custom error.\n      throw new Error('Transaction meta is missing.');\n    }\n\n    const { transaction, meta } = response;\n    const message = fromWeb3JsMessage(transaction.message);\n    const mapPublicKey = (key: string) =>\n      fromWeb3JsPublicKey(new Web3JsPublicKey(key));\n    const mapTokenBalance = (\n      tokenBalance: Web3JsTokenBalance\n    ): TransactionMetaTokenBalance => ({\n      accountIndex: tokenBalance.accountIndex,\n      amount: createAmount(\n        tokenBalance.uiTokenAmount.amount,\n        'splToken',\n        tokenBalance.uiTokenAmount.decimals\n      ),\n      mint: mapPublicKey(tokenBalance.mint),\n      owner: tokenBalance.owner ? mapPublicKey(tokenBalance.owner) : null,\n    });\n\n    return {\n      message,\n      serializedMessage: context.transactions.serializeMessage(message),\n      signatures: transaction.signatures.map(base58.serialize),\n      meta: {\n        fee: lamports(meta.fee),\n        logs: meta.logMessages ?? [],\n        preBalances: meta.preBalances.map(lamports),\n        postBalances: meta.postBalances.map(lamports),\n        preTokenBalances: (meta.preTokenBalances ?? []).map(mapTokenBalance),\n        postTokenBalances: (meta.postTokenBalances ?? []).map(mapTokenBalance),\n        innerInstructions:\n          meta.innerInstructions?.map(\n            (inner): TransactionMetaInnerInstruction => ({\n              index: inner.index,\n              instructions: inner.instructions.map(\n                (instruction): CompiledInstruction => ({\n                  programIndex: instruction.programIdIndex,\n                  accountIndexes: instruction.accounts,\n                  data: base58.serialize(instruction.data),\n                })\n              ),\n            })\n          ) ?? null,\n        loadedAddresses: {\n          writable: (meta.loadedAddresses?.writable ?? []).map(\n            fromWeb3JsPublicKey\n          ),\n          readonly: (meta.loadedAddresses?.readonly ?? []).map(\n            fromWeb3JsPublicKey\n          ),\n        },\n        computeUnitsConsumed: meta.computeUnitsConsumed\n          ? BigInt(meta.computeUnitsConsumed)\n          : null,\n        err: meta.err,\n      },\n    };\n  };\n\n  const getSignatureStatuses = async (\n    signatures: TransactionSignature[],\n    options: RpcGetSignatureStatusesOptions = {}\n  ): Promise<Array<TransactionStatus | null>> => {\n    const response = await getConnection().getSignatureStatuses(\n      signatures.map((signature) => base58.deserialize(signature)[0]),\n      { searchTransactionHistory: options?.searchTransactionHistory ?? false }\n    );\n    return response.value.map((status) => {\n      if (!status) return null;\n      return {\n        slot: status.slot,\n        confirmations: status.confirmations,\n        error: status.err,\n        commitment: status.confirmationStatus ?? null,\n      };\n    });\n  };\n\n  const accountExists = async (\n    publicKey: PublicKey,\n    options: RpcAccountExistsOptions = {}\n  ): Promise<boolean> => !isZeroAmount(await getBalance(publicKey, options));\n\n  const airdrop = async (\n    publicKey: PublicKey,\n    amount: SolAmount,\n    options: RpcAirdropOptions = {}\n  ): Promise<void> => {\n    const signature = await getConnection().requestAirdrop(\n      toWeb3JsPublicKey(publicKey),\n      Number(amount.basisPoints)\n    );\n    if (options.strategy) {\n      await confirmTransaction(\n        base58.serialize(signature),\n        options as RpcConfirmTransactionOptions\n      );\n      return;\n    }\n    await confirmTransaction(base58.serialize(signature), {\n      ...options,\n      strategy: { type: 'blockhash', ...(await getLatestBlockhash()) },\n    });\n  };\n\n  const call = async <Result, Params extends any[] = any[]>(\n    method: string,\n    params?: [...Params],\n    options: RpcCallOptions = {}\n  ): Promise<Result> => {\n    const client = (getConnection() as any)._rpcClient as RpcClient;\n    const resolvedParams = resolveCallParams(\n      (params ? [...params] : []) as [...Params],\n      options.commitment,\n      options.extra\n    );\n    return new Promise((resolve, reject) => {\n      const callback: JSONRPCCallbackTypePlain = (error, response) =>\n        error ? reject(error) : resolve(response.result);\n      if (options.id) {\n        client.request(method, resolvedParams, options.id, callback);\n      } else {\n        client.request(method, resolvedParams, callback);\n      }\n    });\n  };\n\n  const sendTransaction = async (\n    transaction: Transaction,\n    options: RpcSendTransactionOptions = {}\n  ): Promise<TransactionSignature> => {\n    try {\n      const signature = await getConnection().sendRawTransaction(\n        context.transactions.serialize(transaction),\n        options\n      );\n      return base58.serialize(signature);\n    } catch (error: any) {\n      let resolvedError: ProgramError | null = null;\n      if (error instanceof Error && 'logs' in error) {\n        resolvedError = context.programs.resolveError(\n          error as ErrorWithLogs,\n          transaction\n        );\n      }\n      throw resolvedError || error;\n    }\n  };\n\n  const confirmTransaction = async (\n    signature: TransactionSignature,\n    options: RpcConfirmTransactionOptions\n  ): Promise<RpcConfirmTransactionResult> =>\n    getConnection().confirmTransaction(\n      parseConfirmStrategy(signature, options),\n      options.commitment\n    );\n\n  return {\n    getEndpoint: (): string => getConnection().rpcEndpoint,\n    getCluster: (): Cluster => cluster,\n    getAccount,\n    getAccounts,\n    getProgramAccounts,\n    getBlockTime,\n    getBalance,\n    getRent,\n    getSlot: async (options: RpcGetSlotOptions = {}) =>\n      getConnection().getSlot(options),\n    getLatestBlockhash,\n    getTransaction,\n    getSignatureStatuses,\n    accountExists,\n    airdrop,\n    call,\n    sendTransaction,\n    confirmTransaction,\n\n    get connection() {\n      return getConnection();\n    },\n  };\n}\n\nfunction parseAccount(\n  account: Web3JsAccountInfo<Uint8Array>,\n  publicKey: PublicKey\n): RpcAccount {\n  return {\n    executable: account.executable,\n    owner: fromWeb3JsPublicKey(account.owner),\n    lamports: lamports(account.lamports),\n    rentEpoch: account.rentEpoch ? BigInt(account.rentEpoch) : undefined,\n    publicKey,\n    data: new Uint8Array(account.data),\n  };\n}\n\nfunction parseMaybeAccount(\n  account: Web3JsAccountInfo<Uint8Array> | null,\n  publicKey: PublicKey\n): MaybeRpcAccount {\n  return account\n    ? { ...parseAccount(account, publicKey), exists: true }\n    : { exists: false, publicKey };\n}\n\nfunction parseDataFilter(\n  filter: RpcDataFilter\n): Web3JsGetProgramAccountsFilter {\n  if (!('memcmp' in filter)) return filter;\n  const { bytes, ...rest } = filter.memcmp;\n  return { memcmp: { ...rest, bytes: base58.deserialize(bytes)[0] } };\n}\n\nfunction parseConfirmStrategy(\n  signature: TransactionSignature,\n  options: RpcConfirmTransactionOptions\n): Web3JsTransactionConfirmationStrategy {\n  if (options.strategy.type === 'blockhash') {\n    return {\n      ...options.strategy,\n      signature: base58.deserialize(signature)[0],\n    };\n  }\n  return {\n    ...options.strategy,\n    signature: base58.deserialize(signature)[0],\n    nonceAccountPubkey: toWeb3JsPublicKey(options.strategy.nonceAccountPubkey),\n  };\n}\n\nfunction resolveCallParams<Params extends any[]>(\n  args: Params,\n  commitment?: Commitment,\n  extra?: object\n): Params {\n  if (!commitment && !extra) return args;\n  let options: any = {};\n  if (commitment) options.commitment = commitment;\n  if (extra) options = { ...options, ...extra };\n  args.push(options);\n  return args;\n}\n",null,null,null,"import { RpcInterface, chunk } from '@metaplex-foundation/umi';\n\nexport interface ChunkGetAccountsRpcOptions {\n  getAccountsChunkSize?: number;\n}\n\nexport const createChunkGetAccountsRpc = (\n  rpc: RpcInterface,\n  chunkSize = 100\n): RpcInterface => ({\n  ...rpc,\n  getAccounts: async (publicKeys, options) => {\n    const promises = chunk(publicKeys, chunkSize).map((chunk) =>\n      rpc.getAccounts(chunk, options)\n    );\n    const chunks = await Promise.all(promises);\n    return chunks.flat();\n  },\n});\n",null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createChunkGetAccountsRpc } from './createChunkGetAccountsRpc';\n\nexport const chunkGetAccountsRpc = (chunkSize = 100): UmiPlugin => ({\n  install(umi) {\n    umi.rpc = createChunkGetAccountsRpc(umi.rpc, chunkSize);\n  },\n});\n",null,null,"import { SerializerInterface } from '@metaplex-foundation/umi';\nimport {\n  array,\n  bool,\n  bytes,\n  dataEnum,\n  f32,\n  f64,\n  i128,\n  i16,\n  i32,\n  i64,\n  i8,\n  map,\n  nullable,\n  option,\n  publicKey,\n  scalarEnum,\n  set,\n  string,\n  struct,\n  tuple,\n  u128,\n  u16,\n  u32,\n  u64,\n  u8,\n  unit,\n} from '@metaplex-foundation/umi/serializers';\n\nexport type DataViewSerializerOptions = {};\n\nexport function createDataViewSerializer(\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  options: DataViewSerializerOptions = {}\n): SerializerInterface {\n  return {\n    tuple,\n    array,\n    map,\n    set,\n    option,\n    nullable,\n    struct,\n    enum: scalarEnum,\n    dataEnum,\n    string,\n    bool,\n    unit,\n    u8,\n    u16,\n    u32,\n    u64,\n    u128,\n    i8,\n    i16,\n    i32,\n    i64,\n    i128,\n    f32,\n    f64,\n    bytes,\n    publicKey,\n  };\n}\n",null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport {\n  DataViewSerializerOptions,\n  createDataViewSerializer,\n} from './createDataViewSerializer';\n\nexport const dataViewSerializer = (\n  options: DataViewSerializerOptions = {}\n): UmiPlugin => ({\n  install(umi) {\n    umi.serializer = createDataViewSerializer(options);\n  },\n});\n",null,null,"import { UmiPlugin } from '@metaplex-foundation/umi';\nimport { createWeb3JsTransactionFactory } from './createWeb3JsTransactionFactory';\n\nexport const web3JsTransactionFactory = (): UmiPlugin => ({\n  install(umi) {\n    umi.transactions = createWeb3JsTransactionFactory();\n  },\n});\n",null,"/* eslint-disable no-bitwise */\nimport {\n  CompiledAddressLookupTable,\n  CompiledInstruction,\n  SdkError,\n  SerializedTransaction,\n  SerializedTransactionMessage,\n  Transaction,\n  TransactionFactoryInterface,\n  TransactionInput,\n  TransactionMessage,\n  TransactionMessageHeader,\n  TransactionVersion,\n} from '@metaplex-foundation/umi';\nimport {\n  shortU16,\n  base58,\n  Serializer,\n  mapSerializer,\n  struct,\n  bytes,\n  array,\n  string,\n  publicKey,\n  u8,\n} from '@metaplex-foundation/umi/serializers';\nimport {\n  fromWeb3JsMessage,\n  toWeb3JsMessageFromInput,\n} from '@metaplex-foundation/umi-web3js-adapters';\nimport { VersionedTransaction as Web3JsTransaction } from '@solana/web3.js';\n\nconst TRANSACTION_VERSION_FLAG = 0x80;\nconst TRANSACTION_VERSION_MASK = 0x7f;\n\nexport function createWeb3JsTransactionFactory(): TransactionFactoryInterface {\n  const create = (input: TransactionInput): Transaction => {\n    const web3JsMessage = toWeb3JsMessageFromInput(input);\n    const message = fromWeb3JsMessage(web3JsMessage);\n    const web3JsTransaction = new Web3JsTransaction(\n      web3JsMessage,\n      input.signatures\n    );\n    return {\n      message,\n      serializedMessage: serializeMessage(message),\n      signatures: web3JsTransaction.signatures,\n    };\n  };\n\n  const serialize = (transaction: Transaction): SerializedTransaction =>\n    getTransactionSerializer().serialize(transaction);\n\n  const deserialize = (\n    serializedTransaction: SerializedTransaction\n  ): Transaction =>\n    getTransactionSerializer().deserialize(serializedTransaction)[0];\n\n  const serializeMessage = (\n    message: TransactionMessage\n  ): SerializedTransactionMessage =>\n    getTransactionMessageSerializer().serialize(message);\n\n  const deserializeMessage = (\n    serializedMessage: SerializedTransactionMessage\n  ): TransactionMessage =>\n    getTransactionMessageSerializer().deserialize(serializedMessage)[0];\n\n  const getTransactionSerializer = (): Serializer<Transaction> => ({\n    ...mapSerializer(\n      struct<Omit<Transaction, 'message'>>([\n        ['signatures', array(bytes({ size: 64 }), { size: shortU16() })],\n        ['serializedMessage', bytes()],\n      ]),\n      (value: Transaction): Omit<Transaction, 'message'> => value,\n      (value: Omit<Transaction, 'message'>): Transaction => ({\n        ...value,\n        message: deserializeMessage(value.serializedMessage),\n      })\n    ),\n    description: 'Transaction',\n  });\n\n  const getTransactionMessageSerializer =\n    (): Serializer<TransactionMessage> => ({\n      description: 'TransactionMessage',\n      fixedSize: null,\n      maxSize: null,\n      serialize: (value: TransactionMessage): Uint8Array => {\n        const serializer = getTransactionMessageSerializerForVersion(\n          value.version\n        );\n        return serializer.serialize(value);\n      },\n      deserialize: (\n        bytes: Uint8Array,\n        offset = 0\n      ): [TransactionMessage, number] => {\n        const [version] = getTransactionVersionSerializer().deserialize(\n          bytes,\n          offset\n        );\n        const serializer = getTransactionMessageSerializerForVersion(version);\n        return serializer.deserialize(bytes, offset);\n      },\n    });\n\n  const getTransactionMessageSerializerForVersion = (\n    version: TransactionVersion\n  ): Serializer<TransactionMessage> =>\n    struct<TransactionMessage, TransactionMessage>([\n      ['version', getTransactionVersionSerializer()],\n      ['header', getTransactionMessageHeaderSerializer()],\n      ['accounts', array(publicKey(), { size: shortU16() })],\n      ['blockhash', string({ encoding: base58, size: 32 })],\n      [\n        'instructions',\n        array(getCompiledInstructionSerializer(), { size: shortU16() }),\n      ],\n      [\n        'addressLookupTables',\n        array(getCompiledAddressLookupTableSerializer(), {\n          size: version === 'legacy' ? 0 : shortU16(),\n        }),\n      ],\n    ]);\n\n  const getTransactionVersionSerializer =\n    (): Serializer<TransactionVersion> => ({\n      description: 'TransactionVersion',\n      fixedSize: null,\n      maxSize: 1,\n      serialize: (value: TransactionVersion): Uint8Array => {\n        if (value === 'legacy') return new Uint8Array([]);\n        return new Uint8Array([TRANSACTION_VERSION_FLAG | value]);\n      },\n      deserialize: (\n        bytes: Uint8Array,\n        offset = 0\n      ): [TransactionVersion, number] => {\n        const slice = bytes.slice(offset);\n        if (slice.length === 0 || (slice[0] & TRANSACTION_VERSION_FLAG) === 0) {\n          return ['legacy', offset];\n        }\n        const version = slice[0] & TRANSACTION_VERSION_MASK;\n        if (version > 0) {\n          throw new SdkError(`Unsupported transaction version: ${version}.`);\n        }\n        return [version as TransactionVersion, offset + 1];\n      },\n    });\n\n  const getTransactionMessageHeaderSerializer =\n    (): Serializer<TransactionMessageHeader> =>\n      struct([\n        ['numRequiredSignatures', u8()],\n        ['numReadonlySignedAccounts', u8()],\n        ['numReadonlyUnsignedAccounts', u8()],\n      ]);\n\n  const getCompiledInstructionSerializer =\n    (): Serializer<CompiledInstruction> =>\n      struct([\n        ['programIndex', u8()],\n        ['accountIndexes', array(u8(), { size: shortU16() })],\n        ['data', bytes({ size: shortU16() })],\n      ]);\n\n  const getCompiledAddressLookupTableSerializer =\n    (): Serializer<CompiledAddressLookupTable> =>\n      struct([\n        ['publicKey', publicKey()],\n        ['writableIndexes', array(u8(), { size: shortU16() })],\n        ['readonlyIndexes', array(u8(), { size: shortU16() })],\n      ]);\n\n  return {\n    create,\n    serialize,\n    deserialize,\n    serializeMessage,\n    deserializeMessage,\n  };\n}\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./client\"), exports);\n__exportStar(require(\"./query\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./accounts\"), exports);\n__exportStar(require(\"./errors\"), exports);\n__exportStar(require(\"./instructions\"), exports);\n__exportStar(require(\"./programs\"), exports);\n__exportStar(require(\"./shared\"), exports);\n__exportStar(require(\"./types\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./govBoardingConfig\"), exports);\n__exportStar(require(\"./governanceEntry\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGovBoardingConfigGpaBuilder = exports.safeFetchAllGovBoardingConfig = exports.fetchAllGovBoardingConfig = exports.safeFetchGovBoardingConfig = exports.fetchGovBoardingConfig = exports.deserializeGovBoardingConfig = exports.getGovBoardingConfigAccountDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nfunction getGovBoardingConfigAccountDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['verifierRealm', (0, serializers_1.publicKey)()],\n        ['admin', (0, serializers_1.publicKey)()],\n        ['verifierOverride', (0, serializers_1.option)((0, serializers_1.publicKey)())],\n    ], { description: 'GovBoardingConfigAccountData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [131, 250, 238, 215, 122, 68, 90, 179] })));\n}\nexports.getGovBoardingConfigAccountDataSerializer = getGovBoardingConfigAccountDataSerializer;\nfunction deserializeGovBoardingConfig(rawAccount) {\n    return (0, umi_1.deserializeAccount)(rawAccount, getGovBoardingConfigAccountDataSerializer());\n}\nexports.deserializeGovBoardingConfig = deserializeGovBoardingConfig;\nfunction fetchGovBoardingConfig(context, publicKey, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccount = yield context.rpc.getAccount((0, umi_1.publicKey)(publicKey, false), options);\n        (0, umi_1.assertAccountExists)(maybeAccount, 'GovBoardingConfig');\n        return deserializeGovBoardingConfig(maybeAccount);\n    });\n}\nexports.fetchGovBoardingConfig = fetchGovBoardingConfig;\nfunction safeFetchGovBoardingConfig(context, publicKey, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccount = yield context.rpc.getAccount((0, umi_1.publicKey)(publicKey, false), options);\n        return maybeAccount.exists\n            ? deserializeGovBoardingConfig(maybeAccount)\n            : null;\n    });\n}\nexports.safeFetchGovBoardingConfig = safeFetchGovBoardingConfig;\nfunction fetchAllGovBoardingConfig(context, publicKeys, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccounts = yield context.rpc.getAccounts(publicKeys.map((key) => (0, umi_1.publicKey)(key, false)), options);\n        return maybeAccounts.map((maybeAccount) => {\n            (0, umi_1.assertAccountExists)(maybeAccount, 'GovBoardingConfig');\n            return deserializeGovBoardingConfig(maybeAccount);\n        });\n    });\n}\nexports.fetchAllGovBoardingConfig = fetchAllGovBoardingConfig;\nfunction safeFetchAllGovBoardingConfig(context, publicKeys, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccounts = yield context.rpc.getAccounts(publicKeys.map((key) => (0, umi_1.publicKey)(key, false)), options);\n        return maybeAccounts\n            .filter((maybeAccount) => maybeAccount.exists)\n            .map((maybeAccount) => deserializeGovBoardingConfig(maybeAccount));\n    });\n}\nexports.safeFetchAllGovBoardingConfig = safeFetchAllGovBoardingConfig;\nfunction getGovBoardingConfigGpaBuilder(context) {\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    return (0, umi_1.gpaBuilder)(context, programId)\n        .registerFields({\n        discriminator: [0, (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        verifierRealm: [8, (0, serializers_1.publicKey)()],\n        admin: [40, (0, serializers_1.publicKey)()],\n        verifierOverride: [72, (0, serializers_1.option)((0, serializers_1.publicKey)())],\n    })\n        .deserializeUsing((account) => deserializeGovBoardingConfig(account))\n        .whereField('discriminator', [131, 250, 238, 215, 122, 68, 90, 179]);\n}\nexports.getGovBoardingConfigGpaBuilder = getGovBoardingConfigGpaBuilder;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiOptions = require('@metaplex-foundation/umi-options');\nvar umiPublicKeys = require('@metaplex-foundation/umi-public-keys');\nvar serializersInternal = require('./serializersInternal.cjs');\nvar Account = require('./Account.cjs');\nvar Amount = require('./Amount.cjs');\nvar BigInt = require('./BigInt.cjs');\nvar Cluster = require('./Cluster.cjs');\nvar Context = require('./Context.cjs');\nvar DateTime = require('./DateTime.cjs');\nvar DownloaderInterface = require('./DownloaderInterface.cjs');\nvar EddsaInterface = require('./EddsaInterface.cjs');\nvar GenericFile = require('./GenericFile.cjs');\nvar GpaBuilder = require('./GpaBuilder.cjs');\nvar HttpInterface = require('./HttpInterface.cjs');\nvar HttpRequest = require('./HttpRequest.cjs');\nvar Keypair = require('./Keypair.cjs');\nvar Program = require('./Program.cjs');\nvar ProgramRepositoryInterface = require('./ProgramRepositoryInterface.cjs');\nvar RpcInterface = require('./RpcInterface.cjs');\nvar SerializerInterface = require('./SerializerInterface.cjs');\nvar Signer = require('./Signer.cjs');\nvar SignerPlugins = require('./SignerPlugins.cjs');\nvar Transaction = require('./Transaction.cjs');\nvar TransactionBuilder = require('./TransactionBuilder.cjs');\nvar TransactionBuilderGroup = require('./TransactionBuilderGroup.cjs');\nvar TransactionFactoryInterface = require('./TransactionFactoryInterface.cjs');\nvar Umi = require('./Umi.cjs');\nvar UploaderInterface = require('./UploaderInterface.cjs');\nvar AccountNotFoundError = require('./errors/AccountNotFoundError.cjs');\nvar AmountMismatchError = require('./errors/AmountMismatchError.cjs');\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\nvar InvalidBaseStringError = require('./errors/InvalidBaseStringError.cjs');\nvar ProgramError = require('./errors/ProgramError.cjs');\nvar SdkError = require('./errors/SdkError.cjs');\nvar UmiError = require('./errors/UmiError.cjs');\nvar UnexpectedAccountError = require('./errors/UnexpectedAccountError.cjs');\nvar UnexpectedAmountError = require('./errors/UnexpectedAmountError.cjs');\nvar arrays = require('./utils/arrays.cjs');\nvar randomStrings = require('./utils/randomStrings.cjs');\n\n\n\nexports.Endian = serializersInternal.Endian;\nexports.base10 = serializersInternal.base10;\nexports.base16 = serializersInternal.base16;\nexports.base58 = serializersInternal.base58;\nexports.base64 = serializersInternal.base64;\nexports.baseX = serializersInternal.baseX;\nexports.bitArray = serializersInternal.bitArray;\nexports.fixBytes = serializersInternal.fixBytes;\nexports.fixSerializer = serializersInternal.fixSerializer;\nexports.mapSerializer = serializersInternal.mapSerializer;\nexports.mergeBytes = serializersInternal.mergeBytes;\nexports.padBytes = serializersInternal.padBytes;\nexports.padNullCharacters = serializersInternal.padNullCharacters;\nexports.removeNullCharacters = serializersInternal.removeNullCharacters;\nexports.reverseSerializer = serializersInternal.reverseSerializer;\nexports.utf8 = serializersInternal.utf8;\nexports.ACCOUNT_HEADER_SIZE = Account.ACCOUNT_HEADER_SIZE;\nexports.assertAccountExists = Account.assertAccountExists;\nexports.deserializeAccount = Account.deserializeAccount;\nexports.absoluteAmount = Amount.absoluteAmount;\nexports.addAmounts = Amount.addAmounts;\nexports.amountToNumber = Amount.amountToNumber;\nexports.amountToString = Amount.amountToString;\nexports.assertAmount = Amount.assertAmount;\nexports.assertSameAmounts = Amount.assertSameAmounts;\nexports.assertSolAmount = Amount.assertSolAmount;\nexports.compareAmounts = Amount.compareAmounts;\nexports.createAmount = Amount.createAmount;\nexports.createAmountFromDecimals = Amount.createAmountFromDecimals;\nexports.displayAmount = Amount.displayAmount;\nexports.divideAmount = Amount.divideAmount;\nexports.isAmount = Amount.isAmount;\nexports.isEqualToAmount = Amount.isEqualToAmount;\nexports.isGreaterThanAmount = Amount.isGreaterThanAmount;\nexports.isGreaterThanOrEqualToAmount = Amount.isGreaterThanOrEqualToAmount;\nexports.isLessThanAmount = Amount.isLessThanAmount;\nexports.isLessThanOrEqualToAmount = Amount.isLessThanOrEqualToAmount;\nexports.isNegativeAmount = Amount.isNegativeAmount;\nexports.isPositiveAmount = Amount.isPositiveAmount;\nexports.isSolAmount = Amount.isSolAmount;\nexports.isZeroAmount = Amount.isZeroAmount;\nexports.lamports = Amount.lamports;\nexports.mapAmountSerializer = Amount.mapAmountSerializer;\nexports.multiplyAmount = Amount.multiplyAmount;\nexports.percentAmount = Amount.percentAmount;\nexports.sameAmounts = Amount.sameAmounts;\nexports.sol = Amount.sol;\nexports.subtractAmounts = Amount.subtractAmounts;\nexports.tokenAmount = Amount.tokenAmount;\nexports.usd = Amount.usd;\nexports.createBigInt = BigInt.createBigInt;\nexports.resolveClusterFromEndpoint = Cluster.resolveClusterFromEndpoint;\nexports.createNullContext = Context.createNullContext;\nexports.dateTime = DateTime.dateTime;\nexports.formatDateTime = DateTime.formatDateTime;\nexports.mapDateTimeSerializer = DateTime.mapDateTimeSerializer;\nexports.now = DateTime.now;\nexports.createNullDownloader = DownloaderInterface.createNullDownloader;\nexports.createNullEddsa = EddsaInterface.createNullEddsa;\nexports.createBrowserFileFromGenericFile = GenericFile.createBrowserFileFromGenericFile;\nexports.createGenericFile = GenericFile.createGenericFile;\nexports.createGenericFileFromBrowserFile = GenericFile.createGenericFileFromBrowserFile;\nexports.createGenericFileFromJson = GenericFile.createGenericFileFromJson;\nexports.getBytesFromGenericFiles = GenericFile.getBytesFromGenericFiles;\nexports.isGenericFile = GenericFile.isGenericFile;\nexports.parseJsonFromGenericFile = GenericFile.parseJsonFromGenericFile;\nexports.GpaBuilder = GpaBuilder.GpaBuilder;\nexports.gpaBuilder = GpaBuilder.gpaBuilder;\nexports.createNullHttp = HttpInterface.createNullHttp;\nexports.HttpRequestBuilder = HttpRequest.HttpRequestBuilder;\nexports.request = HttpRequest.request;\nexports.createSignerFromKeypair = Keypair.createSignerFromKeypair;\nexports.generateSigner = Keypair.generateSigner;\nexports.isKeypairSigner = Keypair.isKeypairSigner;\nexports.isErrorWithLogs = Program.isErrorWithLogs;\nexports.createNullProgramRepository = ProgramRepositoryInterface.createNullProgramRepository;\nexports.createNullRpc = RpcInterface.createNullRpc;\nexports.createNullSerializer = SerializerInterface.createNullSerializer;\nexports.createNoopSigner = Signer.createNoopSigner;\nexports.createNullSigner = Signer.createNullSigner;\nexports.isSigner = Signer.isSigner;\nexports.signAllTransactions = Signer.signAllTransactions;\nexports.signTransaction = Signer.signTransaction;\nexports.uniqueSigners = Signer.uniqueSigners;\nexports.generatedSignerIdentity = SignerPlugins.generatedSignerIdentity;\nexports.generatedSignerPayer = SignerPlugins.generatedSignerPayer;\nexports.keypairIdentity = SignerPlugins.keypairIdentity;\nexports.keypairPayer = SignerPlugins.keypairPayer;\nexports.signerIdentity = SignerPlugins.signerIdentity;\nexports.signerPayer = SignerPlugins.signerPayer;\nexports.TRANSACTION_SIZE_LIMIT = Transaction.TRANSACTION_SIZE_LIMIT;\nexports.addTransactionSignature = Transaction.addTransactionSignature;\nexports.TransactionBuilder = TransactionBuilder.TransactionBuilder;\nexports.transactionBuilder = TransactionBuilder.transactionBuilder;\nexports.TransactionBuilderGroup = TransactionBuilderGroup.TransactionBuilderGroup;\nexports.transactionBuilderGroup = TransactionBuilderGroup.transactionBuilderGroup;\nexports.createNullTransactionFactory = TransactionFactoryInterface.createNullTransactionFactory;\nexports.createUmi = Umi.createUmi;\nexports.createNullUploader = UploaderInterface.createNullUploader;\nexports.AccountNotFoundError = AccountNotFoundError.AccountNotFoundError;\nexports.AmountMismatchError = AmountMismatchError.AmountMismatchError;\nexports.InterfaceImplementationMissingError = InterfaceImplementationMissingError.InterfaceImplementationMissingError;\nexports.InvalidBaseStringError = InvalidBaseStringError.InvalidBaseStringError;\nexports.ProgramError = ProgramError.ProgramError;\nexports.SdkError = SdkError.SdkError;\nexports.UmiError = UmiError.UmiError;\nexports.UnexpectedAccountError = UnexpectedAccountError.UnexpectedAccountError;\nexports.UnexpectedAmountError = UnexpectedAmountError.UnexpectedAmountError;\nexports.chunk = arrays.chunk;\nexports.uniqueBy = arrays.uniqueBy;\nexports.zipMap = arrays.zipMap;\nexports.generateRandomString = randomStrings.generateRandomString;\nObject.keys(umiOptions).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiOptions[k]; }\n\t});\n});\nObject.keys(umiPublicKeys).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiPublicKeys[k]; }\n\t});\n});\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar unwrapOption = require('./unwrapOption.cjs');\nvar unwrapOptionRecursively = require('./unwrapOptionRecursively.cjs');\n\n\n\nexports.isNone = common.isNone;\nexports.isOption = common.isOption;\nexports.isSome = common.isSome;\nexports.none = common.none;\nexports.some = common.some;\nexports.unwrapOption = unwrapOption.unwrapOption;\nexports.unwrapSome = unwrapOption.unwrapSome;\nexports.unwrapSomeOrElse = unwrapOption.unwrapSomeOrElse;\nexports.wrapNullable = unwrapOption.wrapNullable;\nexports.unwrapOptionRecursively = unwrapOptionRecursively.unwrapOptionRecursively;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Defines a type `T` that can also be `null`.\n * @category Utils — Options\n */\n\n/**\n * An implementation of the Rust Option type in JavaScript.\n * It can be one of the following:\n * - <code>{@link Some}<T></code>: Meaning there is a value of type T.\n * - <code>{@link None}</code>: Meaning there is no value.\n *\n * @category Utils — Options\n */\n\n/**\n * Defines a looser type that can be used when serializing an {@link Option}.\n * This allows us to pass null or the Option value directly whilst still\n * supporting the Option type for use-cases that need more type safety.\n *\n * @category Utils — Options\n */\n\n/**\n * Represents an option of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\n\n/**\n * Represents an option of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\n\n/**\n * Creates a new {@link Option} of type `T` that has a value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nconst some = value => ({\n  __option: 'Some',\n  value\n});\n\n/**\n * Creates a new {@link Option} of type `T` that has no value.\n *\n * @see {@link Option}\n * @category Utils — Options\n */\nconst none = () => ({\n  __option: 'None'\n});\n\n/**\n * Whether the given data is an {@link Option}.\n * @category Utils — Options\n */\nconst isOption = input => input && typeof input === 'object' && '__option' in input && (input.__option === 'Some' && 'value' in input || input.__option === 'None');\n\n/**\n * Whether the given {@link Option} is a {@link Some}.\n * @category Utils — Options\n */\nconst isSome = option => option.__option === 'Some';\n\n/**\n * Whether the given {@link Option} is a {@link None}.\n * @category Utils — Options\n */\nconst isNone = option => option.__option === 'None';\n\nexports.isNone = isNone;\nexports.isOption = isOption;\nexports.isSome = isSome;\nexports.none = none;\nexports.some = some;\n//# sourceMappingURL=common.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a fallback value that defaults to `null`.\n *\n * @category Utils — Options\n */\n\nfunction unwrapOption(option, fallback) {\n  if (common.isSome(option)) return option.value;\n  return fallback ? fallback() : null;\n}\n\n/**\n * Wraps a nullable value into an {@link Option}.\n *\n * @category Utils — Options\n */\nconst wrapNullable = nullable => nullable !== null ? common.some(nullable) : common.none();\n\n/**\n * Unwraps the value of an {@link Option} of type `T`.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns `null`.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nconst unwrapSome = option => common.isSome(option) ? option.value : null;\n\n/**\n * Unwraps the value of an {@link Option} of type `T`\n * or returns a custom fallback value.\n * If the option is a {@link Some}, it returns its value,\n * Otherwise, it returns the return value of the provided fallback callback.\n *\n * @category Utils — Options\n * @deprecated Use {@link unwrapOption} instead.\n */\nconst unwrapSomeOrElse = (option, fallback) => common.isSome(option) ? option.value : fallback();\n\nexports.unwrapOption = unwrapOption;\nexports.unwrapSome = unwrapSome;\nexports.unwrapSomeOrElse = unwrapSomeOrElse;\nexports.wrapNullable = wrapNullable;\n//# sourceMappingURL=unwrapOption.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\n\n/**\n * A type that defines the recursive unwrapping of a type `T`\n * such that all nested {@link Option} types are unwrapped.\n *\n * For each nested {@link Option} type, if the option is a {@link Some},\n * it returns the type of its value, otherwise, it returns the provided\n * fallback type `U` which defaults to `null`.\n *\n * @category Utils — Options\n */\n\nfunction unwrapOptionRecursively(input, fallback) {\n  // Types to bypass.\n  if (!input || ArrayBuffer.isView(input)) {\n    return input;\n  }\n  const next = x => fallback ? unwrapOptionRecursively(x, fallback) : unwrapOptionRecursively(x);\n\n  // Handle Option.\n  if (common.isOption(input)) {\n    if (common.isSome(input)) return next(input.value);\n    return fallback ? fallback() : null;\n  }\n\n  // Walk.\n  if (Array.isArray(input)) {\n    return input.map(next);\n  }\n  if (typeof input === 'object') {\n    return Object.fromEntries(Object.entries(input).map(([k, v]) => [k, next(v)]));\n  }\n  return input;\n}\n\nexports.unwrapOptionRecursively = unwrapOptionRecursively;\n//# sourceMappingURL=unwrapOptionRecursively.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar errors = require('./errors.cjs');\n\n\n\nexports.PUBLIC_KEY_LENGTH = common.PUBLIC_KEY_LENGTH;\nexports.assertPublicKey = common.assertPublicKey;\nexports.base58PublicKey = common.base58PublicKey;\nexports.defaultPublicKey = common.defaultPublicKey;\nexports.isPda = common.isPda;\nexports.isPublicKey = common.isPublicKey;\nexports.publicKey = common.publicKey;\nexports.publicKeyBytes = common.publicKeyBytes;\nexports.samePublicKey = common.samePublicKey;\nexports.uniquePublicKeys = common.uniquePublicKeys;\nexports.InvalidPublicKeyError = errors.InvalidPublicKeyError;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersEncodings = require('@metaplex-foundation/umi-serializers-encodings');\nvar errors = require('./errors.cjs');\n\n/**\n * The amount of bytes in a public key.\n * @category Signers and PublicKeys\n */\nconst PUBLIC_KEY_LENGTH = 32;\n\n/**\n * Defines a public key as a base58 string.\n * @category Signers and PublicKeys\n */\n\nfunction publicKey(input, assertValidPublicKey = true) {\n  const key = (() => {\n    if (typeof input === 'string') {\n      return input;\n    }\n    // HasPublicKey.\n    if (typeof input === 'object' && 'publicKey' in input) {\n      return input.publicKey;\n    }\n    // LegacyWeb3JsPublicKey.\n    if (typeof input === 'object' && 'toBase58' in input) {\n      return input.toBase58();\n    }\n    // Pda.\n    if (Array.isArray(input)) {\n      return input[0];\n    }\n    // PublicKeyBytes.\n    return umiSerializersEncodings.base58.deserialize(input)[0];\n  })();\n  if (assertValidPublicKey) {\n    assertPublicKey(key);\n  }\n  return key;\n}\n\n/**\n * Creates the default public key which is composed of all zero bytes.\n * @category Signers and PublicKeys\n */\nconst defaultPublicKey = () => '11111111111111111111111111111111';\n\n/**\n * Whether the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nconst isPublicKey = value => {\n  try {\n    assertPublicKey(value);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\n/**\n * Whether the given value is a valid program-derived address.\n * @category Signers and PublicKeys\n */\nconst isPda = value => Array.isArray(value) && value.length === 2 && typeof value[1] === 'number' && isPublicKey(value[0]);\n\n/**\n * Ensures the given value is a valid public key.\n * @category Signers and PublicKeys\n */\nfunction assertPublicKey(value) {\n  // Check value type.\n  if (typeof value !== 'string') {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be strings.');\n  }\n\n  // Check base58 encoding and byte length.\n  publicKeyBytes(value);\n}\n\n/**\n * Deduplicates the given array of public keys.\n * @category Signers and PublicKeys\n */\nconst uniquePublicKeys = publicKeys => [...new Set(publicKeys)];\n\n/**\n * Converts the given public key to a Uint8Array.\n * Throws an error if the public key is an invalid base58 string.\n * @category Signers and PublicKeys\n */\nconst publicKeyBytes = value => {\n  // Check string length to avoid unnecessary base58 encoding.\n  if (value.length < 32 || value.length > 44) {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be between 32 and 44 characters.');\n  }\n\n  // Check base58 encoding.\n  let bytes;\n  try {\n    bytes = umiSerializersEncodings.base58.serialize(value);\n  } catch (error) {\n    throw new errors.InvalidPublicKeyError(value, 'Public keys must be base58 encoded.');\n  }\n\n  // Check byte length.\n  if (bytes.length !== PUBLIC_KEY_LENGTH) {\n    throw new errors.InvalidPublicKeyError(value, `Public keys must be ${PUBLIC_KEY_LENGTH} bytes.`);\n  }\n  return bytes;\n};\n\n/**\n * Converts the given public key to a base58 string.\n * @category Signers and PublicKeys\n * @deprecated Public keys are now represented directly as base58 strings.\n */\nconst base58PublicKey = key => publicKey(key);\n\n/**\n * Whether the given public keys are the same.\n * @category Signers and PublicKeys\n * @deprecated Use `left === right` instead now that public keys are base58 strings.\n */\nconst samePublicKey = (left, right) => publicKey(left) === publicKey(right);\n\nexports.PUBLIC_KEY_LENGTH = PUBLIC_KEY_LENGTH;\nexports.assertPublicKey = assertPublicKey;\nexports.base58PublicKey = base58PublicKey;\nexports.defaultPublicKey = defaultPublicKey;\nexports.isPda = isPda;\nexports.isPublicKey = isPublicKey;\nexports.publicKey = publicKey;\nexports.publicKeyBytes = publicKeyBytes;\nexports.samePublicKey = samePublicKey;\nexports.uniquePublicKeys = uniquePublicKeys;\n//# sourceMappingURL=common.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base10 = require('./base10.cjs');\nvar base16 = require('./base16.cjs');\nvar base58 = require('./base58.cjs');\nvar base64 = require('./base64.cjs');\nvar baseX = require('./baseX.cjs');\nvar baseXReslice = require('./baseXReslice.cjs');\nvar errors = require('./errors.cjs');\nvar nullCharacters = require('./nullCharacters.cjs');\nvar utf8 = require('./utf8.cjs');\n\n\n\nexports.base10 = base10.base10;\nexports.base16 = base16.base16;\nexports.base58 = base58.base58;\nexports.base64 = base64.base64;\nexports.baseX = baseX.baseX;\nexports.baseXReslice = baseXReslice.baseXReslice;\nexports.InvalidBaseStringError = errors.InvalidBaseStringError;\nexports.padNullCharacters = nullCharacters.padNullCharacters;\nexports.removeNullCharacters = nullCharacters.removeNullCharacters;\nexports.utf8 = utf8.utf8;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX = require('./baseX.cjs');\n\n/**\n * A string serializer that uses base10 encoding.\n * @category Serializers\n */\nconst base10 = baseX.baseX('0123456789');\n\nexports.base10 = base10;\n//# sourceMappingURL=base10.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('./errors.cjs');\n\n/**\n * A string serializer that requires a custom alphabet and uses\n * the length of that alphabet as the base. It then divides\n * the input by the base as many times as necessary to get\n * the output. It also supports leading zeroes by using the\n * first character of the alphabet as the zero character.\n *\n * This can be used to create serializers such as base10 or base58.\n *\n * @category Serializers\n */\nconst baseX = alphabet => {\n  const base = alphabet.length;\n  const baseBigInt = BigInt(base);\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value) {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new errors.InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n\n      // Handle leading zeroes.\n      const chars = [...value];\n      let trailIndex = chars.findIndex(c => c !== alphabet[0]);\n      trailIndex = trailIndex === -1 ? chars.length : trailIndex;\n      const leadingZeroes = Array(trailIndex).fill(0);\n      if (trailIndex === chars.length) return Uint8Array.from(leadingZeroes);\n\n      // From baseX to base10.\n      const tailChars = chars.slice(trailIndex);\n      let base10Number = 0n;\n      let baseXPower = 1n;\n      for (let i = tailChars.length - 1; i >= 0; i -= 1) {\n        base10Number += baseXPower * BigInt(alphabet.indexOf(tailChars[i]));\n        baseXPower *= baseBigInt;\n      }\n\n      // From base10 to bytes.\n      const tailBytes = [];\n      while (base10Number > 0n) {\n        tailBytes.unshift(Number(base10Number % 256n));\n        base10Number /= 256n;\n      }\n      return Uint8Array.from(leadingZeroes.concat(tailBytes));\n    },\n    deserialize(buffer, offset = 0) {\n      if (buffer.length === 0) return ['', 0];\n\n      // Handle leading zeroes.\n      const bytes = buffer.slice(offset);\n      let trailIndex = bytes.findIndex(n => n !== 0);\n      trailIndex = trailIndex === -1 ? bytes.length : trailIndex;\n      const leadingZeroes = alphabet[0].repeat(trailIndex);\n      if (trailIndex === bytes.length) return [leadingZeroes, buffer.length];\n\n      // From bytes to base10.\n      let base10Number = bytes.slice(trailIndex).reduce((sum, byte) => sum * 256n + BigInt(byte), 0n);\n\n      // From base10 to baseX.\n      const tailChars = [];\n      while (base10Number > 0n) {\n        tailChars.unshift(alphabet[Number(base10Number % baseBigInt)]);\n        base10Number /= baseBigInt;\n      }\n      return [leadingZeroes + tailChars.join(''), buffer.length];\n    }\n  };\n};\n\nexports.baseX = baseX;\n//# sourceMappingURL=baseX.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass InvalidBaseStringError extends Error {\n  name = 'InvalidBaseStringError';\n  constructor(value, base, cause) {\n    const message = `Expected a string of base ${base}, got [${value}].`;\n    super(message);\n    this.cause = cause;\n  }\n}\n\nexports.InvalidBaseStringError = InvalidBaseStringError;\n//# sourceMappingURL=errors.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('./errors.cjs');\n\n/**\n * A string serializer that uses base16 encoding.\n * @category Serializers\n */\nconst base16 = {\n  description: 'base16',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value) {\n    const lowercaseValue = value.toLowerCase();\n    if (!lowercaseValue.match(/^[0123456789abcdef]*$/)) {\n      throw new errors.InvalidBaseStringError(value, 16);\n    }\n    const matches = lowercaseValue.match(/.{1,2}/g);\n    return Uint8Array.from(matches ? matches.map(byte => parseInt(byte, 16)) : []);\n  },\n  deserialize(buffer, offset = 0) {\n    const value = buffer.slice(offset).reduce((str, byte) => str + byte.toString(16).padStart(2, '0'), '');\n    return [value, buffer.length];\n  }\n};\n\nexports.base16 = base16;\n//# sourceMappingURL=base16.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX = require('./baseX.cjs');\n\n/**\n * A string serializer that uses base58 encoding.\n * @category Serializers\n */\nconst base58 = baseX.baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nexports.base58 = base58;\n//# sourceMappingURL=base58.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar baseXReslice = require('./baseXReslice.cjs');\n\n/**\n * A string serializer that uses base64 encoding.\n * @category Serializers\n */\nconst base64 = umiSerializersCore.mapSerializer(baseXReslice.baseXReslice('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/', 6), value => value.replace(/=/g, ''), value => value.padEnd(Math.ceil(value.length / 4) * 4, '='));\n\nexports.base64 = base64;\n//# sourceMappingURL=base64.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('./bytes.cjs');\nvar errors = require('./errors.cjs');\nvar fixSerializer = require('./fixSerializer.cjs');\nvar mapSerializer = require('./mapSerializer.cjs');\nvar reverseSerializer = require('./reverseSerializer.cjs');\n\n\n\nexports.fixBytes = bytes.fixBytes;\nexports.mergeBytes = bytes.mergeBytes;\nexports.padBytes = bytes.padBytes;\nexports.DeserializingEmptyBufferError = errors.DeserializingEmptyBufferError;\nexports.ExpectedFixedSizeSerializerError = errors.ExpectedFixedSizeSerializerError;\nexports.NotEnoughBytesError = errors.NotEnoughBytesError;\nexports.fixSerializer = fixSerializer.fixSerializer;\nexports.mapSerializer = mapSerializer.mapSerializer;\nexports.reverseSerializer = reverseSerializer.reverseSerializer;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Concatenates an array of `Uint8Array`s into a single `Uint8Array`.\n * @category Utils\n */\nconst mergeBytes = bytesArr => {\n  const totalLength = bytesArr.reduce((total, arr) => total + arr.length, 0);\n  const result = new Uint8Array(totalLength);\n  let offset = 0;\n  bytesArr.forEach(arr => {\n    result.set(arr, offset);\n    offset += arr.length;\n  });\n  return result;\n};\n\n/**\n * Pads a `Uint8Array` with zeroes to the specified length.\n * If the array is longer than the specified length, it is returned as-is.\n * @category Utils\n */\nconst padBytes = (bytes, length) => {\n  if (bytes.length >= length) return bytes;\n  const paddedBytes = new Uint8Array(length).fill(0);\n  paddedBytes.set(bytes);\n  return paddedBytes;\n};\n\n/**\n * Fixes a `Uint8Array` to the specified length.\n * If the array is longer than the specified length, it is truncated.\n * If the array is shorter than the specified length, it is padded with zeroes.\n * @category Utils\n */\nconst fixBytes = (bytes, length) => padBytes(bytes.slice(0, length), length);\n\nexports.fixBytes = fixBytes;\nexports.mergeBytes = mergeBytes;\nexports.padBytes = padBytes;\n//# sourceMappingURL=bytes.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass DeserializingEmptyBufferError extends Error {\n  name = 'DeserializingEmptyBufferError';\n  constructor(serializer) {\n    super(`Serializer [${serializer}] cannot deserialize empty buffers.`);\n  }\n}\n\n/** @category Errors */\nclass NotEnoughBytesError extends Error {\n  name = 'NotEnoughBytesError';\n  constructor(serializer, expected, actual) {\n    super(`Serializer [${serializer}] expected ${expected} bytes, got ${actual}.`);\n  }\n}\n\n/** @category Errors */\nclass ExpectedFixedSizeSerializerError extends Error {\n  name = 'ExpectedFixedSizeSerializerError';\n  constructor(message) {\n    message ??= 'Expected a fixed-size serializer, got a variable-size one.';\n    super(message);\n  }\n}\n\nexports.DeserializingEmptyBufferError = DeserializingEmptyBufferError;\nexports.ExpectedFixedSizeSerializerError = ExpectedFixedSizeSerializerError;\nexports.NotEnoughBytesError = NotEnoughBytesError;\n//# sourceMappingURL=errors.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('./bytes.cjs');\nvar errors = require('./errors.cjs');\n\n/**\n * Creates a fixed-size serializer from a given serializer.\n *\n * @param serializer - The serializer to wrap into a fixed-size serializer.\n * @param fixedBytes - The fixed number of bytes to read.\n * @param description - A custom description for the serializer.\n *\n * @category Serializers\n */\nfunction fixSerializer(serializer, fixedBytes, description) {\n  return {\n    description: description ?? `fixed(${fixedBytes}, ${serializer.description})`,\n    fixedSize: fixedBytes,\n    maxSize: fixedBytes,\n    serialize: value => bytes.fixBytes(serializer.serialize(value), fixedBytes),\n    deserialize: (buffer, offset = 0) => {\n      // Slice the buffer to the fixed size.\n      buffer = buffer.slice(offset, offset + fixedBytes);\n      // Ensure we have enough bytes.\n      if (buffer.length < fixedBytes) {\n        throw new errors.NotEnoughBytesError('fixSerializer', fixedBytes, buffer.length);\n      }\n      // If the nested serializer is fixed-size, pad and truncate the buffer accordingly.\n      if (serializer.fixedSize !== null) {\n        buffer = bytes.fixBytes(buffer, serializer.fixedSize);\n      }\n      // Deserialize the value using the nested serializer.\n      const [value] = serializer.deserialize(buffer, 0);\n      return [value, offset + fixedBytes];\n    }\n  };\n}\n\nexports.fixSerializer = fixSerializer;\n//# sourceMappingURL=fixSerializer.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Converts a serializer A to a serializer B by mapping their values.\n * @category Serializers\n */\n\nfunction mapSerializer(serializer, unmap, map) {\n  return {\n    description: serializer.description,\n    fixedSize: serializer.fixedSize,\n    maxSize: serializer.maxSize,\n    serialize: value => serializer.serialize(unmap(value)),\n    deserialize: (buffer, offset = 0) => {\n      const [value, length] = serializer.deserialize(buffer, offset);\n      return map ? [map(value, buffer, offset), length] : [value, length];\n    }\n  };\n}\n\nexports.mapSerializer = mapSerializer;\n//# sourceMappingURL=mapSerializer.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('./bytes.cjs');\nvar errors = require('./errors.cjs');\n\n/**\n * Reverses the bytes of a fixed-size serializer.\n * @category Serializers\n */\nfunction reverseSerializer(serializer) {\n  if (serializer.fixedSize === null) {\n    throw new errors.ExpectedFixedSizeSerializerError('Cannot reverse a serializer of variable size.');\n  }\n  return {\n    ...serializer,\n    serialize: value => serializer.serialize(value).reverse(),\n    deserialize: (bytes$1, offset = 0) => {\n      const fixedSize = serializer.fixedSize;\n      const newBytes = bytes.mergeBytes([bytes$1.slice(0, offset), bytes$1.slice(offset, offset + fixedSize).reverse(), bytes$1.slice(offset + fixedSize)]);\n      return serializer.deserialize(newBytes, offset);\n    }\n  };\n}\n\nexports.reverseSerializer = reverseSerializer;\n//# sourceMappingURL=reverseSerializer.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('./errors.cjs');\n\n/* eslint-disable no-restricted-syntax */\n\n/**\n * A string serializer that reslices bytes into custom chunks\n * of bits that are then mapped to a custom alphabet.\n *\n * This can be used to create serializers whose alphabet\n * is a power of 2 such as base16 or base64.\n *\n * @category Serializers\n */\nconst baseXReslice = (alphabet, bits) => {\n  const base = alphabet.length;\n  const reslice = (input, inputBits, outputBits, useRemainder) => {\n    const output = [];\n    let accumulator = 0;\n    let bitsInAccumulator = 0;\n    const mask = (1 << outputBits) - 1;\n    for (const value of input) {\n      accumulator = accumulator << inputBits | value;\n      bitsInAccumulator += inputBits;\n      while (bitsInAccumulator >= outputBits) {\n        bitsInAccumulator -= outputBits;\n        output.push(accumulator >> bitsInAccumulator & mask);\n      }\n    }\n    if (useRemainder && bitsInAccumulator > 0) {\n      output.push(accumulator << outputBits - bitsInAccumulator & mask);\n    }\n    return output;\n  };\n  return {\n    description: `base${base}`,\n    fixedSize: null,\n    maxSize: null,\n    serialize(value) {\n      // Check if the value is valid.\n      if (!value.match(new RegExp(`^[${alphabet}]*$`))) {\n        throw new errors.InvalidBaseStringError(value, base);\n      }\n      if (value === '') return new Uint8Array();\n      const charIndices = [...value].map(c => alphabet.indexOf(c));\n      const bytes = reslice(charIndices, bits, 8, false);\n      return Uint8Array.from(bytes);\n    },\n    deserialize(buffer, offset = 0) {\n      if (buffer.length === 0) return ['', 0];\n      const bytes = [...buffer.slice(offset)];\n      const charIndices = reslice(bytes, 8, bits, true);\n      return [charIndices.map(i => alphabet[i]).join(''), buffer.length];\n    }\n  };\n};\n\nexports.baseXReslice = baseXReslice;\n//# sourceMappingURL=baseXReslice.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Removes null characters from a string.\n * @category Utils\n */\nconst removeNullCharacters = value =>\n// eslint-disable-next-line no-control-regex\nvalue.replace(/\\u0000/g, '');\n\n/**\n * Pads a string with null characters at the end.\n * @category Utils\n */\nconst padNullCharacters = (value, chars) => value.padEnd(chars, '\\u0000');\n\nexports.padNullCharacters = padNullCharacters;\nexports.removeNullCharacters = removeNullCharacters;\n//# sourceMappingURL=nullCharacters.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar nullCharacters = require('./nullCharacters.cjs');\n\n/**\n * A string serializer that uses UTF-8 encoding\n * using the native `TextEncoder` API.\n * @category Serializers\n */\nconst utf8 = {\n  description: 'utf8',\n  fixedSize: null,\n  maxSize: null,\n  serialize(value) {\n    return new TextEncoder().encode(value);\n  },\n  deserialize(buffer, offset = 0) {\n    const value = new TextDecoder().decode(buffer.slice(offset));\n    return [nullCharacters.removeNullCharacters(value), buffer.length];\n  }\n};\n\nexports.utf8 = utf8;\n//# sourceMappingURL=utf8.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass InvalidPublicKeyError extends Error {\n  name = 'InvalidPublicKeyError';\n  constructor(invalidPublicKey, reason) {\n    reason = reason ? `. ${reason}` : '';\n    super(`The provided public key is invalid: ${invalidPublicKey}${reason}`);\n    this.invalidPublicKey = invalidPublicKey;\n  }\n}\n\nexports.InvalidPublicKeyError = InvalidPublicKeyError;\n//# sourceMappingURL=errors.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst mapSerializer = umiSerializers.mapSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst fixSerializer = umiSerializers.fixSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst reverseSerializer = umiSerializers.reverseSerializer;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst mergeBytes = umiSerializers.mergeBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst padBytes = umiSerializers.padBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst fixBytes = umiSerializers.fixBytes;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst utf8 = umiSerializers.utf8;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst baseX = umiSerializers.baseX;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst base10 = umiSerializers.base10;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst base58 = umiSerializers.base58;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst base64 = umiSerializers.base64;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst base16 = umiSerializers.base16;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst bitArray = umiSerializers.bitArray;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst removeNullCharacters = umiSerializers.removeNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst padNullCharacters = umiSerializers.padNullCharacters;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\nconst Endian = umiSerializers.Endian;\n\n/** @deprecated import from \"@metaplex-foundation/umi/serializers\" instead. */\n\nexports.Endian = Endian;\nexports.base10 = base10;\nexports.base16 = base16;\nexports.base58 = base58;\nexports.base64 = base64;\nexports.baseX = baseX;\nexports.bitArray = bitArray;\nexports.fixBytes = fixBytes;\nexports.fixSerializer = fixSerializer;\nexports.mapSerializer = mapSerializer;\nexports.mergeBytes = mergeBytes;\nexports.padBytes = padBytes;\nexports.padNullCharacters = padNullCharacters;\nexports.removeNullCharacters = removeNullCharacters;\nexports.reverseSerializer = reverseSerializer;\nexports.utf8 = utf8;\n//# sourceMappingURL=serializersInternal.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersEncodings = require('@metaplex-foundation/umi-serializers-encodings');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar array = require('./array.cjs');\nvar bitArray = require('./bitArray.cjs');\nvar bool = require('./bool.cjs');\nvar bytes = require('./bytes.cjs');\nvar dataEnum = require('./dataEnum.cjs');\nvar errors = require('./errors.cjs');\nvar map = require('./map.cjs');\nvar nullable = require('./nullable.cjs');\nvar option = require('./option.cjs');\nvar publicKey = require('./publicKey.cjs');\nvar scalarEnum = require('./scalarEnum.cjs');\nvar set = require('./set.cjs');\nvar string = require('./string.cjs');\nvar struct = require('./struct.cjs');\nvar tuple = require('./tuple.cjs');\nvar unit = require('./unit.cjs');\nvar maxSerializerSizes = require('./maxSerializerSizes.cjs');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\n\n\n\nexports.array = array.array;\nexports.bitArray = bitArray.bitArray;\nexports.bool = bool.bool;\nexports.bytes = bytes.bytes;\nexports.dataEnum = dataEnum.dataEnum;\nexports.EnumDiscriminatorOutOfRangeError = errors.EnumDiscriminatorOutOfRangeError;\nexports.InvalidArrayLikeRemainderSizeError = errors.InvalidArrayLikeRemainderSizeError;\nexports.InvalidDataEnumVariantError = errors.InvalidDataEnumVariantError;\nexports.InvalidNumberOfItemsError = errors.InvalidNumberOfItemsError;\nexports.InvalidScalarEnumVariantError = errors.InvalidScalarEnumVariantError;\nexports.UnrecognizedArrayLikeSerializerSizeError = errors.UnrecognizedArrayLikeSerializerSizeError;\nexports.map = map.map;\nexports.nullable = nullable.nullable;\nexports.option = option.option;\nexports.publicKey = publicKey.publicKey;\nexports.scalarEnum = scalarEnum.scalarEnum;\nexports.set = set.set;\nexports.string = string.string;\nexports.struct = struct.struct;\nexports.tuple = tuple.tuple;\nexports.unit = unit.unit;\nexports.maxSerializerSizes = maxSerializerSizes.maxSerializerSizes;\nexports.sumSerializerSizes = sumSerializerSizes.sumSerializerSizes;\nObject.keys(umiSerializersCore).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersCore[k]; }\n\t});\n});\nObject.keys(umiSerializersEncodings).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersEncodings[k]; }\n\t});\n});\nObject.keys(umiSerializersNumbers).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializersNumbers[k]; }\n\t});\n});\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar common = require('./common.cjs');\nvar errors = require('./errors.cjs');\nvar f32 = require('./f32.cjs');\nvar f64 = require('./f64.cjs');\nvar i8 = require('./i8.cjs');\nvar i16 = require('./i16.cjs');\nvar i32 = require('./i32.cjs');\nvar i64 = require('./i64.cjs');\nvar i128 = require('./i128.cjs');\nvar u8 = require('./u8.cjs');\nvar u16 = require('./u16.cjs');\nvar u32 = require('./u32.cjs');\nvar u64 = require('./u64.cjs');\nvar u128 = require('./u128.cjs');\nvar shortU16 = require('./shortU16.cjs');\n\n\n\nObject.defineProperty(exports, 'Endian', {\n\tenumerable: true,\n\tget: function () { return common.Endian; }\n});\nexports.NumberOutOfRangeError = errors.NumberOutOfRangeError;\nexports.f32 = f32.f32;\nexports.f64 = f64.f64;\nexports.i8 = i8.i8;\nexports.i16 = i16.i16;\nexports.i32 = i32.i32;\nexports.i64 = i64.i64;\nexports.i128 = i128.i128;\nexports.u8 = u8.u8;\nexports.u16 = u16.u16;\nexports.u32 = u32.u32;\nexports.u64 = u64.u64;\nexports.u128 = u128.u128;\nexports.shortU16 = shortU16.shortU16;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Defines a serializer for numbers and bigints.\n * @category Serializers\n */\n\n/**\n * Defines the options for u8 and i8 serializers.\n * @category Serializers\n */\n\n/**\n * Defines the options for number serializers that use more than one byte.\n * @category Serializers\n */\n\n/**\n * Defines the endianness of a number serializer.\n * @category Serializers\n */\nexports.Endian = void 0;\n(function (Endian) {\n  Endian[\"Little\"] = \"le\";\n  Endian[\"Big\"] = \"be\";\n})(exports.Endian || (exports.Endian = {}));\n//# sourceMappingURL=common.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass NumberOutOfRangeError extends RangeError {\n  name = 'NumberOutOfRangeError';\n  constructor(serializer, min, max, actual) {\n    super(`Serializer [${serializer}] expected number to be between ${min} and ${max}, got ${actual}.`);\n  }\n}\n\nexports.NumberOutOfRangeError = NumberOutOfRangeError;\n//# sourceMappingURL=errors.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst f32 = (options = {}) => utils.numberFactory({\n  name: 'f32',\n  size: 4,\n  set: (view, value, le) => view.setFloat32(0, Number(value), le),\n  get: (view, le) => view.getFloat32(0, le),\n  options\n});\n\nexports.f32 = f32;\n//# sourceMappingURL=f32.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar common = require('./common.cjs');\nvar errors = require('./errors.cjs');\n\nfunction numberFactory(input) {\n  let littleEndian;\n  let defaultDescription = input.name;\n  if (input.size > 1) {\n    littleEndian = !('endian' in input.options) || input.options.endian === common.Endian.Little;\n    defaultDescription += littleEndian ? '(le)' : '(be)';\n  }\n  return {\n    description: input.options.description ?? defaultDescription,\n    fixedSize: input.size,\n    maxSize: input.size,\n    serialize(value) {\n      if (input.range) {\n        assertRange(input.name, input.range[0], input.range[1], value);\n      }\n      const buffer = new ArrayBuffer(input.size);\n      input.set(new DataView(buffer), value, littleEndian);\n      return new Uint8Array(buffer);\n    },\n    deserialize(bytes, offset = 0) {\n      const slice = bytes.slice(offset, offset + input.size);\n      assertEnoughBytes('i8', slice, input.size);\n      const view = toDataView(slice);\n      return [input.get(view, littleEndian), offset + input.size];\n    }\n  };\n}\n\n/**\n * Helper function to ensure that the array buffer is converted properly from a uint8array\n * Source: https://stackoverflow.com/questions/37228285/uint8array-to-arraybuffer\n * @param {Uint8Array} array Uint8array that's being converted into an array buffer\n * @returns {ArrayBuffer} An array buffer that's necessary to construct a data view\n */\nconst toArrayBuffer = array => array.buffer.slice(array.byteOffset, array.byteLength + array.byteOffset);\nconst toDataView = array => new DataView(toArrayBuffer(array));\nconst assertRange = (serializer, min, max, value) => {\n  if (value < min || value > max) {\n    throw new errors.NumberOutOfRangeError(serializer, min, max, value);\n  }\n};\nconst assertEnoughBytes = (serializer, bytes, expected) => {\n  if (bytes.length === 0) {\n    throw new umiSerializersCore.DeserializingEmptyBufferError(serializer);\n  }\n  if (bytes.length < expected) {\n    throw new umiSerializersCore.NotEnoughBytesError(serializer, expected, bytes.length);\n  }\n};\n\nexports.assertEnoughBytes = assertEnoughBytes;\nexports.assertRange = assertRange;\nexports.numberFactory = numberFactory;\nexports.toArrayBuffer = toArrayBuffer;\nexports.toDataView = toDataView;\n//# sourceMappingURL=utils.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst f64 = (options = {}) => utils.numberFactory({\n  name: 'f64',\n  size: 8,\n  set: (view, value, le) => view.setFloat64(0, Number(value), le),\n  get: (view, le) => view.getFloat64(0, le),\n  options\n});\n\nexports.f64 = f64;\n//# sourceMappingURL=f64.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst i8 = (options = {}) => utils.numberFactory({\n  name: 'i8',\n  size: 1,\n  range: [-Number('0x7f') - 1, Number('0x7f')],\n  set: (view, value) => view.setInt8(0, Number(value)),\n  get: view => view.getInt8(0),\n  options\n});\n\nexports.i8 = i8;\n//# sourceMappingURL=i8.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst i16 = (options = {}) => utils.numberFactory({\n  name: 'i16',\n  size: 2,\n  range: [-Number('0x7fff') - 1, Number('0x7fff')],\n  set: (view, value, le) => view.setInt16(0, Number(value), le),\n  get: (view, le) => view.getInt16(0, le),\n  options\n});\n\nexports.i16 = i16;\n//# sourceMappingURL=i16.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst i32 = (options = {}) => utils.numberFactory({\n  name: 'i32',\n  size: 4,\n  range: [-Number('0x7fffffff') - 1, Number('0x7fffffff')],\n  set: (view, value, le) => view.setInt32(0, Number(value), le),\n  get: (view, le) => view.getInt32(0, le),\n  options\n});\n\nexports.i32 = i32;\n//# sourceMappingURL=i32.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst i64 = (options = {}) => utils.numberFactory({\n  name: 'i64',\n  size: 8,\n  range: [-BigInt('0x7fffffffffffffff') - 1n, BigInt('0x7fffffffffffffff')],\n  set: (view, value, le) => view.setBigInt64(0, BigInt(value), le),\n  get: (view, le) => view.getBigInt64(0, le),\n  options\n});\n\nexports.i64 = i64;\n//# sourceMappingURL=i64.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\n/* eslint-disable no-bitwise */\nconst i128 = (options = {}) => utils.numberFactory({\n  name: 'i128',\n  size: 16,\n  range: [-BigInt('0x7fffffffffffffffffffffffffffffff') - 1n, BigInt('0x7fffffffffffffffffffffffffffffff')],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigInt64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigInt64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  options\n});\n\nexports.i128 = i128;\n//# sourceMappingURL=i128.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst u8 = (options = {}) => utils.numberFactory({\n  name: 'u8',\n  size: 1,\n  range: [0, Number('0xff')],\n  set: (view, value) => view.setUint8(0, Number(value)),\n  get: view => view.getUint8(0),\n  options\n});\n\nexports.u8 = u8;\n//# sourceMappingURL=u8.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst u16 = (options = {}) => utils.numberFactory({\n  name: 'u16',\n  size: 2,\n  range: [0, Number('0xffff')],\n  set: (view, value, le) => view.setUint16(0, Number(value), le),\n  get: (view, le) => view.getUint16(0, le),\n  options\n});\n\nexports.u16 = u16;\n//# sourceMappingURL=u16.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst u32 = (options = {}) => utils.numberFactory({\n  name: 'u32',\n  size: 4,\n  range: [0, Number('0xffffffff')],\n  set: (view, value, le) => view.setUint32(0, Number(value), le),\n  get: (view, le) => view.getUint32(0, le),\n  options\n});\n\nexports.u32 = u32;\n//# sourceMappingURL=u32.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\nconst u64 = (options = {}) => utils.numberFactory({\n  name: 'u64',\n  size: 8,\n  range: [0, BigInt('0xffffffffffffffff')],\n  set: (view, value, le) => view.setBigUint64(0, BigInt(value), le),\n  get: (view, le) => view.getBigUint64(0, le),\n  options\n});\n\nexports.u64 = u64;\n//# sourceMappingURL=u64.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\n/* eslint-disable no-bitwise */\nconst u128 = (options = {}) => utils.numberFactory({\n  name: 'u128',\n  size: 16,\n  range: [0, BigInt('0xffffffffffffffffffffffffffffffff')],\n  set: (view, value, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const rightMask = 0xffffffffffffffffn;\n    view.setBigUint64(leftOffset, BigInt(value) >> 64n, le);\n    view.setBigUint64(rightOffset, BigInt(value) & rightMask, le);\n  },\n  get: (view, le) => {\n    const leftOffset = le ? 8 : 0;\n    const rightOffset = le ? 0 : 8;\n    const left = view.getBigUint64(leftOffset, le);\n    const right = view.getBigUint64(rightOffset, le);\n    return (left << 64n) + right;\n  },\n  options\n});\n\nexports.u128 = u128;\n//# sourceMappingURL=u128.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar utils = require('./utils.cjs');\n\n/* eslint-disable no-bitwise */\n\n/**\n * Defines the options for the shortU16 serializer.\n * @category Serializers\n */\n\n/**\n * Same as u16, but serialized with 1 to 3 bytes.\n *\n * If the value is above 0x7f, the top bit is set and the remaining\n * value is stored in the next bytes. Each byte follows the same\n * pattern until the 3rd byte. The 3rd byte, if needed, uses\n * all 8 bits to store the last byte of the original value.\n *\n * @category Serializers\n */\nconst shortU16 = (options = {}) => ({\n  description: options.description ?? 'shortU16',\n  fixedSize: null,\n  maxSize: 3,\n  serialize: value => {\n    utils.assertRange('shortU16', 0, 65535, value);\n    const bytes = [0];\n    for (let ii = 0;; ii += 1) {\n      // Shift the bits of the value over such that the next 7 bits are at the right edge.\n      const alignedValue = value >> ii * 7;\n      if (alignedValue === 0) {\n        // No more bits to consume.\n        break;\n      }\n      // Extract those 7 bits using a mask.\n      const nextSevenBits = 0b1111111 & alignedValue;\n      bytes[ii] = nextSevenBits;\n      if (ii > 0) {\n        // Set the continuation bit of the previous slice.\n        bytes[ii - 1] |= 0b10000000;\n      }\n    }\n    return new Uint8Array(bytes);\n  },\n  deserialize: (bytes, offset = 0) => {\n    let value = 0;\n    let byteCount = 0;\n    while (++byteCount // eslint-disable-line no-plusplus\n    ) {\n      const byteIndex = byteCount - 1;\n      const currentByte = bytes[offset + byteIndex];\n      const nextSevenBits = 0b1111111 & currentByte;\n      // Insert the next group of seven bits into the correct slot of the output value.\n      value |= nextSevenBits << byteIndex * 7;\n      if ((currentByte & 0b10000000) === 0) {\n        // This byte does not have its continuation bit set. We're done.\n        break;\n      }\n    }\n    return [value, offset + byteCount];\n  }\n});\n\nexports.shortU16 = shortU16;\n//# sourceMappingURL=shortU16.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar errors = require('./errors.cjs');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for array serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for an array of items.\n *\n * @param item - The serializer to use for the array's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction array(item, options = {}) {\n  const size = options.size ?? umiSerializersNumbers.u32();\n  return {\n    description: options.description ?? `array(${item.description}; ${utils.getSizeDescription(size)})`,\n    fixedSize: utils.getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: utils.getSizeFromChildren(size, [item.maxSize]),\n    serialize: value => {\n      if (typeof size === 'number' && value.length !== size) {\n        throw new errors.InvalidNumberOfItemsError('array', size, value.length);\n      }\n      return umiSerializersCore.mergeBytes([utils.getSizePrefix(size, value.length), ...value.map(v => item.serialize(v))]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      const values = [];\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [values, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          values.push(value);\n          offset = newOffset;\n        }\n        return [values, offset];\n      }\n      const [resolvedSize, newOffset] = utils.getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        values.push(value);\n        offset = newOffset;\n      }\n      return [values, offset];\n    }\n  };\n}\n\nexports.array = array;\n//# sourceMappingURL=array.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass InvalidNumberOfItemsError extends Error {\n  name = 'InvalidNumberOfItemsError';\n  constructor(serializer, expected, actual) {\n    super(`Expected [${serializer}] to have ${expected} items, got ${actual}.`);\n  }\n}\n\n/** @category Errors */\nclass InvalidArrayLikeRemainderSizeError extends Error {\n  name = 'InvalidArrayLikeRemainderSizeError';\n  constructor(remainderSize, itemSize) {\n    super(`The remainder of the buffer (${remainderSize} bytes) cannot be split into chunks of ${itemSize} bytes. ` + `Serializers of \"remainder\" size must have a remainder that is a multiple of its item size. ` + `In other words, ${remainderSize} modulo ${itemSize} should be equal to zero.`);\n  }\n}\n\n/** @category Errors */\nclass UnrecognizedArrayLikeSerializerSizeError extends Error {\n  name = 'UnrecognizedArrayLikeSerializerSizeError';\n  constructor(size) {\n    super(`Unrecognized array-like serializer size: ${JSON.stringify(size)}`);\n  }\n}\n\n/** @category Errors */\nclass InvalidDataEnumVariantError extends Error {\n  name = 'InvalidDataEnumVariantError';\n  constructor(invalidVariant, validVariants) {\n    super(`Invalid data enum variant. ` + `Expected one of [${validVariants.join(', ')}], ` + `got \"${invalidVariant}\".`);\n  }\n}\n\n/** @category Errors */\nclass InvalidScalarEnumVariantError extends Error {\n  name = 'InvalidScalarEnumVariantError';\n  constructor(invalidVariant, validVariants, min, max) {\n    super(`Invalid scalar enum variant. ` + `Expected one of [${validVariants.join(', ')}] ` + `or a number between ${min} and ${max}, ` + `got \"${invalidVariant}\".`);\n  }\n}\n\n/** @category Errors */\nclass EnumDiscriminatorOutOfRangeError extends RangeError {\n  name = 'EnumDiscriminatorOutOfRangeError';\n  constructor(discriminator, min, max) {\n    super(`Enum discriminator out of range. ` + `Expected a number between ${min} and ${max}, got ${discriminator}.`);\n  }\n}\n\nexports.EnumDiscriminatorOutOfRangeError = EnumDiscriminatorOutOfRangeError;\nexports.InvalidArrayLikeRemainderSizeError = InvalidArrayLikeRemainderSizeError;\nexports.InvalidDataEnumVariantError = InvalidDataEnumVariantError;\nexports.InvalidNumberOfItemsError = InvalidNumberOfItemsError;\nexports.InvalidScalarEnumVariantError = InvalidScalarEnumVariantError;\nexports.UnrecognizedArrayLikeSerializerSizeError = UnrecognizedArrayLikeSerializerSizeError;\n//# sourceMappingURL=errors.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar errors = require('./errors.cjs');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\n\nfunction getResolvedSize(size, bytes, offset) {\n  if (typeof size === 'number') {\n    return [size, offset];\n  }\n  if (typeof size === 'object') {\n    return size.deserialize(bytes, offset);\n  }\n  throw new errors.UnrecognizedArrayLikeSerializerSizeError(size);\n}\nfunction getSizeDescription(size) {\n  return typeof size === 'object' ? size.description : `${size}`;\n}\nfunction getSizeFromChildren(size, childrenSizes) {\n  if (typeof size !== 'number') return null;\n  if (size === 0) return 0;\n  const childrenSize = sumSerializerSizes.sumSerializerSizes(childrenSizes);\n  return childrenSize === null ? null : childrenSize * size;\n}\nfunction getSizePrefix(size, realSize) {\n  return typeof size === 'object' ? size.serialize(realSize) : new Uint8Array();\n}\n\nexports.getResolvedSize = getResolvedSize;\nexports.getSizeDescription = getSizeDescription;\nexports.getSizeFromChildren = getSizeFromChildren;\nexports.getSizePrefix = getSizePrefix;\n//# sourceMappingURL=utils.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction sumSerializerSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : all + size, 0);\n}\n\nexports.sumSerializerSizes = sumSerializerSizes;\n//# sourceMappingURL=sumSerializerSizes.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\n\n/* eslint-disable no-bitwise */\n\n/**\n * Defines the options for bitArray serializers.\n * @category Serializers\n */\n\n/**\n * An array of boolean serializer that\n * converts booleans to bits and vice versa.\n *\n * @param size - The amount of bytes to use for the bit array.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nconst bitArray = (size, options = {}) => {\n  const parsedOptions = typeof options === 'boolean' ? {\n    backward: options\n  } : options;\n  const backward = parsedOptions.backward ?? false;\n  const backwardSuffix = backward ? '; backward' : '';\n  return {\n    description: parsedOptions.description ?? `bitArray(${size}${backwardSuffix})`,\n    fixedSize: size,\n    maxSize: size,\n    serialize(value) {\n      const bytes = [];\n      for (let i = 0; i < size; i += 1) {\n        let byte = 0;\n        for (let j = 0; j < 8; j += 1) {\n          const feature = Number(value[i * 8 + j] ?? 0);\n          byte |= feature << (backward ? j : 7 - j);\n        }\n        if (backward) {\n          bytes.unshift(byte);\n        } else {\n          bytes.push(byte);\n        }\n      }\n      return new Uint8Array(bytes);\n    },\n    deserialize(bytes, offset = 0) {\n      const booleans = [];\n      let slice = bytes.slice(offset, offset + size);\n      slice = backward ? slice.reverse() : slice;\n      if (slice.length !== size) {\n        throw new umiSerializersCore.NotEnoughBytesError('bitArray', size, slice.length);\n      }\n      slice.forEach(byte => {\n        for (let i = 0; i < 8; i += 1) {\n          if (backward) {\n            booleans.push(Boolean(byte & 1));\n            byte >>= 1;\n          } else {\n            booleans.push(Boolean(byte & 0b1000_0000));\n            byte <<= 1;\n          }\n        }\n      });\n      return [booleans, offset + size];\n    }\n  };\n};\n\nexports.bitArray = bitArray;\n//# sourceMappingURL=bitArray.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\n\n/**\n * Defines the options for boolean serializers.\n * @category Serializers\n */\n\n/**\n * Creates a boolean serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction bool(options = {}) {\n  const size = options.size ?? umiSerializersNumbers.u8();\n  if (size.fixedSize === null) {\n    throw new umiSerializersCore.ExpectedFixedSizeSerializerError('Serializer [bool] requires a fixed size.');\n  }\n  return {\n    description: options.description ?? `bool(${size.description})`,\n    fixedSize: size.fixedSize,\n    maxSize: size.fixedSize,\n    serialize: value => size.serialize(value ? 1 : 0),\n    deserialize: (bytes, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('bool');\n      }\n      const [value, vOffset] = size.deserialize(bytes, offset);\n      return [value === 1, vOffset];\n    }\n  };\n}\n\nexports.bool = bool;\n//# sourceMappingURL=bool.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for bytes serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer that passes the buffer as-is.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction bytes(options = {}) {\n  const size = options.size ?? 'variable';\n  const description = options.description ?? `bytes(${utils.getSizeDescription(size)})`;\n  const byteSerializer = {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: value => new Uint8Array(value),\n    deserialize: (bytes, offset = 0) => {\n      const slice = bytes.slice(offset);\n      return [slice, offset + slice.length];\n    }\n  };\n  if (size === 'variable') {\n    return byteSerializer;\n  }\n  if (typeof size === 'number') {\n    return umiSerializersCore.fixSerializer(byteSerializer, size, description);\n  }\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: value => {\n      const contentBytes = byteSerializer.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return umiSerializersCore.mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('bytes');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new umiSerializersCore.NotEnoughBytesError('bytes', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = byteSerializer.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    }\n  };\n}\n\nexports.bytes = bytes;\n//# sourceMappingURL=bytes.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar errors = require('./errors.cjs');\nvar maxSerializerSizes = require('./maxSerializerSizes.cjs');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\n\n/**\n * Defines a data enum using discriminated union types.\n *\n * @example\n * ```ts\n * type WebPageEvent =\n *   | { __kind: 'pageview', url: string }\n *   | { __kind: 'click', x: number, y: number };\n * ```\n *\n * @category Serializers\n */\n\n/**\n * Creates a data enum serializer.\n *\n * @param variants - The variant serializers of the data enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction dataEnum(variants, options = {}) {\n  const prefix = options.size ?? umiSerializersNumbers.u8();\n  const fieldDescriptions = variants.map(([name, serializer]) => `${String(name)}${serializer ? `: ${serializer.description}` : ''}`).join(', ');\n  const allVariantHaveTheSameFixedSize = variants.every((one, i, all) => one[1].fixedSize === all[0][1].fixedSize);\n  const fixedVariantSize = allVariantHaveTheSameFixedSize ? variants[0][1].fixedSize : null;\n  const maxVariantSize = maxSerializerSizes.maxSerializerSizes(variants.map(([, field]) => field.maxSize));\n  return {\n    description: options.description ?? `dataEnum(${fieldDescriptions}; ${prefix.description})`,\n    fixedSize: variants.length === 0 ? prefix.fixedSize : sumSerializerSizes.sumSerializerSizes([prefix.fixedSize, fixedVariantSize]),\n    maxSize: variants.length === 0 ? prefix.maxSize : sumSerializerSizes.sumSerializerSizes([prefix.maxSize, maxVariantSize]),\n    serialize: variant => {\n      const discriminator = variants.findIndex(([key]) => variant.__kind === key);\n      if (discriminator < 0) {\n        throw new errors.InvalidDataEnumVariantError(variant.__kind, variants.map(([key]) => key));\n      }\n      const variantPrefix = prefix.serialize(discriminator);\n      const variantSerializer = variants[discriminator][1];\n      const variantBytes = variantSerializer.serialize(variant);\n      return umiSerializersCore.mergeBytes([variantPrefix, variantBytes]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('dataEnum');\n      }\n      const [discriminator, dOffset] = prefix.deserialize(bytes, offset);\n      offset = dOffset;\n      const variantField = variants[Number(discriminator)] ?? null;\n      if (!variantField) {\n        throw new errors.EnumDiscriminatorOutOfRangeError(discriminator, 0, variants.length - 1);\n      }\n      const [variant, vOffset] = variantField[1].deserialize(bytes, offset);\n      offset = vOffset;\n      return [{\n        __kind: variantField[0],\n        ...(variant ?? {})\n      }, offset];\n    }\n  };\n}\n\nexports.dataEnum = dataEnum;\n//# sourceMappingURL=dataEnum.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction maxSerializerSizes(sizes) {\n  return sizes.reduce((all, size) => all === null || size === null ? null : Math.max(all, size), 0);\n}\n\nexports.maxSerializerSizes = maxSerializerSizes;\n//# sourceMappingURL=maxSerializerSizes.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar errors = require('./errors.cjs');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for `Map` serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for a map.\n *\n * @param key - The serializer to use for the map's keys.\n * @param value - The serializer to use for the map's values.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction map(key, value, options = {}) {\n  const size = options.size ?? umiSerializersNumbers.u32();\n  return {\n    description: options.description ?? `map(${key.description}, ${value.description}; ${utils.getSizeDescription(size)})`,\n    fixedSize: utils.getSizeFromChildren(size, [key.fixedSize, value.fixedSize]),\n    maxSize: utils.getSizeFromChildren(size, [key.maxSize, value.maxSize]),\n    serialize: map => {\n      if (typeof size === 'number' && map.size !== size) {\n        throw new errors.InvalidNumberOfItemsError('map', size, map.size);\n      }\n      const itemBytes = Array.from(map, ([k, v]) => umiSerializersCore.mergeBytes([key.serialize(k), value.serialize(v)]));\n      return umiSerializersCore.mergeBytes([utils.getSizePrefix(size, map.size), ...itemBytes]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      const map = new Map();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [map, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n          offset = kOffset;\n          const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n          offset = vOffset;\n          map.set(deserializedKey, deserializedValue);\n        }\n        return [map, offset];\n      }\n      const [resolvedSize, newOffset] = utils.getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [deserializedKey, kOffset] = key.deserialize(bytes, offset);\n        offset = kOffset;\n        const [deserializedValue, vOffset] = value.deserialize(bytes, offset);\n        offset = vOffset;\n        map.set(deserializedKey, deserializedValue);\n      }\n      return [map, offset];\n    }\n  };\n}\n\nexports.map = map;\n//# sourceMappingURL=map.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for `Nullable` serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for an optional value using `null` as the `None` value.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction nullable(item, options = {}) {\n  const prefix = options.prefix ?? umiSerializersNumbers.u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${utils.getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new umiSerializersCore.ExpectedFixedSizeSerializerError('Fixed nullables can only be used with fixed-size serializers');\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description: options.description ?? `nullable(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes.sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: option => {\n      const prefixByte = prefix.serialize(Number(option !== null));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize;\n        const itemBytes = option !== null ? item.serialize(option).slice(0, itemFixedSize) : new Uint8Array(itemFixedSize).fill(0);\n        return umiSerializersCore.mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes = option !== null ? item.serialize(option) : new Uint8Array();\n      return umiSerializersCore.mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [null, offset];\n      }\n      const fixedOffset = offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [null, fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [value, fixed ? fixedOffset : offset];\n    }\n  };\n}\n\nexports.nullable = nullable;\n//# sourceMappingURL=nullable.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiOptions = require('@metaplex-foundation/umi-options');\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for `Option` serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for an optional value using the {@link Option} type.\n *\n * @param item - The serializer to use for the value that may be present.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction option(item, options = {}) {\n  const prefix = options.prefix ?? umiSerializersNumbers.u8();\n  const fixed = options.fixed ?? false;\n  let descriptionSuffix = `; ${utils.getSizeDescription(prefix)}`;\n  let fixedSize = item.fixedSize === 0 ? prefix.fixedSize : null;\n  if (fixed) {\n    if (item.fixedSize === null || prefix.fixedSize === null) {\n      throw new umiSerializersCore.ExpectedFixedSizeSerializerError('Fixed options can only be used with fixed-size serializers');\n    }\n    descriptionSuffix += '; fixed';\n    fixedSize = prefix.fixedSize + item.fixedSize;\n  }\n  return {\n    description: options.description ?? `option(${item.description + descriptionSuffix})`,\n    fixedSize,\n    maxSize: sumSerializerSizes.sumSerializerSizes([prefix.maxSize, item.maxSize]),\n    serialize: optionOrNullable => {\n      const option = umiOptions.isOption(optionOrNullable) ? optionOrNullable : umiOptions.wrapNullable(optionOrNullable);\n      const prefixByte = prefix.serialize(Number(umiOptions.isSome(option)));\n      if (fixed) {\n        const itemFixedSize = item.fixedSize;\n        const itemBytes = umiOptions.isSome(option) ? item.serialize(option.value).slice(0, itemFixedSize) : new Uint8Array(itemFixedSize).fill(0);\n        return umiSerializersCore.mergeBytes([prefixByte, itemBytes]);\n      }\n      const itemBytes = umiOptions.isSome(option) ? item.serialize(option.value) : new Uint8Array();\n      return umiSerializersCore.mergeBytes([prefixByte, itemBytes]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        return [umiOptions.none(), offset];\n      }\n      const fixedOffset = offset + (prefix.fixedSize ?? 0) + (item.fixedSize ?? 0);\n      const [isSome, prefixOffset] = prefix.deserialize(bytes, offset);\n      offset = prefixOffset;\n      if (isSome === 0) {\n        return [umiOptions.none(), fixed ? fixedOffset : offset];\n      }\n      const [value, newOffset] = item.deserialize(bytes, offset);\n      offset = newOffset;\n      return [umiOptions.some(value), fixed ? fixedOffset : offset];\n    }\n  };\n}\n\nexports.option = option;\n//# sourceMappingURL=option.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiPublicKeys = require('@metaplex-foundation/umi-public-keys');\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\n\n/**\n * Defines the options for `PublicKey` serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for base58 encoded public keys.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction publicKey(options = {}) {\n  return {\n    description: options.description ?? 'publicKey',\n    fixedSize: 32,\n    maxSize: 32,\n    serialize: value => umiPublicKeys.publicKeyBytes(umiPublicKeys.publicKey(value)),\n    deserialize: (bytes, offset = 0) => {\n      const pubkeyBytes = bytes.slice(offset, offset + 32);\n      if (pubkeyBytes.length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('publicKey');\n      }\n      if (pubkeyBytes.length < umiPublicKeys.PUBLIC_KEY_LENGTH) {\n        throw new umiSerializersCore.NotEnoughBytesError('publicKey', umiPublicKeys.PUBLIC_KEY_LENGTH, pubkeyBytes.length);\n      }\n      return [umiPublicKeys.publicKey(pubkeyBytes), offset + 32];\n    }\n  };\n}\n\nexports.publicKey = publicKey;\n//# sourceMappingURL=publicKey.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar errors = require('./errors.cjs');\n\n/**\n * Defines a scalar enum as a type from its constructor.\n *\n * @example\n * ```ts\n * enum Direction { Left, Right };\n * type DirectionType = ScalarEnum<Direction>;\n * ```\n *\n * @category Serializers\n */\n\n/**\n * Creates a scalar enum serializer.\n *\n * @param constructor - The constructor of the scalar enum.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction scalarEnum(constructor, options = {}) {\n  const prefix = options.size ?? umiSerializersNumbers.u8();\n  const enumKeys = Object.keys(constructor);\n  const enumValues = Object.values(constructor);\n  const isNumericEnum = enumValues.some(v => typeof v === 'number');\n  const valueDescriptions = enumValues.filter(v => typeof v === 'string').join(', ');\n  const minRange = 0;\n  const maxRange = isNumericEnum ? enumValues.length / 2 - 1 : enumValues.length - 1;\n  const stringValues = isNumericEnum ? [...enumKeys] : [...new Set([...enumKeys, ...enumValues])];\n  function assertValidVariant(variant) {\n    const isInvalidNumber = typeof variant === 'number' && (variant < minRange || variant > maxRange);\n    const isInvalidString = typeof variant === 'string' && !stringValues.includes(variant);\n    if (isInvalidNumber || isInvalidString) {\n      throw new errors.InvalidScalarEnumVariantError(variant, stringValues, minRange, maxRange);\n    }\n  }\n  return {\n    description: options.description ?? `enum(${valueDescriptions}; ${prefix.description})`,\n    fixedSize: prefix.fixedSize,\n    maxSize: prefix.maxSize,\n    serialize: value => {\n      assertValidVariant(value);\n      if (typeof value === 'number') return prefix.serialize(value);\n      const valueIndex = enumValues.indexOf(value);\n      if (valueIndex >= 0) return prefix.serialize(valueIndex);\n      return prefix.serialize(enumKeys.indexOf(value));\n    },\n    deserialize: (bytes, offset = 0) => {\n      if (bytes.slice(offset).length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('enum');\n      }\n      const [value, newOffset] = prefix.deserialize(bytes, offset);\n      const valueAsNumber = Number(value);\n      offset = newOffset;\n      if (valueAsNumber < minRange || valueAsNumber > maxRange) {\n        throw new errors.EnumDiscriminatorOutOfRangeError(valueAsNumber, minRange, maxRange);\n      }\n      return [isNumericEnum ? valueAsNumber : enumValues[valueAsNumber], offset];\n    }\n  };\n}\n\nexports.scalarEnum = scalarEnum;\n//# sourceMappingURL=scalarEnum.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar errors = require('./errors.cjs');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for `Set` serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for a set.\n *\n * @param item - The serializer to use for the set's items.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction set(item, options = {}) {\n  const size = options.size ?? umiSerializersNumbers.u32();\n  return {\n    description: options.description ?? `set(${item.description}; ${utils.getSizeDescription(size)})`,\n    fixedSize: utils.getSizeFromChildren(size, [item.fixedSize]),\n    maxSize: utils.getSizeFromChildren(size, [item.maxSize]),\n    serialize: set => {\n      if (typeof size === 'number' && set.size !== size) {\n        throw new errors.InvalidNumberOfItemsError('set', size, set.size);\n      }\n      const itemBytes = Array.from(set, value => item.serialize(value));\n      return umiSerializersCore.mergeBytes([utils.getSizePrefix(size, set.size), ...itemBytes]);\n    },\n    deserialize: (bytes, offset = 0) => {\n      const set = new Set();\n      if (typeof size === 'object' && bytes.slice(offset).length === 0) {\n        return [set, offset];\n      }\n      if (size === 'remainder') {\n        while (offset < bytes.length) {\n          const [value, newOffset] = item.deserialize(bytes, offset);\n          set.add(value);\n          offset = newOffset;\n        }\n        return [set, offset];\n      }\n      const [resolvedSize, newOffset] = utils.getResolvedSize(size, bytes, offset);\n      offset = newOffset;\n      for (let i = 0; i < resolvedSize; i += 1) {\n        const [value, newOffset] = item.deserialize(bytes, offset);\n        set.add(value);\n        offset = newOffset;\n      }\n      return [set, offset];\n    }\n  };\n}\n\nexports.set = set;\n//# sourceMappingURL=set.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar umiSerializersEncodings = require('@metaplex-foundation/umi-serializers-encodings');\nvar umiSerializersNumbers = require('@metaplex-foundation/umi-serializers-numbers');\nvar utils = require('./utils.cjs');\n\n/**\n * Defines the options for string serializers.\n * @category Serializers\n */\n\n/**\n * Creates a string serializer.\n *\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction string(options = {}) {\n  const size = options.size ?? umiSerializersNumbers.u32();\n  const encoding = options.encoding ?? umiSerializersEncodings.utf8;\n  const description = options.description ?? `string(${encoding.description}; ${utils.getSizeDescription(size)})`;\n  if (size === 'variable') {\n    return {\n      ...encoding,\n      description\n    };\n  }\n  if (typeof size === 'number') {\n    return umiSerializersCore.fixSerializer(encoding, size, description);\n  }\n  return {\n    description,\n    fixedSize: null,\n    maxSize: null,\n    serialize: value => {\n      const contentBytes = encoding.serialize(value);\n      const lengthBytes = size.serialize(contentBytes.length);\n      return umiSerializersCore.mergeBytes([lengthBytes, contentBytes]);\n    },\n    deserialize: (buffer, offset = 0) => {\n      if (buffer.slice(offset).length === 0) {\n        throw new umiSerializersCore.DeserializingEmptyBufferError('string');\n      }\n      const [lengthBigInt, lengthOffset] = size.deserialize(buffer, offset);\n      const length = Number(lengthBigInt);\n      offset = lengthOffset;\n      const contentBuffer = buffer.slice(offset, offset + length);\n      if (contentBuffer.length < length) {\n        throw new umiSerializersCore.NotEnoughBytesError('string', length, contentBuffer.length);\n      }\n      const [value, contentOffset] = encoding.deserialize(contentBuffer);\n      offset += contentOffset;\n      return [value, offset];\n    }\n  };\n}\n\nexports.string = string;\n//# sourceMappingURL=string.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\n\n/**\n * Get the name and serializer of each field in a struct.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for a custom object.\n *\n * @param fields - The name and serializer of each field.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction struct(fields, options = {}) {\n  const fieldDescriptions = fields.map(([name, serializer]) => `${String(name)}: ${serializer.description}`).join(', ');\n  return {\n    description: options.description ?? `struct(${fieldDescriptions})`,\n    fixedSize: sumSerializerSizes.sumSerializerSizes(fields.map(([, field]) => field.fixedSize)),\n    maxSize: sumSerializerSizes.sumSerializerSizes(fields.map(([, field]) => field.maxSize)),\n    serialize: struct => {\n      const fieldBytes = fields.map(([key, serializer]) => serializer.serialize(struct[key]));\n      return umiSerializersCore.mergeBytes(fieldBytes);\n    },\n    deserialize: (bytes, offset = 0) => {\n      const struct = {};\n      fields.forEach(([key, serializer]) => {\n        const [value, newOffset] = serializer.deserialize(bytes, offset);\n        offset = newOffset;\n        struct[key] = value;\n      });\n      return [struct, offset];\n    }\n  };\n}\n\nexports.struct = struct;\n//# sourceMappingURL=struct.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializersCore = require('@metaplex-foundation/umi-serializers-core');\nvar sumSerializerSizes = require('./sumSerializerSizes.cjs');\nvar errors = require('./errors.cjs');\n\n/**\n * Defines the options for tuple serializers.\n * @category Serializers\n */\n\n/**\n * Creates a serializer for a tuple-like array.\n *\n * @param items - The serializers to use for each item in the tuple.\n * @param options - A set of options for the serializer.\n * @category Serializers\n */\nfunction tuple(items, options = {}) {\n  const itemDescriptions = items.map(item => item.description).join(', ');\n  return {\n    description: options.description ?? `tuple(${itemDescriptions})`,\n    fixedSize: sumSerializerSizes.sumSerializerSizes(items.map(item => item.fixedSize)),\n    maxSize: sumSerializerSizes.sumSerializerSizes(items.map(item => item.maxSize)),\n    serialize: value => {\n      if (value.length !== items.length) {\n        throw new errors.InvalidNumberOfItemsError('tuple', items.length, value.length);\n      }\n      return umiSerializersCore.mergeBytes(items.map((item, index) => item.serialize(value[index])));\n    },\n    deserialize: (bytes, offset = 0) => {\n      const values = [];\n      items.forEach(serializer => {\n        const [newValue, newOffset] = serializer.deserialize(bytes, offset);\n        values.push(newValue);\n        offset = newOffset;\n      });\n      return [values, offset];\n    }\n  };\n}\n\nexports.tuple = tuple;\n//# sourceMappingURL=tuple.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Defines the options for unit serializers.\n * @category Serializers\n */\n\n/**\n * Creates a void serializer.\n *\n * @param options - A set of options for the serializer.\n */\nfunction unit(options = {}) {\n  return {\n    description: options.description ?? 'unit',\n    fixedSize: 0,\n    maxSize: 0,\n    serialize: () => new Uint8Array(),\n    deserialize: (_bytes, offset = 0) => [undefined, offset]\n  };\n}\n\nexports.unit = unit;\n//# sourceMappingURL=unit.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar UnexpectedAccountError = require('./errors/UnexpectedAccountError.cjs');\nvar AccountNotFoundError = require('./errors/AccountNotFoundError.cjs');\n\n/**\n * The size of an account header in bytes.\n * @category Accounts\n */\nconst ACCOUNT_HEADER_SIZE = 128;\n\n/**\n * Describes the header of an account.\n * @category Accounts\n */\n\n/**\n * Given an account data serializer,\n * returns a deserialized account from a raw account.\n * @category Accounts\n */\nfunction deserializeAccount(rawAccount, dataSerializer) {\n  const {\n    data,\n    publicKey,\n    ...rest\n  } = rawAccount;\n  try {\n    const [parsedData] = dataSerializer.deserialize(data);\n    return {\n      publicKey,\n      header: rest,\n      ...parsedData\n    };\n  } catch (error) {\n    throw new UnexpectedAccountError.UnexpectedAccountError(publicKey, dataSerializer.description, error);\n  }\n}\n\n/**\n * Ensures an account that may or may not exist actually exists.\n * @category Accounts\n */\nfunction assertAccountExists(account, name, solution) {\n  if (!account.exists) {\n    throw new AccountNotFoundError.AccountNotFoundError(account.publicKey, name, solution);\n  }\n}\n\nexports.ACCOUNT_HEADER_SIZE = ACCOUNT_HEADER_SIZE;\nexports.assertAccountExists = assertAccountExists;\nexports.deserializeAccount = deserializeAccount;\n//# sourceMappingURL=Account.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass UnexpectedAccountError extends SdkError.SdkError {\n  name = 'UnexpectedAccountError';\n  constructor(publicKey, expectedType, cause) {\n    const message = `The account at the provided address [${publicKey}] ` + `is not of the expected type [${expectedType}].`;\n    super(message, cause);\n  }\n}\n\nexports.UnexpectedAccountError = UnexpectedAccountError;\n//# sourceMappingURL=UnexpectedAccountError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar UmiError = require('./UmiError.cjs');\n\n/** @category Errors */\nclass SdkError extends UmiError.UmiError {\n  name = 'SdkError';\n  constructor(message, cause) {\n    super(message, 'sdk', undefined, cause);\n  }\n}\n\nexports.SdkError = SdkError;\n//# sourceMappingURL=SdkError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** @category Errors */\nclass UmiError extends Error {\n  name = 'UmiError';\n  constructor(message, source, sourceDetails, cause) {\n    super(message);\n    this.source = source;\n    this.sourceDetails = sourceDetails;\n    this.cause = cause;\n    this.message = `${this.message}\\n\\nSource: ${this.getFullSource()}${this.cause ? `\\n\\nCaused By: ${this.cause}` : ''}\\n`;\n  }\n  getCapitalizedSource() {\n    if (this.source === 'sdk' || this.source === 'rpc') {\n      return this.source.toUpperCase();\n    }\n    return this.source[0].toUpperCase() + this.source.slice(1);\n  }\n  getFullSource() {\n    const capitalizedSource = this.getCapitalizedSource();\n    const sourceDetails = this.sourceDetails ? ` > ${this.sourceDetails}` : '';\n    return capitalizedSource + sourceDetails;\n  }\n  toString() {\n    return `[${this.name}] ${this.message}`;\n  }\n}\n\n/** @category Errors */\n\nexports.UmiError = UmiError;\n//# sourceMappingURL=UmiError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass AccountNotFoundError extends SdkError.SdkError {\n  name = 'AccountNotFoundError';\n  constructor(publicKey, accountType, solution) {\n    const message = `${accountType ? `The account of type [${accountType}] was not found` : 'No account was found'} at the provided address [${publicKey}].${solution ? ` ${solution}` : ''}`;\n    super(message);\n  }\n}\n\nexports.AccountNotFoundError = AccountNotFoundError;\n//# sourceMappingURL=AccountNotFoundError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\nvar BigInt$1 = require('./BigInt.cjs');\nvar UnexpectedAmountError = require('./errors/UnexpectedAmountError.cjs');\nvar AmountMismatchError = require('./errors/AmountMismatchError.cjs');\n\n/**\n * The identifier of an amount.\n * @category Utils — Amounts\n */\n\n/**\n * Creates an amount from the provided basis points, identifier, and decimals.\n * @category Utils — Amounts\n */\nconst createAmount = (basisPoints, identifier, decimals) => ({\n  basisPoints: BigInt$1.createBigInt(basisPoints),\n  identifier,\n  decimals\n});\n\n/**\n * Creates an amount from a decimal value which will be converted to the lowest\n * possible unit using the provided decimals.\n * @category Utils — Amounts\n */\nconst createAmountFromDecimals = (decimalAmount, identifier, decimals) => {\n  const exponentAmount = createAmount(BigInt(10) ** BigInt(decimals ?? 0), identifier, decimals);\n  return multiplyAmount(exponentAmount, decimalAmount);\n};\n\n/**\n * Creates a percentage amount from the provided decimal value.\n * @category Utils — Amounts\n */\nconst percentAmount = (percent, decimals = 2) => createAmountFromDecimals(percent, '%', decimals);\n\n/**\n * Creates an amount of SPL tokens from the provided decimal value.\n * @category Utils — Amounts\n */\nconst tokenAmount = (tokens, identifier, decimals) => createAmountFromDecimals(tokens, identifier ?? 'splToken', decimals ?? 0);\n\n/**\n * Creates a {@link SolAmount} from the provided lamports.\n * @category Utils — Amounts\n */\nconst lamports = lamports => createAmount(lamports, 'SOL', 9);\n\n/**\n * Creates a {@link SolAmount} from the provided decimal value in SOL.\n * @category Utils — Amounts\n */\nconst sol = sol => createAmountFromDecimals(sol, 'SOL', 9);\n\n/**\n * Creates a {@link UsdAmount} from the provided decimal value in USD.\n * @category Utils — Amounts\n */\nconst usd = usd => createAmountFromDecimals(usd, 'USD', 2);\n\n/**\n * Determines whether a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nconst isAmount = (amount, identifier, decimals) => amount.identifier === identifier && amount.decimals === decimals;\n\n/**\n * Determines whether a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nconst isSolAmount = amount => isAmount(amount, 'SOL', 9);\n\n/**\n * Determines whether two amounts are of the same type.\n * @category Utils — Amounts\n */\nconst sameAmounts = (left, right) => isAmount(left, right.identifier, right.decimals);\n\n/**\n * Ensures that a given amount has the provided identifier and decimals.\n * @category Utils — Amounts\n */\nfunction assertAmount(amount, identifier, decimals) {\n  if (!isAmount(amount, identifier, decimals)) {\n    throw new UnexpectedAmountError.UnexpectedAmountError(amount, identifier, decimals);\n  }\n}\n\n/**\n * Ensures that a given amount is a {@link SolAmount}.\n * @category Utils — Amounts\n */\nfunction assertSolAmount(actual) {\n  assertAmount(actual, 'SOL', 9);\n}\n\n/**\n * Ensures that two amounts are of the same type.\n * @category Utils — Amounts\n */\nfunction assertSameAmounts(left, right, operation) {\n  if (!sameAmounts(left, right)) {\n    throw new AmountMismatchError.AmountMismatchError(left, right, operation);\n  }\n}\n\n/**\n * Adds two amounts of the same type.\n * @category Utils — Amounts\n */\nconst addAmounts = (left, right) => {\n  assertSameAmounts(left, right, 'add');\n  return {\n    ...left,\n    basisPoints: left.basisPoints + right.basisPoints\n  };\n};\n\n/**\n * Subtracts two amounts of the same type.\n * @category Utils — Amounts\n */\nconst subtractAmounts = (left, right) => {\n  assertSameAmounts(left, right, 'subtract');\n  return {\n    ...left,\n    basisPoints: left.basisPoints - right.basisPoints\n  };\n};\n\n/**\n * Multiplies an amount by a given multiplier.\n * @category Utils — Amounts\n */\nconst multiplyAmount = (left, multiplier) => {\n  if (typeof multiplier === 'bigint') {\n    return {\n      ...left,\n      basisPoints: left.basisPoints * multiplier\n    };\n  }\n  const [units, decimals] = multiplier.toString().split('.');\n  const multiplierBasisPoints = BigInt(units + (decimals ?? ''));\n  const multiplierExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n  return {\n    ...left,\n    basisPoints: left.basisPoints * multiplierBasisPoints / multiplierExponents\n  };\n};\n\n/**\n * Divides an amount by a given divisor.\n * @category Utils — Amounts\n */\nconst divideAmount = (left, divisor) => {\n  if (typeof divisor === 'bigint') {\n    return {\n      ...left,\n      basisPoints: left.basisPoints / divisor\n    };\n  }\n  const [units, decimals] = divisor.toString().split('.');\n  const divisorBasisPoints = BigInt(units + (decimals ?? ''));\n  const divisorExponents = BigInt(10) ** BigInt(decimals?.length ?? 0);\n  return {\n    ...left,\n    basisPoints: left.basisPoints * divisorExponents / divisorBasisPoints\n  };\n};\n\n/**\n * Returns the absolute value of an amount.\n * @category Utils — Amounts\n */\nconst absoluteAmount = value => {\n  const x = value.basisPoints;\n  return {\n    ...value,\n    basisPoints: x < 0 ? -x : x\n  };\n};\n\n/**\n * Compares two amounts of the same type.\n * @category Utils — Amounts\n */\nconst compareAmounts = (left, right) => {\n  assertSameAmounts(left, right, 'compare');\n  if (left.basisPoints > right.basisPoints) return 1;\n  if (left.basisPoints < right.basisPoints) return -1;\n  return 0;\n};\n\n/**\n * Determines whether two amounts are equal.\n * An optional tolerance can be provided to allow for small differences.\n * When using {@link SolAmount}, this is usually due to transaction or small storage fees.\n * @category Utils — Amounts\n */\nconst isEqualToAmount = (left, right, tolerance) => {\n  tolerance = tolerance ?? createAmount(0, left.identifier, left.decimals);\n  assertSameAmounts(left, right, 'isEqualToAmount');\n  assertSameAmounts(left, tolerance, 'isEqualToAmount');\n  const delta = absoluteAmount(subtractAmounts(left, right));\n  return isLessThanOrEqualToAmount(delta, tolerance);\n};\n\n/**\n * Whether the left amount is less than the right amount.\n * @category Utils — Amounts\n */\nconst isLessThanAmount = (left, right) => compareAmounts(left, right) < 0;\n\n/**\n * Whether the left amount is less than or equal to the right amount.\n * @category Utils — Amounts\n */\nconst isLessThanOrEqualToAmount = (left, right) => compareAmounts(left, right) <= 0;\n\n/**\n * Whether the left amount is greater than the right amount.\n * @category Utils — Amounts\n */\nconst isGreaterThanAmount = (left, right) => compareAmounts(left, right) > 0;\n\n/**\n * Whether the left amount is greater than or equal to the right amount.\n * @category Utils — Amounts\n */\nconst isGreaterThanOrEqualToAmount = (left, right) => compareAmounts(left, right) >= 0;\n\n/**\n * Whether the amount is zero.\n * @category Utils — Amounts\n */\nconst isZeroAmount = value => value.basisPoints === BigInt(0);\n\n/**\n * Whether the amount is positive.\n * @category Utils — Amounts\n */\nconst isPositiveAmount = value => value.basisPoints >= BigInt(0);\n\n/**\n * Whether the amount is negative.\n * @category Utils — Amounts\n */\nconst isNegativeAmount = value => value.basisPoints < BigInt(0);\n\n/**\n * Converts an amount to a string by using the amount's decimals.\n * @category Utils — Amounts\n */\nconst amountToString = (value, maxDecimals) => {\n  let text = value.basisPoints.toString();\n  if (value.decimals === 0) {\n    return text;\n  }\n  const sign = text.startsWith('-') ? '-' : '';\n  text = text.replace('-', '');\n  text = text.padStart(value.decimals + 1, '0');\n  const units = text.slice(0, -value.decimals);\n  let decimals = text.slice(-value.decimals);\n  if (maxDecimals !== undefined) {\n    decimals = decimals.slice(0, maxDecimals);\n  }\n  return `${sign + units}.${decimals}`;\n};\n\n/**\n * Converts an amount to a number by using the amount's decimals.\n * Note that this may throw an error if the amount is too large to fit in a JavaScript number.\n * @category Utils — Amounts\n */\nconst amountToNumber = value => parseFloat(amountToString(value));\n\n/**\n * Displays an amount as a string by using the amount's decimals and identifier.\n * @category Utils — Amounts\n */\nconst displayAmount = (value, maxDecimals) => {\n  const amountAsString = amountToString(value, maxDecimals);\n  switch (value.identifier) {\n    case '%':\n      return `${amountAsString}%`;\n    case 'splToken':\n      return /^1(\\.0+)?$/.test(amountAsString) ? `${amountAsString} Token` : `${amountAsString} Tokens`;\n    default:\n      if (value.identifier.startsWith('splToken.')) {\n        const [, identifier] = value.identifier.split('.');\n        return `${identifier} ${amountAsString}`;\n      }\n      return `${value.identifier} ${amountAsString}`;\n  }\n};\n\n/**\n * Converts a number serializer into an amount serializer\n * by providing an amount identifier and decimals.\n * @category Utils — Amounts\n */\nconst mapAmountSerializer = (serializer, identifier, decimals) => umiSerializers.mapSerializer(serializer, value => value.basisPoints > Number.MAX_SAFE_INTEGER ? value.basisPoints : Number(value.basisPoints), value => createAmount(value, identifier, decimals));\n\nexports.absoluteAmount = absoluteAmount;\nexports.addAmounts = addAmounts;\nexports.amountToNumber = amountToNumber;\nexports.amountToString = amountToString;\nexports.assertAmount = assertAmount;\nexports.assertSameAmounts = assertSameAmounts;\nexports.assertSolAmount = assertSolAmount;\nexports.compareAmounts = compareAmounts;\nexports.createAmount = createAmount;\nexports.createAmountFromDecimals = createAmountFromDecimals;\nexports.displayAmount = displayAmount;\nexports.divideAmount = divideAmount;\nexports.isAmount = isAmount;\nexports.isEqualToAmount = isEqualToAmount;\nexports.isGreaterThanAmount = isGreaterThanAmount;\nexports.isGreaterThanOrEqualToAmount = isGreaterThanOrEqualToAmount;\nexports.isLessThanAmount = isLessThanAmount;\nexports.isLessThanOrEqualToAmount = isLessThanOrEqualToAmount;\nexports.isNegativeAmount = isNegativeAmount;\nexports.isPositiveAmount = isPositiveAmount;\nexports.isSolAmount = isSolAmount;\nexports.isZeroAmount = isZeroAmount;\nexports.lamports = lamports;\nexports.mapAmountSerializer = mapAmountSerializer;\nexports.multiplyAmount = multiplyAmount;\nexports.percentAmount = percentAmount;\nexports.sameAmounts = sameAmounts;\nexports.sol = sol;\nexports.subtractAmounts = subtractAmounts;\nexports.tokenAmount = tokenAmount;\nexports.usd = usd;\n//# sourceMappingURL=Amount.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Defines all the types that can be used to create\n * a BigInt via the <code>{@link createBigInt}</code> function.\n * @category Utils — Amounts\n */\n\n/**\n * Creates a BigInt from a number, string, boolean, or Uint8Array.\n * @category Utils — Amounts\n */\nconst createBigInt = input => {\n  input = typeof input === 'object' ? input.toString() : input;\n  return BigInt(input);\n};\n\nexports.createBigInt = createBigInt;\n//# sourceMappingURL=BigInt.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass UnexpectedAmountError extends SdkError.SdkError {\n  name = 'UnexpectedAmountError';\n  constructor(amount, expectedIdentifier, expectedDecimals) {\n    const message = `Expected amount of type [${expectedIdentifier} with ${expectedDecimals} decimals] ` + `but got [${amount.identifier} with ${amount.decimals} decimals]. ` + `Ensure the provided Amount is of the expected type.`;\n    super(message);\n    this.amount = amount;\n    this.expectedIdentifier = expectedIdentifier;\n    this.expectedDecimals = expectedDecimals;\n  }\n}\n\nexports.UnexpectedAmountError = UnexpectedAmountError;\n//# sourceMappingURL=UnexpectedAmountError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass AmountMismatchError extends SdkError.SdkError {\n  name = 'AmountMismatchError';\n  constructor(left, right, operation) {\n    const wrappedOperation = operation ? ` [${operation}]` : '';\n    const message = `The SDK tried to execute an operation${wrappedOperation} on two amounts of different types: ` + `[${left.identifier} with ${left.decimals} decimals] and ` + `[${right.identifier} with ${right.decimals} decimals]. ` + `Provide both amounts in the same type to perform this operation.`;\n    super(message);\n    this.left = left;\n    this.right = right;\n    this.operation = operation;\n  }\n}\n\nexports.AmountMismatchError = AmountMismatchError;\n//# sourceMappingURL=AmountMismatchError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Defines the available Solana clusters.\n * @category Utils — Cluster\n */\n\n/**\n * Helper type to helps the end-user selecting a cluster.\n * They can either provide a specific cluster or use the\n * special values 'current' or '*' to select the current\n * cluster or all clusters respectively.\n * @category Utils — Cluster\n */\n\nconst MAINNET_BETA_DOMAINS = ['api.mainnet-beta.solana.com', 'ssc-dao.genesysgo.net'];\nconst DEVNET_DOMAINS = ['api.devnet.solana.com', 'psytrbhymqlkfrhudd.dev.genesysgo.net'];\nconst TESTNET_DOMAINS = ['api.testnet.solana.com'];\nconst LOCALNET_DOMAINS = ['localhost', '127.0.0.1'];\n\n/**\n * Helper method that tries its best to resolve a cluster from a given endpoint.\n * @category Utils — Cluster\n */\nconst resolveClusterFromEndpoint = endpoint => {\n  const domain = new URL(endpoint).hostname;\n  if (MAINNET_BETA_DOMAINS.includes(domain)) return 'mainnet-beta';\n  if (DEVNET_DOMAINS.includes(domain)) return 'devnet';\n  if (TESTNET_DOMAINS.includes(domain)) return 'testnet';\n  if (LOCALNET_DOMAINS.includes(domain)) return 'localnet';\n  if (endpoint.includes('mainnet')) return 'mainnet-beta';\n  if (endpoint.includes('devnet')) return 'devnet';\n  if (endpoint.includes('testnet')) return 'testnet';\n  if (endpoint.includes('local')) return 'localnet';\n  return 'custom';\n};\n\nexports.resolveClusterFromEndpoint = resolveClusterFromEndpoint;\n//# sourceMappingURL=Cluster.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar DownloaderInterface = require('./DownloaderInterface.cjs');\nvar EddsaInterface = require('./EddsaInterface.cjs');\nvar HttpInterface = require('./HttpInterface.cjs');\nvar ProgramRepositoryInterface = require('./ProgramRepositoryInterface.cjs');\nvar RpcInterface = require('./RpcInterface.cjs');\nvar SerializerInterface = require('./SerializerInterface.cjs');\nvar Signer = require('./Signer.cjs');\nvar TransactionFactoryInterface = require('./TransactionFactoryInterface.cjs');\nvar UploaderInterface = require('./UploaderInterface.cjs');\n\n/**\n * A Umi context object that uses all of the interfaces provided by Umi.\n * Once created, the end-user can pass this object to any function that\n * requires some or all of these interfaces.\n *\n * @category Context and Interfaces\n */\n\n/**\n * A helper method that creates a Umi context object using only\n * Null implementations of the interfaces. This can be useful to\n * create a full Umi context object when only a few of the interfaces\n * are needed.\n *\n * @category Context and Interfaces\n */\nconst createNullContext = () => ({\n  downloader: DownloaderInterface.createNullDownloader(),\n  eddsa: EddsaInterface.createNullEddsa(),\n  http: HttpInterface.createNullHttp(),\n  identity: Signer.createNullSigner(),\n  payer: Signer.createNullSigner(),\n  programs: ProgramRepositoryInterface.createNullProgramRepository(),\n  rpc: RpcInterface.createNullRpc(),\n  serializer: SerializerInterface.createNullSerializer(),\n  transactions: TransactionFactoryInterface.createNullTransactionFactory(),\n  uploader: UploaderInterface.createNullUploader()\n});\n\nexports.createNullContext = createNullContext;\n//# sourceMappingURL=Context.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * An implementation of the {@link DownloaderInterface} that throws an error when called.\n * @category Storage\n */\nfunction createNullDownloader() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('DownloaderInterface', 'downloader');\n  };\n  return {\n    download: errorHandler,\n    downloadJson: errorHandler\n  };\n}\n\nexports.createNullDownloader = createNullDownloader;\n//# sourceMappingURL=DownloaderInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass InterfaceImplementationMissingError extends SdkError.SdkError {\n  name = 'InterfaceImplementationMissingError';\n  constructor(interfaceName, contextVariable) {\n    const interfaceBasename = interfaceName.replace(/Interface$/, '');\n    const message = `Tried using ${interfaceName} but no implementation of that interface was found. ` + `Make sure an implementation is registered, ` + `e.g. via \"context.${contextVariable} = new My${interfaceBasename}();\".`;\n    super(message);\n  }\n}\n\nexports.InterfaceImplementationMissingError = InterfaceImplementationMissingError;\n//# sourceMappingURL=InterfaceImplementationMissingError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * An implementation of the {@link EddsaInterface} that throws an error when called.\n * @category Signers and PublicKeys\n */\nfunction createNullEddsa() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('EddsaInterface', 'eddsa');\n  };\n  return {\n    generateKeypair: errorHandler,\n    createKeypairFromSecretKey: errorHandler,\n    createKeypairFromSeed: errorHandler,\n    isOnCurve: errorHandler,\n    findPda: errorHandler,\n    sign: errorHandler,\n    verify: errorHandler\n  };\n}\n\nexports.createNullEddsa = createNullEddsa;\n//# sourceMappingURL=EddsaInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * An implementation of the {@link HttpInterface} that throws an error when called.\n * @category Http\n */\nfunction createNullHttp() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('HttpInterface', 'http');\n  };\n  return {\n    send: errorHandler\n  };\n}\n\nexports.createNullHttp = createNullHttp;\n//# sourceMappingURL=HttpInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * Defines the interface for a program repository.\n * It allows us to register and retrieve programs when needed.\n *\n * @category Context and Interfaces\n */\n\n/**\n * An implementation of the {@link ProgramRepositoryInterface} that throws an error when called.\n * @category Programs\n */\nfunction createNullProgramRepository() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('ProgramRepositoryInterface', 'programs');\n  };\n  return {\n    has: errorHandler,\n    get: errorHandler,\n    getPublicKey: errorHandler,\n    all: errorHandler,\n    add: errorHandler,\n    bind: errorHandler,\n    unbind: errorHandler,\n    clone: errorHandler,\n    resolveError: errorHandler\n  };\n}\n\nexports.createNullProgramRepository = createNullProgramRepository;\n//# sourceMappingURL=ProgramRepositoryInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * Defines the interface for an RPC client.\n * It allows us to interact with the Solana blockchain.\n *\n * @category Context and Interfaces\n */\n\n/**\n * An implementation of the {@link RpcInterface} that throws an error when called.\n * @category Rpc\n */\nfunction createNullRpc() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('RpcInterface', 'rpc');\n  };\n  return {\n    getEndpoint: errorHandler,\n    getCluster: errorHandler,\n    getAccount: errorHandler,\n    getAccounts: errorHandler,\n    getProgramAccounts: errorHandler,\n    getBlockTime: errorHandler,\n    getBalance: errorHandler,\n    getRent: errorHandler,\n    getSlot: errorHandler,\n    getLatestBlockhash: errorHandler,\n    getTransaction: errorHandler,\n    getSignatureStatuses: errorHandler,\n    accountExists: errorHandler,\n    airdrop: errorHandler,\n    call: errorHandler,\n    sendTransaction: errorHandler,\n    confirmTransaction: errorHandler\n  };\n}\n\nexports.createNullRpc = createNullRpc;\n//# sourceMappingURL=RpcInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * Defines the interface for a set of serializers\n * that can be used to serialize/deserialize any Serde types.\n *\n * @category Context and Interfaces\n * @deprecated This interface is deprecated.\n * You can now directly use `@metaplex-foundation/umi/serializers` instead.\n */\n\n/**\n * An implementation of the {@link SerializerInterface} that throws an error when called.\n * @category Serializers\n */\nfunction createNullSerializer() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('SerializerInterface', 'serializer');\n  };\n  return {\n    tuple: errorHandler,\n    array: errorHandler,\n    map: errorHandler,\n    set: errorHandler,\n    option: errorHandler,\n    nullable: errorHandler,\n    struct: errorHandler,\n    enum: errorHandler,\n    dataEnum: errorHandler,\n    string: errorHandler,\n    bool: errorHandler,\n    unit: errorHandler,\n    u8: errorHandler,\n    u16: errorHandler,\n    u32: errorHandler,\n    u64: errorHandler,\n    u128: errorHandler,\n    i8: errorHandler,\n    i16: errorHandler,\n    i32: errorHandler,\n    i64: errorHandler,\n    i128: errorHandler,\n    f32: errorHandler,\n    f64: errorHandler,\n    bytes: errorHandler,\n    publicKey: errorHandler\n  };\n}\n\nexports.createNullSerializer = createNullSerializer;\n//# sourceMappingURL=SerializerInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar arrays = require('./utils/arrays.cjs');\n\n/**\n * Defines a public key that can sign transactions and messages.\n * @category Context and Interfaces\n */\n\n/**\n * Signs a transaction using the provided signers.\n * @category Signers and PublicKeys\n */\nconst signTransaction = async (transaction, signers) => signers.reduce(async (promise, signer) => {\n  const unsigned = await promise;\n  return signer.signTransaction(unsigned);\n}, Promise.resolve(transaction));\n\n/**\n * Signs multiple transactions using the provided signers\n * such that signers that need to sign multiple transactions\n * sign them all at once using the `signAllTransactions` method.\n *\n * @category Signers and PublicKeys\n */\nconst signAllTransactions = async transactionsWithSigners => {\n  const transactions = transactionsWithSigners.map(item => item.transaction);\n  const signersWithTransactions = transactionsWithSigners.reduce((all, {\n    signers\n  }, index) => {\n    signers.forEach(signer => {\n      const item = all.find(item => item.signer.publicKey === signer.publicKey);\n      if (item) {\n        item.indices.push(index);\n      } else {\n        all.push({\n          signer,\n          indices: [index]\n        });\n      }\n    });\n    return all;\n  }, []);\n  return signersWithTransactions.reduce(async (promise, {\n    signer,\n    indices\n  }) => {\n    const transactions = await promise;\n    if (indices.length === 1) {\n      const unsigned = transactions[indices[0]];\n      transactions[indices[0]] = await signer.signTransaction(unsigned);\n      return transactions;\n    }\n    const unsigned = indices.map(index => transactions[index]);\n    const signed = await signer.signAllTransactions(unsigned);\n    indices.forEach((index, position) => {\n      transactions[index] = signed[position];\n    });\n    return transactions;\n  }, Promise.resolve(transactions));\n};\n\n/**\n * Whether the provided value is a `Signer`.\n * @category Signers and PublicKeys\n */\nconst isSigner = value => typeof value === 'object' && 'publicKey' in value && 'signMessage' in value;\n\n/**\n * Deduplicates the provided signers by public key.\n * @category Signers and PublicKeys\n */\nconst uniqueSigners = signers => arrays.uniqueBy(signers, (a, b) => a.publicKey === b.publicKey);\n\n/**\n * Creates a `Signer` that, when required to sign, does nothing.\n * This can be useful when libraries require a `Signer` but\n * we don't have one in the current environment. For example,\n * if the transaction will then be signed in a backend server.\n *\n * @category Signers and PublicKeys\n */\nconst createNoopSigner = publicKey => ({\n  publicKey,\n  async signMessage(message) {\n    return message;\n  },\n  async signTransaction(transaction) {\n    return transaction;\n  },\n  async signAllTransactions(transactions) {\n    return transactions;\n  }\n});\n\n/**\n * Creates a `Signer` that, when required to sign, throws an error.\n * @category Signers and PublicKeys\n */\nfunction createNullSigner() {\n  const error = new Error('Trying to use a NullSigner. ' + 'Did you forget to set a Signer on your Umi instance? ' + 'See the `signerIdentity` method for more information.');\n  const errorHandler = () => {\n    throw error;\n  };\n  return {\n    get publicKey() {\n      throw error;\n    },\n    signMessage: errorHandler,\n    signTransaction: errorHandler,\n    signAllTransactions: errorHandler\n  };\n}\n\nexports.createNoopSigner = createNoopSigner;\nexports.createNullSigner = createNullSigner;\nexports.isSigner = isSigner;\nexports.signAllTransactions = signAllTransactions;\nexports.signTransaction = signTransaction;\nexports.uniqueSigners = uniqueSigners;\n//# sourceMappingURL=Signer.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Chunks an array into smaller arrays of (at most) the specified size.\n * @category Utils\n */\nconst chunk = (array, chunkSize) => array.reduce((chunks, item, index) => {\n  const chunkIndex = Math.floor(index / chunkSize);\n  if (!chunks[chunkIndex]) {\n    chunks[chunkIndex] = [];\n  }\n  chunks[chunkIndex].push(item);\n  return chunks;\n}, []);\n\n/**\n * Zips two arrays together, using the provided function to map the values.\n * @category Utils\n */\nconst zipMap = (left, right, fn) => left.map((t, index) => fn(t, right?.[index] ?? null, index));\n\n/**\n * Deduplicates an array by the provided function.\n * @category Utils\n */\nconst uniqueBy = (array, fn) => array.reduce((acc, v) => {\n  if (!acc.some(x => fn(v, x))) acc.push(v);\n  return acc;\n}, []);\n\nexports.chunk = chunk;\nexports.uniqueBy = uniqueBy;\nexports.zipMap = zipMap;\n//# sourceMappingURL=arrays.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * An implementation of the {@link TransactionFactoryInterface} that throws an error when called.\n * @category Transactions\n */\nfunction createNullTransactionFactory() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('TransactionFactoryInterface', 'transactions');\n  };\n  return {\n    create: errorHandler,\n    serialize: errorHandler,\n    deserialize: errorHandler,\n    serializeMessage: errorHandler,\n    deserializeMessage: errorHandler\n  };\n}\n\nexports.createNullTransactionFactory = createNullTransactionFactory;\n//# sourceMappingURL=TransactionFactoryInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar InterfaceImplementationMissingError = require('./errors/InterfaceImplementationMissingError.cjs');\n\n/**\n * An implementation of the {@link UploaderInterface} that throws an error when called.\n * @category Storage\n */\nfunction createNullUploader() {\n  const errorHandler = () => {\n    throw new InterfaceImplementationMissingError.InterfaceImplementationMissingError('UploaderInterface', 'uploader');\n  };\n  return {\n    upload: errorHandler,\n    uploadJson: errorHandler,\n    getUploadPrice: errorHandler\n  };\n}\n\nexports.createNullUploader = createNullUploader;\n//# sourceMappingURL=UploaderInterface.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\nvar BigInt = require('./BigInt.cjs');\n\n/**\n * Defines a string that can be parsed into a Date object.\n * For instance, `\"2020-01-01T00:00:00.000Z\"`.\n * @category Utils — DateTime\n */\n\n/**\n * Creates a {@link DateTime} from a {@link DateTimeInput}.\n * @category Utils — DateTime\n */\nconst dateTime = value => {\n  if (typeof value === 'string' || isDateObject(value)) {\n    const date = new Date(value);\n    const timestamp = Math.floor(date.getTime() / 1000);\n    return BigInt.createBigInt(timestamp);\n  }\n  return BigInt.createBigInt(value);\n};\n\n/**\n * Helper function to get the current time as a {@link DateTime}.\n * @category Utils — DateTime\n */\nconst now = () => dateTime(new Date(Date.now()));\n\n/**\n * Whether the given value is a Date object.\n * @category Utils — DateTime\n */\nconst isDateObject = value => Object.prototype.toString.call(value) === '[object Date]';\n\n/**\n * Formats a {@link DateTime} as a string.\n * @category Utils — DateTime\n */\nconst formatDateTime = (value, locales = 'en-US', options = {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric'\n}) => {\n  const date = new Date(Number(value * 1000n));\n  return date.toLocaleDateString(locales, options);\n};\n\n/**\n * Converts a number serializer into a DateTime serializer.\n * @category Utils — DateTime\n */\nconst mapDateTimeSerializer = serializer => umiSerializers.mapSerializer(serializer, value => {\n  const date = dateTime(value);\n  return date > Number.MAX_SAFE_INTEGER ? date : Number(date);\n}, value => dateTime(value));\n\nexports.dateTime = dateTime;\nexports.formatDateTime = formatDateTime;\nexports.mapDateTimeSerializer = mapDateTimeSerializer;\nexports.now = now;\n//# sourceMappingURL=DateTime.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\nvar randomStrings = require('./utils/randomStrings.cjs');\n\n/**\n * A generic definition of a File represented as a buffer with\n * extra metadata such as a file name, content type, and tags.\n *\n * @category Storage\n */\n\n/**\n * Creates a new {@link GenericFile} from a buffer and a file name.\n * @category Storage\n */\nconst createGenericFile = (content, fileName, options = {}) => ({\n  buffer: typeof content === 'string' ? umiSerializers.utf8.serialize(content) : content,\n  fileName,\n  displayName: options.displayName ?? fileName,\n  uniqueName: options.uniqueName ?? randomStrings.generateRandomString(),\n  contentType: options.contentType ?? null,\n  extension: options.extension ?? getExtension(fileName),\n  tags: options.tags ?? []\n});\n\n/**\n * Creates a new {@link GenericFile} from a {@link BrowserFile}.\n * @category Storage\n */\nconst createGenericFileFromBrowserFile = async (browserFile, options = {}) => createGenericFile(new Uint8Array(await browserFile.arrayBuffer()), browserFile.name, options);\n\n/**\n * Creates a new {@link GenericFile} from a JSON object.\n * @category Storage\n */\nconst createGenericFileFromJson = (json, fileName = 'inline.json', options = {}) => createGenericFile(JSON.stringify(json), fileName, {\n  contentType: 'application/json',\n  ...options\n});\n\n/**\n * Creates a new {@link BrowserFile} from a {@link GenericFile}.\n * @category Storage\n */\nconst createBrowserFileFromGenericFile = file => new File([file.buffer], file.fileName);\n\n/**\n * Returns the content of a {@link GenericFile} as a parsed JSON object.\n * @category Storage\n */\nconst parseJsonFromGenericFile = file => JSON.parse(new TextDecoder().decode(file.buffer));\n\n/**\n * Returns the total size of a list of {@link GenericFile} in bytes.\n * @category Storage\n */\nconst getBytesFromGenericFiles = (...files) => files.reduce((acc, file) => acc + file.buffer.byteLength, 0);\n\n/**\n * Whether the given value is a {@link GenericFile}.\n * @category Storage\n */\nconst isGenericFile = file => file != null && typeof file === 'object' && 'buffer' in file && 'fileName' in file && 'displayName' in file && 'uniqueName' in file && 'contentType' in file && 'extension' in file && 'tags' in file;\n\n/**\n * Returns the extension of a file name.\n * @category Storage\n */\nconst getExtension = fileName => {\n  const lastDotIndex = fileName.lastIndexOf('.');\n  return lastDotIndex < 0 ? null : fileName.slice(lastDotIndex + 1);\n};\n\nexports.createBrowserFileFromGenericFile = createBrowserFileFromGenericFile;\nexports.createGenericFile = createGenericFile;\nexports.createGenericFileFromBrowserFile = createGenericFileFromBrowserFile;\nexports.createGenericFileFromJson = createGenericFileFromJson;\nexports.getBytesFromGenericFiles = getBytesFromGenericFiles;\nexports.isGenericFile = isGenericFile;\nexports.parseJsonFromGenericFile = parseJsonFromGenericFile;\n//# sourceMappingURL=GenericFile.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * Generate a random string of the given length.\n * Warning: This is not a cryptographically secure random string generator.\n * @category Utils\n */\nconst generateRandomString = (length = 20, alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789') => {\n  let result = '';\n  const alphabetLength = alphabet.length;\n  for (let i = 0; i < length; i += 1) {\n    result += alphabet.charAt(Math.floor(Math.random() * alphabetLength));\n  }\n  return result;\n};\n\nexports.generateRandomString = generateRandomString;\n//# sourceMappingURL=randomStrings.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiPublicKeys = require('@metaplex-foundation/umi-public-keys');\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\nvar SdkError = require('./errors/SdkError.cjs');\n\n/**\n * Builder for `getProgramAccounts` RPC requests.\n * @category Utils — GpaBuilder\n */\nclass GpaBuilder {\n  constructor(context, programId, options = {}) {\n    this.context = context;\n    this.programId = programId;\n    this.options = options;\n  }\n  reset() {\n    return new GpaBuilder(this.context, this.programId, {\n      fields: this.options.fields,\n      deserializeCallback: this.options.deserializeCallback\n    });\n  }\n  registerFields(fields) {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      fields\n    });\n  }\n  registerFieldsFromStruct(structFields) {\n    let offset = 0;\n    const fields = structFields.reduce((acc, [field, serializer]) => {\n      acc[field] = [offset, serializer];\n      offset = offset === null || serializer.fixedSize === null ? null : offset + serializer.fixedSize;\n      return acc;\n    }, {});\n    return this.registerFields(fields);\n  }\n  deserializeUsing(callback) {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      deserializeCallback: callback\n    });\n  }\n  slice(offset, length) {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      dataSlice: {\n        offset,\n        length\n      }\n    });\n  }\n  sliceField(field, offset) {\n    const [effectiveOffset, serializer] = this.getField(field, offset);\n    if (!serializer.fixedSize) {\n      throw new SdkError.SdkError(`Cannot slice field [${field}] because its size is variable.`);\n    }\n    return this.slice(effectiveOffset, serializer.fixedSize);\n  }\n  withoutData() {\n    return this.slice(0, 0);\n  }\n  addFilter(...filters) {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      filters: [...(this.options.filters ?? []), ...filters]\n    });\n  }\n  where(offset, data) {\n    let bytes;\n    if (typeof data === 'string') {\n      bytes = umiSerializers.base58.serialize(data);\n    } else if (typeof data === 'number' || typeof data === 'bigint' || typeof data === 'boolean') {\n      bytes = umiSerializers.base10.serialize(BigInt(data).toString());\n    } else {\n      bytes = new Uint8Array(data);\n    }\n    return this.addFilter({\n      memcmp: {\n        offset,\n        bytes\n      }\n    });\n  }\n  whereField(field, data, offset) {\n    const [effectiveOffset, serializer] = this.getField(field, offset);\n    return this.where(effectiveOffset, serializer.serialize(data));\n  }\n  whereSize(dataSize) {\n    return this.addFilter({\n      dataSize\n    });\n  }\n  sortUsing(callback) {\n    return new GpaBuilder(this.context, this.programId, {\n      ...this.options,\n      sortCallback: callback\n    });\n  }\n  async get(options = {}) {\n    const accounts = await this.context.rpc.getProgramAccounts(this.programId, {\n      ...options,\n      dataSlice: options.dataSlice ?? this.options.dataSlice,\n      filters: [...(options.filters ?? []), ...(this.options.filters ?? [])]\n    });\n    if (this.options.sortCallback) {\n      accounts.sort(this.options.sortCallback);\n    }\n    return accounts;\n  }\n  async getAndMap(callback, options = {}) {\n    return (await this.get(options)).map(callback);\n  }\n  async getDeserialized(options = {}) {\n    const rpcAccounts = await this.get(options);\n    if (!this.options.deserializeCallback) return rpcAccounts;\n    return rpcAccounts.map(this.options.deserializeCallback);\n  }\n  async getPublicKeys(options = {}) {\n    return this.getAndMap(account => account.publicKey, options);\n  }\n  async getDataAsPublicKeys(options = {}) {\n    return this.getAndMap(account => {\n      try {\n        return umiPublicKeys.publicKey(account.data);\n      } catch (error) {\n        const message = `Following a getProgramAccount call, you are trying to use an ` + `account's data (or a slice of it) as a public key. ` + `However, we encountered an account ` + `[${account.publicKey}] whose data ` + `[base64=${umiSerializers.base64.deserialize(account.data)}] ` + `is not a valid public key.`;\n        throw new SdkError.SdkError(message);\n      }\n    }, options);\n  }\n  getField(fieldName, forcedOffset) {\n    if (!this.options.fields) {\n      throw new SdkError.SdkError('Fields are not defined in this GpaBuilder.');\n    }\n    const field = this.options.fields[fieldName];\n    if (!field) {\n      throw new SdkError.SdkError(`Field [${fieldName}] is not defined in this GpaBuilder.`);\n    }\n    const [offset, serializer] = field;\n    if (forcedOffset !== undefined) {\n      return [forcedOffset, serializer];\n    }\n    if (offset === null) {\n      throw new SdkError.SdkError(`Field [${fieldName}] does not have a fixed offset. ` + `This is likely because it is not in the fixed part of ` + `the account's data. In other words, it is located after ` + `a field of variable length which means we cannot find a ` + `fixed offset for the filter. You may go around this by ` + `providing an offset explicitly.`);\n    }\n    return [offset, serializer];\n  }\n}\n\n/**\n * Creates a new {@link GpaBuilder} instance.\n * @category Utils — GpaBuilder\n */\nconst gpaBuilder = (context, programId) => new GpaBuilder(context, programId);\n\nexports.GpaBuilder = GpaBuilder;\nexports.gpaBuilder = gpaBuilder;\n//# sourceMappingURL=GpaBuilder.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/** Defines a number in milliseconds. */\n\n/**\n * Defines a HTTP Request with custom data.\n * @category Http\n */\n\n/**\n * Creates a new {@link HttpRequestBuilder} instance.\n * @category Http\n */\nconst request = () => new HttpRequestBuilder({\n  method: 'get',\n  data: undefined,\n  headers: {},\n  url: ''\n});\n\n/**\n * A builder for constructing {@link HttpRequest} instances.\n * @category Http\n */\nclass HttpRequestBuilder {\n  constructor(request) {\n    this.request = request;\n  }\n  asJson() {\n    return this.contentType('application/json');\n  }\n  asMultipart() {\n    return this.contentType('multipart/form-data');\n  }\n  asForm() {\n    return this.contentType('application/x-www-form-urlencoded');\n  }\n  accept(contentType) {\n    return this.withHeader('accept', contentType);\n  }\n  contentType(contentType) {\n    return this.withHeader('content-type', contentType);\n  }\n  userAgent(userAgent) {\n    return this.withHeader('user-agent', userAgent);\n  }\n  withToken(token, type = 'Bearer') {\n    return this.withHeader('authorization', `${type} ${token}`);\n  }\n  withHeader(key, value) {\n    return this.withHeaders({\n      [key]: value\n    });\n  }\n  withHeaders(headers) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      headers: {\n        ...this.request.headers,\n        ...headers\n      }\n    });\n  }\n  dontFollowRedirects() {\n    return this.followRedirects(0);\n  }\n  followRedirects(maxRedirects) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      maxRedirects\n    });\n  }\n  withoutTimeout() {\n    return this.withTimeout(0);\n  }\n  withTimeout(timeout) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      timeout\n    });\n  }\n  withAbortSignal(signal) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      signal\n    });\n  }\n  withEndpoint(method, url) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      method,\n      url\n    });\n  }\n  withParams(params) {\n    const url = new URL(this.request.url);\n    const newSearch = new URLSearchParams(params);\n    const search = new URLSearchParams(url.searchParams);\n    [...newSearch.entries()].forEach(([key, val]) => {\n      search.append(key, val);\n    });\n    url.search = search.toString();\n    return new HttpRequestBuilder({\n      ...this.request,\n      url: url.toString()\n    });\n  }\n  withData(data) {\n    return new HttpRequestBuilder({\n      ...this.request,\n      data\n    });\n  }\n  get(url) {\n    return this.withEndpoint('get', url);\n  }\n  post(url) {\n    return this.withEndpoint('post', url);\n  }\n  put(url) {\n    return this.withEndpoint('put', url);\n  }\n  patch(url) {\n    return this.withEndpoint('patch', url);\n  }\n  delete(url) {\n    return this.withEndpoint('delete', url);\n  }\n  get method() {\n    return this.request.method;\n  }\n  get url() {\n    return this.request.url;\n  }\n  get data() {\n    return this.request.data;\n  }\n  get headers() {\n    return this.request.headers;\n  }\n  get maxRedirects() {\n    return this.request.maxRedirects;\n  }\n  get timeout() {\n    return this.request.timeout;\n  }\n  get signal() {\n    return this.request.signal;\n  }\n}\n\n/**\n * Defines a HTTP method as a string.\n * @category Http\n */\n\nexports.HttpRequestBuilder = HttpRequestBuilder;\nexports.request = request;\n//# sourceMappingURL=HttpRequest.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Transaction = require('./Transaction.cjs');\n\n/**\n * Represents a keypair with a public key and a secret key.\n * @category Signers and PublicKeys\n */\n\n/**\n * Generate a new random {@link KeypairSigner} using the Eddsa interface.\n * @category Signers and PublicKeys\n */\nconst generateSigner = context => createSignerFromKeypair(context, context.eddsa.generateKeypair());\n\n/**\n * Creates a {@link KeypairSigner} from a {@link Keypair} object.\n * @category Signers and PublicKeys\n */\nconst createSignerFromKeypair = (context, keypair) => ({\n  publicKey: keypair.publicKey,\n  secretKey: keypair.secretKey,\n  async signMessage(message) {\n    return context.eddsa.sign(message, keypair);\n  },\n  async signTransaction(transaction) {\n    const message = transaction.serializedMessage;\n    const signature = context.eddsa.sign(message, keypair);\n    return Transaction.addTransactionSignature(transaction, signature, keypair.publicKey);\n  },\n  async signAllTransactions(transactions) {\n    return Promise.all(transactions.map(transaction => this.signTransaction(transaction)));\n  }\n});\n\n/**\n * Whether the given signer is a {@link KeypairSigner}.\n * @category Signers and PublicKeys\n */\nconst isKeypairSigner = signer => signer.secretKey !== undefined;\n\nexports.createSignerFromKeypair = createSignerFromKeypair;\nexports.generateSigner = generateSigner;\nexports.isKeypairSigner = isKeypairSigner;\n//# sourceMappingURL=Keypair.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * The maximum amount of bytes that can be used for a transaction.\n * @category Transactions\n */\nconst TRANSACTION_SIZE_LIMIT = 1232;\n\n/**\n * The version of a transaction.\n * - Legacy is the very first iteration of Solana transactions.\n * - V0 introduces the concept of versionned transaction for\n * the first time and adds supports for address lookup tables.\n *\n * @category Transactions\n */\n\n/**\n * Adds a given signature to the transaction's signature array\n * and returns the updated transaction as a new object.\n *\n * @category Transactions\n */\nconst addTransactionSignature = (transaction, signature, signerPublicKey) => {\n  const maxSigners = transaction.message.header.numRequiredSignatures;\n  const signerPublicKeys = transaction.message.accounts.slice(0, maxSigners);\n  const signerIndex = signerPublicKeys.findIndex(key => key === signerPublicKey);\n  if (signerIndex < 0) {\n    throw new Error('The provided signer is not required to sign this transaction.');\n  }\n  const newSignatures = [...transaction.signatures];\n  newSignatures[signerIndex] = signature;\n  return {\n    ...transaction,\n    signatures: newSignatures\n  };\n};\n\nexports.TRANSACTION_SIZE_LIMIT = TRANSACTION_SIZE_LIMIT;\nexports.addTransactionSignature = addTransactionSignature;\n//# sourceMappingURL=Transaction.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\n * An error that contains Program logs.\n * @category Programs\n */\n\n/**\n * An error that contains a Program error code.\n * @category Programs\n */\n\n/**\n * Whether the given value is an instance of {@link ErrorWithLogs}.\n * @category Programs\n */\nconst isErrorWithLogs = error => error instanceof Error && 'logs' in error;\n\n/**\n * Defines a Solana Program that can be\n * registered in Umi's program repository.\n *\n * @category Programs\n */\n\nexports.isErrorWithLogs = isErrorWithLogs;\n//# sourceMappingURL=Program.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Keypair = require('./Keypair.cjs');\n\n/**\n * Umi plugin that sets the identity and the payer to the given signer.\n * @category Signers and PublicKeys\n */\nconst signerIdentity = (signer, setPayer = true) => ({\n  install(umi) {\n    umi.identity = signer;\n    if (setPayer) {\n      umi.payer = signer;\n    }\n  }\n});\n\n/**\n * Umi plugin that only sets the payer to the given signer.\n * @category Signers and PublicKeys\n */\nconst signerPayer = signer => ({\n  install(umi) {\n    umi.payer = signer;\n  }\n});\n\n/**\n * Umi plugin that sets the identity and the payer to a randomly generated signer.\n * @category Signers and PublicKeys\n */\nconst generatedSignerIdentity = (setPayer = true) => ({\n  install(umi) {\n    const signer = Keypair.generateSigner(umi);\n    umi.use(signerIdentity(signer, setPayer));\n  }\n});\n\n/**\n * Umi plugin that only sets the payer to a randomly generated signer.\n * @category Signers and PublicKeys\n */\nconst generatedSignerPayer = () => ({\n  install(umi) {\n    const signer = Keypair.generateSigner(umi);\n    umi.use(signerPayer(signer));\n  }\n});\n\n/**\n * Umi plugin that sets the identity and the payer to a provided keypair.\n * @category Signers and PublicKeys\n */\nconst keypairIdentity = (keypair, setPayer = true) => ({\n  install(umi) {\n    const signer = Keypair.createSignerFromKeypair(umi, keypair);\n    umi.use(signerIdentity(signer, setPayer));\n  }\n});\n\n/**\n * Umi plugin that only sets the payer to a provided keypair.\n * @category Signers and PublicKeys\n */\nconst keypairPayer = keypair => ({\n  install(umi) {\n    const signer = Keypair.createSignerFromKeypair(umi, keypair);\n    umi.use(signerPayer(signer));\n  }\n});\n\nexports.generatedSignerIdentity = generatedSignerIdentity;\nexports.generatedSignerPayer = generatedSignerPayer;\nexports.keypairIdentity = keypairIdentity;\nexports.keypairPayer = keypairPayer;\nexports.signerIdentity = signerIdentity;\nexports.signerPayer = signerPayer;\n//# sourceMappingURL=SignerPlugins.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Signer = require('./Signer.cjs');\nvar Transaction = require('./Transaction.cjs');\nvar SdkError = require('./errors/SdkError.cjs');\n\n/**\n * Defines an generic object with wrapped instructions,\n * such as a {@link TransactionBuilder}.\n * @category Transactions\n */\n\n/**\n * A builder that helps construct transactions.\n * @category Transactions\n */\nclass TransactionBuilder {\n  constructor(items = [], options = {}) {\n    this.items = items;\n    this.options = options;\n  }\n  empty() {\n    return new TransactionBuilder([], this.options);\n  }\n  setItems(input) {\n    return new TransactionBuilder(this.parseItems(input), this.options);\n  }\n  prepend(input) {\n    return new TransactionBuilder([...this.parseItems(input), ...this.items], this.options);\n  }\n  append(input) {\n    return new TransactionBuilder([...this.items, ...this.parseItems(input)], this.options);\n  }\n  add(input) {\n    return this.append(input);\n  }\n  mapInstructions(fn) {\n    return new TransactionBuilder(this.items.map(fn), this.options);\n  }\n  addRemainingAccounts(accountMeta, instructionIndex) {\n    instructionIndex = instructionIndex ?? this.items.length - 1;\n    const metas = Array.isArray(accountMeta) ? accountMeta : [accountMeta];\n    const extraKeys = metas.map(meta => 'pubkey' in meta ? meta : {\n      pubkey: meta.signer.publicKey,\n      isSigner: true,\n      isWritable: meta.isWritable\n    });\n    const extraSigners = metas.flatMap(meta => 'pubkey' in meta ? [] : [meta.signer]);\n    return this.mapInstructions((wrappedInstruction, index) => {\n      if (index !== instructionIndex) return wrappedInstruction;\n      const keys = [...wrappedInstruction.instruction.keys, ...extraKeys];\n      return {\n        ...wrappedInstruction,\n        instruction: {\n          ...wrappedInstruction.instruction,\n          keys\n        },\n        signers: [...wrappedInstruction.signers, ...extraSigners]\n      };\n    });\n  }\n  splitByIndex(index) {\n    return [new TransactionBuilder(this.items.slice(0, index), this.options), new TransactionBuilder(this.items.slice(index), this.options)];\n  }\n\n  /**\n   * Split the builder into multiple builders, such that\n   * each of them should fit in a single transaction.\n   *\n   * This method is unsafe for several reasons:\n   * - Because transactions are atomic, splitting the builder\n   *   into multiple transactions may cause undesired side effects.\n   *   For example, if the first transaction succeeds but the second\n   *   one fails, you may end up with an inconsistent account state.\n   *   This is why it is recommended to manually split your transactions\n   *   such that each of them is valid on its own.\n   * - It can only split the instructions of the builder. Meaning that,\n   *   if the builder has a single instruction that is too big to fit in\n   *   a single transaction, it will not be able to split it.\n   */\n  unsafeSplitByTransactionSize(context) {\n    return this.items.reduce((builders, item) => {\n      const lastBuilder = builders.pop();\n      const lastBuilderWithItem = lastBuilder.add(item);\n      if (lastBuilderWithItem.fitsInOneTransaction(context)) {\n        builders.push(lastBuilderWithItem);\n      } else {\n        builders.push(lastBuilder);\n        builders.push(lastBuilder.empty().add(item));\n      }\n      return builders;\n    }, [this.empty()]);\n  }\n  setFeePayer(feePayer) {\n    return new TransactionBuilder(this.items, {\n      ...this.options,\n      feePayer\n    });\n  }\n  getFeePayer(context) {\n    return this.options.feePayer ?? context.payer;\n  }\n  setVersion(version) {\n    return new TransactionBuilder(this.items, {\n      ...this.options,\n      version\n    });\n  }\n  useLegacyVersion() {\n    return this.setVersion('legacy');\n  }\n  useV0() {\n    return this.setVersion(0);\n  }\n  setAddressLookupTables(addressLookupTables) {\n    return new TransactionBuilder(this.items, {\n      ...this.options,\n      addressLookupTables\n    });\n  }\n  getBlockhash() {\n    return typeof this.options.blockhash === 'object' ? this.options.blockhash.blockhash : this.options.blockhash;\n  }\n  setBlockhash(blockhash) {\n    return new TransactionBuilder(this.items, {\n      ...this.options,\n      blockhash\n    });\n  }\n  async setLatestBlockhash(context, options = {}) {\n    return this.setBlockhash(await context.rpc.getLatestBlockhash(options));\n  }\n  getInstructions() {\n    return this.items.map(item => item.instruction);\n  }\n  getSigners(context) {\n    return Signer.uniqueSigners([this.getFeePayer(context), ...this.items.flatMap(item => item.signers)]);\n  }\n  getBytesCreatedOnChain() {\n    return this.items.reduce((sum, item) => sum + item.bytesCreatedOnChain, 0);\n  }\n  async getRentCreatedOnChain(context) {\n    return context.rpc.getRent(this.getBytesCreatedOnChain(), {\n      includesHeaderBytes: true\n    });\n  }\n  getTransactionSize(context) {\n    return context.transactions.serialize(this.setBlockhash('11111111111111111111111111111111').build(context)).length;\n  }\n  minimumTransactionsRequired(context) {\n    return Math.ceil(this.getTransactionSize(context) / Transaction.TRANSACTION_SIZE_LIMIT);\n  }\n  fitsInOneTransaction(context) {\n    return this.minimumTransactionsRequired(context) === 1;\n  }\n  build(context) {\n    const blockhash = this.getBlockhash();\n    if (!blockhash) {\n      throw new SdkError.SdkError('Setting a blockhash is required to build a transaction. ' + 'Please use the `setBlockhash` or `setLatestBlockhash` methods.');\n    }\n    const input = {\n      version: this.options.version ?? 0,\n      payer: this.getFeePayer(context).publicKey,\n      instructions: this.getInstructions(),\n      blockhash\n    };\n    if (input.version === 0 && this.options.addressLookupTables) {\n      input.addressLookupTables = this.options.addressLookupTables;\n    }\n    return context.transactions.create(input);\n  }\n  async buildWithLatestBlockhash(context, options = {}) {\n    let builder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context, options);\n    }\n    return builder.build(context);\n  }\n  async buildAndSign(context) {\n    return Signer.signTransaction(await this.buildWithLatestBlockhash(context), this.getSigners(context));\n  }\n  async send(context, options = {}) {\n    const transaction = await this.buildAndSign(context);\n    return context.rpc.sendTransaction(transaction, options);\n  }\n  async confirm(context, signature, options = {}) {\n    let builder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context);\n    }\n    let strategy;\n    if (options.strategy) {\n      strategy = options.strategy;\n    } else {\n      const blockhash = typeof builder.options.blockhash === 'object' ? builder.options.blockhash : await context.rpc.getLatestBlockhash();\n      strategy = options.strategy ?? {\n        type: 'blockhash',\n        ...blockhash\n      };\n    }\n    return context.rpc.confirmTransaction(signature, {\n      ...options,\n      strategy\n    });\n  }\n  async sendAndConfirm(context, options = {}) {\n    let builder = this;\n    if (!this.options.blockhash) {\n      builder = await this.setLatestBlockhash(context);\n    }\n    const signature = await builder.send(context, options.send);\n    const result = await builder.confirm(context, signature, options.confirm);\n    return {\n      signature,\n      result\n    };\n  }\n  parseItems(input) {\n    return (Array.isArray(input) ? input : [input]).flatMap(item => 'items' in item ? item.items : [item]);\n  }\n}\n\n/**\n * Creates a new transaction builder.\n * @category Transactions\n */\nconst transactionBuilder = (items = []) => new TransactionBuilder(items);\n\nexports.TransactionBuilder = TransactionBuilder;\nexports.transactionBuilder = transactionBuilder;\n//# sourceMappingURL=TransactionBuilder.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Signer = require('./Signer.cjs');\nvar TransactionBuilder = require('./TransactionBuilder.cjs');\nvar arrays = require('./utils/arrays.cjs');\n\nclass TransactionBuilderGroup {\n  constructor(builders = [], options = {}) {\n    this.builders = builders;\n    this.options = options;\n  }\n  prepend(builder) {\n    const newBuilders = Array.isArray(builder) ? builder : [builder];\n    return new TransactionBuilderGroup([...newBuilders, ...this.builders], this.options);\n  }\n  append(builder) {\n    const newBuilders = Array.isArray(builder) ? builder : [builder];\n    return new TransactionBuilderGroup([...this.builders, ...newBuilders], this.options);\n  }\n  add(builder) {\n    return this.append(builder);\n  }\n  sequential() {\n    return new TransactionBuilderGroup(this.builders, {\n      ...this.options,\n      parallel: false\n    });\n  }\n  parallel() {\n    return new TransactionBuilderGroup(this.builders, {\n      ...this.options,\n      parallel: true\n    });\n  }\n  isParallel() {\n    return this.options.parallel ?? false;\n  }\n  merge() {\n    if (this.builders.length === 0) {\n      return new TransactionBuilder.TransactionBuilder();\n    }\n    return this.builders.reduce((builder, next) => builder.add(next), this.builders[0].empty());\n  }\n  build(context) {\n    return this.builders.map(builder => builder.build(context));\n  }\n  async setLatestBlockhash(context) {\n    const hasBlockhashlessBuilder = this.builders.some(builder => !builder.options.blockhash);\n    if (!hasBlockhashlessBuilder) return this;\n    const blockhash = await context.rpc.getLatestBlockhash();\n    return this.map(builder => builder.options.blockhash ? builder : builder.setBlockhash(blockhash));\n  }\n  async buildWithLatestBlockhash(context) {\n    return (await this.setLatestBlockhash(context)).build(context);\n  }\n  async buildAndSign(context) {\n    const transactions = await this.buildWithLatestBlockhash(context);\n    const signers = this.builders.map(builder => builder.getSigners(context));\n    return Signer.signAllTransactions(arrays.zipMap(transactions, signers, (transaction, txSigners) => ({\n      transaction,\n      signers: txSigners ?? []\n    })));\n  }\n  async send(context, options = {}) {\n    return this.runAll(await this.buildAndSign(context), async tx => context.rpc.sendTransaction(tx, options));\n  }\n  async sendAndConfirm(context, options = {}) {\n    const blockhashWithExpiryBlockHeight = this.builders.find(builder => typeof builder.options.blockhash === 'object')?.options.blockhash;\n    let strategy;\n    if (options.confirm?.strategy) {\n      strategy = options.confirm.strategy;\n    } else {\n      const blockhash = blockhashWithExpiryBlockHeight ?? (await context.rpc.getLatestBlockhash());\n      strategy = options.confirm?.strategy ?? {\n        type: 'blockhash',\n        ...blockhash\n      };\n    }\n    return this.runAll(await this.buildAndSign(context), async tx => {\n      const signature = await context.rpc.sendTransaction(tx, options.send);\n      const result = await context.rpc.confirmTransaction(signature, {\n        ...options.confirm,\n        strategy\n      });\n      return {\n        signature,\n        result\n      };\n    });\n  }\n  map(fn) {\n    return new TransactionBuilderGroup(this.builders.map(fn));\n  }\n  filter(fn) {\n    return new TransactionBuilderGroup(this.builders.filter(fn));\n  }\n  async runAll(array, fn) {\n    if (this.isParallel()) {\n      return Promise.all(array.map(fn));\n    }\n    return array.reduce(async (promise, ...args) => [...(await promise), await fn(...args)], Promise.resolve([]));\n  }\n}\nfunction transactionBuilderGroup(builders = []) {\n  return new TransactionBuilderGroup(builders);\n}\n\nexports.TransactionBuilderGroup = TransactionBuilderGroup;\nexports.transactionBuilderGroup = transactionBuilderGroup;\n//# sourceMappingURL=TransactionBuilderGroup.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Context = require('./Context.cjs');\n\n/**\n * Creates a Umi instance using only Null implementations of the interfaces.\n * The `use` method can then be used to install plugins and replace the\n * Null implementations with real implementations.\n *\n * @category Context and Interfaces\n */\nconst createUmi = () => ({\n  ...Context.createNullContext(),\n  use(plugin) {\n    plugin.install(this);\n    return this;\n  }\n});\n\nexports.createUmi = createUmi;\n//# sourceMappingURL=Umi.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar SdkError = require('./SdkError.cjs');\n\n/** @category Errors */\nclass InvalidBaseStringError extends SdkError.SdkError {\n  name = 'InvalidBaseStringError';\n  constructor(value, base, cause) {\n    const message = `Expected a string of base ${base}, got [${value}].`;\n    super(message, cause);\n  }\n}\n\nexports.InvalidBaseStringError = InvalidBaseStringError;\n//# sourceMappingURL=InvalidBaseStringError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar UmiError = require('./UmiError.cjs');\n\n/** @category Errors */\n\n/** @category Errors */\nclass ProgramError extends UmiError.UmiError {\n  name = 'ProgramError';\n  constructor(message, program, cause) {\n    super(message, 'program', `${program.name} [${program.publicKey}]`, cause);\n    this.program = program;\n    this.logs = cause?.logs;\n    if (this.logs) {\n      this.message += `\\nProgram Logs:\\n${this.logs.map(log => `| ${log}`).join('\\n')}\\n`;\n    }\n  }\n}\n\nexports.ProgramError = ProgramError;\n//# sourceMappingURL=ProgramError.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umiSerializers = require('@metaplex-foundation/umi-serializers');\n\n\n\nObject.keys(umiSerializers).forEach(function (k) {\n\tif (k !== 'default' && !exports.hasOwnProperty(k)) Object.defineProperty(exports, k, {\n\t\tenumerable: true,\n\t\tget: function () { return umiSerializers[k]; }\n\t});\n});\n//# sourceMappingURL=serializers.cjs.map\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGovernanceEntryGpaBuilder = exports.safeFetchAllGovernanceEntry = exports.fetchAllGovernanceEntry = exports.safeFetchGovernanceEntry = exports.fetchGovernanceEntry = exports.deserializeGovernanceEntry = exports.getGovernanceEntryAccountDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst types_1 = require(\"../types\");\nfunction getGovernanceEntryAccountDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['config', (0, serializers_1.publicKey)()],\n        ['governanceProgram', (0, serializers_1.publicKey)()],\n        ['govAccountType', (0, types_1.getDAOTypeSerializer)()],\n        ['requestStatus', (0, types_1.getRequestStatusSerializer)()],\n        ['rank', (0, serializers_1.u16)()],\n        ['parentLinks', (0, serializers_1.option)((0, types_1.getParentLinksSerializer)())],\n        ['childRealms', (0, serializers_1.option)((0, serializers_1.array)((0, serializers_1.publicKey)()))],\n        ['name', (0, serializers_1.string)()],\n        ['metadataUri', (0, serializers_1.string)()],\n    ], { description: 'GovernanceEntryAccountData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [107, 36, 237, 168, 199, 164, 138, 165] })));\n}\nexports.getGovernanceEntryAccountDataSerializer = getGovernanceEntryAccountDataSerializer;\nfunction deserializeGovernanceEntry(rawAccount) {\n    return (0, umi_1.deserializeAccount)(rawAccount, getGovernanceEntryAccountDataSerializer());\n}\nexports.deserializeGovernanceEntry = deserializeGovernanceEntry;\nfunction fetchGovernanceEntry(context, publicKey, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccount = yield context.rpc.getAccount((0, umi_1.publicKey)(publicKey, false), options);\n        (0, umi_1.assertAccountExists)(maybeAccount, 'GovernanceEntry');\n        return deserializeGovernanceEntry(maybeAccount);\n    });\n}\nexports.fetchGovernanceEntry = fetchGovernanceEntry;\nfunction safeFetchGovernanceEntry(context, publicKey, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccount = yield context.rpc.getAccount((0, umi_1.publicKey)(publicKey, false), options);\n        return maybeAccount.exists ? deserializeGovernanceEntry(maybeAccount) : null;\n    });\n}\nexports.safeFetchGovernanceEntry = safeFetchGovernanceEntry;\nfunction fetchAllGovernanceEntry(context, publicKeys, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccounts = yield context.rpc.getAccounts(publicKeys.map((key) => (0, umi_1.publicKey)(key, false)), options);\n        return maybeAccounts.map((maybeAccount) => {\n            (0, umi_1.assertAccountExists)(maybeAccount, 'GovernanceEntry');\n            return deserializeGovernanceEntry(maybeAccount);\n        });\n    });\n}\nexports.fetchAllGovernanceEntry = fetchAllGovernanceEntry;\nfunction safeFetchAllGovernanceEntry(context, publicKeys, options) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const maybeAccounts = yield context.rpc.getAccounts(publicKeys.map((key) => (0, umi_1.publicKey)(key, false)), options);\n        return maybeAccounts\n            .filter((maybeAccount) => maybeAccount.exists)\n            .map((maybeAccount) => deserializeGovernanceEntry(maybeAccount));\n    });\n}\nexports.safeFetchAllGovernanceEntry = safeFetchAllGovernanceEntry;\nfunction getGovernanceEntryGpaBuilder(context) {\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    return (0, umi_1.gpaBuilder)(context, programId)\n        .registerFields({\n        discriminator: [0, (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        config: [8, (0, serializers_1.publicKey)()],\n        governanceProgram: [40, (0, serializers_1.publicKey)()],\n        govAccountType: [72, (0, types_1.getDAOTypeSerializer)()],\n        requestStatus: [73, (0, types_1.getRequestStatusSerializer)()],\n        rank: [74, (0, serializers_1.u16)()],\n        parentLinks: [76, (0, serializers_1.option)((0, types_1.getParentLinksSerializer)())],\n        childRealms: [null, (0, serializers_1.option)((0, serializers_1.array)((0, serializers_1.publicKey)()))],\n        name: [null, (0, serializers_1.string)()],\n        metadataUri: [null, (0, serializers_1.string)()],\n    })\n        .deserializeUsing((account) => deserializeGovernanceEntry(account))\n        .whereField('discriminator', [107, 36, 237, 168, 199, 164, 138, 165]);\n}\nexports.getGovernanceEntryGpaBuilder = getGovernanceEntryGpaBuilder;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./dAOType\"), exports);\n__exportStar(require(\"./parentLink\"), exports);\n__exportStar(require(\"./parentLinks\"), exports);\n__exportStar(require(\"./requestStatus\"), exports);\n__exportStar(require(\"./verifierType\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getDAOTypeSerializer = exports.DAOType = void 0;\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nvar DAOType;\n(function (DAOType) {\n    DAOType[DAOType[\"Social\"] = 0] = \"Social\";\n    DAOType[DAOType[\"Finance\"] = 1] = \"Finance\";\n})(DAOType || (exports.DAOType = DAOType = {}));\nfunction getDAOTypeSerializer() {\n    return (0, serializers_1.scalarEnum)(DAOType, { description: 'DAOType' });\n}\nexports.getDAOTypeSerializer = getDAOTypeSerializer;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParentLinkSerializer = void 0;\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst _1 = require(\".\");\nfunction getParentLinkSerializer() {\n    return (0, serializers_1.struct)([\n        ['parentRealm', (0, serializers_1.publicKey)()],\n        ['status', (0, _1.getRequestStatusSerializer)()],\n    ], { description: 'ParentLink' });\n}\nexports.getParentLinkSerializer = getParentLinkSerializer;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getParentLinksSerializer = void 0;\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst _1 = require(\".\");\nfunction getParentLinksSerializer() {\n    return (0, serializers_1.struct)([['realms', (0, serializers_1.array)((0, _1.getParentLinkSerializer)())]], {\n        description: 'ParentLinks',\n    });\n}\nexports.getParentLinksSerializer = getParentLinksSerializer;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getRequestStatusSerializer = exports.RequestStatus = void 0;\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nvar RequestStatus;\n(function (RequestStatus) {\n    RequestStatus[RequestStatus[\"Pending\"] = 0] = \"Pending\";\n    RequestStatus[RequestStatus[\"Approved\"] = 1] = \"Approved\";\n    RequestStatus[RequestStatus[\"Rejected\"] = 2] = \"Rejected\";\n    RequestStatus[RequestStatus[\"Disabled\"] = 3] = \"Disabled\";\n})(RequestStatus || (exports.RequestStatus = RequestStatus = {}));\nfunction getRequestStatusSerializer() {\n    return (0, serializers_1.scalarEnum)(RequestStatus, {\n        description: 'RequestStatus',\n    });\n}\nexports.getRequestStatusSerializer = getRequestStatusSerializer;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getVerifierTypeSerializer = exports.VerifierType = void 0;\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nvar VerifierType;\n(function (VerifierType) {\n    VerifierType[VerifierType[\"VerifierRealm\"] = 0] = \"VerifierRealm\";\n    VerifierType[VerifierType[\"VerfierOverride\"] = 1] = \"VerfierOverride\";\n})(VerifierType || (exports.VerifierType = VerifierType = {}));\nfunction getVerifierTypeSerializer() {\n    return (0, serializers_1.scalarEnum)(VerifierType, {\n        description: 'VerifierType',\n    });\n}\nexports.getVerifierTypeSerializer = getVerifierTypeSerializer;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./govBoarding\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGovBoardingErrorFromName = exports.getGovBoardingErrorFromCode = exports.InvalidStatusError = exports.InvalidVerifierRealmError = exports.VerifierNotSignerError = exports.IncorrectVerifierError = exports.IncorrectRealmError = exports.GovernanceNotFoundError = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst codeToErrorMap = new Map();\nconst nameToErrorMap = new Map();\n/** GovernanceNotFound: No governance has been specified for the verifier */\nclass GovernanceNotFoundError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('No governance has been specified for the verifier', program, cause);\n        this.name = 'GovernanceNotFound';\n        this.code = 0x1770; // 6000\n    }\n}\nexports.GovernanceNotFoundError = GovernanceNotFoundError;\ncodeToErrorMap.set(0x1770, GovernanceNotFoundError);\nnameToErrorMap.set('GovernanceNotFound', GovernanceNotFoundError);\n/** IncorrectRealm: The given governance is not in the verifier realm */\nclass IncorrectRealmError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('The given governance is not in the verifier realm', program, cause);\n        this.name = 'IncorrectRealm';\n        this.code = 0x1771; // 6001\n    }\n}\nexports.IncorrectRealmError = IncorrectRealmError;\ncodeToErrorMap.set(0x1771, IncorrectRealmError);\nnameToErrorMap.set('IncorrectRealm', IncorrectRealmError);\n/** IncorrectVerifier: The signer is neither the governance or the native treasury account */\nclass IncorrectVerifierError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('The signer is neither the governance or the native treasury account', program, cause);\n        this.name = 'IncorrectVerifier';\n        this.code = 0x1772; // 6002\n    }\n}\nexports.IncorrectVerifierError = IncorrectVerifierError;\ncodeToErrorMap.set(0x1772, IncorrectVerifierError);\nnameToErrorMap.set('IncorrectVerifier', IncorrectVerifierError);\n/** VerifierNotSigner: The verifier is not a signer */\nclass VerifierNotSignerError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('The verifier is not a signer', program, cause);\n        this.name = 'VerifierNotSigner';\n        this.code = 0x1773; // 6003\n    }\n}\nexports.VerifierNotSignerError = VerifierNotSignerError;\ncodeToErrorMap.set(0x1773, VerifierNotSignerError);\nnameToErrorMap.set('VerifierNotSigner', VerifierNotSignerError);\n/** InvalidVerifierRealm: Verifier realm cannot be set to None */\nclass InvalidVerifierRealmError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('Verifier realm cannot be set to None', program, cause);\n        this.name = 'InvalidVerifierRealm';\n        this.code = 0x1774; // 6004\n    }\n}\nexports.InvalidVerifierRealmError = InvalidVerifierRealmError;\ncodeToErrorMap.set(0x1774, InvalidVerifierRealmError);\nnameToErrorMap.set('InvalidVerifierRealm', InvalidVerifierRealmError);\n/** InvalidStatus: Status cannot be set to Pending */\nclass InvalidStatusError extends umi_1.ProgramError {\n    constructor(program, cause) {\n        super('Status cannot be set to Pending', program, cause);\n        this.name = 'InvalidStatus';\n        this.code = 0x1775; // 6005\n    }\n}\nexports.InvalidStatusError = InvalidStatusError;\ncodeToErrorMap.set(0x1775, InvalidStatusError);\nnameToErrorMap.set('InvalidStatus', InvalidStatusError);\n/**\n * Attempts to resolve a custom program error from the provided error code.\n * @category Errors\n */\nfunction getGovBoardingErrorFromCode(code, program, cause) {\n    const constructor = codeToErrorMap.get(code);\n    return constructor ? new constructor(program, cause) : null;\n}\nexports.getGovBoardingErrorFromCode = getGovBoardingErrorFromCode;\n/**\n * Attempts to resolve a custom program error from the provided error name, i.e. 'Unauthorized'.\n * @category Errors\n */\nfunction getGovBoardingErrorFromName(name, program, cause) {\n    const constructor = nameToErrorMap.get(name);\n    return constructor ? new constructor(program, cause) : null;\n}\nexports.getGovBoardingErrorFromName = getGovBoardingErrorFromName;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./createConfig\"), exports);\n__exportStar(require(\"./createEntry\"), exports);\n__exportStar(require(\"./setChildStatus\"), exports);\n__exportStar(require(\"./setEntryStatus\"), exports);\n__exportStar(require(\"./setEntryUri\"), exports);\n__exportStar(require(\"./updateVerifier\"), exports);\n__exportStar(require(\"./updateAdmin\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createConfig = exports.getCreateConfigInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nfunction getCreateConfigInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })]], { description: 'CreateConfigInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [201, 207, 243, 114, 75, 111, 47, 189] })));\n}\nexports.getCreateConfigInstructionDataSerializer = getCreateConfigInstructionDataSerializer;\n// Instruction.\nfunction createConfig(context, input) {\n    var _a, _b, _c, _d, _e, _f;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        admin: {\n            index: 0,\n            isWritable: true,\n            value: (_a = input.admin) !== null && _a !== void 0 ? _a : null,\n        },\n        config: {\n            index: 1,\n            isWritable: true,\n            value: (_b = input.config) !== null && _b !== void 0 ? _b : null,\n        },\n        verifierRealm: {\n            index: 2,\n            isWritable: false,\n            value: (_c = input.verifierRealm) !== null && _c !== void 0 ? _c : null,\n        },\n        rent: { index: 3, isWritable: false, value: (_d = input.rent) !== null && _d !== void 0 ? _d : null },\n        systemProgram: {\n            index: 4,\n            isWritable: false,\n            value: (_e = input.systemProgram) !== null && _e !== void 0 ? _e : null,\n        },\n        verifier: {\n            index: 5,\n            isWritable: false,\n            value: (_f = input.verifier) !== null && _f !== void 0 ? _f : null,\n        },\n    };\n    // Default values.\n    if (!resolvedAccounts.rent.value) {\n        resolvedAccounts.rent.value = (0, umi_1.publicKey)('SysvarRent111111111111111111111111111111111');\n    }\n    if (!resolvedAccounts.systemProgram.value) {\n        resolvedAccounts.systemProgram.value = context.programs.getPublicKey('splSystem', '11111111111111111111111111111111');\n        resolvedAccounts.systemProgram.isWritable = false;\n    }\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getCreateConfigInstructionDataSerializer().serialize({});\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.createConfig = createConfig;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAccountMetasAndSigners = exports.expectPda = exports.expectPublicKey = exports.expectSome = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\n/**\n * Asserts that the given value is not null or undefined.\n * @internal\n */\nfunction expectSome(value) {\n    if (value == null) {\n        throw new Error('Expected a value but received null or undefined.');\n    }\n    return value;\n}\nexports.expectSome = expectSome;\n/**\n * Asserts that the given value is a PublicKey.\n * @internal\n */\nfunction expectPublicKey(value) {\n    if (!value) {\n        throw new Error('Expected a PublicKey.');\n    }\n    return (0, umi_1.publicKey)(value, false);\n}\nexports.expectPublicKey = expectPublicKey;\n/**\n * Asserts that the given value is a PDA.\n * @internal\n */\nfunction expectPda(value) {\n    if (!value || !Array.isArray(value) || !(0, umi_1.isPda)(value)) {\n        throw new Error('Expected a PDA.');\n    }\n    return value;\n}\nexports.expectPda = expectPda;\n/**\n * Get account metas and signers from resolved accounts.\n * @internal\n */\nfunction getAccountMetasAndSigners(accounts, optionalAccountStrategy, programId) {\n    const keys = [];\n    const signers = [];\n    accounts.forEach((account) => {\n        if (!account.value) {\n            if (optionalAccountStrategy === 'omitted')\n                return;\n            keys.push({ pubkey: programId, isSigner: false, isWritable: false });\n            return;\n        }\n        if ((0, umi_1.isSigner)(account.value)) {\n            signers.push(account.value);\n        }\n        keys.push({\n            pubkey: (0, umi_1.publicKey)(account.value, false),\n            isSigner: (0, umi_1.isSigner)(account.value),\n            isWritable: account.isWritable,\n        });\n    });\n    return [keys, signers];\n}\nexports.getAccountMetasAndSigners = getAccountMetasAndSigners;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createEntry = exports.getCreateEntryInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nconst types_1 = require(\"../types\");\nfunction getCreateEntryInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['name', (0, serializers_1.string)()],\n        ['metadataUri', (0, serializers_1.string)()],\n        ['govAccountType', (0, types_1.getDAOTypeSerializer)()],\n        ['parents', (0, serializers_1.option)((0, serializers_1.array)((0, serializers_1.publicKey)()))],\n    ], { description: 'CreateEntryInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [248, 207, 142, 242, 66, 162, 150, 16] })));\n}\nexports.getCreateEntryInstructionDataSerializer = getCreateEntryInstructionDataSerializer;\n// Instruction.\nfunction createEntry(context, input) {\n    var _a, _b, _c, _d, _e, _f;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        payer: {\n            index: 0,\n            isWritable: true,\n            value: (_a = input.payer) !== null && _a !== void 0 ? _a : null,\n        },\n        governanceEntry: {\n            index: 1,\n            isWritable: true,\n            value: (_b = input.governanceEntry) !== null && _b !== void 0 ? _b : null,\n        },\n        config: {\n            index: 2,\n            isWritable: false,\n            value: (_c = input.config) !== null && _c !== void 0 ? _c : null,\n        },\n        governanceProgram: {\n            index: 3,\n            isWritable: false,\n            value: (_d = input.governanceProgram) !== null && _d !== void 0 ? _d : null,\n        },\n        rent: { index: 4, isWritable: false, value: (_e = input.rent) !== null && _e !== void 0 ? _e : null },\n        systemProgram: {\n            index: 5,\n            isWritable: false,\n            value: (_f = input.systemProgram) !== null && _f !== void 0 ? _f : null,\n        },\n    };\n    // Arguments.\n    const resolvedArgs = Object.assign({}, input);\n    // Default values.\n    if (!resolvedAccounts.payer.value) {\n        resolvedAccounts.payer.value = context.payer;\n    }\n    if (!resolvedAccounts.rent.value) {\n        resolvedAccounts.rent.value = (0, umi_1.publicKey)('SysvarRent111111111111111111111111111111111');\n    }\n    if (!resolvedAccounts.systemProgram.value) {\n        resolvedAccounts.systemProgram.value = context.programs.getPublicKey('splSystem', '11111111111111111111111111111111');\n        resolvedAccounts.systemProgram.isWritable = false;\n    }\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getCreateEntryInstructionDataSerializer().serialize(resolvedArgs);\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.createEntry = createEntry;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setChildStatus = exports.getSetChildStatusInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nconst types_1 = require(\"../types\");\nfunction getSetChildStatusInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['status', (0, types_1.getRequestStatusSerializer)()],\n    ], { description: 'SetChildStatusInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [124, 8, 77, 68, 53, 102, 165, 74] })));\n}\nexports.getSetChildStatusInstructionDataSerializer = getSetChildStatusInstructionDataSerializer;\n// Instruction.\nfunction setChildStatus(context, input) {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        childEntry: {\n            index: 0,\n            isWritable: true,\n            value: (_a = input.childEntry) !== null && _a !== void 0 ? _a : null,\n        },\n        config: {\n            index: 1,\n            isWritable: false,\n            value: (_b = input.config) !== null && _b !== void 0 ? _b : null,\n        },\n        verifier: {\n            index: 2,\n            isWritable: true,\n            value: (_c = input.verifier) !== null && _c !== void 0 ? _c : null,\n        },\n        parentRealm: {\n            index: 3,\n            isWritable: false,\n            value: (_d = input.parentRealm) !== null && _d !== void 0 ? _d : null,\n        },\n        parentEntry: {\n            index: 4,\n            isWritable: true,\n            value: (_e = input.parentEntry) !== null && _e !== void 0 ? _e : null,\n        },\n        governanceProgram: {\n            index: 5,\n            isWritable: false,\n            value: (_f = input.governanceProgram) !== null && _f !== void 0 ? _f : null,\n        },\n        governance: {\n            index: 6,\n            isWritable: false,\n            value: (_g = input.governance) !== null && _g !== void 0 ? _g : null,\n        },\n        systemProgram: {\n            index: 7,\n            isWritable: false,\n            value: (_h = input.systemProgram) !== null && _h !== void 0 ? _h : null,\n        },\n    };\n    // Arguments.\n    const resolvedArgs = Object.assign({}, input);\n    // Default values.\n    if (!resolvedAccounts.systemProgram.value) {\n        resolvedAccounts.systemProgram.value = context.programs.getPublicKey('splSystem', '11111111111111111111111111111111');\n        resolvedAccounts.systemProgram.isWritable = false;\n    }\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getSetChildStatusInstructionDataSerializer().serialize(resolvedArgs);\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.setChildStatus = setChildStatus;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setEntryStatus = exports.getSetEntryStatusInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nconst types_1 = require(\"../types\");\nfunction getSetEntryStatusInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['status', (0, types_1.getRequestStatusSerializer)()],\n    ], { description: 'SetEntryStatusInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [19, 182, 230, 77, 217, 7, 215, 52] })));\n}\nexports.getSetEntryStatusInstructionDataSerializer = getSetEntryStatusInstructionDataSerializer;\n// Instruction.\nfunction setEntryStatus(context, input) {\n    var _a, _b, _c, _d, _e;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        governanceEntry: {\n            index: 0,\n            isWritable: true,\n            value: (_a = input.governanceEntry) !== null && _a !== void 0 ? _a : null,\n        },\n        config: {\n            index: 1,\n            isWritable: false,\n            value: (_b = input.config) !== null && _b !== void 0 ? _b : null,\n        },\n        verifier: {\n            index: 2,\n            isWritable: false,\n            value: (_c = input.verifier) !== null && _c !== void 0 ? _c : null,\n        },\n        governanceProgram: {\n            index: 3,\n            isWritable: false,\n            value: (_d = input.governanceProgram) !== null && _d !== void 0 ? _d : null,\n        },\n        governance: {\n            index: 4,\n            isWritable: false,\n            value: (_e = input.governance) !== null && _e !== void 0 ? _e : null,\n        },\n    };\n    // Arguments.\n    const resolvedArgs = Object.assign({}, input);\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getSetEntryStatusInstructionDataSerializer().serialize(resolvedArgs);\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.setEntryStatus = setEntryStatus;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setEntryUri = exports.getSetEntryUriInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nfunction getSetEntryUriInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['uri', (0, serializers_1.string)()],\n    ], { description: 'SetEntryUriInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [52, 47, 72, 27, 135, 42, 214, 215] })));\n}\nexports.getSetEntryUriInstructionDataSerializer = getSetEntryUriInstructionDataSerializer;\n// Instruction.\nfunction setEntryUri(context, input) {\n    var _a, _b, _c, _d, _e;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        governanceEntry: {\n            index: 0,\n            isWritable: true,\n            value: (_a = input.governanceEntry) !== null && _a !== void 0 ? _a : null,\n        },\n        config: {\n            index: 1,\n            isWritable: false,\n            value: (_b = input.config) !== null && _b !== void 0 ? _b : null,\n        },\n        verifier: {\n            index: 2,\n            isWritable: false,\n            value: (_c = input.verifier) !== null && _c !== void 0 ? _c : null,\n        },\n        governanceProgram: {\n            index: 3,\n            isWritable: false,\n            value: (_d = input.governanceProgram) !== null && _d !== void 0 ? _d : null,\n        },\n        governance: {\n            index: 4,\n            isWritable: false,\n            value: (_e = input.governance) !== null && _e !== void 0 ? _e : null,\n        },\n    };\n    // Arguments.\n    const resolvedArgs = Object.assign({}, input);\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getSetEntryUriInstructionDataSerializer().serialize(resolvedArgs);\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.setEntryUri = setEntryUri;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateVerifier = exports.getUpdateVerifierInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nconst types_1 = require(\"../types\");\nfunction getUpdateVerifierInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([\n        ['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })],\n        ['verifierType', (0, types_1.getVerifierTypeSerializer)()],\n        ['verifier', (0, serializers_1.option)((0, serializers_1.publicKey)())],\n    ], { description: 'UpdateVerifierInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [198, 42, 44, 241, 47, 104, 225, 255] })));\n}\nexports.getUpdateVerifierInstructionDataSerializer = getUpdateVerifierInstructionDataSerializer;\n// Instruction.\nfunction updateVerifier(context, input) {\n    var _a, _b;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        admin: {\n            index: 0,\n            isWritable: false,\n            value: (_a = input.admin) !== null && _a !== void 0 ? _a : null,\n        },\n        config: {\n            index: 1,\n            isWritable: true,\n            value: (_b = input.config) !== null && _b !== void 0 ? _b : null,\n        },\n    };\n    // Arguments.\n    const resolvedArgs = Object.assign({}, input);\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getUpdateVerifierInstructionDataSerializer().serialize(resolvedArgs);\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.updateVerifier = updateVerifier;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.updateAdmin = exports.getUpdateAdminInstructionDataSerializer = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst serializers_1 = require(\"@metaplex-foundation/umi/serializers\");\nconst shared_1 = require(\"../shared\");\nfunction getUpdateAdminInstructionDataSerializer() {\n    return (0, serializers_1.mapSerializer)((0, serializers_1.struct)([['discriminator', (0, serializers_1.array)((0, serializers_1.u8)(), { size: 8 })]], { description: 'UpdateAdminInstructionData' }), (value) => (Object.assign(Object.assign({}, value), { discriminator: [161, 176, 40, 213, 60, 184, 179, 228] })));\n}\nexports.getUpdateAdminInstructionDataSerializer = getUpdateAdminInstructionDataSerializer;\n// Instruction.\nfunction updateAdmin(context, input) {\n    var _a, _b, _c;\n    // Program ID.\n    const programId = context.programs.getPublicKey('govBoarding', 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir');\n    // Accounts.\n    const resolvedAccounts = {\n        admin: {\n            index: 0,\n            isWritable: false,\n            value: (_a = input.admin) !== null && _a !== void 0 ? _a : null,\n        },\n        newAdmin: {\n            index: 1,\n            isWritable: false,\n            value: (_b = input.newAdmin) !== null && _b !== void 0 ? _b : null,\n        },\n        config: {\n            index: 2,\n            isWritable: true,\n            value: (_c = input.config) !== null && _c !== void 0 ? _c : null,\n        },\n    };\n    // Accounts in order.\n    const orderedAccounts = Object.values(resolvedAccounts).sort((a, b) => a.index - b.index);\n    // Keys and Signers.\n    const [keys, signers] = (0, shared_1.getAccountMetasAndSigners)(orderedAccounts, 'programId', programId);\n    // Data.\n    const data = getUpdateAdminInstructionDataSerializer().serialize({});\n    // Bytes Created On Chain.\n    const bytesCreatedOnChain = 0;\n    return (0, umi_1.transactionBuilder)([\n        { instruction: { keys, programId, data }, signers, bytesCreatedOnChain },\n    ]);\n}\nexports.updateAdmin = updateAdmin;\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__exportStar(require(\"./govBoarding\"), exports);\n","\"use strict\";\n/**\n * This code was AUTOGENERATED using the kinobi library.\n * Please DO NOT EDIT THIS FILE, instead use visitors\n * to add features, then rerun kinobi to update it.\n *\n * @see https://github.com/metaplex-foundation/kinobi\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getGovBoardingProgramId = exports.getGovBoardingProgram = exports.createGovBoardingProgram = exports.GOV_BOARDING_PROGRAM_ID = void 0;\nconst errors_1 = require(\"../errors\");\nexports.GOV_BOARDING_PROGRAM_ID = 'GovyJPza6EV6srUcmwA1vS3EmWGdLSkkDafRE54X1Dir';\nfunction createGovBoardingProgram() {\n    return {\n        name: 'govBoarding',\n        publicKey: exports.GOV_BOARDING_PROGRAM_ID,\n        getErrorFromCode(code, cause) {\n            return (0, errors_1.getGovBoardingErrorFromCode)(code, this, cause);\n        },\n        getErrorFromName(name, cause) {\n            return (0, errors_1.getGovBoardingErrorFromName)(name, this, cause);\n        },\n        isOnCluster() {\n            return true;\n        },\n    };\n}\nexports.createGovBoardingProgram = createGovBoardingProgram;\nfunction getGovBoardingProgram(context, clusterFilter) {\n    return context.programs.get('govBoarding', clusterFilter);\n}\nexports.getGovBoardingProgram = getGovBoardingProgram;\nfunction getGovBoardingProgramId(context, clusterFilter) {\n    return context.programs.getPublicKey('govBoarding', exports.GOV_BOARDING_PROGRAM_ID, clusterFilter);\n}\nexports.getGovBoardingProgramId = getGovBoardingProgramId;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getChildren = exports.getRealms = exports.getRealmFromEntry = exports.getEntryAddressFromEntry = exports.getRealmAddressFromName = exports.getEntryAddressFromName = void 0;\nconst umi_1 = require(\"@metaplex-foundation/umi\");\nconst client_1 = require(\"../client\");\nconst umi_web3js_adapters_1 = require(\"@metaplex-foundation/umi-web3js-adapters\");\nconst GOVERNANCE_ENTRY_DISCRIMINANT = Uint8Array.from([107, 36, 237, 168, 199, 164, 138, 165]);\nconst deserilizer = (0, client_1.getGovernanceEntryAccountDataSerializer)();\nconst getEntryAddressFromName = (umi, name, config, governanceProgram) => {\n    const [realmEntryAddress, __] = umi.eddsa.findPda(client_1.GOV_BOARDING_PROGRAM_ID, [Buffer.from(\"entry\"),\n        Buffer.from(name),\n        (0, umi_1.publicKeyBytes)(config),\n        (0, umi_1.publicKeyBytes)(governanceProgram)\n    ]);\n    return realmEntryAddress;\n};\nexports.getEntryAddressFromName = getEntryAddressFromName;\nconst getRealmAddressFromName = (umi, name, governanceProgram) => {\n    const [realmAddress, _] = umi.eddsa.findPda(governanceProgram, [Buffer.from(\"governance\"),\n        Buffer.from(name)]);\n    return realmAddress;\n};\nexports.getRealmAddressFromName = getRealmAddressFromName;\nconst getEntryAddressFromEntry = (umi, entry) => {\n    return (0, exports.getEntryAddressFromName)(umi, entry.name, entry.config, entry.governanceProgram);\n};\nexports.getEntryAddressFromEntry = getEntryAddressFromEntry;\nconst getRealmFromEntry = (umi, entry) => {\n    return (0, exports.getRealmAddressFromName)(umi, entry.name, entry.governanceProgram);\n};\nexports.getRealmFromEntry = getRealmFromEntry;\nconst getRealms = (umi, config, requestStatus) => __awaiter(void 0, void 0, void 0, function* () {\n    const accounts = yield umi.rpc.getProgramAccounts(client_1.GOV_BOARDING_PROGRAM_ID, {\n        filters: [\n            {\n                memcmp: {\n                    offset: 0,\n                    bytes: GOVERNANCE_ENTRY_DISCRIMINANT,\n                },\n            },\n            {\n                memcmp: {\n                    offset: 8,\n                    bytes: (0, umi_web3js_adapters_1.toWeb3JsPublicKey)(config).toBuffer(),\n                }\n            },\n            {\n                memcmp: {\n                    offset: 73,\n                    bytes: new Uint8Array([requestStatus]),\n                }\n            }\n        ]\n    });\n    return accounts.map((account) => {\n        return deserilizer.deserialize(account.data)[0];\n    });\n});\nexports.getRealms = getRealms;\nconst getChildren = (umi, config, parentEntry, requestStatus) => __awaiter(void 0, void 0, void 0, function* () {\n    const realmAccount = yield umi.rpc.getAccount(parentEntry);\n    let result = [];\n    if (realmAccount.exists) {\n        const parentData = deserilizer.deserialize(realmAccount.data)[0];\n        const childRealms = (0, umi_1.unwrapOption)(parentData.childRealms);\n        if (childRealms == null) {\n            return [];\n        }\n        const childAccounts = yield umi.rpc.getAccounts(childRealms);\n        const parentRealm = (0, exports.getRealmFromEntry)(umi, parentData);\n        for (const childEntryRawData of childAccounts.map((a) => {\n            if (a.exists) {\n                return a.data;\n            }\n            else {\n                return null;\n            }\n        }).filter((a) => a != null)) {\n            const childEntryData = deserilizer.deserialize(childEntryRawData)[0];\n            const parentLinks = (0, umi_1.unwrapOption)(childEntryData.parentLinks);\n            if (parentLinks == null) {\n                return [];\n            }\n            console.log(\"Parent links\", parentLinks);\n            console.log(\"parent entry\", parentEntry);\n            const relevantParentLink = parentLinks.realms.find(pl => pl.parentRealm === parentRealm);\n            console.log(\"Relevant parent link\", relevantParentLink);\n            if (relevantParentLink == null) {\n                return [];\n            }\n            if (relevantParentLink.status === requestStatus && childEntryData.config == config) {\n                result.push(childEntryData);\n            }\n        }\n    }\n    return result;\n});\nexports.getChildren = getChildren;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar Instruction = require('./Instruction.cjs');\nvar Keypair = require('./Keypair.cjs');\nvar PublicKey = require('./PublicKey.cjs');\nvar Transaction = require('./Transaction.cjs');\nvar TransactionMessage = require('./TransactionMessage.cjs');\n\n\n\nexports.fromWeb3JsInstruction = Instruction.fromWeb3JsInstruction;\nexports.toWeb3JsInstruction = Instruction.toWeb3JsInstruction;\nexports.fromWeb3JsKeypair = Keypair.fromWeb3JsKeypair;\nexports.toWeb3JsKeypair = Keypair.toWeb3JsKeypair;\nexports.fromWeb3JsPublicKey = PublicKey.fromWeb3JsPublicKey;\nexports.toWeb3JsPublicKey = PublicKey.toWeb3JsPublicKey;\nexports.fromWeb3JsLegacyTransaction = Transaction.fromWeb3JsLegacyTransaction;\nexports.fromWeb3JsTransaction = Transaction.fromWeb3JsTransaction;\nexports.toWeb3JsLegacyTransaction = Transaction.toWeb3JsLegacyTransaction;\nexports.toWeb3JsTransaction = Transaction.toWeb3JsTransaction;\nexports.fromWeb3JsMessage = TransactionMessage.fromWeb3JsMessage;\nexports.toWeb3JsMessage = TransactionMessage.toWeb3JsMessage;\nexports.toWeb3JsMessageFromInput = TransactionMessage.toWeb3JsMessageFromInput;\n//# sourceMappingURL=index.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar web3_js = require('@solana/web3.js');\nvar buffer = require('buffer');\nvar PublicKey = require('./PublicKey.cjs');\n\nfunction fromWeb3JsInstruction(instruction) {\n  return {\n    keys: instruction.keys.map(accountMeta => ({\n      ...accountMeta,\n      pubkey: PublicKey.fromWeb3JsPublicKey(accountMeta.pubkey)\n    })),\n    programId: PublicKey.fromWeb3JsPublicKey(instruction.programId),\n    data: new Uint8Array(instruction.data)\n  };\n}\nfunction toWeb3JsInstruction(instruction) {\n  return new web3_js.TransactionInstruction({\n    keys: instruction.keys.map(accountMeta => ({\n      ...accountMeta,\n      pubkey: PublicKey.toWeb3JsPublicKey(accountMeta.pubkey)\n    })),\n    programId: PublicKey.toWeb3JsPublicKey(instruction.programId),\n    data: buffer.Buffer.from(instruction.data)\n  });\n}\n\nexports.fromWeb3JsInstruction = fromWeb3JsInstruction;\nexports.toWeb3JsInstruction = toWeb3JsInstruction;\n//# sourceMappingURL=Instruction.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar web3_js = require('@solana/web3.js');\n\nfunction fromWeb3JsPublicKey(publicKey) {\n  return publicKey.toBase58();\n}\nfunction toWeb3JsPublicKey(publicKey) {\n  return new web3_js.PublicKey(publicKey);\n}\n\nexports.fromWeb3JsPublicKey = fromWeb3JsPublicKey;\nexports.toWeb3JsPublicKey = toWeb3JsPublicKey;\n//# sourceMappingURL=PublicKey.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umi = require('@metaplex-foundation/umi');\nvar web3_js = require('@solana/web3.js');\nvar PublicKey = require('./PublicKey.cjs');\n\nfunction fromWeb3JsKeypair(keypair) {\n  return {\n    publicKey: PublicKey.fromWeb3JsPublicKey(keypair.publicKey),\n    secretKey: keypair.secretKey\n  };\n}\nfunction toWeb3JsKeypair(keypair) {\n  return new web3_js.Keypair({\n    publicKey: umi.publicKeyBytes(keypair.publicKey),\n    secretKey: keypair.secretKey\n  });\n}\n\nexports.fromWeb3JsKeypair = fromWeb3JsKeypair;\nexports.toWeb3JsKeypair = toWeb3JsKeypair;\n//# sourceMappingURL=Keypair.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umi = require('@metaplex-foundation/umi');\nvar web3_js = require('@solana/web3.js');\nvar TransactionMessage = require('./TransactionMessage.cjs');\n\nfunction fromWeb3JsTransaction(web3JsTransaction) {\n  return {\n    message: TransactionMessage.fromWeb3JsMessage(web3JsTransaction.message),\n    serializedMessage: web3JsTransaction.message.serialize(),\n    signatures: web3JsTransaction.signatures\n  };\n}\nfunction toWeb3JsTransaction(transaction) {\n  return new web3_js.VersionedTransaction(TransactionMessage.toWeb3JsMessage(transaction.message), transaction.signatures);\n}\nfunction fromWeb3JsLegacyTransaction(web3JsLegacyTransaction) {\n  const web3JsMessage = web3JsLegacyTransaction.compileMessage();\n  const web3JsLegacySignatures = web3JsLegacyTransaction.signatures.reduce((all, one) => {\n    all[one.publicKey.toBase58()] = one.signature ? new Uint8Array(one.signature) : null;\n    return all;\n  }, {});\n  const signatures = [];\n  for (let i = 0; i < web3JsMessage.header.numRequiredSignatures; i += 1) {\n    const pubkey = web3JsMessage.accountKeys[i].toBase58();\n    const signature = web3JsLegacySignatures[pubkey] ?? null;\n    signatures.push(signature ?? new Uint8Array(web3_js.SIGNATURE_LENGTH_IN_BYTES));\n  }\n  return {\n    message: TransactionMessage.fromWeb3JsMessage(web3JsMessage),\n    serializedMessage: web3JsMessage.serialize(),\n    signatures\n  };\n}\nfunction toWeb3JsLegacyTransaction(transaction) {\n  const web3JsTransaction = toWeb3JsTransaction({\n    ...transaction,\n    message: {\n      ...transaction.message,\n      version: 'legacy'\n    }\n  });\n  return web3_js.Transaction.populate(web3JsTransaction.message, web3JsTransaction.signatures.map(signature => umi.base58.deserialize(signature)[0]));\n}\n\nexports.fromWeb3JsLegacyTransaction = fromWeb3JsLegacyTransaction;\nexports.fromWeb3JsTransaction = fromWeb3JsTransaction;\nexports.toWeb3JsLegacyTransaction = toWeb3JsLegacyTransaction;\nexports.toWeb3JsTransaction = toWeb3JsTransaction;\n//# sourceMappingURL=Transaction.cjs.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar umi = require('@metaplex-foundation/umi');\nvar web3_js = require('@solana/web3.js');\nvar Instruction = require('./Instruction.cjs');\nvar PublicKey = require('./PublicKey.cjs');\n\nfunction fromWeb3JsMessage(message) {\n  return {\n    version: message.version,\n    header: message.header,\n    accounts: message.staticAccountKeys.map(PublicKey.fromWeb3JsPublicKey),\n    blockhash: message.recentBlockhash,\n    instructions: message.compiledInstructions.map(instruction => ({\n      programIndex: instruction.programIdIndex,\n      accountIndexes: instruction.accountKeyIndexes,\n      data: new Uint8Array(instruction.data)\n    })),\n    addressLookupTables: message.addressTableLookups.map(lookup => ({\n      publicKey: PublicKey.fromWeb3JsPublicKey(lookup.accountKey),\n      writableIndexes: lookup.writableIndexes,\n      readonlyIndexes: lookup.readonlyIndexes\n    }))\n  };\n}\nfunction toWeb3JsMessage(message) {\n  if (message.version === 'legacy') {\n    return new web3_js.Message({\n      header: message.header,\n      accountKeys: message.accounts.map(PublicKey.toWeb3JsPublicKey),\n      recentBlockhash: message.blockhash,\n      instructions: message.instructions.map(instruction => ({\n        programIdIndex: instruction.programIndex,\n        accounts: instruction.accountIndexes,\n        data: umi.base58.deserialize(instruction.data)[0]\n      }))\n    });\n  }\n  return new web3_js.MessageV0({\n    header: message.header,\n    staticAccountKeys: message.accounts.map(PublicKey.toWeb3JsPublicKey),\n    recentBlockhash: message.blockhash,\n    compiledInstructions: message.instructions.map(instruction => ({\n      programIdIndex: instruction.programIndex,\n      accountKeyIndexes: instruction.accountIndexes,\n      data: instruction.data\n    })),\n    addressTableLookups: message.addressLookupTables.map(lookup => ({\n      accountKey: PublicKey.toWeb3JsPublicKey(lookup.publicKey),\n      writableIndexes: lookup.writableIndexes,\n      readonlyIndexes: lookup.readonlyIndexes\n    }))\n  });\n}\nfunction toWeb3JsMessageFromInput(input) {\n  if (input.version === 'legacy') {\n    return web3_js.Message.compile({\n      payerKey: PublicKey.toWeb3JsPublicKey(input.payer),\n      instructions: input.instructions.map(Instruction.toWeb3JsInstruction),\n      recentBlockhash: input.blockhash\n    });\n  }\n  return web3_js.MessageV0.compile({\n    payerKey: PublicKey.toWeb3JsPublicKey(input.payer),\n    instructions: input.instructions.map(Instruction.toWeb3JsInstruction),\n    recentBlockhash: input.blockhash,\n    addressLookupTableAccounts: input.addressLookupTables?.map(account => new web3_js.AddressLookupTableAccount({\n      key: PublicKey.toWeb3JsPublicKey(account.publicKey),\n      state: {\n        addresses: account.addresses.map(PublicKey.toWeb3JsPublicKey),\n        authority: undefined,\n        deactivationSlot: BigInt(`0x${'ff'.repeat(8)}`),\n        lastExtendedSlot: 0,\n        lastExtendedSlotStartIndex: 0\n      }\n    }))\n  });\n}\n\nexports.fromWeb3JsMessage = fromWeb3JsMessage;\nexports.toWeb3JsMessage = toWeb3JsMessage;\nexports.toWeb3JsMessageFromInput = toWeb3JsMessageFromInput;\n//# sourceMappingURL=TransactionMessage.cjs.map\n"],"names":["createUmi","endpointOrConnection","rpcOptions","baseCreateUmi","use","defaultPlugins","some","value","__option","none","isOption","input","isSome","option","isNone","unwrapOption","fallback","wrapNullable","nullable","unwrapSome","unwrapSomeOrElse","PUBLIC_KEY_LENGTH","publicKey","assertValidPublicKey","key","toBase58","Array","isArray","base58","deserialize","assertPublicKey","defaultPublicKey","isPublicKey","error","isPda","length","InvalidPublicKeyError","publicKeyBytes","uniquePublicKeys","publicKeys","Set","bytes","serialize","base58PublicKey","samePublicKey","left","right","base10","baseX","alphabet","base","baseBigInt","BigInt","description","fixedSize","maxSize","match","RegExp","InvalidBaseStringError","Uint8Array","chars","trailIndex","findIndex","c","leadingZeroes","fill","from","tailChars","slice","base10Number","baseXPower","i","indexOf","tailBytes","unshift","Number","concat","buffer","offset","n","repeat","reduce","sum","byte","join","Error","name","constructor","cause","message","base16","lowercaseValue","toLowerCase","matches","map","parseInt","str","toString","padStart","base64","mapSerializer","baseXReslice","replace","padEnd","Math","ceil","mergeBytes","bytesArr","totalLength","total","arr","result","forEach","set","padBytes","paddedBytes","fixBytes","DeserializingEmptyBufferError","serializer","NotEnoughBytesError","expected","actual","ExpectedFixedSizeSerializerError","fixSerializer","fixedBytes","unmap","reverseSerializer","reverse","newBytes","bits","reslice","inputBits","outputBits","useRemainder","output","accumulator","bitsInAccumulator","mask","push","charIndices","removeNullCharacters","padNullCharacters","utf8","TextEncoder","encode","TextDecoder","decode","invalidPublicKey","reason","_mapSerializer","_fixSerializer","_reverseSerializer","_mergeBytes","_padBytes","_fixBytes","_utf8","_baseX","_base10","_base58","_base64","_base16","bitArray","_bitArray","_removeNullCharacters","_padNullCharacters","Endian","_Endian","NumberOutOfRangeError","RangeError","min","max","f32","options","numberFactory","size","view","le","setFloat32","get","getFloat32","littleEndian","defaultDescription","endian","Little","range","assertRange","ArrayBuffer","DataView","assertEnoughBytes","toDataView","toArrayBuffer","array","byteOffset","byteLength","f64","setFloat64","getFloat64","i8","setInt8","getInt8","i16","setInt16","getInt16","i32","setInt32","getInt32","i64","setBigInt64","getBigInt64","i128","leftOffset","rightOffset","rightMask","setBigUint64","getBigUint64","u8","setUint8","getUint8","u16","setUint16","getUint16","u32","setUint32","getUint32","u64","u128","shortU16","ii","alignedValue","nextSevenBits","byteCount","byteIndex","currentByte","item","getSizeDescription","getSizeFromChildren","InvalidNumberOfItemsError","getSizePrefix","v","values","newOffset","resolvedSize","getResolvedSize","InvalidArrayLikeRemainderSizeError","remainderSize","itemSize","UnrecognizedArrayLikeSerializerSizeError","JSON","stringify","InvalidDataEnumVariantError","invalidVariant","validVariants","InvalidScalarEnumVariantError","EnumDiscriminatorOutOfRangeError","discriminator","childrenSizes","childrenSize","sumSerializerSizes","realSize","sizes","all","parsedOptions","backward","backwardSuffix","j","feature","booleans","Boolean","bool","vOffset","byteSerializer","contentBytes","lengthBytes","lengthBigInt","lengthOffset","contentBuffer","contentOffset","dataEnum","variants","prefix","fieldDescriptions","String","allVariantHaveTheSameFixedSize","every","one","fixedVariantSize","maxVariantSize","maxSerializerSizes","field","variant","__kind","variantPrefix","variantSerializer","variantBytes","dOffset","variantField","itemBytes","k","Map","deserializedKey","kOffset","deserializedValue","fixed","descriptionSuffix","prefixByte","itemFixedSize","fixedOffset","prefixOffset","optionOrNullable","toPublicKey","pubkeyBytes","scalarEnum","enumKeys","Object","keys","enumValues","isNumericEnum","valueDescriptions","filter","minRange","maxRange","stringValues","assertValidVariant","isInvalidNumber","isInvalidString","includes","valueIndex","valueAsNumber","add","string","encoding","struct","fields","fieldBytes","tuple","items","itemDescriptions","index","newValue","unit","_bytes","undefined","ACCOUNT_HEADER_SIZE","deserializeAccount","rawAccount","dataSerializer","data","rest","parsedData","header","UnexpectedAccountError","assertAccountExists","account","solution","exists","AccountNotFoundError","SdkError","expectedType","UmiError","source","sourceDetails","getFullSource","getCapitalizedSource","toUpperCase","capitalizedSource","accountType","createAmount","basisPoints","identifier","decimals","createBigInt","createAmountFromDecimals","decimalAmount","exponentAmount","multiplyAmount","percentAmount","percent","tokenAmount","tokens","lamports","sol","usd","isAmount","amount","isSolAmount","sameAmounts","assertAmount","UnexpectedAmountError","assertSolAmount","assertSameAmounts","operation","AmountMismatchError","addAmounts","subtractAmounts","multiplier","units","split","multiplierBasisPoints","multiplierExponents","divideAmount","divisor","divisorBasisPoints","divisorExponents","absoluteAmount","x","compareAmounts","isEqualToAmount","tolerance","delta","isLessThanOrEqualToAmount","isLessThanAmount","isGreaterThanAmount","isGreaterThanOrEqualToAmount","isZeroAmount","isPositiveAmount","isNegativeAmount","amountToString","maxDecimals","text","sign","startsWith","amountToNumber","parseFloat","displayAmount","amountAsString","test","mapAmountSerializer","MAX_SAFE_INTEGER","expectedIdentifier","expectedDecimals","wrappedOperation","MAINNET_BETA_DOMAINS","DEVNET_DOMAINS","TESTNET_DOMAINS","LOCALNET_DOMAINS","resolveClusterFromEndpoint","endpoint","domain","URL","hostname","createNullContext","downloader","createNullDownloader","eddsa","createNullEddsa","http","createNullHttp","identity","createNullSigner","payer","programs","createNullProgramRepository","rpc","createNullRpc","createNullSerializer","transactions","createNullTransactionFactory","uploader","createNullUploader","errorHandler","InterfaceImplementationMissingError","download","downloadJson","interfaceName","contextVariable","interfaceBasename","generateKeypair","createKeypairFromSecretKey","createKeypairFromSeed","isOnCurve","findPda","verify","send","has","getPublicKey","bind","unbind","clone","resolveError","getEndpoint","getCluster","getAccount","getAccounts","getProgramAccounts","getBlockTime","getBalance","getRent","getSlot","getLatestBlockhash","getTransaction","getSignatureStatuses","accountExists","airdrop","call","sendTransaction","confirmTransaction","enum","signTransaction","transaction","signers","promise","signer","unsigned","Promise","resolve","signAllTransactions","transactionsWithSigners","signersWithTransactions","find","indices","signed","position","isSigner","uniqueSigners","uniqueBy","a","b","createNoopSigner","signMessage","chunk","chunkSize","chunks","chunkIndex","floor","zipMap","fn","t","acc","create","serializeMessage","deserializeMessage","upload","uploadJson","getUploadPrice","dateTime","isDateObject","date","Date","timestamp","getTime","now","prototype","formatDateTime","locales","month","day","year","hour","minute","toLocaleDateString","mapDateTimeSerializer","createGenericFile","content","fileName","displayName","uniqueName","generateRandomString","contentType","extension","getExtension","tags","createGenericFileFromBrowserFile","browserFile","arrayBuffer","createGenericFileFromJson","json","createBrowserFileFromGenericFile","file","File","parseJsonFromGenericFile","parse","getBytesFromGenericFiles","files","isGenericFile","lastDotIndex","lastIndexOf","alphabetLength","charAt","random","request","HttpRequestBuilder","method","headers","url","asJson","asMultipart","asForm","accept","withHeader","userAgent","withToken","token","type","withHeaders","dontFollowRedirects","followRedirects","maxRedirects","withoutTimeout","withTimeout","timeout","withAbortSignal","signal","withEndpoint","withParams","params","newSearch","URLSearchParams","search","searchParams","entries","val","append","withData","post","put","patch","delete","plugin","install","ProgramError","program","logs","log","umi","dataViewSerializer","defaultProgramRepository","fetchHttp","httpDownloader","web3JsEddsa","web3JsRpc","chunkGetAccountsRpc","getAccountsChunkSize","web3JsTransactionFactory","createHttpDownloader","context","downloadOne","uri","response","body","uris","createWeb3JsEddsa","fromWeb3JsKeypair","Web3JsKeypair","generate","secretKey","fromSecretKey","seed","fromSeed","Web3JsPublicKey","toWeb3JsPublicKey","programId","seeds","bump","findProgramAddressSync","fromWeb3JsPublicKey","keypair","ed25519","signature","fromWeb3JsInstruction","instruction","accountMeta","pubkey","toWeb3JsInstruction","Web3JsTransactionInstruction","Buffer","generatePrivateKey","utils","randomPrivateKey","privateScalar","ExtendedPoint","fromHex","toBuffer","isBuffer","Struct","properties","assign","SOLANA_SCHEMA","decodeUnchecked","deserializeUnchecked","Enum","MAX_SEED_LENGTH","isPublicKeyData","_bn","uniquePublicKeyCounter","PublicKey","decoded","bs58","BN","unique","equals","eq","toBytes","toJSON","buf","toArrayLike","zeroPad","alloc","copy","Symbol","toStringTag","createWithSeed","fromPublicKey","sha256","createProgramAddressSync","TypeError","createProgramAddress","nonce","address","seedsWithNonce","err","findProgramAddress","pubkeyData","_PublicKey","default","kind","Account","_publicKey","_secretKey","secretKeyBuffer","BPF_LOADER_DEPRECATED_PROGRAM_ID","PACKET_DATA_SIZE","VERSION_PREFIX_MASK","SIGNATURE_LENGTH_IN_BYTES","TransactionExpiredBlockheightExceededError","defineProperty","TransactionExpiredTimeoutError","timeoutSeconds","toFixed","TransactionExpiredNonceInvalidError","MessageAccountKeys","staticAccountKeys","accountKeysFromLookups","keySegments","writable","readonly","keySegment","flat","compileInstructions","instructions","U8_MAX","keyIndexMap","findKeyIndex","keyIndex","programIdIndex","accountKeyIndexes","meta","property","BufferLayout","blob","rustString","rsl","_decode","_encode","rslShim","span","authorized","lockup","ns64","voteInit","voteAuthorizeWithSeedArgs","getAlloc","getItemAlloc","elementLayout","layout","decodeLength","len","elem","shift","encodeLength","rem_len","condition","CompiledKeys","keyMetaMap","compile","getOrInsertDefault","keyMeta","isWritable","isInvoked","payerKeyMeta","ix","getMessageComponents","mapEntries","assert","writableSigners","readonlySigners","writableNonSigners","readonlyNonSigners","numRequiredSignatures","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","payerAddress","extractTableLookup","lookupTable","writableIndexes","drainedWritableKeys","drainKeysFoundInLookupTable","state","addresses","readonlyIndexes","drainedReadonlyKeys","accountKey","lookupTableEntries","keyMetaFilter","lookupTableIndexes","drainedKeys","lookupTableIndex","entry","END_OF_BUFFER_ERROR_MESSAGE","guardedShift","byteArray","guardedSplice","args","start","splice","Message","accountKeys","recentBlockhash","indexToProgramIds","version","compiledInstructions","accounts","addressTableLookups","getAccountKeys","compiledKeys","payerKey","isAccountSigner","isAccountWritable","numSignedAccounts","unsignedAccountIndex","numUnsignedAccounts","numWritableUnsignedAccounts","numWritableSignedAccounts","isProgramId","programIds","nonProgramIds","_","numKeys","keyCount","shortvec","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","seq","signDataLayout","Layout","signData","accountCount","dataSlice","messageArgs","MessageV0","numAccountKeysFromLookups","count","lookup","addressLookupTableAccounts","resolveAddressTableLookups","numStaticAccountKeys","lookupAccountKeysIndex","numWritableLookupAccountKeys","tableLookup","tableAccount","lookupTableAccounts","extractResult","addressTableLookup","encodedStaticAccountKeysLength","serializedInstructions","serializeInstructions","encodedInstructionsLength","serializedAddressTableLookups","serializeAddressTableLookups","encodedAddressTableLookupsLength","messageLayout","serializedMessage","MESSAGE_VERSION_0_PREFIX","serializedMessageLength","staticAccountKeysLength","instructionsLength","addressTableLookupsLength","serializedLength","encodedAccountKeyIndexesLength","encodedDataLength","encodedWritableIndexesLength","encodedReadonlyIndexesLength","addressTableLookupLayout","maskedPrefix","accountKeyIndexesLength","addressTableLookupsCount","writableIndexesLength","readonlyIndexesLength","VersionedMessage","deserializeMessageVersion","TransactionStatus","DEFAULT_SIGNATURE","TransactionInstruction","opts","Transaction","signatures","feePayer","lastValidBlockHeight","nonceInfo","minNonceContextSlot","_message","_json","hasOwnProperty","minContextSlot","blockhash","nonceInstruction","compileMessage","console","warn","accountMetas","uniqueMetas","pubkeyString","uniqueIndex","sort","y","localeMatcher","usage","sensitivity","ignorePunctuation","numeric","caseFirst","localeCompare","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","_compile","valid","pair","getEstimatedFee","connection","getFeeForMessage","setSigners","seen","_partialSign","partialSign","_addSignature","addSignature","sigpair","verifySignatures","requireAllSignatures","signatureErrors","_getMessageSignednessErrors","errors","missing","invalid","config","sigErrors","errorMessage","p","_serialize","signatureCount","transactionLength","wireTransaction","keyObj","populate","sigPubkeyPair","TransactionMessage","decompile","compiledIx","compileToLegacyMessage","compileToV0Message","VersionedTransaction","defaultSignatures","encodedSignaturesLength","transactionLayout","serializedTransaction","serializedTransactionLength","signaturesLength","messageData","signerPubkeys","signerIndex","NUM_TICKS_PER_SECOND","DEFAULT_TICKS_PER_SLOT","NUM_SLOTS_PER_SECOND","MS_PER_SLOT","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_RENT_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","SendTransactionError","action","transactionMessage","maybeLogsOutput","guideText","transactionLogs","transactionError","cachedLogs","getLogs","reject","then","tx","logMessages","catch","SolanaJSONRPCErrorCode","JSON_RPC_SERVER_ERROR_BLOCK_CLEANED_UP","JSON_RPC_SERVER_ERROR_SEND_TRANSACTION_PREFLIGHT_FAILURE","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_BLOCK_NOT_AVAILABLE","JSON_RPC_SERVER_ERROR_NODE_UNHEALTHY","JSON_RPC_SERVER_ERROR_TRANSACTION_PRECOMPILE_VERIFICATION_FAILURE","JSON_RPC_SERVER_ERROR_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_NO_SNAPSHOT","JSON_RPC_SERVER_ERROR_LONG_TERM_STORAGE_SLOT_SKIPPED","JSON_RPC_SERVER_ERROR_KEY_EXCLUDED_FROM_SECONDARY_INDEX","JSON_RPC_SERVER_ERROR_TRANSACTION_HISTORY_NOT_AVAILABLE","JSON_RPC_SCAN_ERROR","JSON_RPC_SERVER_ERROR_TRANSACTION_SIGNATURE_LEN_MISMATCH","JSON_RPC_SERVER_ERROR_BLOCK_STATUS_NOT_AVAILABLE_YET","JSON_RPC_SERVER_ERROR_UNSUPPORTED_TRANSACTION_VERSION","JSON_RPC_SERVER_ERROR_MIN_CONTEXT_SLOT_NOT_REACHED","SolanaJSONRPCError","code","customMessage","sendAndConfirmTransaction","sendOptions","skipPreflight","preflightCommitment","commitment","maxRetries","status","abortSignal","nonceAccountPubkey","nonceValue","sleep","ms","setTimeout","encodeData","allocLength","layoutFields","decodeData","FeeCalculatorLayout","nu64","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","fromAccountData","nonceAccount","encodeDecode","bigInt","bigIntLayout","src","toBigIntLE","toBufferLE","SystemInstruction","decodeInstructionType","checkProgramId","instructionTypeLayout","typeIndex","ixType","SYSTEM_INSTRUCTION_LAYOUTS","decodeCreateAccount","checkKeyLength","space","Create","fromPubkey","newAccountPubkey","decodeTransfer","Transfer","toPubkey","decodeTransferWithSeed","TransferWithSeed","basePubkey","decodeAllocate","Allocate","accountPubkey","decodeAllocateWithSeed","AllocateWithSeed","decodeAssign","Assign","decodeAssignWithSeed","AssignWithSeed","decodeCreateWithSeed","CreateWithSeed","decodeNonceInitialize","InitializeNonceAccount","noncePubkey","decodeNonceAdvance","AdvanceNonceAccount","decodeNonceWithdraw","WithdrawNonceAccount","decodeNonceAuthorize","AuthorizeNonceAccount","newAuthorizedPubkey","SystemProgram","expectedLength","freeze","UpgradeNonceAccount","createAccount","transfer","createAccountWithSeed","createNonceAccount","initParams","nonceInitialize","instructionData","nonceAdvance","nonceWithdraw","nonceAuthorize","allocate","CHUNK_SIZE","Loader","getMinNumSignatures","load","balanceNeeded","getMinimumBalanceForRentExemption","programInfo","getAccountInfo","executable","owner","dataLayout","bytesLength","bytesLengthPadding","_rpcEndpoint","REQUESTS_PER_SECOND","deployCommitment","finalizeSignature","currentSlot","slot","round","BPF_LOADER_PROGRAM_ID","BpfLoader","elf","loaderProgramId","MINIMUM_SLOT_PER_EPOCH","trailingZeros","nextPowerOfTwo","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","epochLen","getSlotsInEpoch","slotIndex","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","pow","getLastSlotInEpoch","globalThis","fetch","RpcWebSocketClient","RpcWebSocketCommonClient","generate_request_id","webSocketFactory","createRpc","autoconnect","max_reconnects","reconnect","reconnect_interval","underlyingSocket","socket","readyState","notify","LOOKUP_TABLE_META_SIZE","AddressLookupTableAccount","isActive","U64_MAX","deactivationSlot","accountData","LookupTableMetaLayout","serializedAddressesLen","numSerializedAddresses","lastExtendedSlot","lastExtendedSlotStartIndex","lastExtendedStartIndex","authority","URL_RE","makeWebsocketUrl","hostish","portWithColon","protocol","startPort","websocketPort","PublicKeyFromString","coerce","instance","RawAccountDataResult","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","assertEndpointUrl","putativeUrl","extractCommitmentFromConfig","commitmentOrConfig","specifiedCommitment","specifiedConfig","createRpcResult","union","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","schema","jsonRpcResultAndContext","number","notificationResultAndContext","versionedMessageFromResponse","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","effectiveSlot","postBalance","commission","GetRecentPrioritizationFeesResult","prioritizationFee","GetInflationRateResult","validator","GetEpochInfoResult","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","returnData","BlockProductionResponseStruct","byIdentity","firstSlot","lastSlot","createRpcClient","httpHeaders","customFetch","fetchMiddleware","disableRetryOnRateLimit","httpAgent","fetchImpl","agent","fetchWithMiddleware","info","init","modifiedFetchArgs","modifiedInfo","modifiedInit","clientBrowser","RpcClient","callback","COMMON_HTTP_HEADERS","too_many_requests_retries","res","waitTime","statusText","ok","createRpcRequest","client","createRpcBatchRequest","requests","batch","methodName","GetInflationGovernorRpcResult","GetInflationRateRpcResult","GetRecentPrioritizationFeesRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","root","SlotNotificationResult","SlotUpdateResult","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","AddressTableLookupStruct","ConfirmedTransactionResult","AnnotatedAccountKey","ConfirmedTransactionAccountsModeResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","mint","uiTokenAmount","LoadedAddressesResult","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","preTokenBalances","postTokenBalances","loadedAddresses","computeUnitsConsumed","ParsedConfirmedTransactionMetaResult","TransactionVersionStruct","RewardsResult","rewardType","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","GetNoneModeBlockRpcResult","GetAccountsModeBlockRpcResult","GetParsedBlockRpcResult","GetParsedAccountsModeBlockRpcResult","GetParsedNoneModeBlockRpcResult","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","IsBlockhashValidRpcResult","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","process","Connection","_commitment","_confirmTransactionInitialTimeout","_rpcWsEndpoint","_rpcClient","_rpcRequest","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_rpcWebSocketGeneration","_disableBlockhashCaching","_pollingBlockhash","_blockhashInfo","latestBlockhash","lastFetch","transactionSignatures","simulatedSignatures","_nextClientSubscriptionId","_subscriptionDisposeFunctionsByClientSubscriptionId","_subscriptionHashByClientSubscriptionId","_subscriptionStateChangeCallbacksByHash","_subscriptionCallbacksByServerSubscriptionId","_subscriptionsByHash","_subscriptionsAutoDisposedByRpc","getBlockHeight","requestPromises","_buildArgs","requestHash","fastStableStringify","unsafeRes","wsEndpoint","confirmTransactionInitialTimeout","Infinity","on","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","rpcEndpoint","getBalanceAndContext","e","getMinimumLedgerSlot","getFirstAvailableBlock","getSupply","configArg","getTokenSupply","tokenMintAddress","getTokenAccountBalance","tokenAddress","getTokenAccountsByOwner","ownerAddress","_args","getParsedTokenAccountsByOwner","getLargestAccounts","arg","getTokenLargestAccounts","mintAddress","getAccountInfoAndContext","getParsedAccountInfo","getMultipleParsedAccounts","rawConfig","getMultipleAccountsInfoAndContext","getMultipleAccountsInfo","getStakeActivation","configOrCommitment","configWithoutEncoding","baseSchema","withContext","getParsedProgramAccounts","strategy","rawSignature","aborted","decodedSignature","confirmTransactionUsingLegacyTimeoutStrategy","confirmTransactionUsingBlockHeightExceedanceStrategy","confirmTransactionUsingDurableNonceStrategy","getCancellationPromise","addEventListener","getTransactionConfirmationPromise","signatureSubscriptionId","disposeSignatureSubscriptionStateChangeObserver","done","confirmationPromise","onSignature","__type","PROCESSED","subscriptionSetupPromise","resolveSubscriptionSetup","_onSubscriptionStateChange","nextState","getSignatureStatus","abortConfirmation","removeSignatureListener","expiryPromise","checkBlockHeight","_e","currentBlockHeight","BLOCKHEIGHT_EXCEEDED","cancellationPromise","outcome","race","currentNonceValue","lastCheckedSlot","getCurrentNonceValue","getNonceAndContext","NONCE_INVALID","slotInWhichNonceDidAdvance","signatureStatus","commitmentForStatus","timeoutId","timeoutMs","TIMED_OUT","clearTimeout","getClusterNodes","getVoteAccounts","getSlotLeader","getSlotLeaders","startSlot","limit","getTransactionCount","getTotalSupply","excludeNonCirculatingAccountsList","getInflationGovernor","getInflationReward","getInflationRate","getEpochInfo","getEpochSchedule","epochSchedule","getLeaderSchedule","getRecentBlockhashAndContext","getRecentPerformanceSamples","getFeeCalculatorForBlockhash","wireMessage","getRecentPrioritizationFees","lockedWritableAccounts","getRecentBlockhash","getLatestBlockhashAndContext","isBlockhashValid","getVersion","getGenesisHash","getBlock","_buildArgsAtLeastConfirmed","transactionDetails","getParsedBlock","getBlockProduction","extra","getParsedTransaction","getParsedTransactions","getTransactions","getConfirmedBlock","block","getBlocks","endSlot","getBlockSignatures","getConfirmedBlockSignatures","getConfirmedTransaction","getParsedConfirmedTransaction","getParsedConfirmedTransactions","getConfirmedSignaturesForAddress","firstAvailableBlock","until","highestConfirmedRoot","before","confirmedSignatureInfo","getConfirmedSignaturesForAddress2","getSignaturesForAddress","getAddressLookupTable","accountInfo","getNonce","requestAirdrop","to","_blockhashWithExpiryBlockHeight","disableCache","timeSinceFetch","expired","_pollNewBlockhash","startTime","cachedLatestBlockhash","cachedBlockhash","getStakeMinimumDelegation","simulateTransaction","transactionOrMessage","configOrSigners","includeAccounts","versionedTx","encodedTransaction","originalTx","sigVerify","traceIndent","logTrace","signersOrOptions","sendRawTransaction","rawTransaction","sendEncodedTransaction","setInterval","_updateSubscriptions","clearInterval","hash","_setSubscription","nextSubscription","prevState","stateChangeCallbacks","cb","clientSubscriptionId","close","connect","activeWebSocketGeneration","isCurrentConnectionStillActive","callbacks","serverSubscriptionId","unsubscribeMethod","_handleServerNotification","callbackArgs","notification","_makeSubscription","subscriptionConfig","existingSubscription","onAccountChange","removeAccountChangeListener","_unsubscribeClientSubscription","accountId","onProgramAccountChange","filters","removeProgramAccountChangeListener","onLogs","mentions","removeOnLogsListener","onSlotChange","removeSlotChangeListener","onSlotUpdate","removeSlotUpdateListener","subscriptionName","dispose","override","_err","onSignatureWithOptions","onRootChange","removeRootChangeListener","Keypair","_keypair","skipValidation","computedPublicKey","LOOKUP_TABLE_INSTRUCTION_LAYOUTS","CreateLookupTable","bigintLayout","FreezeLookupTable","ExtendLookupTable","DeactivateLookupTable","CloseLookupTable","AddressLookupTableInstruction","layoutType","decodeCreateLookupTable","checkKeysLength","recentSlot","decodeExtendLookupTable","decodeCloseLookupTable","recipient","decodeFreezeLookupTable","decodeDeactivateLookupTable","AddressLookupTableProgram","createLookupTable","lookupTableAddress","bumpSeed","freezeLookupTable","extendLookupTable","addr","deactivateLookupTable","closeLookupTable","ComputeBudgetInstruction","COMPUTE_BUDGET_INSTRUCTION_LAYOUTS","decodeRequestUnits","additionalFee","RequestUnits","decodeRequestHeapFrame","RequestHeapFrame","decodeSetComputeUnitLimit","SetComputeUnitLimit","decodeSetComputeUnitPrice","microLamports","SetComputeUnitPrice","ComputeBudgetProgram","requestUnits","requestHeapFrame","setComputeUnitLimit","setComputeUnitPrice","PRIVATE_KEY_BYTES","PUBLIC_KEY_BYTES","SIGNATURE_BYTES","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","createInstructionWithPublicKey","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","numSignatures","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","createInstructionWithPrivateKey","privateKey","ecdsaSign","msgHash","privKey","secp256k1","toCompactRawBytes","recovery","isValidPrivateKey","publicKeyCreate","ETHEREUM_ADDRESS_BYTES","SIGNATURE_OFFSETS_SERIALIZED_SIZE","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","publicKeyToEthAddress","keccak_256","recoveryId","createInstructionWithEthAddress","ethAddress","rawAddress","substr","dataStart","ethAddressOffset","ethAddressInstructionIndex","pkey","messageHash","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","_Lockup","StakeInstruction","STAKE_INSTRUCTION_LAYOUTS","decodeInitialize","Initialize","stakePubkey","decodeDelegate","Delegate","decodeAuthorize","newAuthorized","stakeAuthorizationType","Authorize","o","custodianPubkey","decodeAuthorizeWithSeed","authoritySeed","authorityOwner","AuthorizeWithSeed","authorityBase","decodeSplit","Split","splitStakePubkey","decodeMerge","Merge","sourceStakePubKey","decodeWithdraw","Withdraw","decodeDeactivate","Deactivate","StakeProgram","StakeAuthorizationLayout","Staker","Withdrawer","initialize","maybeLockup","delegate","authorize","authorizeWithSeed","splitInstruction","rentExemptReserve","splitWithSeed","merge","withdraw","deactivate","VoteInit","authorizedVoter","authorizedWithdrawer","VoteInstruction","VOTE_INSTRUCTION_LAYOUTS","decodeInitializeAccount","InitializeAccount","voteAuthorizationType","currentAuthorityDerivedKeyOwnerPubkey","currentAuthorityDerivedKeySeed","currentAuthorityDerivedKeyBasePubkey","authorizedWithdrawerPubkey","VoteProgram","UpdateValidatorIdentity","VoteAuthorizationLayout","Voter","initializeAccount","safeWithdraw","currentVoteAccountBalance","rentExemptMinimum","updateValidatorIdentity","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","fromConfigData","configKeyCount","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","votes","authorizedVoters","priorVoters","lastTimestamp","versionOffset","va","rootSlotValid","parseAuthorizedVoter","getPriorVoters","parsePriorVoters","epochOfLastAuthorizedSwitch","targetEpoch","idx","isEmpty","devnet","testnet","https","clusterApiUrl","cluster","tls","sendAndConfirmRawTransaction","confirmationStrategyOrConfirmOptions","maybeConfirmOptions","confirmationStrategy","LAMPORTS_PER_SOL","toWeb3JsKeypair","fromWeb3JsMessage","programIndex","accountIndexes","addressLookupTables","toWeb3JsMessage","Web3JsMessageLegacy","Web3JsMessageV0","toWeb3JsMessageFromInput","Web3JsAddressLookupTableAccount","createFetchHttp","isJsonRequest","requestInit","follow","isJsonResponse","bodyAsText","bodyAsJson","fromEntries","createDefaultProgramRepository","initialPrograms","initialBindings","bindings","clusterFilter","resolvedIdentifier","resolveBinding","resolveClusterFilter","ProgramNotRecognizedError","isOnCluster","overrides","abstract","concrete","instructionRegex","errorCodeRegex","errorCodeString","errorCode","instructionNumber","_programNotFoundError","resolvedError","getErrorFromCode","ProgramErrorNotRecognizedError","stack","stackWithIdentifier","isName","clusterString","ofCode","createWeb3JsRpc","getConnection","Web3JsConnection","parseMaybeAccount","parseDataFilter","parseAccount","_options","balanceInLamports","rentFor","includesHeaderBytes","headerRent","rentPerByte","maxSupportedTransactionVersion","mapPublicKey","mapTokenBalance","tokenBalance","inner","searchTransactionHistory","resolvedParams","resolveCallParams","parseConfirmStrategy","memcmp","createChunkGetAccountsRpc","promises","createDataViewSerializer","createWeb3JsTransactionFactory","TRANSACTION_VERSION_FLAG","TRANSACTION_VERSION_MASK","web3JsMessage","web3JsTransaction","Web3JsTransaction","getTransactionSerializer","getTransactionMessageSerializer","getTransactionMessageSerializerForVersion","getTransactionVersionSerializer","getTransactionMessageHeaderSerializer","getCompiledInstructionSerializer","getCompiledAddressLookupTableSerializer"],"version":3,"file":"index.b71e74eb.js.map","sourceRoot":"/__parcel_source_root/"}